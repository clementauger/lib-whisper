!function(){var e,t=function(e){var t;return function(r){return t||e(t={exports:{},parent:r},t.exports),t.exports}},r=t((function(e,t){(function(t,r){(function(){"use strict";var o;e.exports=M,M.ReadableState=k,g.EventEmitter;var s,u=function(e,t){return e.listeners(t).length},f=y({}).Buffer,l=r.Uint8Array||function(){},c=b({});s=c&&c.debuglog?c.debuglog("stream"):function(){};var d,p,w,v=Hr.getHighWaterMark,m=Cr.codes,_=m.ERR_INVALID_ARG_TYPE,S=m.ERR_STREAM_PUSH_AFTER_EOF,E=m.ERR_METHOD_NOT_IMPLEMENTED,A=m.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;rt(M,Mr);var R=Nr.errorOrDestroy,T=["error","close","destroy","pause","resume"];function k(e,t,r){o=o||a({}),e=e||{},"boolean"!=typeof r&&(r=t instanceof o),this.objectMode=!!e.objectMode,r&&(this.objectMode=this.objectMode||!!e.readableObjectMode),this.highWaterMark=v(this,e,"readableHighWaterMark",r),this.buffer=new xr,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(d||(d=h({}).StringDecoder),this.decoder=new d(e.encoding),this.encoding=e.encoding)}function M(e){if(o=o||a({}),!(this instanceof M))return new M(e);var t=this instanceof o;this._readableState=new k(e,this,t),this.readable=!0,e&&("function"==typeof e.read&&(this._read=e.read),"function"==typeof e.destroy&&(this._destroy=e.destroy)),Mr.call(this)}function O(e,t,r,n,i){s("readableAddChunk",t);var o,a=e._readableState;if(null===t)a.reading=!1,function(e,t){if(s("onEofChunk"),!t.ended){if(t.decoder){var r=t.decoder.end();r&&r.length&&(t.buffer.push(r),t.length+=t.objectMode?1:r.length)}t.ended=!0,t.sync?P(e):(t.needReadable=!1,t.emittedReadable||(t.emittedReadable=!0,j(e)))}}(e,a);else if(i||(o=function(e,t){var r,n;return n=t,f.isBuffer(n)||n instanceof l||"string"==typeof t||void 0===t||e.objectMode||(r=new _("chunk",["string","Buffer","Uint8Array"],t)),r}(a,t)),o)R(e,o);else if(a.objectMode||t&&t.length>0)if("string"==typeof t||a.objectMode||Object.getPrototypeOf(t)===f.prototype||(t=function(e){return f.from(e)}(t)),n)a.endEmitted?R(e,new A):L(e,a,t,!0);else if(a.ended)R(e,new S);else{if(a.destroyed)return!1;a.reading=!1,a.decoder&&!r?(t=a.decoder.write(t),a.objectMode||0!==t.length?L(e,a,t,!1):I(e,a)):L(e,a,t,!1)}else n||(a.reading=!1,I(e,a));return!a.ended&&(a.length<a.highWaterMark||0===a.length)}function L(e,t,r,n){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit("data",r)):(t.length+=t.objectMode?1:r.length,n?t.buffer.unshift(r):t.buffer.push(r),t.needReadable&&P(e)),I(e,t)}Object.defineProperty(M.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),M.prototype.destroy=Nr.destroy,M.prototype._undestroy=Nr.undestroy,M.prototype._destroy=function(e,t){t(e)},M.prototype.push=function(e,t){var r,n=this._readableState;return n.objectMode?r=!0:"string"==typeof e&&((t=t||n.defaultEncoding)!==n.encoding&&(e=f.from(e,t),t=""),r=!0),O(this,e,t,!1,r)},M.prototype.unshift=function(e){return O(this,e,null,!0,!1)},M.prototype.isPaused=function(){return!1===this._readableState.flowing},M.prototype.setEncoding=function(e){d||(d=h({}).StringDecoder);var t=new d(e);this._readableState.decoder=t,this._readableState.encoding=this._readableState.decoder.encoding;for(var r=this._readableState.buffer.head,n="";null!==r;)n+=t.write(r.data),r=r.next;return this._readableState.buffer.clear(),""!==n&&this._readableState.buffer.push(n),this._readableState.length=n.length,this};function U(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=1073741824?e=1073741824:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function P(e){var r=e._readableState;s("emitReadable",r.needReadable,r.emittedReadable),r.needReadable=!1,r.emittedReadable||(s("emitReadable",r.flowing),r.emittedReadable=!0,t.nextTick(j,e))}function j(e){var t=e._readableState;s("emitReadable_",t.destroyed,t.length,t.ended),t.destroyed||!t.length&&!t.ended||(e.emit("readable"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,D(e)}function I(e,r){r.readingMore||(r.readingMore=!0,t.nextTick(x,e,r))}function x(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var r=t.length;if(s("maybeReadMore read 0"),e.read(0),r===t.length)break}t.readingMore=!1}function N(e){var t=e._readableState;t.readableListening=e.listenerCount("readable")>0,t.resumeScheduled&&!t.paused?t.flowing=!0:e.listenerCount("data")>0&&e.resume()}function C(e){s("readable nexttick read 0"),e.read(0)}function B(e,t){s("resume",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit("resume"),D(e),t.flowing&&!t.reading&&e.read(0)}function D(e){var t=e._readableState;for(s("flow",t.flowing);t.flowing&&null!==e.read(););}function F(e,t){return 0===t.length?null:(t.objectMode?r=t.buffer.shift():!e||e>=t.length?(r=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):r=t.buffer.consume(e,t.decoder),r);var r}function W(e){var r=e._readableState;s("endReadable",r.endEmitted),r.endEmitted||(r.ended=!0,t.nextTick(H,r,e))}function H(e,t){if(s("endReadableNT",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,t.readable=!1,t.emit("end"),e.autoDestroy)){var r=t._writableState;(!r||r.autoDestroy&&r.finished)&&t.destroy()}}function K(e,t){for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}M.prototype.read=function(e){s("read",e),e=parseInt(e,10);var t=this._readableState,r=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0!==t.highWaterMark?t.length>=t.highWaterMark:t.length>0)||t.ended))return s("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?W(this):P(this),null;if(0===(e=U(e,t))&&t.ended)return 0===t.length&&W(this),null;var n,i=t.needReadable;return s("need readable",i),(0===t.length||t.length-e<t.highWaterMark)&&s("length less than watermark",i=!0),t.ended||t.reading?s("reading or ended",i=!1):i&&(s("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=U(r,t))),null===(n=e>0?F(e,t):null)?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(t.ended||(t.needReadable=!0),r!==e&&t.ended&&W(this)),null!==n&&this.emit("data",n),n},M.prototype._read=function(e){R(this,new E("_read()"))},M.prototype.pipe=function(e,r){var n=this,i=this._readableState;switch(i.pipesCount){case 0:i.pipes=e;break;case 1:i.pipes=[i.pipes,e];break;default:i.pipes.push(e)}i.pipesCount+=1,s("pipe count=%d opts=%j",i.pipesCount,r);var o=r&&!1===r.end||e===t.stdout||e===t.stderr?y:a;function a(){s("onend"),e.end()}i.endEmitted?t.nextTick(o):n.once("end",o),e.on("unpipe",(function t(r,o){s("onunpipe"),r===n&&o&&!1===o.hasUnpiped&&(o.hasUnpiped=!0,s("cleanup"),e.removeListener("close",d),e.removeListener("finish",p),e.removeListener("drain",f),e.removeListener("error",h),e.removeListener("unpipe",t),n.removeListener("end",a),n.removeListener("end",y),n.removeListener("data",c),l=!0,!i.awaitDrain||e._writableState&&!e._writableState.needDrain||f())}));var f=function(e){return function(){var t=e._readableState;s("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&u(e,"data")&&(t.flowing=!0,D(e))}}(n);e.on("drain",f);var l=!1;function c(t){s("ondata");var r=e.write(t);s("dest.write",r),!1===r&&((1===i.pipesCount&&i.pipes===e||i.pipesCount>1&&-1!==K(i.pipes,e))&&!l&&(s("false write response, pause",i.awaitDrain),i.awaitDrain++),n.pause())}function h(t){s("onerror",t),y(),e.removeListener("error",h),0===u(e,"error")&&R(e,t)}function d(){e.removeListener("finish",p),y()}function p(){s("onfinish"),e.removeListener("close",d),y()}function y(){s("unpipe"),n.unpipe(e)}return n.on("data",c),function(e,t,r){if("function"==typeof e.prependListener)return e.prependListener("error",r);e._events&&e._events.error?Array.isArray(e._events.error)?e._events.error.unshift(r):e._events.error=[r,e._events.error]:e.on("error",r)}(e,0,h),e.once("close",d),e.once("finish",p),e.emit("pipe",n),i.flowing||(s("pipe resume"),n.resume()),e},M.prototype.unpipe=function(e){var t=this._readableState,r={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes||(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,r)),this;if(!e){var n=t.pipes,i=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var o=0;o<i;o++)n[o].emit("unpipe",this,{hasUnpiped:!1});return this}var a=K(t.pipes,e);return-1===a||(t.pipes.splice(a,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,r)),this},M.prototype.on=function(e,r){var n=Mr.prototype.on.call(this,e,r),i=this._readableState;return"data"===e?(i.readableListening=this.listenerCount("readable")>0,!1!==i.flowing&&this.resume()):"readable"===e&&(i.endEmitted||i.readableListening||(i.readableListening=i.needReadable=!0,i.flowing=!1,i.emittedReadable=!1,s("on readable",i.length,i.reading),i.length?P(this):i.reading||t.nextTick(C,this))),n},M.prototype.addListener=M.prototype.on,M.prototype.removeListener=function(e,r){var n=Mr.prototype.removeListener.call(this,e,r);return"readable"===e&&t.nextTick(N,this),n},M.prototype.removeAllListeners=function(e){var r=Mr.prototype.removeAllListeners.apply(this,arguments);return"readable"!==e&&void 0!==e||t.nextTick(N,this),r},M.prototype.resume=function(){var e=this._readableState;return e.flowing||(s("resume"),e.flowing=!e.readableListening,function(e,r){r.resumeScheduled||(r.resumeScheduled=!0,t.nextTick(B,e,r))}(this,e)),e.paused=!1,this},M.prototype.pause=function(){return s("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(s("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},M.prototype.wrap=function(e){var t=this,r=this._readableState,n=!1;for(var i in e.on("end",(function(){if(s("wrapped end"),r.decoder&&!r.ended){var e=r.decoder.end();e&&e.length&&t.push(e)}t.push(null)})),e.on("data",(function(i){s("wrapped data"),r.decoder&&(i=r.decoder.write(i)),r.objectMode&&null==i||(r.objectMode||i&&i.length)&&(t.push(i)||(n=!0,e.pause()))})),e)void 0===this[i]&&"function"==typeof e[i]&&(this[i]=function(t){return function(){return e[t].apply(e,arguments)}}(i));for(var o=0;o<T.length;o++)e.on(T[o],this.emit.bind(this,T[o]));return this._read=function(t){s("wrapped _read",t),n&&(n=!1,e.resume())},this},"function"==typeof Symbol&&(M.prototype[Symbol.asyncIterator]=function(){return void 0===p&&(p=i({})),p(this)}),Object.defineProperty(M.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(M.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(M.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),M._fromList=F,Object.defineProperty(M.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),"function"==typeof Symbol&&(M.from=function(e,t){return void 0===w&&(w=n({})),w(M,e,t)})}).call(this)}).call(this,ot,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})})),n=t((function(e,t){e.exports=function(){throw new Error("Readable.from is not available in the browser")}})),i=t((function(e,t){(function(t){(function(){"use strict";var r;function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var i=o({}),a=Symbol("lastResolve"),s=Symbol("lastReject"),u=Symbol("error"),f=Symbol("ended"),l=Symbol("lastPromise"),c=Symbol("handlePromise"),h=Symbol("stream");function d(e,t){return{value:e,done:t}}function p(e){var t=e[a];if(null!==t){var r=e[h].read();null!==r&&(e[l]=null,e[a]=null,e[s]=null,t(d(r,!1)))}}var y=Object.getPrototypeOf((function(){})),b=Object.setPrototypeOf((n(r={get stream(){return this[h]},next:function(){var e=this,r=this[u];if(null!==r)return Promise.reject(r);if(this[f])return Promise.resolve(d(void 0,!0));if(this[h].destroyed)return new Promise((function(r,n){t.nextTick((function(){e[u]?n(e[u]):r(d(void 0,!0))}))}));var n,i=this[l];if(i)n=new Promise(function(e,t){return function(r,n){e.then((function(){t[f]?r(d(void 0,!0)):t[c](r,n)}),n)}}(i,this));else{var o=this[h].read();if(null!==o)return Promise.resolve(d(o,!1));n=new Promise(this[c])}return this[l]=n,n}},Symbol.asyncIterator,(function(){return this})),n(r,"return",(function(){var e=this;return new Promise((function(t,r){e[h].destroy(null,(function(e){e?r(e):t(d(void 0,!0))}))}))})),r),y);e.exports=function(e){var r,o=Object.create(b,(n(r={},h,{value:e,writable:!0}),n(r,a,{value:null,writable:!0}),n(r,s,{value:null,writable:!0}),n(r,u,{value:null,writable:!0}),n(r,f,{value:e._readableState.endEmitted,writable:!0}),n(r,c,{value:function(e,t){var r=o[h].read();r?(o[l]=null,o[a]=null,o[s]=null,e(d(r,!1))):(o[a]=e,o[s]=t)},writable:!0}),r));return o[l]=null,i(e,(function(e){if(e&&"ERR_STREAM_PREMATURE_CLOSE"!==e.code){var t=o[s];return null!==t&&(o[l]=null,o[a]=null,o[s]=null,t(e)),void(o[u]=e)}var r=o[a];null!==r&&(o[l]=null,o[a]=null,o[s]=null,r(d(void 0,!0))),o[f]=!0})),e.on("readable",function(e){t.nextTick(p,e)}.bind(null,o)),o}}).call(this)}).call(this,ot)})),o=t((function(e,t){"use strict";var r=Cr.codes.ERR_STREAM_PREMATURE_CLOSE;function n(){}e.exports=function e(t,i,o){if("function"==typeof i)return e(t,null,i);i||(i={}),o=function(e){var t=!1;return function(){if(!t){t=!0;for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];e.apply(this,n)}}}(o||n);var a=i.readable||!1!==i.readable&&t.readable,s=i.writable||!1!==i.writable&&t.writable,u=function(){t.writable||l()},f=t._writableState&&t._writableState.finished,l=function(){s=!1,f=!0,a||o.call(t)},c=t._readableState&&t._readableState.endEmitted,h=function(){a=!1,c=!0,s||o.call(t)},d=function(e){o.call(t,e)},p=function(){var e;return a&&!c?(t._readableState&&t._readableState.ended||(e=new r),o.call(t,e)):s&&!f?(t._writableState&&t._writableState.ended||(e=new r),o.call(t,e)):void 0},y=function(){t.req.on("finish",l)};return function(e){return e.setHeader&&"function"==typeof e.abort}(t)?(t.on("complete",l),t.on("abort",p),t.req?y():t.on("request",y)):s&&!t._writableState&&(t.on("end",u),t.on("close",u)),t.on("end",h),t.on("finish",l),!1!==i.error&&t.on("error",d),t.on("close",p),function(){t.removeListener("complete",l),t.removeListener("abort",p),t.removeListener("request",y),t.req&&t.req.removeListener("finish",l),t.removeListener("end",u),t.removeListener("close",u),t.removeListener("finish",l),t.removeListener("end",h),t.removeListener("error",d),t.removeListener("close",p)}}})),a=t((function(e,t){(function(t){(function(){"use strict";var n=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};e.exports=l;var i=r({}),o=s({});rt(l,i);for(var a=n(o.prototype),u=0;u<a.length;u++){var f=a[u];l.prototype[f]||(l.prototype[f]=o.prototype[f])}function l(e){if(!(this instanceof l))return new l(e);i.call(this,e),o.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once("end",c)))}function c(){this._writableState.ended||t.nextTick(h,this)}function h(e){e.end()}Object.defineProperty(l.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(l.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(l.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(l.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}})}).call(this)}).call(this,ot)})),s=t((function(e,t){(function(t,r){(function(){"use strict";function n(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,r){var n=e.entry;for(e.entry=null;n;){var i=n.callback;t.pendingcb--,i(void 0),n=n.next}t.corkedRequestsFree.next=e}(t,e)}}var i;e.exports=A,A.WritableState=E;var o,s={deprecate:Xt},u=y({}).Buffer,f=r.Uint8Array||function(){},l=Hr.getHighWaterMark,c=Cr.codes,h=c.ERR_INVALID_ARG_TYPE,d=c.ERR_METHOD_NOT_IMPLEMENTED,p=c.ERR_MULTIPLE_CALLBACK,b=c.ERR_STREAM_CANNOT_PIPE,g=c.ERR_STREAM_DESTROYED,w=c.ERR_STREAM_NULL_VALUES,v=c.ERR_STREAM_WRITE_AFTER_END,m=c.ERR_UNKNOWN_ENCODING,_=Nr.errorOrDestroy;function S(){}function E(e,r,o){i=i||a({}),e=e||{},"boolean"!=typeof o&&(o=r instanceof i),this.objectMode=!!e.objectMode,o&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=l(this,e,"writableHighWaterMark",o),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var s=!1===e.decodeStrings;this.decodeStrings=!s,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,r){var n=e._writableState,i=n.sync,o=n.writecb;if("function"!=typeof o)throw new p;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(n),r)!function(e,r,n,i,o){--r.pendingcb,n?(t.nextTick(o,i),t.nextTick(L,e,r),e._writableState.errorEmitted=!0,_(e,i)):(o(i),e._writableState.errorEmitted=!0,_(e,i),L(e,r))}(e,n,i,r,o);else{var a=M(n)||e.destroyed;a||n.corked||n.bufferProcessing||!n.bufferedRequest||k(e,n),i?t.nextTick(T,e,n,a,o):T(e,n,a,o)}}(r,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new n(this)}function A(e){var t=this instanceof(i=i||a({}));if(!t&&!o.call(A,this))return new A(e);this._writableState=new E(e,this,t),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final)),Mr.call(this)}function R(e,t,r,n,i,o,a){t.writelen=n,t.writecb=a,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new g("write")):r?e._writev(i,t.onwrite):e._write(i,o,t.onwrite),t.sync=!1}function T(e,t,r,n){r||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,n(),L(e,t)}function k(e,t){t.bufferProcessing=!0;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var i=t.bufferedRequestCount,o=new Array(i),a=t.corkedRequestsFree;a.entry=r;for(var s=0,u=!0;r;)o[s]=r,r.isBuf||(u=!1),r=r.next,s+=1;o.allBuffers=u,R(e,t,!0,t.length,o,"",a.finish),t.pendingcb++,t.lastBufferedRequest=null,a.next?(t.corkedRequestsFree=a.next,a.next=null):t.corkedRequestsFree=new n(t),t.bufferedRequestCount=0}else{for(;r;){var f=r.chunk,l=r.encoding,c=r.callback;if(R(e,t,!1,t.objectMode?1:f.length,f,l,c),r=r.next,t.bufferedRequestCount--,t.writing)break}null===r&&(t.lastBufferedRequest=null)}t.bufferedRequest=r,t.bufferProcessing=!1}function M(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function O(e,t){e._final((function(r){t.pendingcb--,r&&_(e,r),t.prefinished=!0,e.emit("prefinish"),L(e,t)}))}function L(e,r){var n=M(r);if(n&&(function(e,r){r.prefinished||r.finalCalled||("function"!=typeof e._final||r.destroyed?(r.prefinished=!0,e.emit("prefinish")):(r.pendingcb++,r.finalCalled=!0,t.nextTick(O,e,r)))}(e,r),0===r.pendingcb&&(r.finished=!0,e.emit("finish"),r.autoDestroy))){var i=e._readableState;(!i||i.autoDestroy&&i.endEmitted)&&e.destroy()}return n}rt(A,Mr),E.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(E.prototype,"buffer",{get:s.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(o=Function.prototype[Symbol.hasInstance],Object.defineProperty(A,Symbol.hasInstance,{value:function(e){return!!o.call(this,e)||this===A&&e&&e._writableState instanceof E}})):o=function(e){return e instanceof this},A.prototype.pipe=function(){_(this,new b)},A.prototype.write=function(e,r,n){var i,o=this._writableState,a=!1,s=!o.objectMode&&(i=e,u.isBuffer(i)||i instanceof f);return s&&!u.isBuffer(e)&&(e=function(e){return u.from(e)}(e)),"function"==typeof r&&(n=r,r=null),s?r="buffer":r||(r=o.defaultEncoding),"function"!=typeof n&&(n=S),o.ending?function(e,r){var n=new v;_(e,n),t.nextTick(r,n)}(this,n):(s||function(e,r,n,i){var o;return null===n?o=new w:"string"==typeof n||r.objectMode||(o=new h("chunk",["string","Buffer"],n)),!o||(_(e,o),t.nextTick(i,o),!1)}(this,o,e,n))&&(o.pendingcb++,a=function(e,t,r,n,i,o){if(!r){var a=function(e,t,r){return e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=u.from(t,r)),t}(t,n,i);n!==a&&(r=!0,i="buffer",n=a)}var s=t.objectMode?1:n.length;t.length+=s;var f=t.length<t.highWaterMark;if(f||(t.needDrain=!0),t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:n,encoding:i,isBuf:r,callback:o,next:null},l?l.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else R(e,t,!1,s,n,i,o);return f}(this,o,s,e,r,n)),a},A.prototype.cork=function(){this._writableState.corked++},A.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||k(this,e))},A.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new m(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(A.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(A.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),A.prototype._write=function(e,t,r){r(new d("_write()"))},A.prototype._writev=null,A.prototype.end=function(e,r,n){var i=this._writableState;return"function"==typeof e?(n=e,e=null,r=null):"function"==typeof r&&(n=r,r=null),null!=e&&this.write(e,r),i.corked&&(i.corked=1,this.uncork()),i.ending||function(e,r,n){r.ending=!0,L(e,r),n&&(r.finished?t.nextTick(n):e.once("finish",n)),r.ended=!0,e.writable=!1}(this,i,n),this},Object.defineProperty(A.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(A.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),A.prototype.destroy=Nr.destroy,A.prototype._undestroy=Nr.undestroy,A.prototype._destroy=function(e,t){t(e)}}).call(this)}).call(this,ot,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})})),u=t((function(e,t){(function(t,r){(function(){"use strict";var n;e.exports=M,M.ReadableState=k,g.EventEmitter;var i,o=function(e,t){return e.listeners(t).length},a=y({}).Buffer,s=r.Uint8Array||function(){},u=b({});i=u&&u.debuglog?u.debuglog("stream"):function(){};var c,p,w,v=Gt.getHighWaterMark,m=Kt.codes,_=m.ERR_INVALID_ARG_TYPE,S=m.ERR_STREAM_PUSH_AFTER_EOF,E=m.ERR_METHOD_NOT_IMPLEMENTED,A=m.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;rt(M,At);var R=Ht.errorOrDestroy,T=["error","close","destroy","pause","resume"];function k(e,t,r){n=n||d({}),e=e||{},"boolean"!=typeof r&&(r=t instanceof n),this.objectMode=!!e.objectMode,r&&(this.objectMode=this.objectMode||!!e.readableObjectMode),this.highWaterMark=v(this,e,"readableHighWaterMark",r),this.buffer=new Wt,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(c||(c=h({}).StringDecoder),this.decoder=new c(e.encoding),this.encoding=e.encoding)}function M(e){if(n=n||d({}),!(this instanceof M))return new M(e);var t=this instanceof n;this._readableState=new k(e,this,t),this.readable=!0,e&&("function"==typeof e.read&&(this._read=e.read),"function"==typeof e.destroy&&(this._destroy=e.destroy)),At.call(this)}function O(e,t,r,n,o){i("readableAddChunk",t);var u,f=e._readableState;if(null===t)f.reading=!1,function(e,t){if(i("onEofChunk"),!t.ended){if(t.decoder){var r=t.decoder.end();r&&r.length&&(t.buffer.push(r),t.length+=t.objectMode?1:r.length)}t.ended=!0,t.sync?P(e):(t.needReadable=!1,t.emittedReadable||(t.emittedReadable=!0,j(e)))}}(e,f);else if(o||(u=function(e,t){var r,n;return n=t,a.isBuffer(n)||n instanceof s||"string"==typeof t||void 0===t||e.objectMode||(r=new _("chunk",["string","Buffer","Uint8Array"],t)),r}(f,t)),u)R(e,u);else if(f.objectMode||t&&t.length>0)if("string"==typeof t||f.objectMode||Object.getPrototypeOf(t)===a.prototype||(t=function(e){return a.from(e)}(t)),n)f.endEmitted?R(e,new A):L(e,f,t,!0);else if(f.ended)R(e,new S);else{if(f.destroyed)return!1;f.reading=!1,f.decoder&&!r?(t=f.decoder.write(t),f.objectMode||0!==t.length?L(e,f,t,!1):I(e,f)):L(e,f,t,!1)}else n||(f.reading=!1,I(e,f));return!f.ended&&(f.length<f.highWaterMark||0===f.length)}function L(e,t,r,n){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit("data",r)):(t.length+=t.objectMode?1:r.length,n?t.buffer.unshift(r):t.buffer.push(r),t.needReadable&&P(e)),I(e,t)}Object.defineProperty(M.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),M.prototype.destroy=Ht.destroy,M.prototype._undestroy=Ht.undestroy,M.prototype._destroy=function(e,t){t(e)},M.prototype.push=function(e,t){var r,n=this._readableState;return n.objectMode?r=!0:"string"==typeof e&&((t=t||n.defaultEncoding)!==n.encoding&&(e=a.from(e,t),t=""),r=!0),O(this,e,t,!1,r)},M.prototype.unshift=function(e){return O(this,e,null,!0,!1)},M.prototype.isPaused=function(){return!1===this._readableState.flowing},M.prototype.setEncoding=function(e){c||(c=h({}).StringDecoder);var t=new c(e);this._readableState.decoder=t,this._readableState.encoding=this._readableState.decoder.encoding;for(var r=this._readableState.buffer.head,n="";null!==r;)n+=t.write(r.data),r=r.next;return this._readableState.buffer.clear(),""!==n&&this._readableState.buffer.push(n),this._readableState.length=n.length,this};function U(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=1073741824?e=1073741824:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function P(e){var r=e._readableState;i("emitReadable",r.needReadable,r.emittedReadable),r.needReadable=!1,r.emittedReadable||(i("emitReadable",r.flowing),r.emittedReadable=!0,t.nextTick(j,e))}function j(e){var t=e._readableState;i("emitReadable_",t.destroyed,t.length,t.ended),t.destroyed||!t.length&&!t.ended||(e.emit("readable"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,D(e)}function I(e,r){r.readingMore||(r.readingMore=!0,t.nextTick(x,e,r))}function x(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var r=t.length;if(i("maybeReadMore read 0"),e.read(0),r===t.length)break}t.readingMore=!1}function N(e){var t=e._readableState;t.readableListening=e.listenerCount("readable")>0,t.resumeScheduled&&!t.paused?t.flowing=!0:e.listenerCount("data")>0&&e.resume()}function C(e){i("readable nexttick read 0"),e.read(0)}function B(e,t){i("resume",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit("resume"),D(e),t.flowing&&!t.reading&&e.read(0)}function D(e){var t=e._readableState;for(i("flow",t.flowing);t.flowing&&null!==e.read(););}function F(e,t){return 0===t.length?null:(t.objectMode?r=t.buffer.shift():!e||e>=t.length?(r=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):r=t.buffer.consume(e,t.decoder),r);var r}function W(e){var r=e._readableState;i("endReadable",r.endEmitted),r.endEmitted||(r.ended=!0,t.nextTick(H,r,e))}function H(e,t){if(i("endReadableNT",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,t.readable=!1,t.emit("end"),e.autoDestroy)){var r=t._writableState;(!r||r.autoDestroy&&r.finished)&&t.destroy()}}function K(e,t){for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}M.prototype.read=function(e){i("read",e),e=parseInt(e,10);var t=this._readableState,r=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0!==t.highWaterMark?t.length>=t.highWaterMark:t.length>0)||t.ended))return i("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?W(this):P(this),null;if(0===(e=U(e,t))&&t.ended)return 0===t.length&&W(this),null;var n,o=t.needReadable;return i("need readable",o),(0===t.length||t.length-e<t.highWaterMark)&&i("length less than watermark",o=!0),t.ended||t.reading?i("reading or ended",o=!1):o&&(i("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=U(r,t))),null===(n=e>0?F(e,t):null)?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(t.ended||(t.needReadable=!0),r!==e&&t.ended&&W(this)),null!==n&&this.emit("data",n),n},M.prototype._read=function(e){R(this,new E("_read()"))},M.prototype.pipe=function(e,r){var n=this,a=this._readableState;switch(a.pipesCount){case 0:a.pipes=e;break;case 1:a.pipes=[a.pipes,e];break;default:a.pipes.push(e)}a.pipesCount+=1,i("pipe count=%d opts=%j",a.pipesCount,r);var s=r&&!1===r.end||e===t.stdout||e===t.stderr?y:u;function u(){i("onend"),e.end()}a.endEmitted?t.nextTick(s):n.once("end",s),e.on("unpipe",(function t(r,o){i("onunpipe"),r===n&&o&&!1===o.hasUnpiped&&(o.hasUnpiped=!0,i("cleanup"),e.removeListener("close",d),e.removeListener("finish",p),e.removeListener("drain",f),e.removeListener("error",h),e.removeListener("unpipe",t),n.removeListener("end",u),n.removeListener("end",y),n.removeListener("data",c),l=!0,!a.awaitDrain||e._writableState&&!e._writableState.needDrain||f())}));var f=function(e){return function(){var t=e._readableState;i("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&o(e,"data")&&(t.flowing=!0,D(e))}}(n);e.on("drain",f);var l=!1;function c(t){i("ondata");var r=e.write(t);i("dest.write",r),!1===r&&((1===a.pipesCount&&a.pipes===e||a.pipesCount>1&&-1!==K(a.pipes,e))&&!l&&(i("false write response, pause",a.awaitDrain),a.awaitDrain++),n.pause())}function h(t){i("onerror",t),y(),e.removeListener("error",h),0===o(e,"error")&&R(e,t)}function d(){e.removeListener("finish",p),y()}function p(){i("onfinish"),e.removeListener("close",d),y()}function y(){i("unpipe"),n.unpipe(e)}return n.on("data",c),function(e,t,r){if("function"==typeof e.prependListener)return e.prependListener("error",r);e._events&&e._events.error?Array.isArray(e._events.error)?e._events.error.unshift(r):e._events.error=[r,e._events.error]:e.on("error",r)}(e,0,h),e.once("close",d),e.once("finish",p),e.emit("pipe",n),a.flowing||(i("pipe resume"),n.resume()),e},M.prototype.unpipe=function(e){var t=this._readableState,r={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes||(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,r)),this;if(!e){var n=t.pipes,i=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var o=0;o<i;o++)n[o].emit("unpipe",this,{hasUnpiped:!1});return this}var a=K(t.pipes,e);return-1===a||(t.pipes.splice(a,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,r)),this},M.prototype.on=function(e,r){var n=At.prototype.on.call(this,e,r),o=this._readableState;return"data"===e?(o.readableListening=this.listenerCount("readable")>0,!1!==o.flowing&&this.resume()):"readable"===e&&(o.endEmitted||o.readableListening||(o.readableListening=o.needReadable=!0,o.flowing=!1,o.emittedReadable=!1,i("on readable",o.length,o.reading),o.length?P(this):o.reading||t.nextTick(C,this))),n},M.prototype.addListener=M.prototype.on,M.prototype.removeListener=function(e,r){var n=At.prototype.removeListener.call(this,e,r);return"readable"===e&&t.nextTick(N,this),n},M.prototype.removeAllListeners=function(e){var r=At.prototype.removeAllListeners.apply(this,arguments);return"readable"!==e&&void 0!==e||t.nextTick(N,this),r},M.prototype.resume=function(){var e=this._readableState;return e.flowing||(i("resume"),e.flowing=!e.readableListening,function(e,r){r.resumeScheduled||(r.resumeScheduled=!0,t.nextTick(B,e,r))}(this,e)),e.paused=!1,this},M.prototype.pause=function(){return i("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(i("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},M.prototype.wrap=function(e){var t=this,r=this._readableState,n=!1;for(var o in e.on("end",(function(){if(i("wrapped end"),r.decoder&&!r.ended){var e=r.decoder.end();e&&e.length&&t.push(e)}t.push(null)})),e.on("data",(function(o){i("wrapped data"),r.decoder&&(o=r.decoder.write(o)),r.objectMode&&null==o||(r.objectMode||o&&o.length)&&(t.push(o)||(n=!0,e.pause()))})),e)void 0===this[o]&&"function"==typeof e[o]&&(this[o]=function(t){return function(){return e[t].apply(e,arguments)}}(o));for(var a=0;a<T.length;a++)e.on(T[a],this.emit.bind(this,T[a]));return this._read=function(t){i("wrapped _read",t),n&&(n=!1,e.resume())},this},"function"==typeof Symbol&&(M.prototype[Symbol.asyncIterator]=function(){return void 0===p&&(p=l({})),p(this)}),Object.defineProperty(M.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(M.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(M.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),M._fromList=F,Object.defineProperty(M.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),"function"==typeof Symbol&&(M.from=function(e,t){return void 0===w&&(w=f({})),w(M,e,t)})}).call(this)}).call(this,ot,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})})),f=t((function(e,t){e.exports=function(){throw new Error("Readable.from is not available in the browser")}})),l=t((function(e,t){(function(t){(function(){"use strict";var r;function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var i=c({}),o=Symbol("lastResolve"),a=Symbol("lastReject"),s=Symbol("error"),u=Symbol("ended"),f=Symbol("lastPromise"),l=Symbol("handlePromise"),h=Symbol("stream");function d(e,t){return{value:e,done:t}}function p(e){var t=e[o];if(null!==t){var r=e[h].read();null!==r&&(e[f]=null,e[o]=null,e[a]=null,t(d(r,!1)))}}var y=Object.getPrototypeOf((function(){})),b=Object.setPrototypeOf((n(r={get stream(){return this[h]},next:function(){var e=this,r=this[s];if(null!==r)return Promise.reject(r);if(this[u])return Promise.resolve(d(void 0,!0));if(this[h].destroyed)return new Promise((function(r,n){t.nextTick((function(){e[s]?n(e[s]):r(d(void 0,!0))}))}));var n,i=this[f];if(i)n=new Promise(function(e,t){return function(r,n){e.then((function(){t[u]?r(d(void 0,!0)):t[l](r,n)}),n)}}(i,this));else{var o=this[h].read();if(null!==o)return Promise.resolve(d(o,!1));n=new Promise(this[l])}return this[f]=n,n}},Symbol.asyncIterator,(function(){return this})),n(r,"return",(function(){var e=this;return new Promise((function(t,r){e[h].destroy(null,(function(e){e?r(e):t(d(void 0,!0))}))}))})),r),y);e.exports=function(e){var r,c=Object.create(b,(n(r={},h,{value:e,writable:!0}),n(r,o,{value:null,writable:!0}),n(r,a,{value:null,writable:!0}),n(r,s,{value:null,writable:!0}),n(r,u,{value:e._readableState.endEmitted,writable:!0}),n(r,l,{value:function(e,t){var r=c[h].read();r?(c[f]=null,c[o]=null,c[a]=null,e(d(r,!1))):(c[o]=e,c[a]=t)},writable:!0}),r));return c[f]=null,i(e,(function(e){if(e&&"ERR_STREAM_PREMATURE_CLOSE"!==e.code){var t=c[a];return null!==t&&(c[f]=null,c[o]=null,c[a]=null,t(e)),void(c[s]=e)}var r=c[o];null!==r&&(c[f]=null,c[o]=null,c[a]=null,r(d(void 0,!0))),c[u]=!0})),e.on("readable",function(e){t.nextTick(p,e)}.bind(null,c)),c}}).call(this)}).call(this,ot)})),c=t((function(e,t){"use strict";var r=Kt.codes.ERR_STREAM_PREMATURE_CLOSE;function n(){}e.exports=function e(t,i,o){if("function"==typeof i)return e(t,null,i);i||(i={}),o=function(e){var t=!1;return function(){if(!t){t=!0;for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];e.apply(this,n)}}}(o||n);var a=i.readable||!1!==i.readable&&t.readable,s=i.writable||!1!==i.writable&&t.writable,u=function(){t.writable||l()},f=t._writableState&&t._writableState.finished,l=function(){s=!1,f=!0,a||o.call(t)},c=t._readableState&&t._readableState.endEmitted,h=function(){a=!1,c=!0,s||o.call(t)},d=function(e){o.call(t,e)},p=function(){var e;return a&&!c?(t._readableState&&t._readableState.ended||(e=new r),o.call(t,e)):s&&!f?(t._writableState&&t._writableState.ended||(e=new r),o.call(t,e)):void 0},y=function(){t.req.on("finish",l)};return function(e){return e.setHeader&&"function"==typeof e.abort}(t)?(t.on("complete",l),t.on("abort",p),t.req?y():t.on("request",y)):s&&!t._writableState&&(t.on("end",u),t.on("close",u)),t.on("end",h),t.on("finish",l),!1!==i.error&&t.on("error",d),t.on("close",p),function(){t.removeListener("complete",l),t.removeListener("abort",p),t.removeListener("request",y),t.req&&t.req.removeListener("finish",l),t.removeListener("end",u),t.removeListener("close",u),t.removeListener("finish",l),t.removeListener("end",h),t.removeListener("error",d),t.removeListener("close",p)}}})),h=t((function(e,t){"use strict";var r=Zt.Buffer,n=r.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function i(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}(e);if("string"!=typeof t&&(r.isEncoding===n||!n(e)))throw new Error("Unknown encoding: "+e);return t||e}(e),this.encoding){case"utf16le":this.text=s,this.end=u,t=4;break;case"utf8":this.fillLast=a,t=4;break;case"base64":this.text=f,this.end=l,t=3;break;default:return this.write=c,void(this.end=h)}this.lastNeed=0,this.lastTotal=0,this.lastChar=r.allocUnsafe(t)}function o(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function a(e){var t=this.lastTotal-this.lastNeed,r=function(e,t,r){if(128!=(192&t[0]))return e.lastNeed=0,"\ufffd";if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,"\ufffd";if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,"\ufffd"}}(this,e);return void 0!==r?r:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function s(e,t){if((e.length-t)%2==0){var r=e.toString("utf16le",t);if(r){var n=r.charCodeAt(r.length-1);if(n>=55296&&n<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],r.slice(0,-1)}return r}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function u(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,r)}return t}function f(e,t){var r=(e.length-t)%3;return 0===r?e.toString("base64",t):(this.lastNeed=3-r,this.lastTotal=3,1===r?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-r))}function l(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function c(e){return e.toString(this.encoding)}function h(e){return e&&e.length?this.write(e):""}t.StringDecoder=i,i.prototype.write=function(e){if(0===e.length)return"";var t,r;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";r=this.lastNeed,this.lastNeed=0}else r=0;return r<e.length?t?t+this.text(e,r):this.text(e,r):t||""},i.prototype.end=function(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"\ufffd":t},i.prototype.text=function(e,t){var r=function(e,t,r){var n=t.length-1;if(n<r)return 0;var i=o(t[n]);return i>=0?(i>0&&(e.lastNeed=i-1),i):--n<r||-2===i?0:(i=o(t[n]))>=0?(i>0&&(e.lastNeed=i-2),i):--n<r||-2===i?0:(i=o(t[n]))>=0?(i>0&&(2===i?i=0:e.lastNeed=i-3),i):0}(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=r;var n=e.length-(r-this.lastNeed);return e.copy(this.lastChar,0,n),e.toString("utf8",t,n)},i.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}})),d=t((function(e,t){(function(t){(function(){"use strict";var r=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};e.exports=f;var n=u({}),i=p({});rt(f,n);for(var o=r(i.prototype),a=0;a<o.length;a++){var s=o[a];f.prototype[s]||(f.prototype[s]=i.prototype[s])}function f(e){if(!(this instanceof f))return new f(e);n.call(this,e),i.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once("end",l)))}function l(){this._writableState.ended||t.nextTick(c,this)}function c(e){e.end()}Object.defineProperty(f.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(f.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(f.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(f.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}})}).call(this)}).call(this,ot)})),p=t((function(e,t){(function(t,r){(function(){"use strict";function n(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,r){var n=e.entry;for(e.entry=null;n;){var i=n.callback;t.pendingcb--,i(void 0),n=n.next}t.corkedRequestsFree.next=e}(t,e)}}var i;e.exports=A,A.WritableState=E;var o,a={deprecate:Xt},s=y({}).Buffer,u=r.Uint8Array||function(){},f=Gt.getHighWaterMark,l=Kt.codes,c=l.ERR_INVALID_ARG_TYPE,h=l.ERR_METHOD_NOT_IMPLEMENTED,p=l.ERR_MULTIPLE_CALLBACK,b=l.ERR_STREAM_CANNOT_PIPE,g=l.ERR_STREAM_DESTROYED,w=l.ERR_STREAM_NULL_VALUES,v=l.ERR_STREAM_WRITE_AFTER_END,m=l.ERR_UNKNOWN_ENCODING,_=Ht.errorOrDestroy;function S(){}function E(e,r,o){i=i||d({}),e=e||{},"boolean"!=typeof o&&(o=r instanceof i),this.objectMode=!!e.objectMode,o&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=f(this,e,"writableHighWaterMark",o),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var a=!1===e.decodeStrings;this.decodeStrings=!a,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,r){var n=e._writableState,i=n.sync,o=n.writecb;if("function"!=typeof o)throw new p;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(n),r)!function(e,r,n,i,o){--r.pendingcb,n?(t.nextTick(o,i),t.nextTick(L,e,r),e._writableState.errorEmitted=!0,_(e,i)):(o(i),e._writableState.errorEmitted=!0,_(e,i),L(e,r))}(e,n,i,r,o);else{var a=M(n)||e.destroyed;a||n.corked||n.bufferProcessing||!n.bufferedRequest||k(e,n),i?t.nextTick(T,e,n,a,o):T(e,n,a,o)}}(r,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new n(this)}function A(e){var t=this instanceof(i=i||d({}));if(!t&&!o.call(A,this))return new A(e);this._writableState=new E(e,this,t),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final)),At.call(this)}function R(e,t,r,n,i,o,a){t.writelen=n,t.writecb=a,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new g("write")):r?e._writev(i,t.onwrite):e._write(i,o,t.onwrite),t.sync=!1}function T(e,t,r,n){r||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,n(),L(e,t)}function k(e,t){t.bufferProcessing=!0;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var i=t.bufferedRequestCount,o=new Array(i),a=t.corkedRequestsFree;a.entry=r;for(var s=0,u=!0;r;)o[s]=r,r.isBuf||(u=!1),r=r.next,s+=1;o.allBuffers=u,R(e,t,!0,t.length,o,"",a.finish),t.pendingcb++,t.lastBufferedRequest=null,a.next?(t.corkedRequestsFree=a.next,a.next=null):t.corkedRequestsFree=new n(t),t.bufferedRequestCount=0}else{for(;r;){var f=r.chunk,l=r.encoding,c=r.callback;if(R(e,t,!1,t.objectMode?1:f.length,f,l,c),r=r.next,t.bufferedRequestCount--,t.writing)break}null===r&&(t.lastBufferedRequest=null)}t.bufferedRequest=r,t.bufferProcessing=!1}function M(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function O(e,t){e._final((function(r){t.pendingcb--,r&&_(e,r),t.prefinished=!0,e.emit("prefinish"),L(e,t)}))}function L(e,r){var n=M(r);if(n&&(function(e,r){r.prefinished||r.finalCalled||("function"!=typeof e._final||r.destroyed?(r.prefinished=!0,e.emit("prefinish")):(r.pendingcb++,r.finalCalled=!0,t.nextTick(O,e,r)))}(e,r),0===r.pendingcb&&(r.finished=!0,e.emit("finish"),r.autoDestroy))){var i=e._readableState;(!i||i.autoDestroy&&i.endEmitted)&&e.destroy()}return n}rt(A,At),E.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(E.prototype,"buffer",{get:a.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(o=Function.prototype[Symbol.hasInstance],Object.defineProperty(A,Symbol.hasInstance,{value:function(e){return!!o.call(this,e)||this===A&&e&&e._writableState instanceof E}})):o=function(e){return e instanceof this},A.prototype.pipe=function(){_(this,new b)},A.prototype.write=function(e,r,n){var i,o=this._writableState,a=!1,f=!o.objectMode&&(i=e,s.isBuffer(i)||i instanceof u);return f&&!s.isBuffer(e)&&(e=function(e){return s.from(e)}(e)),"function"==typeof r&&(n=r,r=null),f?r="buffer":r||(r=o.defaultEncoding),"function"!=typeof n&&(n=S),o.ending?function(e,r){var n=new v;_(e,n),t.nextTick(r,n)}(this,n):(f||function(e,r,n,i){var o;return null===n?o=new w:"string"==typeof n||r.objectMode||(o=new c("chunk",["string","Buffer"],n)),!o||(_(e,o),t.nextTick(i,o),!1)}(this,o,e,n))&&(o.pendingcb++,a=function(e,t,r,n,i,o){if(!r){var a=function(e,t,r){return e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=s.from(t,r)),t}(t,n,i);n!==a&&(r=!0,i="buffer",n=a)}var u=t.objectMode?1:n.length;t.length+=u;var f=t.length<t.highWaterMark;if(f||(t.needDrain=!0),t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:n,encoding:i,isBuf:r,callback:o,next:null},l?l.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else R(e,t,!1,u,n,i,o);return f}(this,o,f,e,r,n)),a},A.prototype.cork=function(){this._writableState.corked++},A.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||k(this,e))},A.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new m(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(A.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(A.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),A.prototype._write=function(e,t,r){r(new h("_write()"))},A.prototype._writev=null,A.prototype.end=function(e,r,n){var i=this._writableState;return"function"==typeof e?(n=e,e=null,r=null):"function"==typeof r&&(n=r,r=null),null!=e&&this.write(e,r),i.corked&&(i.corked=1,this.uncork()),i.ending||function(e,r,n){r.ending=!0,L(e,r),n&&(r.finished?t.nextTick(n):e.once("finish",n)),r.ended=!0,e.writable=!1}(this,i,n),this},Object.defineProperty(A.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(A.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),A.prototype.destroy=Ht.destroy,A.prototype._undestroy=Ht.undestroy,A.prototype._destroy=function(e,t){t(e)}}).call(this)}).call(this,ot,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})})),y=t((function(e,t){(function(e){(function(){"use strict";t.Buffer=r,t.SlowBuffer=function(e){return+e!=e&&(e=0),r.alloc(+e)},t.INSPECT_MAX_BYTES=50;function e(e){if(e>2147483647)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return t.__proto__=r.prototype,t}function r(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return o(e)}return n(e,t,r)}function n(t,n,i){if("string"==typeof t)return function(t,n){if("string"==typeof n&&""!==n||(n="utf8"),!r.isEncoding(n))throw new TypeError("Unknown encoding: "+n);var i=0|u(t,n),o=e(i),a=o.write(t,n);return a!==i&&(o=o.slice(0,a)),o}(t,n);if(ArrayBuffer.isView(t))return a(t);if(null==t)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(x(t,ArrayBuffer)||t&&x(t.buffer,ArrayBuffer))return function(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');var i;return(i=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n)).__proto__=r.prototype,i}(t,n,i);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');var o=t.valueOf&&t.valueOf();if(null!=o&&o!==t)return r.from(o,n,i);var f=function(t){if(r.isBuffer(t)){var n=0|s(t.length),i=e(n);return 0===i.length||t.copy(i,0,0,n),i}return void 0!==t.length?"number"!=typeof t.length||N(t.length)?e(0):a(t):"Buffer"===t.type&&Array.isArray(t.data)?a(t.data):void 0}(t);if(f)return f;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return r.from(t[Symbol.toPrimitive]("string"),n,i);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function i(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function o(t){return i(t),e(t<0?0:0|s(t))}function a(t){for(var r=t.length<0?0:0|s(t.length),n=e(r),i=0;i<r;i+=1)n[i]=255&t[i];return n}function s(e){if(e>=2147483647)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+2147483647..toString(16)+" bytes");return 0|e}function u(e,t){if(r.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||x(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var n=e.length,i=arguments.length>2&&!0===arguments[2];if(!i&&0===n)return 0;for(var o=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return P(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return j(e).length;default:if(o)return i?-1:P(e).length;t=(""+t).toLowerCase(),o=!0}}function f(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function l(e,t,n,i,o){if(0===e.length)return-1;if("string"==typeof n?(i=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),N(n=+n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof t&&(t=r.from(t,i)),r.isBuffer(t))return 0===t.length?-1:c(e,t,n,i,o);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):c(e,[t],n,i,o);throw new TypeError("val must be string, number or Buffer")}function c(e,t,r,n,i){var o,a=1,s=e.length,u=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;a=2,s/=2,u/=2,r/=2}function f(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(i){var l=-1;for(o=r;o<s;o++)if(f(e,o)===f(t,-1===l?0:o-l)){if(-1===l&&(l=o),o-l+1===u)return l*a}else-1!==l&&(o-=o-l),l=-1}else for(r+u>s&&(r=s-u),o=r;o>=0;o--){for(var c=!0,h=0;h<u;h++)if(f(e,o+h)!==f(t,h)){c=!1;break}if(c)return o}return-1}function h(e,t,r,n){r=Number(r)||0;var i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;var o=t.length;n>o/2&&(n=o/2);for(var a=0;a<n;++a){var s=parseInt(t.substr(2*a,2),16);if(N(s))return a;e[r+a]=s}return a}function d(e,t,r,n){return I(P(t,e.length-r),e,r,n)}function p(e,t,r,n){return I(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function y(e,t,r,n){return p(e,t,r,n)}function b(e,t,r,n){return I(j(t),e,r,n)}function g(e,t,r,n){return I(function(e,t){for(var r,n,i,o=[],a=0;a<e.length&&!((t-=2)<0);++a)n=(r=e.charCodeAt(a))>>8,i=r%256,o.push(i),o.push(n);return o}(t,e.length-r),e,r,n)}function w(e,t,r){return 0===t&&r===e.length?Rt.fromByteArray(e):Rt.fromByteArray(e.slice(t,r))}function v(e,t,r){r=Math.min(e.length,r);for(var n=[],i=t;i<r;){var o,a,s,u,f=e[i],l=null,c=f>239?4:f>223?3:f>191?2:1;if(i+c<=r)switch(c){case 1:f<128&&(l=f);break;case 2:128==(192&(o=e[i+1]))&&(u=(31&f)<<6|63&o)>127&&(l=u);break;case 3:o=e[i+1],a=e[i+2],128==(192&o)&&128==(192&a)&&(u=(15&f)<<12|(63&o)<<6|63&a)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:o=e[i+1],a=e[i+2],s=e[i+3],128==(192&o)&&128==(192&a)&&128==(192&s)&&(u=(15&f)<<18|(63&o)<<12|(63&a)<<6|63&s)>65535&&u<1114112&&(l=u)}null===l?(l=65533,c=1):l>65535&&(l-=65536,n.push(l>>>10&1023|55296),l=56320|1023&l),n.push(l),i+=c}return function(e){var t=e.length;if(t<=m)return String.fromCharCode.apply(String,e);for(var r="",n=0;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=m));return r}(n)}t.kMaxLength=2147483647,r.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()}catch(t){return!1}}(),r.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(r.prototype,"parent",{enumerable:!0,get:function(){if(r.isBuffer(this))return this.buffer}}),Object.defineProperty(r.prototype,"offset",{enumerable:!0,get:function(){if(r.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&r[Symbol.species]===r&&Object.defineProperty(r,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),r.poolSize=8192,r.from=function(e,t,r){return n(e,t,r)},r.prototype.__proto__=Uint8Array.prototype,r.__proto__=Uint8Array,r.alloc=function(t,r,n){return function(t,r,n){return i(t),t<=0?e(t):void 0!==r?"string"==typeof n?e(t).fill(r,n):e(t).fill(r):e(t)}(t,r,n)},r.allocUnsafe=function(e){return o(e)},r.allocUnsafeSlow=function(e){return o(e)},r.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==r.prototype},r.compare=function(e,t){if(x(e,Uint8Array)&&(e=r.from(e,e.offset,e.byteLength)),x(t,Uint8Array)&&(t=r.from(t,t.offset,t.byteLength)),!r.isBuffer(e)||!r.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var n=e.length,i=t.length,o=0,a=Math.min(n,i);o<a;++o)if(e[o]!==t[o]){n=e[o],i=t[o];break}return n<i?-1:i<n?1:0},r.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},r.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return r.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var i=r.allocUnsafe(t),o=0;for(n=0;n<e.length;++n){var a=e[n];if(x(a,Uint8Array)&&(a=r.from(a)),!r.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(i,o),o+=a.length}return i},r.byteLength=u,r.prototype._isBuffer=!0,r.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)f(this,t,t+1);return this},r.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)f(this,t,t+3),f(this,t+1,t+2);return this},r.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)f(this,t,t+7),f(this,t+1,t+6),f(this,t+2,t+5),f(this,t+3,t+4);return this},r.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?v(this,0,e):function(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return E(this,t,r);case"utf8":case"utf-8":return v(this,t,r);case"ascii":return _(this,t,r);case"latin1":case"binary":return S(this,t,r);case"base64":return w(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}.apply(this,arguments)},r.prototype.toLocaleString=r.prototype.toString,r.prototype.equals=function(e){if(!r.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===r.compare(this,e)},r.prototype.inspect=function(){var e="",r=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},r.prototype.compare=function(e,t,n,i,o){if(x(e,Uint8Array)&&(e=r.from(e,e.offset,e.byteLength)),!r.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===i&&(i=0),void 0===o&&(o=this.length),t<0||n>e.length||i<0||o>this.length)throw new RangeError("out of range index");if(i>=o&&t>=n)return 0;if(i>=o)return-1;if(t>=n)return 1;if(this===e)return 0;for(var a=(o>>>=0)-(i>>>=0),s=(n>>>=0)-(t>>>=0),u=Math.min(a,s),f=this.slice(i,o),l=e.slice(t,n),c=0;c<u;++c)if(f[c]!==l[c]){a=f[c],s=l[c];break}return a<s?-1:s<a?1:0},r.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},r.prototype.indexOf=function(e,t,r){return l(this,e,t,r,!0)},r.prototype.lastIndexOf=function(e,t,r){return l(this,e,t,r,!1)},r.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var o=!1;;)switch(n){case"hex":return h(this,e,t,r);case"utf8":case"utf-8":return d(this,e,t,r);case"ascii":return p(this,e,t,r);case"latin1":case"binary":return y(this,e,t,r);case"base64":return b(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return g(this,e,t,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},r.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var m=4096;function _(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function S(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function E(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);for(var i="",o=t;o<r;++o)i+=U(e[o]);return i}function A(e,t,r){for(var n=e.slice(t,r),i="",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function R(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function T(e,t,n,i,o,a){if(!r.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<a)throw new RangeError('"value" argument is out of bounds');if(n+i>e.length)throw new RangeError("Index out of range")}function k(e,t,r,n,i,o){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function M(e,t,r,n,i){return t=+t,r>>>=0,i||k(e,0,r,4),It.write(e,t,r,n,23,4),r+4}function O(e,t,r,n,i){return t=+t,r>>>=0,i||k(e,0,r,8),It.write(e,t,r,n,52,8),r+8}r.prototype.slice=function(e,t){var n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);var i=this.subarray(e,t);return i.__proto__=r.prototype,i},r.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return n},r.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);for(var n=this[e+--t],i=1;t>0&&(i*=256);)n+=this[e+--t]*i;return n},r.prototype.readUInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),this[e]},r.prototype.readUInt16LE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]|this[e+1]<<8},r.prototype.readUInt16BE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]<<8|this[e+1]},r.prototype.readUInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},r.prototype.readUInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},r.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*t)),n},r.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);for(var n=t,i=1,o=this[e+--n];n>0&&(i*=256);)o+=this[e+--n]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*t)),o},r.prototype.readInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},r.prototype.readInt16LE=function(e,t){e>>>=0,t||R(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},r.prototype.readInt16BE=function(e,t){e>>>=0,t||R(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},r.prototype.readInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},r.prototype.readInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},r.prototype.readFloatLE=function(e,t){return e>>>=0,t||R(e,4,this.length),It.read(this,e,!0,23,4)},r.prototype.readFloatBE=function(e,t){return e>>>=0,t||R(e,4,this.length),It.read(this,e,!1,23,4)},r.prototype.readDoubleLE=function(e,t){return e>>>=0,t||R(e,8,this.length),It.read(this,e,!0,52,8)},r.prototype.readDoubleBE=function(e,t){return e>>>=0,t||R(e,8,this.length),It.read(this,e,!1,52,8)},r.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||T(this,e,t,r,Math.pow(2,8*r)-1,0);var i=1,o=0;for(this[t]=255&e;++o<r&&(i*=256);)this[t+o]=e/i&255;return t+r},r.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||T(this,e,t,r,Math.pow(2,8*r)-1,0);var i=r-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+r},r.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,1,255,0),this[t]=255&e,t+1},r.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},r.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},r.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},r.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},r.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var i=Math.pow(2,8*r-1);T(this,e,t,r,i-1,-i)}var o=0,a=1,s=0;for(this[t]=255&e;++o<r&&(a*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+r},r.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var i=Math.pow(2,8*r-1);T(this,e,t,r,i-1,-i)}var o=r-1,a=1,s=0;for(this[t+o]=255&e;--o>=0&&(a*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+r},r.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},r.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},r.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},r.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},r.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},r.prototype.writeFloatLE=function(e,t,r){return M(this,e,t,!0,r)},r.prototype.writeFloatBE=function(e,t,r){return M(this,e,t,!1,r)},r.prototype.writeDoubleLE=function(e,t,r){return O(this,e,t,!0,r)},r.prototype.writeDoubleBE=function(e,t,r){return O(this,e,t,!1,r)},r.prototype.copy=function(e,t,n,i){if(!r.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),i||0===i||(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<n&&(i=n),i===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-n&&(i=e.length-t+n);var o=i-n;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,n,i);else if(this===e&&n<t&&t<i)for(var a=o-1;a>=0;--a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,i),t);return o},r.prototype.fill=function(e,t,n,i){if("string"==typeof e){if("string"==typeof t?(i=t,t=0,n=this.length):"string"==typeof n&&(i=n,n=this.length),void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!r.isEncoding(i))throw new TypeError("Unknown encoding: "+i);if(1===e.length){var o=e.charCodeAt(0);("utf8"===i&&o<128||"latin1"===i)&&(e=o)}}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var a;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(a=t;a<n;++a)this[a]=e;else{var s=r.isBuffer(e)?e:r.from(e,i),u=s.length;if(0===u)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<n-t;++a)this[a+t]=s[a%u]}return this};var L=/[^+/0-9A-Za-z-_]/g;function U(e){return e<16?"0"+e.toString(16):e.toString(16)}function P(e,t){var r;t=t||1/0;for(var n=e.length,i=null,o=[],a=0;a<n;++a){if((r=e.charCodeAt(a))>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===n){(t-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;o.push(r)}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function j(e){return Rt.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(L,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function I(e,t,r,n){for(var i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}function x(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function N(e){return e!=e}}).call(this)}).call(this,y({}).Buffer)})),b=t((function(e,t){})),g={},w="object"==typeof Reflect?Reflect:null,v=w&&"function"==typeof w.apply?w.apply:function(e,t,r){return Function.prototype.apply.call(e,t,r)};e=w&&"function"==typeof w.ownKeys?w.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var m=Number.isNaN||function(e){return e!=e};function _(){_.init.call(this)}(g=_).once=function(e,t){return new Promise((function(r,n){function i(){void 0!==o&&e.removeListener("error",o),r([].slice.call(arguments))}var o;"error"!==t&&(o=function(r){e.removeListener(t,i),n(r)},e.once("error",o)),e.once(t,i)}))},_.EventEmitter=_,_.prototype._events=void 0,_.prototype._eventsCount=0,_.prototype._maxListeners=void 0;var S=10;function E(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function A(e){return void 0===e._maxListeners?_.defaultMaxListeners:e._maxListeners}function R(e,t,r,n){var i,o,a,s;if(E(r),void 0===(o=e._events)?(o=e._events=Object.create(null),e._eventsCount=0):(void 0!==o.newListener&&(e.emit("newListener",t,r.listener?r.listener:r),o=e._events),a=o[t]),void 0===a)a=o[t]=r,++e._eventsCount;else if("function"==typeof a?a=o[t]=n?[r,a]:[a,r]:n?a.unshift(r):a.push(r),(i=A(e))>0&&a.length>i&&!a.warned){a.warned=!0;var u=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=t,u.count=a.length,s=u,console&&console.warn&&console.warn(s)}return e}function T(e,t,r){var n={fired:!1,wrapFn:void 0,target:e,type:t,listener:r},i=function(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}.bind(n);return i.listener=r,n.wrapFn=i,i}function k(e,t,r){var n=e._events;if(void 0===n)return[];var i=n[t];return void 0===i?[]:"function"==typeof i?r?[i.listener||i]:[i]:r?function(e){for(var t=new Array(e.length),r=0;r<t.length;++r)t[r]=e[r].listener||e[r];return t}(i):O(i,i.length)}function M(e){var t=this._events;if(void 0!==t){var r=t[e];if("function"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function O(e,t){for(var r=new Array(t),n=0;n<t;++n)r[n]=e[n];return r}Object.defineProperty(_,"defaultMaxListeners",{enumerable:!0,get:function(){return S},set:function(e){if("number"!=typeof e||e<0||m(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");S=e}}),_.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},_.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||m(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},_.prototype.getMaxListeners=function(){return A(this)},_.prototype.emit=function(e){for(var t=[],r=1;r<arguments.length;r++)t.push(arguments[r]);var n="error"===e,i=this._events;if(void 0!==i)n=n&&void 0===i.error;else if(!n)return!1;if(n){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var s=i[e];if(void 0===s)return!1;if("function"==typeof s)v(s,this,t);else{var u=s.length,f=O(s,u);for(r=0;r<u;++r)v(f[r],this,t)}return!0},_.prototype.addListener=function(e,t){return R(this,e,t,!1)},_.prototype.on=_.prototype.addListener,_.prototype.prependListener=function(e,t){return R(this,e,t,!0)},_.prototype.once=function(e,t){return E(t),this.on(e,T(this,e,t)),this},_.prototype.prependOnceListener=function(e,t){return E(t),this.prependListener(e,T(this,e,t)),this},_.prototype.removeListener=function(e,t){var r,n,i,o,a;if(E(t),void 0===(n=this._events))return this;if(void 0===(r=n[e]))return this;if(r===t||r.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit("removeListener",e,r.listener||t));else if("function"!=typeof r){for(i=-1,o=r.length-1;o>=0;o--)if(r[o]===t||r[o].listener===t){a=r[o].listener,i=o;break}if(i<0)return this;0===i?r.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(r,i),1===r.length&&(n[e]=r[0]),void 0!==n.removeListener&&this.emit("removeListener",e,a||t)}return this},_.prototype.off=_.prototype.removeListener,_.prototype.removeAllListeners=function(e){var t,r,n;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[e]),this;if(0===arguments.length){var i,o=Object.keys(r);for(n=0;n<o.length;++n)"removeListener"!==(i=o[n])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=r[e]))this.removeListener(e,t);else if(void 0!==t)for(n=t.length-1;n>=0;n--)this.removeListener(e,t[n]);return this},_.prototype.listeners=function(e){return k(this,e,!0)},_.prototype.rawListeners=function(e){return k(this,e,!1)},_.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):M.call(e,t)},_.prototype.listenerCount=M,_.prototype.eventNames=function(){return this._eventsCount>0?e(this._events):[]};var L=L||{};L.Announce="announce",L.Login="login",L.LoginResponse="login-res",L.SendInfo="send-info",L.Message="message";var U=U||{};U.Error="error",U.Message="message",U.Accept="accept",U.PeerConnect="peer.connect",U.PeerAccept="peer.accept",U.PeerLeave="peer.leave",U.PeerRenewHandle="renew.peerhandle",U.RenewMyHandle="renew.myhandle",U.Negotiating="negotiating";var P=P||{};P.PeerNotFound="peer-not-found",P.InProgress="in-progress",P.InvalidHash="invalid-hash",P.DuplicateHandle="duplicate.handle",P.InvalidSealedAuth="invalid.sealedauth",P.OK="ok";var j,I,x={exports:{}};j=this,I=function(){"use strict";var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";function t(e,t,r,n){var i,o,a,s=t||[0],u=(r=r||0)>>>3,f=-1===n?3:0;for(i=0;i<e.length;i+=1)o=(a=i+u)>>>2,s.length<=o&&s.push(0),s[o]|=e[i]<<8*(f+n*(a%4));return{value:s,binLen:8*e.length+r}}function r(r,n,i){switch(n){case"UTF8":case"UTF16BE":case"UTF16LE":break;default:throw new Error("encoding must be UTF8, UTF16BE, or UTF16LE")}switch(r){case"HEX":return function(e,t,r){return function(e,t,r,n){var i,o,a,s;if(0!=e.length%2)throw new Error("String of HEX type must be in byte increments");var u=t||[0],f=(r=r||0)>>>3,l=-1===n?3:0;for(i=0;i<e.length;i+=2){if(o=parseInt(e.substr(i,2),16),isNaN(o))throw new Error("String of HEX type contains invalid characters");for(a=(s=(i>>>1)+f)>>>2;u.length<=a;)u.push(0);u[a]|=o<<8*(l+n*(s%4))}return{value:u,binLen:4*e.length+r}}(e,t,r,i)};case"TEXT":return function(e,t,r){return function(e,t,r,n,i){var o,a,s,u,f,l,c,h,d=0,p=r||[0],y=(n=n||0)>>>3;if("UTF8"===t)for(c=-1===i?3:0,s=0;s<e.length;s+=1)for(a=[],128>(o=e.charCodeAt(s))?a.push(o):2048>o?(a.push(192|o>>>6),a.push(128|63&o)):55296>o||57344<=o?a.push(224|o>>>12,128|o>>>6&63,128|63&o):(s+=1,o=65536+((1023&o)<<10|1023&e.charCodeAt(s)),a.push(240|o>>>18,128|o>>>12&63,128|o>>>6&63,128|63&o)),u=0;u<a.length;u+=1){for(f=(l=d+y)>>>2;p.length<=f;)p.push(0);p[f]|=a[u]<<8*(c+i*(l%4)),d+=1}else for(c=-1===i?2:0,h="UTF16LE"===t&&1!==i||"UTF16LE"!==t&&1===i,s=0;s<e.length;s+=1){for(o=e.charCodeAt(s),!0===h&&(o=(u=255&o)<<8|o>>>8),f=(l=d+y)>>>2;p.length<=f;)p.push(0);p[f]|=o<<8*(c+i*(l%4)),d+=2}return{value:p,binLen:8*d+n}}(e,n,t,r,i)};case"B64":return function(t,r,n){return function(t,r,n,i){var o,a,s,u,f,l,c=0,h=r||[0],d=(n=n||0)>>>3,p=-1===i?3:0,y=t.indexOf("=");if(-1===t.search(/^[a-zA-Z0-9=+/]+$/))throw new Error("Invalid character in base-64 string");if(t=t.replace(/=/g,""),-1!==y&&y<t.length)throw new Error("Invalid '=' found in base-64 string");for(o=0;o<t.length;o+=4){for(u=t.substr(o,4),s=0,a=0;a<u.length;a+=1)s|=e.indexOf(u.charAt(a))<<18-6*a;for(a=0;a<u.length-1;a+=1){for(f=(l=c+d)>>>2;h.length<=f;)h.push(0);h[f]|=(s>>>16-8*a&255)<<8*(p+i*(l%4)),c+=1}}return{value:h,binLen:8*c+n}}(t,r,n,i)};case"BYTES":return function(e,t,r){return function(e,t,r,n){var i,o,a,s,u=t||[0],f=(r=r||0)>>>3,l=-1===n?3:0;for(o=0;o<e.length;o+=1)i=e.charCodeAt(o),a=(s=o+f)>>>2,u.length<=a&&u.push(0),u[a]|=i<<8*(l+n*(s%4));return{value:u,binLen:8*e.length+r}}(e,t,r,i)};case"ARRAYBUFFER":try{new ArrayBuffer(0)}catch(e){throw new Error("ARRAYBUFFER not supported by this environment")}return function(e,r,n){return function(e,r,n,i){return t(new Uint8Array(e),r,n,i)}(e,r,n,i)};case"UINT8ARRAY":try{new Uint8Array(0)}catch(e){throw new Error("UINT8ARRAY not supported by this environment")}return function(e,r,n){return t(e,r,n,i)};default:throw new Error("format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY")}}function n(t,r,n,i){switch(t){case"HEX":return function(e){return function(e,t,r,n){var i,o,a="",s=t/8,u=-1===r?3:0;for(i=0;i<s;i+=1)o=e[i>>>2]>>>8*(u+r*(i%4)),a+="0123456789abcdef".charAt(o>>>4&15)+"0123456789abcdef".charAt(15&o);return n.outputUpper?a.toUpperCase():a}(e,r,n,i)};case"B64":return function(t){return function(t,r,n,i){var o,a,s,u,f,l="",c=r/8,h=-1===n?3:0;for(o=0;o<c;o+=3)for(u=o+1<c?t[o+1>>>2]:0,f=o+2<c?t[o+2>>>2]:0,s=(t[o>>>2]>>>8*(h+n*(o%4))&255)<<16|(u>>>8*(h+n*((o+1)%4))&255)<<8|f>>>8*(h+n*((o+2)%4))&255,a=0;a<4;a+=1)l+=8*o+6*a<=r?e.charAt(s>>>6*(3-a)&63):i.b64Pad;return l}(t,r,n,i)};case"BYTES":return function(e){return function(e,t,r){var n,i,o="",a=t/8,s=-1===r?3:0;for(n=0;n<a;n+=1)i=e[n>>>2]>>>8*(s+r*(n%4))&255,o+=String.fromCharCode(i);return o}(e,r,n)};case"ARRAYBUFFER":try{new ArrayBuffer(0)}catch(e){throw new Error("ARRAYBUFFER not supported by this environment")}return function(e){return function(e,t,r){var n,i=t/8,o=new ArrayBuffer(i),a=new Uint8Array(o),s=-1===r?3:0;for(n=0;n<i;n+=1)a[n]=e[n>>>2]>>>8*(s+r*(n%4))&255;return o}(e,r,n)};case"UINT8ARRAY":try{new Uint8Array(0)}catch(e){throw new Error("UINT8ARRAY not supported by this environment")}return function(e){return function(e,t,r){var n,i=t/8,o=-1===r?3:0,a=new Uint8Array(i);for(n=0;n<i;n+=1)a[n]=e[n>>>2]>>>8*(o+r*(n%4))&255;return a}(e,r,n)};default:throw new Error("format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY")}}var i=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],o=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],a=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],s="Chosen SHA variant is not supported";function u(e,t){var r,n,i=e.binLen>>>3,o=t.binLen>>>3,a=i<<3,s=4-i<<3;if(i%4!=0){for(r=0;r<o;r+=4)n=i+r>>>2,e.value[n]|=t.value[r>>>2]<<a,e.value.push(0),e.value[n+1]|=t.value[r>>>2]>>>s;return(e.value.length<<2)-4>=o+i&&e.value.pop(),{value:e.value,binLen:e.binLen+t.binLen}}return{value:e.value.concat(t.value),binLen:e.binLen+t.binLen}}function f(e){var t={outputUpper:!1,b64Pad:"=",outputLen:-1},r=e||{},n="Output length must be a multiple of 8";if(t.outputUpper=r.outputUpper||!1,r.b64Pad&&(t.b64Pad=r.b64Pad),r.outputLen){if(r.outputLen%8!=0)throw new Error(n);t.outputLen=r.outputLen}else if(r.shakeLen){if(r.shakeLen%8!=0)throw new Error(n);t.outputLen=r.shakeLen}if("boolean"!=typeof t.outputUpper)throw new Error("Invalid outputUpper formatting option");if("string"!=typeof t.b64Pad)throw new Error("Invalid b64Pad formatting option");return t}function l(e,t,n,i){var o=e+" must include a value and format";if(!t){if(!i)throw new Error(o);return i}if(void 0===t.value||!t.format)throw new Error(o);return r(t.format,t.encoding||"UTF8",n)(t.value)}var c=function(){function e(e,t,r){var n=r||{};if(this.t=t,this.i=n.encoding||"UTF8",this.numRounds=n.numRounds||1,isNaN(this.numRounds)||this.numRounds!==parseInt(this.numRounds,10)||1>this.numRounds)throw new Error("numRounds must a integer >= 1");this.o=e,this.u=[],this.s=0,this.h=!1,this.v=0,this.A=!1,this.l=[],this.H=[]}return e.prototype.update=function(e){var t,r=0,n=this.S>>>5,i=this.m(e,this.u,this.s),o=i.binLen,a=i.value,s=o>>>5;for(t=0;t<s;t+=n)r+this.S<=o&&(this.p=this.R(a.slice(t,t+n),this.p),r+=this.S);this.v+=r,this.u=a.slice(r>>>5),this.s=o%this.S,this.h=!0},e.prototype.getHash=function(e,t){var r,i,o=this.U,a=f(t);if(this.C){if(-1===a.outputLen)throw new Error("Output length must be specified in options");o=a.outputLen}var s=n(e,o,this.T,a);if(this.A&&this.F)return s(this.F(a));for(i=this.K(this.u.slice(),this.s,this.v,this.B(this.p),o),r=1;r<this.numRounds;r+=1)this.C&&o%32!=0&&(i[i.length-1]&=16777215>>>24-o%32),i=this.K(i,o,0,this.L(this.o),o);return s(i)},e.prototype.setHMACKey=function(e,t,n){if(!this.g)throw new Error("Variant does not support HMAC");if(this.h)throw new Error("Cannot set MAC key after calling update");var i=r(t,(n||{}).encoding||"UTF8",this.T);this.k(i(e))},e.prototype.k=function(e){var t,r=this.S>>>3,n=r/4-1;if(1!==this.numRounds)throw new Error("Cannot set numRounds with MAC");if(this.A)throw new Error("MAC key already set");for(r<e.binLen/8&&(e.value=this.K(e.value,e.binLen,0,this.L(this.o),this.U));e.value.length<=n;)e.value.push(0);for(t=0;t<=n;t+=1)this.l[t]=909522486^e.value[t],this.H[t]=1549556828^e.value[t];this.p=this.R(this.l,this.p),this.v=this.S,this.A=!0},e.prototype.getHMAC=function(e,t){var r=f(t);return n(e,this.U,this.T,r)(this.Y())},e.prototype.Y=function(){var e;if(!this.A)throw new Error("Cannot call getHMAC without first setting MAC key");var t=this.K(this.u.slice(),this.s,this.v,this.B(this.p),this.U);return e=this.R(this.H,this.L(this.o)),this.K(t,this.U,this.S,e,this.U)},e}(),h=function(e,t){return(h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};function d(e,t){function r(){this.constructor=e}h(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}function p(e,t){return e<<t|e>>>32-t}function y(e,t){return e>>>t|e<<32-t}function b(e,t){return e>>>t}function g(e,t,r){return e^t^r}function w(e,t,r){return e&t^~e&r}function v(e,t,r){return e&t^e&r^t&r}function m(e){return y(e,2)^y(e,13)^y(e,22)}function _(e,t){var r=(65535&e)+(65535&t);return(65535&(e>>>16)+(t>>>16)+(r>>>16))<<16|65535&r}function S(e,t,r,n){var i=(65535&e)+(65535&t)+(65535&r)+(65535&n);return(65535&(e>>>16)+(t>>>16)+(r>>>16)+(n>>>16)+(i>>>16))<<16|65535&i}function E(e,t,r,n,i){var o=(65535&e)+(65535&t)+(65535&r)+(65535&n)+(65535&i);return(65535&(e>>>16)+(t>>>16)+(r>>>16)+(n>>>16)+(i>>>16)+(o>>>16))<<16|65535&o}function A(e){return y(e,7)^y(e,18)^b(e,3)}function R(e){return y(e,6)^y(e,11)^y(e,25)}function T(e){return[1732584193,4023233417,2562383102,271733878,3285377520]}function k(e,t){var r,n,i,o,a,s,u,f=[];for(r=t[0],n=t[1],i=t[2],o=t[3],a=t[4],u=0;u<80;u+=1)f[u]=u<16?e[u]:p(f[u-3]^f[u-8]^f[u-14]^f[u-16],1),s=u<20?E(p(r,5),w(n,i,o),a,1518500249,f[u]):u<40?E(p(r,5),g(n,i,o),a,1859775393,f[u]):u<60?E(p(r,5),v(n,i,o),a,2400959708,f[u]):E(p(r,5),g(n,i,o),a,3395469782,f[u]),a=o,o=i,i=p(n,30),n=r,r=s;return t[0]=_(r,t[0]),t[1]=_(n,t[1]),t[2]=_(i,t[2]),t[3]=_(o,t[3]),t[4]=_(a,t[4]),t}function M(e,t,r,n){for(var i,o=15+(t+65>>>9<<4),a=t+r;e.length<=o;)e.push(0);for(e[t>>>5]|=128<<24-t%32,e[o]=4294967295&a,e[o-1]=a/4294967296|0,i=0;i<e.length;i+=16)n=k(e.slice(i,i+16),n);return n}var O=function(e){function t(t,n,i){var o=this;if("SHA-1"!==t)throw new Error(s);var a=i||{};return(o=e.call(this,t,n,i)||this).g=!0,o.F=o.Y,o.T=-1,o.m=r(o.t,o.i,o.T),o.R=k,o.B=function(e){return e.slice()},o.L=T,o.K=M,o.p=[1732584193,4023233417,2562383102,271733878,3285377520],o.S=512,o.U=160,o.C=!1,a.hmacKey&&o.k(l("hmacKey",a.hmacKey,o.T)),o}return d(t,e),t}(c);function L(e){return"SHA-224"==e?o.slice():a.slice()}function U(e,t){var r,n,o,a,s,u,f,l,c,h,d,p,g=[];for(r=t[0],n=t[1],o=t[2],a=t[3],s=t[4],u=t[5],f=t[6],l=t[7],d=0;d<64;d+=1)g[d]=d<16?e[d]:S(y(p=g[d-2],17)^y(p,19)^b(p,10),g[d-7],A(g[d-15]),g[d-16]),c=E(l,R(s),w(s,u,f),i[d],g[d]),h=_(m(r),v(r,n,o)),l=f,f=u,u=s,s=_(a,c),a=o,o=n,n=r,r=_(c,h);return t[0]=_(r,t[0]),t[1]=_(n,t[1]),t[2]=_(o,t[2]),t[3]=_(a,t[3]),t[4]=_(s,t[4]),t[5]=_(u,t[5]),t[6]=_(f,t[6]),t[7]=_(l,t[7]),t}var P=function(e){function t(t,n,i){var o=this;if("SHA-224"!==t&&"SHA-256"!==t)throw new Error(s);var a=i||{};return(o=e.call(this,t,n,i)||this).F=o.Y,o.g=!0,o.T=-1,o.m=r(o.t,o.i,o.T),o.R=U,o.B=function(e){return e.slice()},o.L=L,o.K=function(e,r,n,i){return function(e,t,r,n,i){for(var o,a=15+(t+65>>>9<<4),s=t+r;e.length<=a;)e.push(0);for(e[t>>>5]|=128<<24-t%32,e[a]=4294967295&s,e[a-1]=s/4294967296|0,o=0;o<e.length;o+=16)n=U(e.slice(o,o+16),n);return"SHA-224"===i?[n[0],n[1],n[2],n[3],n[4],n[5],n[6]]:n}(e,r,n,i,t)},o.p=L(t),o.S=512,o.U="SHA-224"===t?224:256,o.C=!1,a.hmacKey&&o.k(l("hmacKey",a.hmacKey,o.T)),o}return d(t,e),t}(c),j=function(e,t){this.N=e,this.I=t};function I(e,t){var r;return t>32?(r=64-t,new j(e.I<<t|e.N>>>r,e.N<<t|e.I>>>r)):0!==t?(r=32-t,new j(e.N<<t|e.I>>>r,e.I<<t|e.N>>>r)):e}function x(e,t){var r;return t<32?(r=32-t,new j(e.N>>>t|e.I<<r,e.I>>>t|e.N<<r)):(r=64-t,new j(e.I>>>t|e.N<<r,e.N>>>t|e.I<<r))}function N(e,t){return new j(e.N>>>t,e.I>>>t|e.N<<32-t)}function C(e,t,r){return new j(e.N&t.N^~e.N&r.N,e.I&t.I^~e.I&r.I)}function B(e,t,r){return new j(e.N&t.N^e.N&r.N^t.N&r.N,e.I&t.I^e.I&r.I^t.I&r.I)}function D(e){var t=x(e,28),r=x(e,34),n=x(e,39);return new j(t.N^r.N^n.N,t.I^r.I^n.I)}function F(e,t){var r,n;r=(65535&e.I)+(65535&t.I);var i=(65535&(n=(e.I>>>16)+(t.I>>>16)+(r>>>16)))<<16|65535&r;return r=(65535&e.N)+(65535&t.N)+(n>>>16),n=(e.N>>>16)+(t.N>>>16)+(r>>>16),new j((65535&n)<<16|65535&r,i)}function W(e,t,r,n){var i,o;i=(65535&e.I)+(65535&t.I)+(65535&r.I)+(65535&n.I);var a=(65535&(o=(e.I>>>16)+(t.I>>>16)+(r.I>>>16)+(n.I>>>16)+(i>>>16)))<<16|65535&i;return i=(65535&e.N)+(65535&t.N)+(65535&r.N)+(65535&n.N)+(o>>>16),o=(e.N>>>16)+(t.N>>>16)+(r.N>>>16)+(n.N>>>16)+(i>>>16),new j((65535&o)<<16|65535&i,a)}function H(e,t,r,n,i){var o,a;o=(65535&e.I)+(65535&t.I)+(65535&r.I)+(65535&n.I)+(65535&i.I);var s=(65535&(a=(e.I>>>16)+(t.I>>>16)+(r.I>>>16)+(n.I>>>16)+(i.I>>>16)+(o>>>16)))<<16|65535&o;return o=(65535&e.N)+(65535&t.N)+(65535&r.N)+(65535&n.N)+(65535&i.N)+(a>>>16),a=(e.N>>>16)+(t.N>>>16)+(r.N>>>16)+(n.N>>>16)+(i.N>>>16)+(o>>>16),new j((65535&a)<<16|65535&o,s)}function K(e,t){return new j(e.N^t.N,e.I^t.I)}function Y(e){var t=x(e,1),r=x(e,8),n=N(e,7);return new j(t.N^r.N^n.N,t.I^r.I^n.I)}function q(e){var t=x(e,14),r=x(e,18),n=x(e,41);return new j(t.N^r.N^n.N,t.I^r.I^n.I)}var z=[new j(i[0],3609767458),new j(i[1],602891725),new j(i[2],3964484399),new j(i[3],2173295548),new j(i[4],4081628472),new j(i[5],3053834265),new j(i[6],2937671579),new j(i[7],3664609560),new j(i[8],2734883394),new j(i[9],1164996542),new j(i[10],1323610764),new j(i[11],3590304994),new j(i[12],4068182383),new j(i[13],991336113),new j(i[14],633803317),new j(i[15],3479774868),new j(i[16],2666613458),new j(i[17],944711139),new j(i[18],2341262773),new j(i[19],2007800933),new j(i[20],1495990901),new j(i[21],1856431235),new j(i[22],3175218132),new j(i[23],2198950837),new j(i[24],3999719339),new j(i[25],766784016),new j(i[26],2566594879),new j(i[27],3203337956),new j(i[28],1034457026),new j(i[29],2466948901),new j(i[30],3758326383),new j(i[31],168717936),new j(i[32],1188179964),new j(i[33],1546045734),new j(i[34],1522805485),new j(i[35],2643833823),new j(i[36],2343527390),new j(i[37],1014477480),new j(i[38],1206759142),new j(i[39],344077627),new j(i[40],1290863460),new j(i[41],3158454273),new j(i[42],3505952657),new j(i[43],106217008),new j(i[44],3606008344),new j(i[45],1432725776),new j(i[46],1467031594),new j(i[47],851169720),new j(i[48],3100823752),new j(i[49],1363258195),new j(i[50],3750685593),new j(i[51],3785050280),new j(i[52],3318307427),new j(i[53],3812723403),new j(i[54],2003034995),new j(i[55],3602036899),new j(i[56],1575990012),new j(i[57],1125592928),new j(i[58],2716904306),new j(i[59],442776044),new j(i[60],593698344),new j(i[61],3733110249),new j(i[62],2999351573),new j(i[63],3815920427),new j(3391569614,3928383900),new j(3515267271,566280711),new j(3940187606,3454069534),new j(4118630271,4000239992),new j(116418474,1914138554),new j(174292421,2731055270),new j(289380356,3203993006),new j(460393269,320620315),new j(685471733,587496836),new j(852142971,1086792851),new j(1017036298,365543100),new j(1126000580,2618297676),new j(1288033470,3409855158),new j(1501505948,4234509866),new j(1607167915,987167468),new j(1816402316,1246189591)];function V(e){return"SHA-384"===e?[new j(3418070365,o[0]),new j(1654270250,o[1]),new j(2438529370,o[2]),new j(355462360,o[3]),new j(1731405415,o[4]),new j(41048885895,o[5]),new j(3675008525,o[6]),new j(1203062813,o[7])]:[new j(a[0],4089235720),new j(a[1],2227873595),new j(a[2],4271175723),new j(a[3],1595750129),new j(a[4],2917565137),new j(a[5],725511199),new j(a[6],4215389547),new j(a[7],327033209)]}function G(e,t){var r,n,i,o,a,s,u,f,l,c,h,d,p,y,b,g,w=[];for(r=t[0],n=t[1],i=t[2],o=t[3],a=t[4],s=t[5],u=t[6],f=t[7],h=0;h<80;h+=1)h<16?(d=2*h,w[h]=new j(e[d],e[d+1])):w[h]=W((y=x(p=w[h-2],19),b=x(p,61),g=N(p,6),new j(y.N^b.N^g.N,y.I^b.I^g.I)),w[h-7],Y(w[h-15]),w[h-16]),l=H(f,q(a),C(a,s,u),z[h],w[h]),c=F(D(r),B(r,n,i)),f=u,u=s,s=a,a=F(o,l),o=i,i=n,n=r,r=F(l,c);return t[0]=F(r,t[0]),t[1]=F(n,t[1]),t[2]=F(i,t[2]),t[3]=F(o,t[3]),t[4]=F(a,t[4]),t[5]=F(s,t[5]),t[6]=F(u,t[6]),t[7]=F(f,t[7]),t}var X=function(e){function t(t,n,i){var o=this;if("SHA-384"!==t&&"SHA-512"!==t)throw new Error(s);var a=i||{};return(o=e.call(this,t,n,i)||this).F=o.Y,o.g=!0,o.T=-1,o.m=r(o.t,o.i,o.T),o.R=G,o.B=function(e){return e.slice()},o.L=V,o.K=function(e,r,n,i){return function(e,t,r,n,i){for(var o,a=31+(t+129>>>10<<5),s=t+r;e.length<=a;)e.push(0);for(e[t>>>5]|=128<<24-t%32,e[a]=4294967295&s,e[a-1]=s/4294967296|0,o=0;o<e.length;o+=32)n=G(e.slice(o,o+32),n);return"SHA-384"===i?[(n=n)[0].N,n[0].I,n[1].N,n[1].I,n[2].N,n[2].I,n[3].N,n[3].I,n[4].N,n[4].I,n[5].N,n[5].I]:[n[0].N,n[0].I,n[1].N,n[1].I,n[2].N,n[2].I,n[3].N,n[3].I,n[4].N,n[4].I,n[5].N,n[5].I,n[6].N,n[6].I,n[7].N,n[7].I]}(e,r,n,i,t)},o.p=V(t),o.S=1024,o.U="SHA-384"===t?384:512,o.C=!1,a.hmacKey&&o.k(l("hmacKey",a.hmacKey,o.T)),o}return d(t,e),t}(c),Z=[new j(0,1),new j(0,32898),new j(2147483648,32906),new j(2147483648,2147516416),new j(0,32907),new j(0,2147483649),new j(2147483648,2147516545),new j(2147483648,32777),new j(0,138),new j(0,136),new j(0,2147516425),new j(0,2147483658),new j(0,2147516555),new j(2147483648,139),new j(2147483648,32905),new j(2147483648,32771),new j(2147483648,32770),new j(2147483648,128),new j(0,32778),new j(2147483648,2147483658),new j(2147483648,2147516545),new j(2147483648,32896),new j(0,2147483649),new j(2147483648,2147516424)],$=[[0,36,3,41,18],[1,44,10,45,2],[62,6,43,15,61],[28,55,25,21,56],[27,20,39,8,14]];function J(e){var t,r=[];for(t=0;t<5;t+=1)r[t]=[new j(0,0),new j(0,0),new j(0,0),new j(0,0),new j(0,0)];return r}function Q(e){var t,r=[];for(t=0;t<5;t+=1)r[t]=e[t].slice();return r}function ee(e,t){var r,n,i,o,a,s,u,f,l,c=[],h=[];if(null!==e)for(n=0;n<e.length;n+=2)t[(n>>>1)%5][(n>>>1)/5|0]=K(t[(n>>>1)%5][(n>>>1)/5|0],new j(e[n+1],e[n]));for(r=0;r<24;r+=1){for(o=J(),n=0;n<5;n+=1)c[n]=(a=t[n][0],s=t[n][1],u=t[n][2],f=t[n][3],l=t[n][4],new j(a.N^s.N^u.N^f.N^l.N,a.I^s.I^u.I^f.I^l.I));for(n=0;n<5;n+=1)h[n]=K(c[(n+4)%5],I(c[(n+1)%5],1));for(n=0;n<5;n+=1)for(i=0;i<5;i+=1)t[n][i]=K(t[n][i],h[n]);for(n=0;n<5;n+=1)for(i=0;i<5;i+=1)o[i][(2*n+3*i)%5]=I(t[n][i],$[n][i]);for(n=0;n<5;n+=1)for(i=0;i<5;i+=1)t[n][i]=K(o[n][i],new j(~o[(n+1)%5][i].N&o[(n+2)%5][i].N,~o[(n+1)%5][i].I&o[(n+2)%5][i].I));t[0][0]=K(t[0][0],Z[r])}return t}function te(e){var t,r,n=0,i=[0,0],o=[4294967295&e,e/4294967296&2097151];for(t=6;t>=0;t--)0==(r=o[t>>2]>>>8*t&255)&&0===n||(i[n+1>>2]|=r<<8*(n+1),n+=1);return n=0!==n?n:1,i[0]|=n,{value:n+1>4?i:[i[0]],binLen:8+8*n}}function re(e){return u(te(e.binLen),e)}function ne(e,t){var r,n=te(t),i=t>>>2,o=(i-(n=u(n,e)).value.length%i)%i;for(r=0;r<o;r++)n.value.push(0);return n.value}var ie=function(e){function t(t,n,i){var o=this,a=6,u=0,f=i||{};if(1!==(o=e.call(this,t,n,i)||this).numRounds){if(f.kmacKey||f.hmacKey)throw new Error("Cannot set numRounds with MAC");if("CSHAKE128"===o.o||"CSHAKE256"===o.o)throw new Error("Cannot set numRounds for CSHAKE variants")}switch(o.T=1,o.m=r(o.t,o.i,o.T),o.R=ee,o.B=Q,o.L=J,o.p=J(),o.C=!1,t){case"SHA3-224":o.S=u=1152,o.U=224,o.g=!0,o.F=o.Y;break;case"SHA3-256":o.S=u=1088,o.U=256,o.g=!0,o.F=o.Y;break;case"SHA3-384":o.S=u=832,o.U=384,o.g=!0,o.F=o.Y;break;case"SHA3-512":o.S=u=576,o.U=512,o.g=!0,o.F=o.Y;break;case"SHAKE128":a=31,o.S=u=1344,o.U=-1,o.C=!0,o.g=!1,o.F=null;break;case"SHAKE256":a=31,o.S=u=1088,o.U=-1,o.C=!0,o.g=!1,o.F=null;break;case"KMAC128":a=4,o.S=u=1344,o.M(i),o.U=-1,o.C=!0,o.g=!1,o.F=o.X;break;case"KMAC256":a=4,o.S=u=1088,o.M(i),o.U=-1,o.C=!0,o.g=!1,o.F=o.X;break;case"CSHAKE128":o.S=u=1344,a=o.O(i),o.U=-1,o.C=!0,o.g=!1,o.F=null;break;case"CSHAKE256":o.S=u=1088,a=o.O(i),o.U=-1,o.C=!0,o.g=!1,o.F=null;break;default:throw new Error(s)}return o.K=function(e,t,r,n,i){return function(e,t,r,n,i,o,a){var s,u,f=0,l=[],c=i>>>5,h=t>>>5;for(s=0;s<h&&t>=i;s+=c)n=ee(e.slice(s,s+c),n),t-=i;for(e=e.slice(s),t%=i;e.length<c;)e.push(0);for(e[(s=t>>>3)>>2]^=o<<s%4*8,e[c-1]^=2147483648,n=ee(e,n);32*l.length<a&&(u=n[f%5][f/5|0],l.push(u.I),!(32*l.length>=a));)l.push(u.N),0==64*(f+=1)%i&&(ee(null,n),f=0);return l}(e,t,0,n,u,a,i)},f.hmacKey&&o.k(l("hmacKey",f.hmacKey,o.T)),o}return d(t,e),t.prototype.O=function(e,t){var r=function(e){var t=e||{};return{funcName:l("funcName",t.funcName,1,{value:[],binLen:0}),customization:l("Customization",t.customization,1,{value:[],binLen:0})}}(e||{});t&&(r.funcName=t);var n=u(re(r.funcName),re(r.customization));if(0!==r.customization.binLen||0!==r.funcName.binLen){for(var i=ne(n,this.S>>>3),o=0;o<i.length;o+=this.S>>>5)this.p=this.R(i.slice(o,o+(this.S>>>5)),this.p),this.v+=this.S;return 4}return 31},t.prototype.M=function(e){var t=function(e){var t=e||{};return{kmacKey:l("kmacKey",t.kmacKey,1),funcName:{value:[1128353099],binLen:32},customization:l("Customization",t.customization,1,{value:[],binLen:0})}}(e||{});this.O(e,t.funcName);for(var r=ne(re(t.kmacKey),this.S>>>3),n=0;n<r.length;n+=this.S>>>5)this.p=this.R(r.slice(n,n+(this.S>>>5)),this.p),this.v+=this.S;this.A=!0},t.prototype.X=function(e){var t=u({value:this.u.slice(),binLen:this.s},function(e){var t,r,n=0,i=[0,0],o=[4294967295&e,e/4294967296&2097151];for(t=6;t>=0;t--)0==(r=o[t>>2]>>>8*t&255)&&0===n||(i[n>>2]|=r<<8*n,n+=1);return i[(n=0!==n?n:1)>>2]|=n<<8*n,{value:n+1>4?i:[i[0]],binLen:8+8*n}}(e.outputLen));return this.K(t.value,t.binLen,this.v,this.B(this.p),e.outputLen)},t}(c);return function(){function e(e,t,r){if("SHA-1"==e)this.j=new O(e,t,r);else if("SHA-224"==e||"SHA-256"==e)this.j=new P(e,t,r);else if("SHA-384"==e||"SHA-512"==e)this.j=new X(e,t,r);else{if("SHA3-224"!=e&&"SHA3-256"!=e&&"SHA3-384"!=e&&"SHA3-512"!=e&&"SHAKE128"!=e&&"SHAKE256"!=e&&"CSHAKE128"!=e&&"CSHAKE256"!=e&&"KMAC128"!=e&&"KMAC256"!=e)throw new Error(s);this.j=new ie(e,t,r)}}return e.prototype.update=function(e){this.j.update(e)},e.prototype.getHash=function(e,t){return this.j.getHash(e,t)},e.prototype.setHMACKey=function(e,t,r){this.j.setHMACKey(e,t,r)},e.prototype.getHMAC=function(e,t){return this.j.getHMAC(e,t)},e}()},"object"==typeof x.exports?x.exports=I():"function"==typeof define&&define.amd?define(I):(j=j||self).jsSHA=I(),x=x.exports;var N={exports:{}};!function(e){"use strict";var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},r=function(){throw new Error("no PRNG")},n=new Uint8Array(16),i=new Uint8Array(32);i[0]=9;var o=t(),a=t([1]),s=t([56129,1]),u=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),f=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),c=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function d(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n}function p(e,t,r,n,i){var o,a=0;for(o=0;o<i;o++)a|=e[t+o]^r[n+o];return(1&a-1>>>8)-1}function y(e,t,r,n){return p(e,t,r,n,16)}function g(e,t,r,n){return p(e,t,r,n,32)}function w(e,t,r,n){!function(e,t,r,n){for(var i,o=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,f=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,c=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,y=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,b=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,g=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,w=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,v=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,m=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,_=o,S=a,E=s,A=u,R=f,T=l,k=c,M=h,O=d,L=p,U=y,P=b,j=g,I=w,x=v,N=m,C=0;C<20;C+=2)_^=(i=(j^=(i=(O^=(i=(R^=(i=_+j|0)<<7|i>>>25)+_|0)<<9|i>>>23)+R|0)<<13|i>>>19)+O|0)<<18|i>>>14,T^=(i=(S^=(i=(I^=(i=(L^=(i=T+S|0)<<7|i>>>25)+T|0)<<9|i>>>23)+L|0)<<13|i>>>19)+I|0)<<18|i>>>14,U^=(i=(k^=(i=(E^=(i=(x^=(i=U+k|0)<<7|i>>>25)+U|0)<<9|i>>>23)+x|0)<<13|i>>>19)+E|0)<<18|i>>>14,N^=(i=(P^=(i=(M^=(i=(A^=(i=N+P|0)<<7|i>>>25)+N|0)<<9|i>>>23)+A|0)<<13|i>>>19)+M|0)<<18|i>>>14,_^=(i=(A^=(i=(E^=(i=(S^=(i=_+A|0)<<7|i>>>25)+_|0)<<9|i>>>23)+S|0)<<13|i>>>19)+E|0)<<18|i>>>14,T^=(i=(R^=(i=(M^=(i=(k^=(i=T+R|0)<<7|i>>>25)+T|0)<<9|i>>>23)+k|0)<<13|i>>>19)+M|0)<<18|i>>>14,U^=(i=(L^=(i=(O^=(i=(P^=(i=U+L|0)<<7|i>>>25)+U|0)<<9|i>>>23)+P|0)<<13|i>>>19)+O|0)<<18|i>>>14,N^=(i=(x^=(i=(I^=(i=(j^=(i=N+x|0)<<7|i>>>25)+N|0)<<9|i>>>23)+j|0)<<13|i>>>19)+I|0)<<18|i>>>14;_=_+o|0,S=S+a|0,E=E+s|0,A=A+u|0,R=R+f|0,T=T+l|0,k=k+c|0,M=M+h|0,O=O+d|0,L=L+p|0,U=U+y|0,P=P+b|0,j=j+g|0,I=I+w|0,x=x+v|0,N=N+m|0,e[0]=_>>>0&255,e[1]=_>>>8&255,e[2]=_>>>16&255,e[3]=_>>>24&255,e[4]=S>>>0&255,e[5]=S>>>8&255,e[6]=S>>>16&255,e[7]=S>>>24&255,e[8]=E>>>0&255,e[9]=E>>>8&255,e[10]=E>>>16&255,e[11]=E>>>24&255,e[12]=A>>>0&255,e[13]=A>>>8&255,e[14]=A>>>16&255,e[15]=A>>>24&255,e[16]=R>>>0&255,e[17]=R>>>8&255,e[18]=R>>>16&255,e[19]=R>>>24&255,e[20]=T>>>0&255,e[21]=T>>>8&255,e[22]=T>>>16&255,e[23]=T>>>24&255,e[24]=k>>>0&255,e[25]=k>>>8&255,e[26]=k>>>16&255,e[27]=k>>>24&255,e[28]=M>>>0&255,e[29]=M>>>8&255,e[30]=M>>>16&255,e[31]=M>>>24&255,e[32]=O>>>0&255,e[33]=O>>>8&255,e[34]=O>>>16&255,e[35]=O>>>24&255,e[36]=L>>>0&255,e[37]=L>>>8&255,e[38]=L>>>16&255,e[39]=L>>>24&255,e[40]=U>>>0&255,e[41]=U>>>8&255,e[42]=U>>>16&255,e[43]=U>>>24&255,e[44]=P>>>0&255,e[45]=P>>>8&255,e[46]=P>>>16&255,e[47]=P>>>24&255,e[48]=j>>>0&255,e[49]=j>>>8&255,e[50]=j>>>16&255,e[51]=j>>>24&255,e[52]=I>>>0&255,e[53]=I>>>8&255,e[54]=I>>>16&255,e[55]=I>>>24&255,e[56]=x>>>0&255,e[57]=x>>>8&255,e[58]=x>>>16&255,e[59]=x>>>24&255,e[60]=N>>>0&255,e[61]=N>>>8&255,e[62]=N>>>16&255,e[63]=N>>>24&255}(e,t,r,n)}function v(e,t,r,n){!function(e,t,r,n){for(var i,o=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,f=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,c=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,y=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,b=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,g=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,w=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,v=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,m=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,_=0;_<20;_+=2)o^=(i=(g^=(i=(d^=(i=(f^=(i=o+g|0)<<7|i>>>25)+o|0)<<9|i>>>23)+f|0)<<13|i>>>19)+d|0)<<18|i>>>14,l^=(i=(a^=(i=(w^=(i=(p^=(i=l+a|0)<<7|i>>>25)+l|0)<<9|i>>>23)+p|0)<<13|i>>>19)+w|0)<<18|i>>>14,y^=(i=(c^=(i=(s^=(i=(v^=(i=y+c|0)<<7|i>>>25)+y|0)<<9|i>>>23)+v|0)<<13|i>>>19)+s|0)<<18|i>>>14,m^=(i=(b^=(i=(h^=(i=(u^=(i=m+b|0)<<7|i>>>25)+m|0)<<9|i>>>23)+u|0)<<13|i>>>19)+h|0)<<18|i>>>14,o^=(i=(u^=(i=(s^=(i=(a^=(i=o+u|0)<<7|i>>>25)+o|0)<<9|i>>>23)+a|0)<<13|i>>>19)+s|0)<<18|i>>>14,l^=(i=(f^=(i=(h^=(i=(c^=(i=l+f|0)<<7|i>>>25)+l|0)<<9|i>>>23)+c|0)<<13|i>>>19)+h|0)<<18|i>>>14,y^=(i=(p^=(i=(d^=(i=(b^=(i=y+p|0)<<7|i>>>25)+y|0)<<9|i>>>23)+b|0)<<13|i>>>19)+d|0)<<18|i>>>14,m^=(i=(v^=(i=(w^=(i=(g^=(i=m+v|0)<<7|i>>>25)+m|0)<<9|i>>>23)+g|0)<<13|i>>>19)+w|0)<<18|i>>>14;e[0]=o>>>0&255,e[1]=o>>>8&255,e[2]=o>>>16&255,e[3]=o>>>24&255,e[4]=l>>>0&255,e[5]=l>>>8&255,e[6]=l>>>16&255,e[7]=l>>>24&255,e[8]=y>>>0&255,e[9]=y>>>8&255,e[10]=y>>>16&255,e[11]=y>>>24&255,e[12]=m>>>0&255,e[13]=m>>>8&255,e[14]=m>>>16&255,e[15]=m>>>24&255,e[16]=c>>>0&255,e[17]=c>>>8&255,e[18]=c>>>16&255,e[19]=c>>>24&255,e[20]=h>>>0&255,e[21]=h>>>8&255,e[22]=h>>>16&255,e[23]=h>>>24&255,e[24]=d>>>0&255,e[25]=d>>>8&255,e[26]=d>>>16&255,e[27]=d>>>24&255,e[28]=p>>>0&255,e[29]=p>>>8&255,e[30]=p>>>16&255,e[31]=p>>>24&255}(e,t,r,n)}var m=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function _(e,t,r,n,i,o,a){var s,u,f=new Uint8Array(16),l=new Uint8Array(64);for(u=0;u<16;u++)f[u]=0;for(u=0;u<8;u++)f[u]=o[u];for(;i>=64;){for(w(l,f,a,m),u=0;u<64;u++)e[t+u]=r[n+u]^l[u];for(s=1,u=8;u<16;u++)s=s+(255&f[u])|0,f[u]=255&s,s>>>=8;i-=64,t+=64,n+=64}if(i>0)for(w(l,f,a,m),u=0;u<i;u++)e[t+u]=r[n+u]^l[u];return 0}function S(e,t,r,n,i){var o,a,s=new Uint8Array(16),u=new Uint8Array(64);for(a=0;a<16;a++)s[a]=0;for(a=0;a<8;a++)s[a]=n[a];for(;r>=64;){for(w(u,s,i,m),a=0;a<64;a++)e[t+a]=u[a];for(o=1,a=8;a<16;a++)o=o+(255&s[a])|0,s[a]=255&o,o>>>=8;r-=64,t+=64}if(r>0)for(w(u,s,i,m),a=0;a<r;a++)e[t+a]=u[a];return 0}function E(e,t,r,n,i){var o=new Uint8Array(32);v(o,n,i,m);for(var a=new Uint8Array(8),s=0;s<8;s++)a[s]=n[s+16];return S(e,t,r,a,o)}function A(e,t,r,n,i,o,a){var s=new Uint8Array(32);v(s,o,a,m);for(var u=new Uint8Array(8),f=0;f<8;f++)u[f]=o[f+16];return _(e,t,r,n,i,u,s)}var R=function(e){var t,r,n,i,o,a,s,u;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),i=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|i<<9),o=255&e[8]|(255&e[9])<<8,this.r[4]=255&(i>>>4|o<<12),this.r[5]=o>>>1&8190,a=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(o>>>14|a<<2),s=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(a>>>11|s<<5),u=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(s>>>8|u<<8),this.r[9]=u>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function T(e,t,r,n,i,o){var a=new R(o);return a.update(r,n,i),a.finish(e,t),0}function k(e,t,r,n,i,o){var a=new Uint8Array(16);return T(a,0,r,n,i,o),y(e,t,a,0)}function M(e,t,r,n,i){var o;if(r<32)return-1;for(A(e,0,t,0,r,n,i),T(e,16,e,32,r-32,e),o=0;o<16;o++)e[o]=0;return 0}function O(e,t,r,n,i){var o,a=new Uint8Array(32);if(r<32)return-1;if(E(a,0,32,n,i),0!==k(t,16,t,32,r-32,a))return-1;for(A(e,0,t,0,r,n,i),o=0;o<32;o++)e[o]=0;return 0}function L(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function U(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)}function P(e,t,r){for(var n,i=~(r-1),o=0;o<16;o++)n=i&(e[o]^t[o]),e[o]^=n,t[o]^=n}function j(e,r){var n,i,o,a=t(),s=t();for(n=0;n<16;n++)s[n]=r[n];for(U(s),U(s),U(s),i=0;i<2;i++){for(a[0]=s[0]-65517,n=1;n<15;n++)a[n]=s[n]-65535-(a[n-1]>>16&1),a[n-1]&=65535;a[15]=s[15]-32767-(a[14]>>16&1),o=a[15]>>16&1,a[14]&=65535,P(s,a,1-o)}for(n=0;n<16;n++)e[2*n]=255&s[n],e[2*n+1]=s[n]>>8}function I(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return j(r,e),j(n,t),g(r,0,n,0)}function x(e){var t=new Uint8Array(32);return j(t,e),1&t[0]}function N(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function C(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]}function B(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]}function D(e,t,r){var n,i,o=0,a=0,s=0,u=0,f=0,l=0,c=0,h=0,d=0,p=0,y=0,b=0,g=0,w=0,v=0,m=0,_=0,S=0,E=0,A=0,R=0,T=0,k=0,M=0,O=0,L=0,U=0,P=0,j=0,I=0,x=0,N=r[0],C=r[1],B=r[2],D=r[3],F=r[4],W=r[5],H=r[6],K=r[7],Y=r[8],q=r[9],z=r[10],V=r[11],G=r[12],X=r[13],Z=r[14],$=r[15];o+=(n=t[0])*N,a+=n*C,s+=n*B,u+=n*D,f+=n*F,l+=n*W,c+=n*H,h+=n*K,d+=n*Y,p+=n*q,y+=n*z,b+=n*V,g+=n*G,w+=n*X,v+=n*Z,m+=n*$,a+=(n=t[1])*N,s+=n*C,u+=n*B,f+=n*D,l+=n*F,c+=n*W,h+=n*H,d+=n*K,p+=n*Y,y+=n*q,b+=n*z,g+=n*V,w+=n*G,v+=n*X,m+=n*Z,_+=n*$,s+=(n=t[2])*N,u+=n*C,f+=n*B,l+=n*D,c+=n*F,h+=n*W,d+=n*H,p+=n*K,y+=n*Y,b+=n*q,g+=n*z,w+=n*V,v+=n*G,m+=n*X,_+=n*Z,S+=n*$,u+=(n=t[3])*N,f+=n*C,l+=n*B,c+=n*D,h+=n*F,d+=n*W,p+=n*H,y+=n*K,b+=n*Y,g+=n*q,w+=n*z,v+=n*V,m+=n*G,_+=n*X,S+=n*Z,E+=n*$,f+=(n=t[4])*N,l+=n*C,c+=n*B,h+=n*D,d+=n*F,p+=n*W,y+=n*H,b+=n*K,g+=n*Y,w+=n*q,v+=n*z,m+=n*V,_+=n*G,S+=n*X,E+=n*Z,A+=n*$,l+=(n=t[5])*N,c+=n*C,h+=n*B,d+=n*D,p+=n*F,y+=n*W,b+=n*H,g+=n*K,w+=n*Y,v+=n*q,m+=n*z,_+=n*V,S+=n*G,E+=n*X,A+=n*Z,R+=n*$,c+=(n=t[6])*N,h+=n*C,d+=n*B,p+=n*D,y+=n*F,b+=n*W,g+=n*H,w+=n*K,v+=n*Y,m+=n*q,_+=n*z,S+=n*V,E+=n*G,A+=n*X,R+=n*Z,T+=n*$,h+=(n=t[7])*N,d+=n*C,p+=n*B,y+=n*D,b+=n*F,g+=n*W,w+=n*H,v+=n*K,m+=n*Y,_+=n*q,S+=n*z,E+=n*V,A+=n*G,R+=n*X,T+=n*Z,k+=n*$,d+=(n=t[8])*N,p+=n*C,y+=n*B,b+=n*D,g+=n*F,w+=n*W,v+=n*H,m+=n*K,_+=n*Y,S+=n*q,E+=n*z,A+=n*V,R+=n*G,T+=n*X,k+=n*Z,M+=n*$,p+=(n=t[9])*N,y+=n*C,b+=n*B,g+=n*D,w+=n*F,v+=n*W,m+=n*H,_+=n*K,S+=n*Y,E+=n*q,A+=n*z,R+=n*V,T+=n*G,k+=n*X,M+=n*Z,O+=n*$,y+=(n=t[10])*N,b+=n*C,g+=n*B,w+=n*D,v+=n*F,m+=n*W,_+=n*H,S+=n*K,E+=n*Y,A+=n*q,R+=n*z,T+=n*V,k+=n*G,M+=n*X,O+=n*Z,L+=n*$,b+=(n=t[11])*N,g+=n*C,w+=n*B,v+=n*D,m+=n*F,_+=n*W,S+=n*H,E+=n*K,A+=n*Y,R+=n*q,T+=n*z,k+=n*V,M+=n*G,O+=n*X,L+=n*Z,U+=n*$,g+=(n=t[12])*N,w+=n*C,v+=n*B,m+=n*D,_+=n*F,S+=n*W,E+=n*H,A+=n*K,R+=n*Y,T+=n*q,k+=n*z,M+=n*V,O+=n*G,L+=n*X,U+=n*Z,P+=n*$,w+=(n=t[13])*N,v+=n*C,m+=n*B,_+=n*D,S+=n*F,E+=n*W,A+=n*H,R+=n*K,T+=n*Y,k+=n*q,M+=n*z,O+=n*V,L+=n*G,U+=n*X,P+=n*Z,j+=n*$,v+=(n=t[14])*N,m+=n*C,_+=n*B,S+=n*D,E+=n*F,A+=n*W,R+=n*H,T+=n*K,k+=n*Y,M+=n*q,O+=n*z,L+=n*V,U+=n*G,P+=n*X,j+=n*Z,I+=n*$,m+=(n=t[15])*N,a+=38*(S+=n*B),s+=38*(E+=n*D),u+=38*(A+=n*F),f+=38*(R+=n*W),l+=38*(T+=n*H),c+=38*(k+=n*K),h+=38*(M+=n*Y),d+=38*(O+=n*q),p+=38*(L+=n*z),y+=38*(U+=n*V),b+=38*(P+=n*G),g+=38*(j+=n*X),w+=38*(I+=n*Z),v+=38*(x+=n*$),o=(n=(o+=38*(_+=n*C))+(i=1)+65535)-65536*(i=Math.floor(n/65536)),a=(n=a+i+65535)-65536*(i=Math.floor(n/65536)),s=(n=s+i+65535)-65536*(i=Math.floor(n/65536)),u=(n=u+i+65535)-65536*(i=Math.floor(n/65536)),f=(n=f+i+65535)-65536*(i=Math.floor(n/65536)),l=(n=l+i+65535)-65536*(i=Math.floor(n/65536)),c=(n=c+i+65535)-65536*(i=Math.floor(n/65536)),h=(n=h+i+65535)-65536*(i=Math.floor(n/65536)),d=(n=d+i+65535)-65536*(i=Math.floor(n/65536)),p=(n=p+i+65535)-65536*(i=Math.floor(n/65536)),y=(n=y+i+65535)-65536*(i=Math.floor(n/65536)),b=(n=b+i+65535)-65536*(i=Math.floor(n/65536)),g=(n=g+i+65535)-65536*(i=Math.floor(n/65536)),w=(n=w+i+65535)-65536*(i=Math.floor(n/65536)),v=(n=v+i+65535)-65536*(i=Math.floor(n/65536)),m=(n=m+i+65535)-65536*(i=Math.floor(n/65536)),o=(n=(o+=i-1+37*(i-1))+(i=1)+65535)-65536*(i=Math.floor(n/65536)),a=(n=a+i+65535)-65536*(i=Math.floor(n/65536)),s=(n=s+i+65535)-65536*(i=Math.floor(n/65536)),u=(n=u+i+65535)-65536*(i=Math.floor(n/65536)),f=(n=f+i+65535)-65536*(i=Math.floor(n/65536)),l=(n=l+i+65535)-65536*(i=Math.floor(n/65536)),c=(n=c+i+65535)-65536*(i=Math.floor(n/65536)),h=(n=h+i+65535)-65536*(i=Math.floor(n/65536)),d=(n=d+i+65535)-65536*(i=Math.floor(n/65536)),p=(n=p+i+65535)-65536*(i=Math.floor(n/65536)),y=(n=y+i+65535)-65536*(i=Math.floor(n/65536)),b=(n=b+i+65535)-65536*(i=Math.floor(n/65536)),g=(n=g+i+65535)-65536*(i=Math.floor(n/65536)),w=(n=w+i+65535)-65536*(i=Math.floor(n/65536)),v=(n=v+i+65535)-65536*(i=Math.floor(n/65536)),m=(n=m+i+65535)-65536*(i=Math.floor(n/65536)),o+=i-1+37*(i-1),e[0]=o,e[1]=a,e[2]=s,e[3]=u,e[4]=f,e[5]=l,e[6]=c,e[7]=h,e[8]=d,e[9]=p,e[10]=y,e[11]=b,e[12]=g,e[13]=w,e[14]=v,e[15]=m}function F(e,t){D(e,t,t)}function W(e,r){var n,i=t();for(n=0;n<16;n++)i[n]=r[n];for(n=253;n>=0;n--)F(i,i),2!==n&&4!==n&&D(i,i,r);for(n=0;n<16;n++)e[n]=i[n]}function H(e,r){var n,i=t();for(n=0;n<16;n++)i[n]=r[n];for(n=250;n>=0;n--)F(i,i),1!==n&&D(i,i,r);for(n=0;n<16;n++)e[n]=i[n]}function K(e,r,n){var i,o,a=new Uint8Array(32),u=new Float64Array(80),f=t(),l=t(),c=t(),h=t(),d=t(),p=t();for(o=0;o<31;o++)a[o]=r[o];for(a[31]=127&r[31]|64,a[0]&=248,N(u,n),o=0;o<16;o++)l[o]=u[o],h[o]=f[o]=c[o]=0;for(f[0]=h[0]=1,o=254;o>=0;--o)P(f,l,i=a[o>>>3]>>>(7&o)&1),P(c,h,i),C(d,f,c),B(f,f,c),C(c,l,h),B(l,l,h),F(h,d),F(p,f),D(f,c,f),D(c,l,d),C(d,f,c),B(f,f,c),F(l,f),B(c,h,p),D(f,c,s),C(f,f,h),D(c,c,f),D(f,h,p),D(h,l,u),F(l,d),P(f,l,i),P(c,h,i);for(o=0;o<16;o++)u[o+16]=f[o],u[o+32]=c[o],u[o+48]=l[o],u[o+64]=h[o];var y=u.subarray(32),b=u.subarray(16);return W(y,y),D(b,b,y),j(e,b),0}function Y(e,t){return K(e,t,i)}function q(e,t){return r(t,32),Y(e,t)}function z(e,t,r){var i=new Uint8Array(32);return K(i,r,t),v(e,n,i,m)}R.prototype.blocks=function(e,t,r){for(var n,i,o,a,s,u,f,l,c,h,d,p,y,b,g,w,v,m,_,S=this.fin?0:2048,E=this.h[0],A=this.h[1],R=this.h[2],T=this.h[3],k=this.h[4],M=this.h[5],O=this.h[6],L=this.h[7],U=this.h[8],P=this.h[9],j=this.r[0],I=this.r[1],x=this.r[2],N=this.r[3],C=this.r[4],B=this.r[5],D=this.r[6],F=this.r[7],W=this.r[8],H=this.r[9];r>=16;)h=c=0,h+=(E+=8191&(n=255&e[t+0]|(255&e[t+1])<<8))*j,h+=(A+=8191&(n>>>13|(i=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*H),h+=(R+=8191&(i>>>10|(o=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*W),h+=(T+=8191&(o>>>7|(a=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*F),c=(h+=(k+=8191&(a>>>4|(s=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*D))>>>13,h&=8191,h+=(M+=s>>>1&8191)*(5*B),h+=(O+=8191&(s>>>14|(u=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*C),h+=(L+=8191&(u>>>11|(f=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*N),h+=(U+=8191&(f>>>8|(l=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*x),d=c+=(h+=(P+=l>>>5|S)*(5*I))>>>13,d+=E*I,d+=A*j,d+=R*(5*H),d+=T*(5*W),c=(d+=k*(5*F))>>>13,d&=8191,d+=M*(5*D),d+=O*(5*B),d+=L*(5*C),d+=U*(5*N),c+=(d+=P*(5*x))>>>13,d&=8191,p=c,p+=E*x,p+=A*I,p+=R*j,p+=T*(5*H),c=(p+=k*(5*W))>>>13,p&=8191,p+=M*(5*F),p+=O*(5*D),p+=L*(5*B),p+=U*(5*C),y=c+=(p+=P*(5*N))>>>13,y+=E*N,y+=A*x,y+=R*I,y+=T*j,c=(y+=k*(5*H))>>>13,y&=8191,y+=M*(5*W),y+=O*(5*F),y+=L*(5*D),y+=U*(5*B),b=c+=(y+=P*(5*C))>>>13,b+=E*C,b+=A*N,b+=R*x,b+=T*I,c=(b+=k*j)>>>13,b&=8191,b+=M*(5*H),b+=O*(5*W),b+=L*(5*F),b+=U*(5*D),g=c+=(b+=P*(5*B))>>>13,g+=E*B,g+=A*C,g+=R*N,g+=T*x,c=(g+=k*I)>>>13,g&=8191,g+=M*j,g+=O*(5*H),g+=L*(5*W),g+=U*(5*F),w=c+=(g+=P*(5*D))>>>13,w+=E*D,w+=A*B,w+=R*C,w+=T*N,c=(w+=k*x)>>>13,w&=8191,w+=M*I,w+=O*j,w+=L*(5*H),w+=U*(5*W),v=c+=(w+=P*(5*F))>>>13,v+=E*F,v+=A*D,v+=R*B,v+=T*C,c=(v+=k*N)>>>13,v&=8191,v+=M*x,v+=O*I,v+=L*j,v+=U*(5*H),m=c+=(v+=P*(5*W))>>>13,m+=E*W,m+=A*F,m+=R*D,m+=T*B,c=(m+=k*C)>>>13,m&=8191,m+=M*N,m+=O*x,m+=L*I,m+=U*j,_=c+=(m+=P*(5*H))>>>13,_+=E*H,_+=A*W,_+=R*F,_+=T*D,c=(_+=k*B)>>>13,_&=8191,_+=M*C,_+=O*N,_+=L*x,_+=U*I,E=h=8191&(c=(c=((c+=(_+=P*j)>>>13)<<2)+c|0)+(h&=8191)|0),A=d+=c>>>=13,R=p&=8191,T=y&=8191,k=b&=8191,M=g&=8191,O=w&=8191,L=v&=8191,U=m&=8191,P=_&=8191,t+=16,r-=16;this.h[0]=E,this.h[1]=A,this.h[2]=R,this.h[3]=T,this.h[4]=k,this.h[5]=M,this.h[6]=O,this.h[7]=L,this.h[8]=U,this.h[9]=P},R.prototype.finish=function(e,t){var r,n,i,o,a=new Uint16Array(10);if(this.leftover){for(o=this.leftover,this.buffer[o++]=1;o<16;o++)this.buffer[o]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,o=2;o<10;o++)this.h[o]+=r,r=this.h[o]>>>13,this.h[o]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,a[0]=this.h[0]+5,r=a[0]>>>13,a[0]&=8191,o=1;o<10;o++)a[o]=this.h[o]+r,r=a[o]>>>13,a[o]&=8191;for(a[9]-=8192,n=(1^r)-1,o=0;o<10;o++)a[o]&=n;for(n=~n,o=0;o<10;o++)this.h[o]=this.h[o]&n|a[o];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),i=this.h[0]+this.pad[0],this.h[0]=65535&i,o=1;o<8;o++)i=(this.h[o]+this.pad[o]|0)+(i>>>16)|0,this.h[o]=65535&i;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},R.prototype.update=function(e,t,r){var n,i;if(this.leftover){for((i=16-this.leftover)>r&&(i=r),n=0;n<i;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=i,t+=i,this.leftover+=i,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(i=r-r%16,this.blocks(e,t,i),t+=i,r-=i),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var V=M,G=O,X=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function Z(e,t,r,n){for(var i,o,a,s,u,f,l,c,h,d,p,y,b,g,w,v,m,_,S,E,A,R,T,k,M,O,L=new Int32Array(16),U=new Int32Array(16),P=e[0],j=e[1],I=e[2],x=e[3],N=e[4],C=e[5],B=e[6],D=e[7],F=t[0],W=t[1],H=t[2],K=t[3],Y=t[4],q=t[5],z=t[6],V=t[7],G=0;n>=128;){for(S=0;S<16;S++)E=8*S+G,L[S]=r[E+0]<<24|r[E+1]<<16|r[E+2]<<8|r[E+3],U[S]=r[E+4]<<24|r[E+5]<<16|r[E+6]<<8|r[E+7];for(S=0;S<80;S++)if(i=P,o=j,a=I,s=x,u=N,f=C,l=B,h=F,d=W,p=H,y=K,b=Y,g=q,w=z,T=65535&(R=V),k=R>>>16,M=65535&(A=D),O=A>>>16,T+=65535&(R=(Y>>>14|N<<18)^(Y>>>18|N<<14)^(N>>>9|Y<<23)),k+=R>>>16,M+=65535&(A=(N>>>14|Y<<18)^(N>>>18|Y<<14)^(Y>>>9|N<<23)),O+=A>>>16,T+=65535&(R=Y&q^~Y&z),k+=R>>>16,M+=65535&(A=N&C^~N&B),O+=A>>>16,T+=65535&(R=X[2*S+1]),k+=R>>>16,M+=65535&(A=X[2*S]),O+=A>>>16,A=L[S%16],k+=(R=U[S%16])>>>16,M+=65535&A,O+=A>>>16,M+=(k+=(T+=65535&R)>>>16)>>>16,T=65535&(R=_=65535&T|k<<16),k=R>>>16,M=65535&(A=m=65535&M|(O+=M>>>16)<<16),O=A>>>16,T+=65535&(R=(F>>>28|P<<4)^(P>>>2|F<<30)^(P>>>7|F<<25)),k+=R>>>16,M+=65535&(A=(P>>>28|F<<4)^(F>>>2|P<<30)^(F>>>7|P<<25)),O+=A>>>16,k+=(R=F&W^F&H^W&H)>>>16,M+=65535&(A=P&j^P&I^j&I),O+=A>>>16,c=65535&(M+=(k+=(T+=65535&R)>>>16)>>>16)|(O+=M>>>16)<<16,v=65535&T|k<<16,T=65535&(R=y),k=R>>>16,M=65535&(A=s),O=A>>>16,k+=(R=_)>>>16,M+=65535&(A=m),O+=A>>>16,j=i,I=o,x=a,N=s=65535&(M+=(k+=(T+=65535&R)>>>16)>>>16)|(O+=M>>>16)<<16,C=u,B=f,D=l,P=c,W=h,H=d,K=p,Y=y=65535&T|k<<16,q=b,z=g,V=w,F=v,S%16==15)for(E=0;E<16;E++)A=L[E],T=65535&(R=U[E]),k=R>>>16,M=65535&A,O=A>>>16,A=L[(E+9)%16],T+=65535&(R=U[(E+9)%16]),k+=R>>>16,M+=65535&A,O+=A>>>16,m=L[(E+1)%16],T+=65535&(R=((_=U[(E+1)%16])>>>1|m<<31)^(_>>>8|m<<24)^(_>>>7|m<<25)),k+=R>>>16,M+=65535&(A=(m>>>1|_<<31)^(m>>>8|_<<24)^m>>>7),O+=A>>>16,m=L[(E+14)%16],k+=(R=((_=U[(E+14)%16])>>>19|m<<13)^(m>>>29|_<<3)^(_>>>6|m<<26))>>>16,M+=65535&(A=(m>>>19|_<<13)^(_>>>29|m<<3)^m>>>6),O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,L[E]=65535&M|O<<16,U[E]=65535&T|k<<16;T=65535&(R=F),k=R>>>16,M=65535&(A=P),O=A>>>16,A=e[0],k+=(R=t[0])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[0]=P=65535&M|O<<16,t[0]=F=65535&T|k<<16,T=65535&(R=W),k=R>>>16,M=65535&(A=j),O=A>>>16,A=e[1],k+=(R=t[1])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[1]=j=65535&M|O<<16,t[1]=W=65535&T|k<<16,T=65535&(R=H),k=R>>>16,M=65535&(A=I),O=A>>>16,A=e[2],k+=(R=t[2])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[2]=I=65535&M|O<<16,t[2]=H=65535&T|k<<16,T=65535&(R=K),k=R>>>16,M=65535&(A=x),O=A>>>16,A=e[3],k+=(R=t[3])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[3]=x=65535&M|O<<16,t[3]=K=65535&T|k<<16,T=65535&(R=Y),k=R>>>16,M=65535&(A=N),O=A>>>16,A=e[4],k+=(R=t[4])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[4]=N=65535&M|O<<16,t[4]=Y=65535&T|k<<16,T=65535&(R=q),k=R>>>16,M=65535&(A=C),O=A>>>16,A=e[5],k+=(R=t[5])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[5]=C=65535&M|O<<16,t[5]=q=65535&T|k<<16,T=65535&(R=z),k=R>>>16,M=65535&(A=B),O=A>>>16,A=e[6],k+=(R=t[6])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[6]=B=65535&M|O<<16,t[6]=z=65535&T|k<<16,T=65535&(R=V),k=R>>>16,M=65535&(A=D),O=A>>>16,A=e[7],k+=(R=t[7])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[7]=D=65535&M|O<<16,t[7]=V=65535&T|k<<16,G+=128,n-=128}return n}function $(e,t,r){var n,i=new Int32Array(8),o=new Int32Array(8),a=new Uint8Array(256),s=r;for(i[0]=1779033703,i[1]=3144134277,i[2]=1013904242,i[3]=2773480762,i[4]=1359893119,i[5]=2600822924,i[6]=528734635,i[7]=1541459225,o[0]=4089235720,o[1]=2227873595,o[2]=4271175723,o[3]=1595750129,o[4]=2917565137,o[5]=725511199,o[6]=4215389547,o[7]=327033209,Z(i,o,t,r),r%=128,n=0;n<r;n++)a[n]=t[s-r+n];for(a[r]=128,a[(r=256-128*(r<112?1:0))-9]=0,d(a,r-8,s/536870912|0,s<<3),Z(i,o,a,r),n=0;n<8;n++)d(e,8*n,i[n],o[n]);return 0}function J(e,r){var n=t(),i=t(),o=t(),a=t(),s=t(),u=t(),l=t(),c=t(),h=t();B(n,e[1],e[0]),B(h,r[1],r[0]),D(n,n,h),C(i,e[0],e[1]),C(h,r[0],r[1]),D(i,i,h),D(o,e[3],r[3]),D(o,o,f),D(a,e[2],r[2]),C(a,a,a),B(s,i,n),B(u,a,o),C(l,a,o),C(c,i,n),D(e[0],s,u),D(e[1],c,l),D(e[2],l,u),D(e[3],s,c)}function Q(e,t,r){var n;for(n=0;n<4;n++)P(e[n],t[n],r)}function ee(e,r){var n=t(),i=t(),o=t();W(o,r[2]),D(n,r[0],o),D(i,r[1],o),j(e,i),e[31]^=x(n)<<7}function te(e,t,r){var n,i;for(L(e[0],o),L(e[1],a),L(e[2],a),L(e[3],o),i=255;i>=0;--i)Q(e,t,n=r[i/8|0]>>(7&i)&1),J(t,e),J(e,e),Q(e,t,n)}function re(e,r){var n=[t(),t(),t(),t()];L(n[0],l),L(n[1],c),L(n[2],a),D(n[3],l,c),te(e,n,r)}function ne(e,n,i){var o,a=new Uint8Array(64),s=[t(),t(),t(),t()];for(i||r(n,32),$(a,n,32),a[0]&=248,a[31]&=127,a[31]|=64,re(s,a),ee(e,s),o=0;o<32;o++)n[o+32]=e[o];return 0}var ie=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function oe(e,t){var r,n,i,o;for(n=63;n>=32;--n){for(r=0,i=n-32,o=n-12;i<o;++i)t[i]+=r-16*t[n]*ie[i-(n-32)],r=Math.floor((t[i]+128)/256),t[i]-=256*r;t[i]+=r,t[n]=0}for(r=0,i=0;i<32;i++)t[i]+=r-(t[31]>>4)*ie[i],r=t[i]>>8,t[i]&=255;for(i=0;i<32;i++)t[i]-=r*ie[i];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function ae(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;oe(e,r)}function se(e,r,n,i){var o,a,s=new Uint8Array(64),u=new Uint8Array(64),f=new Uint8Array(64),l=new Float64Array(64),c=[t(),t(),t(),t()];$(s,i,32),s[0]&=248,s[31]&=127,s[31]|=64;var h=n+64;for(o=0;o<n;o++)e[64+o]=r[o];for(o=0;o<32;o++)e[32+o]=s[32+o];for($(f,e.subarray(32),n+32),ae(f),re(c,f),ee(e,c),o=32;o<64;o++)e[o]=i[o];for($(u,e,n+64),ae(u),o=0;o<64;o++)l[o]=0;for(o=0;o<32;o++)l[o]=f[o];for(o=0;o<32;o++)for(a=0;a<32;a++)l[o+a]+=u[o]*s[a];return oe(e.subarray(32),l),h}function ue(e,r,n,i){var s,f=new Uint8Array(32),l=new Uint8Array(64),c=[t(),t(),t(),t()],d=[t(),t(),t(),t()];if(n<64)return-1;if(function(e,r){var n=t(),i=t(),s=t(),f=t(),l=t(),c=t(),d=t();return L(e[2],a),N(e[1],r),F(s,e[1]),D(f,s,u),B(s,s,e[2]),C(f,e[2],f),F(l,f),F(c,l),D(d,c,l),D(n,d,s),D(n,n,f),H(n,n),D(n,n,s),D(n,n,f),D(n,n,f),D(e[0],n,f),F(i,e[0]),D(i,i,f),I(i,s)&&D(e[0],e[0],h),F(i,e[0]),D(i,i,f),I(i,s)?-1:(x(e[0])===r[31]>>7&&B(e[0],o,e[0]),D(e[3],e[0],e[1]),0)}(d,i))return-1;for(s=0;s<n;s++)e[s]=r[s];for(s=0;s<32;s++)e[s+32]=i[s];if($(l,e,n),ae(l),te(c,d,l),re(d,r.subarray(32)),J(c,d),ee(f,c),n-=64,g(r,0,f,0)){for(s=0;s<n;s++)e[s]=0;return-1}for(s=0;s<n;s++)e[s]=r[s+64];return n}var fe;function le(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function ce(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function he(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:v,crypto_stream_xor:A,crypto_stream:E,crypto_stream_salsa20_xor:_,crypto_stream_salsa20:S,crypto_onetimeauth:T,crypto_onetimeauth_verify:k,crypto_verify_16:y,crypto_verify_32:g,crypto_secretbox:M,crypto_secretbox_open:O,crypto_scalarmult:K,crypto_scalarmult_base:Y,crypto_box_beforenm:z,crypto_box_afternm:V,crypto_box:function(e,t,r,n,i,o){var a=new Uint8Array(32);return z(a,i,o),V(e,t,r,n,a)},crypto_box_open:function(e,t,r,n,i,o){var a=new Uint8Array(32);return z(a,i,o),G(e,t,r,n,a)},crypto_box_keypair:q,crypto_hash:$,crypto_sign:se,crypto_sign_keypair:ne,crypto_sign_open:ue,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:64,crypto_sign_PUBLICKEYBYTES:32,crypto_sign_SECRETKEYBYTES:64,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:u,L:ie,pack25519:j,unpack25519:N,M:D,A:C,S:F,Z:B,pow2523:H,add:J,set25519:L,modL:oe,scalarmult:te,scalarbase:re},e.randomBytes=function(e){var t=new Uint8Array(e);return r(t,e),t},e.secretbox=function(e,t,r){ce(e,t,r),le(r,t);for(var n=new Uint8Array(32+e.length),i=new Uint8Array(n.length),o=0;o<e.length;o++)n[o+32]=e[o];return M(i,n,n.length,t,r),i.subarray(16)},e.secretbox.open=function(e,t,r){ce(e,t,r),le(r,t);for(var n=new Uint8Array(16+e.length),i=new Uint8Array(n.length),o=0;o<e.length;o++)n[o+16]=e[o];return n.length<32||0!==O(i,n,n.length,t,r)?null:i.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=16,e.scalarMult=function(e,t){if(ce(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var r=new Uint8Array(32);return K(r,e,t),r},e.scalarMult.base=function(e){if(ce(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return Y(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,r,n,i){var o=e.box.before(n,i);return e.secretbox(t,r,o)},e.box.before=function(e,t){ce(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var r=new Uint8Array(32);return z(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,i){var o=e.box.before(n,i);return e.secretbox.open(t,r,o)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return q(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(ce(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return Y(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(ce(e,t),64!==t.length)throw new Error("bad secret key size");var r=new Uint8Array(64+e.length);return se(r,e,e.length,t),r},e.sign.open=function(e,t){if(ce(e,t),32!==t.length)throw new Error("bad public key size");var r=new Uint8Array(e.length),n=ue(r,e,e.length,t);if(n<0)return null;for(var i=new Uint8Array(n),o=0;o<i.length;o++)i[o]=r[o];return i},e.sign.detached=function(t,r){for(var n=e.sign(t,r),i=new Uint8Array(64),o=0;o<i.length;o++)i[o]=n[o];return i},e.sign.detached.verify=function(e,t,r){if(ce(e,t,r),64!==t.length)throw new Error("bad signature size");if(32!==r.length)throw new Error("bad public key size");var n,i=new Uint8Array(64+e.length),o=new Uint8Array(64+e.length);for(n=0;n<64;n++)i[n]=t[n];for(n=0;n<e.length;n++)i[n+64]=e[n];return ue(o,i,i.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(64);return ne(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(ce(e),64!==e.length)throw new Error("bad secret key size");for(var t=new Uint8Array(32),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(ce(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(32),r=new Uint8Array(64),n=0;n<32;n++)r[n]=e[n];return ne(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=32,e.sign.secretKeyLength=64,e.sign.seedLength=32,e.sign.signatureLength=64,e.hash=function(e){ce(e);var t=new Uint8Array(64);return $(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return ce(e,t),0!==e.length&&0!==t.length&&e.length===t.length&&0===p(e,0,t,0,e.length)},e.setPRNG=function(e){r=e},(fe="undefined"!=typeof self?self.crypto||self.msCrypto:null)&&fe.getRandomValues?e.setPRNG((function(e,t){var r,n=new Uint8Array(t);for(r=0;r<t;r+=65536)fe.getRandomValues(n.subarray(r,r+Math.min(t-r,65536)));for(r=0;r<t;r++)e[r]=n[r];he(n)})):(fe=b({}))&&fe.randomBytes&&e.setPRNG((function(e,t){var r,n=fe.randomBytes(t);for(r=0;r<t;r++)e[r]=n[r];he(n)}))}(N.exports?N.exports:self.nacl=self.nacl||{}),N=N.exports;var C={exports:{}};(function(e){(function(){!function(e,t){"use strict";C.exports?C.exports=t():(e.nacl||(e.nacl={}),e.nacl.util=t())}(this,(function(){"use strict";var t={};function r(e){if(!/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(e))throw new TypeError("invalid encoding")}return t.decodeUTF8=function(e){if("string"!=typeof e)throw new TypeError("expected string");var t,r=unescape(encodeURIComponent(e)),n=new Uint8Array(r.length);for(t=0;t<r.length;t++)n[t]=r.charCodeAt(t);return n},t.encodeUTF8=function(e){var t,r=[];for(t=0;t<e.length;t++)r.push(String.fromCharCode(e[t]));return decodeURIComponent(escape(r.join("")))},"undefined"==typeof atob?void 0!==e.from?(t.encodeBase64=function(t){return e.from(t).toString("base64")},t.decodeBase64=function(t){return r(t),new Uint8Array(Array.prototype.slice.call(e.from(t,"base64"),0))}):(t.encodeBase64=function(t){return new e(t).toString("base64")},t.decodeBase64=function(t){return r(t),new Uint8Array(Array.prototype.slice.call(new e(t,"base64"),0))}):(t.encodeBase64=function(e){var t,r=[],n=e.length;for(t=0;t<n;t++)r.push(String.fromCharCode(e[t]));return btoa(r.join(""))},t.decodeBase64=function(e){r(e);var t,n=atob(e),i=new Uint8Array(n.length);for(t=0;t<n.length;t++)i[t]=n.charCodeAt(t);return i}),t}))}).call(this)}).call(this,b({}).Buffer),C=C.exports;var B,D="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,F=Object.prototype.toString,W=function(e){return!(D&&e&&"object"==typeof e&&Symbol.toStringTag in e)&&"[object Arguments]"===F.call(e)},H=function(e){return!!W(e)||null!==e&&"object"==typeof e&&"number"==typeof e.length&&e.length>=0&&"[object Array]"!==F.call(e)&&"[object Function]"===F.call(e.callee)},K=function(){return W(arguments)}();W.isLegacyArguments=H,B=K?W:H;var Y=Object.prototype.toString,q=Function.prototype.toString,z=/^\s*(?:function)?\*/,V="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,G=Object.getPrototypeOf,X=function(){if(!V)return!1;try{return Function("return function*() {}")()}catch(e){}}(),Z=X?G(X):{},$=Object.prototype.hasOwnProperty,J=Object.prototype.toString,Q=function(e,t,r){if("[object Function]"!==J.call(t))throw new TypeError("iterator must be a function");var n=e.length;if(n===+n)for(var i=0;i<n;i++)t.call(r,e[i],i,e);else for(var o in e)$.call(e,o)&&t.call(r,e[o],o,e)},ee=Object.prototype.hasOwnProperty,te={};(function(e){(function(){"use strict";te=function(){return function(e,t,r){if(e.filter)return e.filter(t,r);if(null==e)throw new TypeError;if("function"!=typeof t)throw new TypeError;for(var n=[],i=0;i<e.length;i++)if(ee.call(e,i)){var o=e[i];t.call(r,o,i,e)&&n.push(o)}return n}(["BigInt64Array","BigUint64Array","Float32Array","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray"],(function(t){return"function"==typeof e[t]}))}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});var re={};(function(e){(function(){"use strict";var t=e.Symbol;re=function(){return"function"==typeof t&&"function"==typeof Symbol&&"symbol"==typeof t("foo")&&"symbol"==typeof Symbol("bar")&&function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),r=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(r))return!1;for(t in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var n=Object.getOwnPropertySymbols(e);if(1!==n.length||n[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var i=Object.getOwnPropertyDescriptor(e,t);if(42!==i.value||!0!==i.enumerable)return!1}return!0}()}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});var ne=Array.prototype.slice,ie=Object.prototype.toString,oe=Function.prototype.bind||function(e){var t=this;if("function"!=typeof t||"[object Function]"!==ie.call(t))throw new TypeError("Function.prototype.bind called on incompatible "+t);for(var r,n=ne.call(arguments,1),i=Math.max(0,t.length-n.length),o=[],a=0;a<i;a++)o.push("$"+a);if(r=Function("binder","return function ("+o.join(",")+"){ return binder.apply(this,arguments); }")((function(){if(this instanceof r){var i=t.apply(this,n.concat(ne.call(arguments)));return Object(i)===i?i:this}return t.apply(e,n.concat(ne.call(arguments)))})),t.prototype){var s=function(){};s.prototype=t.prototype,r.prototype=new s,s.prototype=null}return r},ae=TypeError,se=Object.getOwnPropertyDescriptor;if(se)try{se({},"")}catch(kn){se=null}var ue,fe=function(){throw new ae},le=se?function(){try{return fe}catch(e){try{return se(arguments,"callee").get}catch(t){return fe}}}():fe,ce=re(),he=Object.getPrototypeOf||function(e){return e.__proto__},de="undefined"==typeof Uint8Array?void 0:he(Uint8Array),pe={"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayBufferPrototype%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer.prototype,"%ArrayIteratorPrototype%":ce?he([][Symbol.iterator]()):void 0,"%ArrayPrototype%":Array.prototype,"%ArrayProto_entries%":Array.prototype.entries,"%ArrayProto_forEach%":Array.prototype.forEach,"%ArrayProto_keys%":Array.prototype.keys,"%ArrayProto_values%":Array.prototype.values,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":void 0,"%AsyncFunctionPrototype%":void 0,"%AsyncGenerator%":void 0,"%AsyncGeneratorFunction%":void 0,"%AsyncGeneratorPrototype%":void 0,"%AsyncIteratorPrototype%":void 0,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%Boolean%":Boolean,"%BooleanPrototype%":Boolean.prototype,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%DataViewPrototype%":"undefined"==typeof DataView?void 0:DataView.prototype,"%Date%":Date,"%DatePrototype%":Date.prototype,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%ErrorPrototype%":Error.prototype,"%eval%":eval,"%EvalError%":EvalError,"%EvalErrorPrototype%":EvalError.prototype,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float32ArrayPrototype%":"undefined"==typeof Float32Array?void 0:Float32Array.prototype,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%Float64ArrayPrototype%":"undefined"==typeof Float64Array?void 0:Float64Array.prototype,"%Function%":Function,"%FunctionPrototype%":Function.prototype,"%Generator%":void 0,"%GeneratorFunction%":void 0,"%GeneratorPrototype%":void 0,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int8ArrayPrototype%":"undefined"==typeof Int8Array?void 0:Int8Array.prototype,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int16ArrayPrototype%":"undefined"==typeof Int16Array?void 0:Int8Array.prototype,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%Int32ArrayPrototype%":"undefined"==typeof Int32Array?void 0:Int32Array.prototype,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":ce?he(he([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%JSONParse%":"object"==typeof JSON?JSON.parse:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&ce?he((new Map)[Symbol.iterator]()):void 0,"%MapPrototype%":"undefined"==typeof Map?void 0:Map.prototype,"%Math%":Math,"%Number%":Number,"%NumberPrototype%":Number.prototype,"%Object%":Object,"%ObjectPrototype%":Object.prototype,"%ObjProto_toString%":Object.prototype.toString,"%ObjProto_valueOf%":Object.prototype.valueOf,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%PromisePrototype%":"undefined"==typeof Promise?void 0:Promise.prototype,"%PromiseProto_then%":"undefined"==typeof Promise?void 0:Promise.prototype.then,"%Promise_all%":"undefined"==typeof Promise?void 0:Promise.all,"%Promise_reject%":"undefined"==typeof Promise?void 0:Promise.reject,"%Promise_resolve%":"undefined"==typeof Promise?void 0:Promise.resolve,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%RangeErrorPrototype%":RangeError.prototype,"%ReferenceError%":ReferenceError,"%ReferenceErrorPrototype%":ReferenceError.prototype,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%RegExpPrototype%":RegExp.prototype,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&ce?he((new Set)[Symbol.iterator]()):void 0,"%SetPrototype%":"undefined"==typeof Set?void 0:Set.prototype,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%SharedArrayBufferPrototype%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer.prototype,"%String%":String,"%StringIteratorPrototype%":ce?he(""[Symbol.iterator]()):void 0,"%StringPrototype%":String.prototype,"%Symbol%":ce?Symbol:void 0,"%SymbolPrototype%":ce?Symbol.prototype:void 0,"%SyntaxError%":SyntaxError,"%SyntaxErrorPrototype%":SyntaxError.prototype,"%ThrowTypeError%":le,"%TypedArray%":de,"%TypedArrayPrototype%":de?de.prototype:void 0,"%TypeError%":ae,"%TypeErrorPrototype%":ae.prototype,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ArrayPrototype%":"undefined"==typeof Uint8Array?void 0:Uint8Array.prototype,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint8ClampedArrayPrototype%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray.prototype,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint16ArrayPrototype%":"undefined"==typeof Uint16Array?void 0:Uint16Array.prototype,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%Uint32ArrayPrototype%":"undefined"==typeof Uint32Array?void 0:Uint32Array.prototype,"%URIError%":URIError,"%URIErrorPrototype%":URIError.prototype,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakMapPrototype%":"undefined"==typeof WeakMap?void 0:WeakMap.prototype,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet,"%WeakSetPrototype%":"undefined"==typeof WeakSet?void 0:WeakSet.prototype},ye=oe.call(Function.call,String.prototype.replace),be=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,ge=/\\(\\)?/g,we=function(e,t){if("string"!=typeof e||0===e.length)throw new TypeError("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new TypeError('"allowMissing" argument must be a boolean');for(var r,n=(r=[],ye(e,be,(function(e,t,n,i){r[r.length]=n?ye(i,ge,"$1"):t||e})),r),i=function(e,t){if(!(e in pe))throw new SyntaxError("intrinsic "+e+" does not exist!");if(void 0===pe[e]&&!t)throw new ae("intrinsic "+e+" exists, but is not available. Please file an issue!");return pe[e]}("%"+(n.length>0?n[0]:"")+"%",t),o=1;o<n.length;o+=1)if(null!=i)if(se&&o+1>=n.length){var a=se(i,n[o]);if(!t&&!(n[o]in i))throw new ae("base intrinsic for "+e+" exists, but the property is not available.");i=a&&"get"in a&&!("originalValue"in a.get)?a.get:i[n[o]]}else i=i[n[o]];return i},ve=we("%Function.prototype.apply%"),me=we("%Function.prototype.call%"),_e=we("%Reflect.apply%",!0)||oe.call(me,ve),Se=we("%Object.defineProperty%",!0);if(Se)try{Se({},"a",{value:1})}catch(kn){Se=null}ue=function(){return _e(oe,me,arguments)};var Ee=function(){return _e(oe,ve,arguments)};Se?Se(ue,"apply",{value:Ee}):ue.apply=Ee;var Ae=ue(we("String.prototype.indexOf")),Re=function(e,t){var r=we(e,!!t);return"function"==typeof r&&Ae(e,".prototype.")?ue(r):r},Te=we("%Object.getOwnPropertyDescriptor%");if(Te)try{Te([],"length")}catch(kn){Te=null}var ke=Te,Me={};(function(e){(function(){"use strict";var t=Re("Object.prototype.toString"),r=re()&&"symbol"==typeof Symbol.toStringTag,n=te(),i=Re("Array.prototype.indexOf",!0)||function(e,t){for(var r=0;r<e.length;r+=1)if(e[r]===t)return r;return-1},o=Re("String.prototype.slice"),a={},s=Object.getPrototypeOf;r&&ke&&s&&Q(n,(function(t){var r=new e[t];if(!(Symbol.toStringTag in r))throw new EvalError("this engine has support for Symbol.toStringTag, but "+t+" does not have the property! Please report this.");var n=s(r),i=ke(n,Symbol.toStringTag);if(!i){var o=s(n);i=ke(o,Symbol.toStringTag)}a[t]=i.get})),Me=function(e){if(!e||"object"!=typeof e)return!1;if(!r){var s=o(t(e),8,-1);return i(n,s)>-1}return!!ke&&function(e){var t=!1;return Q(a,(function(r,n){if(!t)try{t=r.call(e)===n}catch(kn){}})),t}(e)}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});var Oe={};(function(e){(function(){"use strict";var t=Re("Object.prototype.toString"),r=re()&&"symbol"==typeof Symbol.toStringTag,n=te(),i=Re("String.prototype.slice"),o={},a=Object.getPrototypeOf;r&&ke&&a&&Q(n,(function(t){if("function"==typeof e[t]){var r=new e[t];if(!(Symbol.toStringTag in r))throw new EvalError("this engine has support for Symbol.toStringTag, but "+t+" does not have the property! Please report this.");var n=a(r),i=ke(n,Symbol.toStringTag);if(!i){var s=a(n);i=ke(s,Symbol.toStringTag)}o[t]=i.get}})),Oe=function(e){return!!Me(e)&&(r?function(e){var t=!1;return Q(o,(function(r,n){if(!t)try{var i=r.call(e);i===n&&(t=i)}catch(kn){}})),t}(e):i(t(e),8,-1))}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});var Le={};function Ue(e){return e.call.bind(e)}var Pe="undefined"!=typeof BigInt,je="undefined"!=typeof Symbol,Ie=Ue(Object.prototype.toString),xe=Ue(Number.prototype.valueOf),Ne=Ue(String.prototype.valueOf),Ce=Ue(Boolean.prototype.valueOf);if(Pe)var Be=Ue(BigInt.prototype.valueOf);if(je)var De=Ue(Symbol.prototype.valueOf);function Fe(e,t){if("object"!=typeof e)return!1;try{return t(e),!0}catch(kn){return!1}}function We(e){return"[object Map]"===Ie(e)}function He(e){return"[object Set]"===Ie(e)}function Ke(e){return"[object WeakMap]"===Ie(e)}function Ye(e){return"[object WeakSet]"===Ie(e)}function qe(e){return"[object ArrayBuffer]"===Ie(e)}function ze(e){return"undefined"!=typeof ArrayBuffer&&(qe.working?qe(e):e instanceof ArrayBuffer)}function Ve(e){return"[object DataView]"===Ie(e)}function Ge(e){return"undefined"!=typeof DataView&&(Ve.working?Ve(e):e instanceof DataView)}function Xe(e){return"[object SharedArrayBuffer]"===Ie(e)}function Ze(e){return"undefined"!=typeof SharedArrayBuffer&&(Xe.working?Xe(e):e instanceof SharedArrayBuffer)}function $e(e){return Fe(e,xe)}function Je(e){return Fe(e,Ne)}function Qe(e){return Fe(e,Ce)}function et(e){return Pe&&Fe(e,Be)}function tt(e){return je&&Fe(e,De)}Le.isArgumentsObject=B,Le.isGeneratorFunction=function(e){return"function"==typeof e&&(!!z.test(q.call(e))||(V?G(e)===Z:"[object GeneratorFunction]"===Y.call(e)))},Le.isTypedArray=Me,Le.isPromise=function(e){return"undefined"!=typeof Promise&&e instanceof Promise||null!==e&&"object"==typeof e&&"function"==typeof e.then&&"function"==typeof e.catch},Le.isArrayBufferView=function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):Me(e)||Ge(e)},Le.isUint8Array=function(e){return"Uint8Array"===Oe(e)},Le.isUint8ClampedArray=function(e){return"Uint8ClampedArray"===Oe(e)},Le.isUint16Array=function(e){return"Uint16Array"===Oe(e)},Le.isUint32Array=function(e){return"Uint32Array"===Oe(e)},Le.isInt8Array=function(e){return"Int8Array"===Oe(e)},Le.isInt16Array=function(e){return"Int16Array"===Oe(e)},Le.isInt32Array=function(e){return"Int32Array"===Oe(e)},Le.isFloat32Array=function(e){return"Float32Array"===Oe(e)},Le.isFloat64Array=function(e){return"Float64Array"===Oe(e)},Le.isBigInt64Array=function(e){return"BigInt64Array"===Oe(e)},Le.isBigUint64Array=function(e){return"BigUint64Array"===Oe(e)},We.working="undefined"!=typeof Map&&We(new Map),Le.isMap=function(e){return"undefined"!=typeof Map&&(We.working?We(e):e instanceof Map)},He.working="undefined"!=typeof Set&&He(new Set),Le.isSet=function(e){return"undefined"!=typeof Set&&(He.working?He(e):e instanceof Set)},Ke.working="undefined"!=typeof WeakMap&&Ke(new WeakMap),Le.isWeakMap=function(e){return"undefined"!=typeof WeakMap&&(Ke.working?Ke(e):e instanceof WeakMap)},Ye.working="undefined"!=typeof WeakSet&&Ye(new WeakSet),Le.isWeakSet=function(e){return Ye(e)},qe.working="undefined"!=typeof ArrayBuffer&&qe(new ArrayBuffer),Le.isArrayBuffer=ze,Ve.working="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView&&Ve(new DataView(new ArrayBuffer(1),0,1)),Le.isDataView=Ge,Xe.working="undefined"!=typeof SharedArrayBuffer&&Xe(new SharedArrayBuffer),Le.isSharedArrayBuffer=Ze,Le.isAsyncFunction=function(e){return"[object AsyncFunction]"===Ie(e)},Le.isMapIterator=function(e){return"[object Map Iterator]"===Ie(e)},Le.isSetIterator=function(e){return"[object Set Iterator]"===Ie(e)},Le.isGeneratorObject=function(e){return"[object Generator]"===Ie(e)},Le.isWebAssemblyCompiledModule=function(e){return"[object WebAssembly.Module]"===Ie(e)},Le.isNumberObject=$e,Le.isStringObject=Je,Le.isBooleanObject=Qe,Le.isBigIntObject=et,Le.isSymbolObject=tt,Le.isBoxedPrimitive=function(e){return $e(e)||Je(e)||Qe(e)||et(e)||tt(e)},Le.isAnyArrayBuffer=function(e){return"undefined"!=typeof Uint8Array&&(ze(e)||Ze(e))},["isProxy","isExternal","isModuleNamespaceObject"].forEach((function(e){Object.defineProperty(Le,e,{enumerable:!1,value:function(){throw new Error(e+" is not supported in userland")}})}));var rt={};rt="function"==typeof Object.create?function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}};var nt,it,ot={},at=ot={};function st(){throw new Error("setTimeout has not been defined")}function ut(){throw new Error("clearTimeout has not been defined")}function ft(e){if(nt===setTimeout)return setTimeout(e,0);if((nt===st||!nt)&&setTimeout)return nt=setTimeout,setTimeout(e,0);try{return nt(e,0)}catch(kn){try{return nt.call(null,e,0)}catch(kn){return nt.call(this,e,0)}}}!function(){try{nt="function"==typeof setTimeout?setTimeout:st}catch(kn){nt=st}try{it="function"==typeof clearTimeout?clearTimeout:ut}catch(kn){it=ut}}();var lt,ct=[],ht=!1,dt=-1;function pt(){ht&&lt&&(ht=!1,lt.length?ct=lt.concat(ct):dt=-1,ct.length&&yt())}function yt(){if(!ht){var e=ft(pt);ht=!0;for(var t=ct.length;t;){for(lt=ct,ct=[];++dt<t;)lt&&lt[dt].run();dt=-1,t=ct.length}lt=null,ht=!1,function(e){if(it===clearTimeout)return clearTimeout(e);if((it===ut||!it)&&clearTimeout)return it=clearTimeout,clearTimeout(e);try{it(e)}catch(kn){try{return it.call(null,e)}catch(kn){return it.call(this,e)}}}(e)}}function bt(e,t){this.fun=e,this.array=t}function gt(){}at.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];ct.push(new bt(e,t)),1!==ct.length||ht||ft(yt)},bt.prototype.run=function(){this.fun.apply(null,this.array)},at.title="browser",at.browser=!0,at.env={},at.argv=[],at.version="",at.versions={},at.on=gt,at.addListener=gt,at.once=gt,at.off=gt,at.removeListener=gt,at.removeAllListeners=gt,at.emit=gt,at.prependListener=gt,at.prependOnceListener=gt,at.listeners=function(e){return[]},at.binding=function(e){throw new Error("process.binding is not supported")},at.cwd=function(){return"/"},at.chdir=function(e){throw new Error("process.chdir is not supported")},at.umask=function(){return 0};var wt={};(function(e){(function(){var t=Object.getOwnPropertyDescriptors||function(e){for(var t=Object.keys(e),r={},n=0;n<t.length;n++)r[t[n]]=Object.getOwnPropertyDescriptor(e,t[n]);return r};if(e.env.NODE_DEBUG){var r=e.env.NODE_DEBUG;r=r.replace(/[|\\{}()[\]^$+?.]/g,"\\$&").replace(/\*/g,".*").replace(/,/g,"$|^").toUpperCase(),new RegExp("^"+r+"$","i")}function n(e,t){var r={seen:[],stylize:o};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),l(t)?r.showHidden=t:t&&wt._extend(r,t),p(r.showHidden)&&(r.showHidden=!1),p(r.depth)&&(r.depth=2),p(r.colors)&&(r.colors=!1),p(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=i),a(r,e,r.depth)}function i(e,t){var r=n.styles[t];return r?"\x1b["+n.colors[r][0]+"m"+e+"\x1b["+n.colors[r][1]+"m":e}function o(e,t){return e}function a(e,t,r){if(e.customInspect&&t&&v(t.inspect)&&t.inspect!==wt.inspect&&(!t.constructor||t.constructor.prototype!==t)){var n=t.inspect(r,e);return d(n)||(n=a(e,n,r)),n}var i=function(e,t){if(p(t))return e.stylize("undefined","undefined");if(d(t)){var r="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(r,"string")}return h(t)?e.stylize(""+t,"number"):l(t)?e.stylize(""+t,"boolean"):c(t)?e.stylize("null","null"):void 0}(e,t);if(i)return i;var o=Object.keys(t),b=function(e){var t={};return e.forEach((function(e,r){t[e]=!0})),t}(o);if(e.showHidden&&(o=Object.getOwnPropertyNames(t)),w(t)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return s(t);if(0===o.length){if(v(t)){var m=t.name?": "+t.name:"";return e.stylize("[Function"+m+"]","special")}if(y(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(g(t))return e.stylize(Date.prototype.toString.call(t),"date");if(w(t))return s(t)}var S,E="",A=!1,R=["{","}"];return f(t)&&(A=!0,R=["[","]"]),v(t)&&(E=" [Function"+(t.name?": "+t.name:"")+"]"),y(t)&&(E=" "+RegExp.prototype.toString.call(t)),g(t)&&(E=" "+Date.prototype.toUTCString.call(t)),w(t)&&(E=" "+s(t)),0!==o.length||A&&0!=t.length?r<0?y(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),S=A?function(e,t,r,n,i){for(var o=[],a=0,s=t.length;a<s;++a)_(t,String(a))?o.push(u(e,t,r,n,String(a),!0)):o.push("");return i.forEach((function(i){i.match(/^\d+$/)||o.push(u(e,t,r,n,i,!0))})),o}(e,t,r,b,o):o.map((function(n){return u(e,t,r,b,n,A)})),e.seen.pop(),function(e,t,r){return e.reduce((function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60?r[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+r[1]:r[0]+t+" "+e.join(", ")+" "+r[1]}(S,E,R)):R[0]+E+R[1]}function s(e){return"["+Error.prototype.toString.call(e)+"]"}function u(e,t,r,n,i,o){var s,u,f;if((f=Object.getOwnPropertyDescriptor(t,i)||{value:t[i]}).get?u=f.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):f.set&&(u=e.stylize("[Setter]","special")),_(n,i)||(s="["+i+"]"),u||(e.seen.indexOf(f.value)<0?(u=c(r)?a(e,f.value,null):a(e,f.value,r-1)).indexOf("\n")>-1&&(u=o?u.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+u.split("\n").map((function(e){return"   "+e})).join("\n")):u=e.stylize("[Circular]","special")),p(s)){if(o&&i.match(/^\d+$/))return u;(s=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(s=s.substr(1,s.length-2),s=e.stylize(s,"name")):(s=s.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),s=e.stylize(s,"string"))}return s+": "+u}function f(e){return Array.isArray(e)}function l(e){return"boolean"==typeof e}function c(e){return null===e}function h(e){return"number"==typeof e}function d(e){return"string"==typeof e}function p(e){return void 0===e}function y(e){return b(e)&&"[object RegExp]"===m(e)}function b(e){return"object"==typeof e&&null!==e}function g(e){return b(e)&&"[object Date]"===m(e)}function w(e){return b(e)&&("[object Error]"===m(e)||e instanceof Error)}function v(e){return"function"==typeof e}function m(e){return Object.prototype.toString.call(e)}wt.inspect=n,n.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},n.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},wt.types=Le,wt.types.isRegExp=y,wt.types.isDate=g,wt.types.isNativeError=w;function _(e,t){return Object.prototype.hasOwnProperty.call(e,t)}wt._extend=function(e,t){if(!t||!b(t))return e;for(var r=Object.keys(t),n=r.length;n--;)e[r[n]]=t[r[n]];return e};var S="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;wt.promisify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');if(S&&e[S]){var r;if("function"!=typeof(r=e[S]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(r,S,{value:r,enumerable:!1,writable:!1,configurable:!0}),r}function r(){for(var t,r,n=new Promise((function(e,n){t=e,r=n})),i=[],o=0;o<arguments.length;o++)i.push(arguments[o]);i.push((function(e,n){e?r(e):t(n)}));try{e.apply(this,i)}catch(a){r(a)}return n}return Object.setPrototypeOf(r,Object.getPrototypeOf(e)),S&&Object.defineProperty(r,S,{value:r,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(r,t(e))},wt.promisify.custom=S}).call(this)}).call(this,ot),N.util=C;var vt,mt={Err:{SocketClosed:"socket is closed"}},_t=_t||{};_t.Connect="connect",_t.Disconnect="disconnect",_t.Message="message",_t.Error="error",_t.Reconnecting="reconnecting",_t.Reconnect="reconnect",vt={EvType:_t};const{Err:St}=mt,{EvType:Et}=vt;for(var At=g.EventEmitter,Rt={toByteArray:function(e){var t,r,n=Pt(e),i=n[0],o=n[1],a=new Mt(function(e,t,r){return 3*(t+r)/4-r}(0,i,o)),s=0,u=o>0?i-4:i;for(r=0;r<u;r+=4)t=kt[e.charCodeAt(r)]<<18|kt[e.charCodeAt(r+1)]<<12|kt[e.charCodeAt(r+2)]<<6|kt[e.charCodeAt(r+3)],a[s++]=t>>16&255,a[s++]=t>>8&255,a[s++]=255&t;return 2===o&&(t=kt[e.charCodeAt(r)]<<2|kt[e.charCodeAt(r+1)]>>4,a[s++]=255&t),1===o&&(t=kt[e.charCodeAt(r)]<<10|kt[e.charCodeAt(r+1)]<<4|kt[e.charCodeAt(r+2)]>>2,a[s++]=t>>8&255,a[s++]=255&t),a},fromByteArray:function(e){for(var t,r=e.length,n=r%3,i=[],o=0,a=r-n;o<a;o+=16383)i.push(jt(e,o,o+16383>a?a:o+16383));return 1===n?(t=e[r-1],i.push(Tt[t>>2]+Tt[t<<4&63]+"==")):2===n&&(t=(e[r-2]<<8)+e[r-1],i.push(Tt[t>>10]+Tt[t>>4&63]+Tt[t<<2&63]+"=")),i.join("")}},Tt=[],kt=[],Mt="undefined"!=typeof Uint8Array?Uint8Array:Array,Ot="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Lt=0,Ut=Ot.length;Lt<Ut;++Lt)Tt[Lt]=Ot[Lt],kt[Ot.charCodeAt(Lt)]=Lt;function Pt(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function jt(e,t,r){for(var n,i,o=[],a=t;a<r;a+=3)n=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),o.push(Tt[(i=n)>>18&63]+Tt[i>>12&63]+Tt[i>>6&63]+Tt[63&i]);return o.join("")}kt["-".charCodeAt(0)]=62,kt["_".charCodeAt(0)]=63;var It={};function xt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Nt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Ct(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}It.read=function(e,t,r,n,i){var o,a,s=8*i-n-1,u=(1<<s)-1,f=u>>1,l=-7,c=r?i-1:0,h=r?-1:1,d=e[t+c];for(c+=h,o=d&(1<<-l)-1,d>>=-l,l+=s;l>0;o=256*o+e[t+c],c+=h,l-=8);for(a=o&(1<<-l)-1,o>>=-l,l+=n;l>0;a=256*a+e[t+c],c+=h,l-=8);if(0===o)o=1-f;else{if(o===u)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,n),o-=f}return(d?-1:1)*a*Math.pow(2,o-n)},It.write=function(e,t,r,n,i,o){var a,s,u,f=8*o-i-1,l=(1<<f)-1,c=l>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:o-1,p=n?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=l):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+c>=1?h/u:h*Math.pow(2,1-c))*u>=2&&(a++,u/=2),a+c>=l?(s=0,a=l):a+c>=1?(s=(t*u-1)*Math.pow(2,i),a+=c):(s=t*Math.pow(2,c-1)*Math.pow(2,i),a=0));i>=8;e[r+d]=255&s,d+=p,s/=256,i-=8);for(a=a<<i|s,f+=i;f>0;e[r+d]=255&a,d+=p,a/=256,f-=8);e[r+d-p]|=128*y};var Bt=y({}).Buffer,Dt=b({}).inspect,Ft=Dt&&Dt.custom||"inspect",Wt=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}var t,r;return t=e,(r=[{key:"push",value:function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length}},{key:"unshift",value:function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}},{key:"shift",value:function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(e){if(0===this.length)return"";for(var t=this.head,r=""+t.data;t=t.next;)r+=e+t.data;return r}},{key:"concat",value:function(e){if(0===this.length)return Bt.alloc(0);for(var t,r,n,i=Bt.allocUnsafe(e>>>0),o=this.head,a=0;o;)t=o.data,r=i,n=a,Bt.prototype.copy.call(t,r,n),a+=o.data.length,o=o.next;return i}},{key:"consume",value:function(e,t){var r;return e<this.head.data.length?(r=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):r=e===this.head.data.length?this.shift():t?this._getString(e):this._getBuffer(e),r}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(e){var t=this.head,r=1,n=t.data;for(e-=n.length;t=t.next;){var i=t.data,o=e>i.length?i.length:e;if(o===i.length?n+=i:n+=i.slice(0,e),0==(e-=o)){o===i.length?(++r,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=i.slice(o));break}++r}return this.length-=r,n}},{key:"_getBuffer",value:function(e){var t=Bt.allocUnsafe(e),r=this.head,n=1;for(r.data.copy(t),e-=r.data.length;r=r.next;){var i=r.data,o=e>i.length?i.length:e;if(i.copy(t,t.length-e,0,o),0==(e-=o)){o===i.length?(++n,r.next?this.head=r.next:this.head=this.tail=null):(this.head=r,r.data=i.slice(o));break}++n}return this.length-=n,t}},{key:Ft,value:function(e,t){return Dt(this,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?xt(Object(r),!0).forEach((function(t){Nt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):xt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},t,{depth:0,customInspect:!1}))}}])&&Ct(t.prototype,r),e}(),Ht={};(function(e){(function(){"use strict";function t(e,t){n(e,t),r(e)}function r(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit("close")}function n(e,t){e.emit("error",t)}Ht={destroy:function(i,o){var a=this,s=this._readableState&&this._readableState.destroyed,u=this._writableState&&this._writableState.destroyed;return s||u?(o?o(i):i&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,e.nextTick(n,this,i)):e.nextTick(n,this,i)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(i||null,(function(n){!o&&n?a._writableState?a._writableState.errorEmitted?e.nextTick(r,a):(a._writableState.errorEmitted=!0,e.nextTick(t,a,n)):e.nextTick(t,a,n):o?(e.nextTick(r,a),o(n)):e.nextTick(r,a)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,t){var r=e._readableState,n=e._writableState;r&&r.autoDestroy||n&&n.autoDestroy?e.destroy(t):e.emit("error",t)}}}).call(this)}).call(this,ot);var Kt={},Yt={};function qt(e,t,r){r||(r=Error);var n=function(e){var r,n;function i(r,n,i){return e.call(this,function(e,r,n){return"string"==typeof t?t:t(e,r,n)}(r,n,i))||this}return n=e,(r=i).prototype=Object.create(n.prototype),r.prototype.constructor=r,r.__proto__=n,i}(r);n.prototype.name=r.name,n.prototype.code=e,Yt[e]=n}function zt(e,t){if(Array.isArray(e)){var r=e.length;return e=e.map((function(e){return String(e)})),r>2?"one of ".concat(t," ").concat(e.slice(0,r-1).join(", "),", or ")+e[r-1]:2===r?"one of ".concat(t," ").concat(e[0]," or ").concat(e[1]):"of ".concat(t," ").concat(e[0])}return"of ".concat(t," ").concat(String(e))}qt("ERR_INVALID_OPT_VALUE",(function(e,t){return'The value "'+t+'" is invalid for option "'+e+'"'}),TypeError),qt("ERR_INVALID_ARG_TYPE",(function(e,t,r){var n,i,o,a;if("string"==typeof t&&("not ","not "===t.substr(0,"not ".length))?(n="must not be",t=t.replace(/^not /,"")):n="must be",o=e,(void 0===a||a>o.length)&&(a=o.length)," argument"===o.substring(a-" argument".length,a))i="The ".concat(e," ").concat(n," ").concat(zt(t,"type"));else{var s=function(e,t,r){return"number"!=typeof r&&(r=0),!(r+".".length>e.length)&&-1!==e.indexOf(".",r)}(e)?"property":"argument";i='The "'.concat(e,'" ').concat(s," ").concat(n," ").concat(zt(t,"type"))}return i+". Received type ".concat(typeof r)}),TypeError),qt("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),qt("ERR_METHOD_NOT_IMPLEMENTED",(function(e){return"The "+e+" method is not implemented"})),qt("ERR_STREAM_PREMATURE_CLOSE","Premature close"),qt("ERR_STREAM_DESTROYED",(function(e){return"Cannot call "+e+" after a stream was destroyed"})),qt("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),qt("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),qt("ERR_STREAM_WRITE_AFTER_END","write after end"),qt("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),qt("ERR_UNKNOWN_ENCODING",(function(e){return"Unknown encoding: "+e}),TypeError),qt("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),Kt.codes=Yt;var Vt=Kt.codes.ERR_INVALID_OPT_VALUE,Gt={getHighWaterMark:function(e,t,r,n){var i=function(e,t,r){return null!=e.highWaterMark?e.highWaterMark:t?e[r]:null}(t,n,r);if(null!=i){if(!isFinite(i)||Math.floor(i)!==i||i<0)throw new Vt(n?r:"highWaterMark",i);return Math.floor(i)}return e.objectMode?16:16384}},Xt={};(function(e){(function(){function t(t){try{if(!e.localStorage)return!1}catch(n){return!1}var r=e.localStorage[t];return null!=r&&"true"===String(r).toLowerCase()}Xt=function(e,r){if(t("noDeprecation"))return e;var n=!1;return function(){if(!n){if(t("throwDeprecation"))throw new Error(r);t("traceDeprecation")?console.trace(r):console.warn(r),n=!0}return e.apply(this,arguments)}}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});var Zt={},$t=y({}),Jt=$t.Buffer;function Qt(e,t){for(var r in e)t[r]=e[r]}function er(e,t,r){return Jt(e,t,r)}Jt.from&&Jt.alloc&&Jt.allocUnsafe&&Jt.allocUnsafeSlow?Zt=$t:(Qt($t,Zt),Zt.Buffer=er),er.prototype=Object.create(Jt.prototype),Qt(Jt,er),er.from=function(e,t,r){if("number"==typeof e)throw new TypeError("Argument must not be a number");return Jt(e,t,r)},er.alloc=function(e,t,r){if("number"!=typeof e)throw new TypeError("Argument must be a number");var n=Jt(e);return void 0!==t?"string"==typeof r?n.fill(t,r):n.fill(t):n.fill(0),n},er.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return Jt(e)},er.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return $t.SlowBuffer(e)};var tr=fr,rr=Kt.codes,nr=rr.ERR_METHOD_NOT_IMPLEMENTED,ir=rr.ERR_MULTIPLE_CALLBACK,or=rr.ERR_TRANSFORM_ALREADY_TRANSFORMING,ar=rr.ERR_TRANSFORM_WITH_LENGTH_0,sr=d({});function ur(e,t){var r=this._transformState;r.transforming=!1;var n=r.writecb;if(null===n)return this.emit("error",new ir);r.writechunk=null,r.writecb=null,null!=t&&this.push(t),n(e);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function fr(e){if(!(this instanceof fr))return new fr(e);sr.call(this,e),this._transformState={afterTransform:ur.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",lr)}function lr(){var e=this;"function"!=typeof this._flush||this._readableState.destroyed?cr(this,null,null):this._flush((function(t,r){cr(e,t,r)}))}function cr(e,t,r){if(t)return e.emit("error",t);if(null!=r&&e.push(r),e._writableState.length)throw new ar;if(e._transformState.transforming)throw new or;return e.push(null)}rt(fr,sr),fr.prototype.push=function(e,t){return this._transformState.needTransform=!1,sr.prototype.push.call(this,e,t)},fr.prototype._transform=function(e,t,r){r(new nr("_transform()"))},fr.prototype._write=function(e,t,r){var n=this._transformState;if(n.writecb=r,n.writechunk=e,n.writeencoding=t,!n.transforming){var i=this._readableState;(n.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},fr.prototype._read=function(e){var t=this._transformState;null===t.writechunk||t.transforming?t.needTransform=!0:(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform))},fr.prototype._destroy=function(e,t){sr.prototype._destroy.call(this,e,(function(e){t(e)}))};var hr,dr=pr;function pr(e){if(!(this instanceof pr))return new pr(e);tr.call(this,e)}rt(pr,tr),pr.prototype._transform=function(e,t,r){r(null,e)};var yr=Kt.codes,br=yr.ERR_MISSING_ARGS,gr=yr.ERR_STREAM_DESTROYED;function wr(e){if(e)throw e}function vr(e){e()}function mr(e,t){return e.pipe(t)}var _r={};(_r=_r=u({})).Stream=_r,_r.Readable=_r,_r.Writable=p({}),_r.Duplex=d({}),_r.Transform=tr,_r.PassThrough=dr,_r.finished=c({}),_r.pipeline=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n,i=function(e){return e.length?"function"!=typeof e[e.length-1]?wr:e.pop():wr}(t);if(Array.isArray(t[0])&&(t=t[0]),t.length<2)throw new br("streams");var o=t.map((function(e,r){var a=r<t.length-1;return function(e,t,r,n){n=function(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}(n);var i=!1;e.on("close",(function(){i=!0})),void 0===hr&&(hr=c({})),hr(e,{readable:t,writable:r},(function(e){if(e)return n(e);i=!0,n()}));var o=!1;return function(t){if(!i&&!o)return o=!0,function(e){return e.setHeader&&"function"==typeof e.abort}(e)?e.abort():"function"==typeof e.destroy?e.destroy():void n(t||new gr("pipe"))}}(e,a,r>0,(function(e){n||(n=e),e&&o.forEach(vr),a||(o.forEach(vr),i(n))}))}));return t.reduce(mr)};var Sr={};const{Transform:Er}=_r;function Ar(e){return(t,r,n)=>("function"==typeof t&&(n=r,r=t,t={}),"function"!=typeof r&&(r=(e,t,r)=>r(null,e)),"function"!=typeof n&&(n=null),e(t,r,n))}const Rr=Ar((e,t,r)=>{const n=new Er(e);return n._transform=t,r&&(n._flush=r),n}),Tr=Ar((e,t,r)=>{function n(i){if(!(this instanceof n))return new n(i);this.options=Object.assign({},e,i),Er.call(this,this.options),this._transform=t,r&&(this._flush=r)}return o=Er,(i=n).super_=o,i.prototype=Object.create(o.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),n;var i,o}),kr=Ar((function(e,t,r){const n=new Er(Object.assign({objectMode:!0,highWaterMark:16},e));return n._transform=t,r&&(n._flush=r),n}));(Sr=Rr).ctor=Tr,Sr.obj=kr;var Mr=g.EventEmitter;function Or(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Lr(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Ur(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var Pr=y({}).Buffer,jr=b({}).inspect,Ir=jr&&jr.custom||"inspect",xr=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}var t,r;return t=e,(r=[{key:"push",value:function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length}},{key:"unshift",value:function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}},{key:"shift",value:function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(e){if(0===this.length)return"";for(var t=this.head,r=""+t.data;t=t.next;)r+=e+t.data;return r}},{key:"concat",value:function(e){if(0===this.length)return Pr.alloc(0);for(var t,r,n,i=Pr.allocUnsafe(e>>>0),o=this.head,a=0;o;)t=o.data,r=i,n=a,Pr.prototype.copy.call(t,r,n),a+=o.data.length,o=o.next;return i}},{key:"consume",value:function(e,t){var r;return e<this.head.data.length?(r=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):r=e===this.head.data.length?this.shift():t?this._getString(e):this._getBuffer(e),r}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(e){var t=this.head,r=1,n=t.data;for(e-=n.length;t=t.next;){var i=t.data,o=e>i.length?i.length:e;if(o===i.length?n+=i:n+=i.slice(0,e),0==(e-=o)){o===i.length?(++r,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=i.slice(o));break}++r}return this.length-=r,n}},{key:"_getBuffer",value:function(e){var t=Pr.allocUnsafe(e),r=this.head,n=1;for(r.data.copy(t),e-=r.data.length;r=r.next;){var i=r.data,o=e>i.length?i.length:e;if(i.copy(t,t.length-e,0,o),0==(e-=o)){o===i.length?(++n,r.next?this.head=r.next:this.head=this.tail=null):(this.head=r,r.data=i.slice(o));break}++n}return this.length-=n,t}},{key:Ir,value:function(e,t){return jr(this,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Or(Object(r),!0).forEach((function(t){Lr(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Or(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},t,{depth:0,customInspect:!1}))}}])&&Ur(t.prototype,r),e}(),Nr={};(function(e){(function(){"use strict";function t(e,t){n(e,t),r(e)}function r(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit("close")}function n(e,t){e.emit("error",t)}Nr={destroy:function(i,o){var a=this,s=this._readableState&&this._readableState.destroyed,u=this._writableState&&this._writableState.destroyed;return s||u?(o?o(i):i&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,e.nextTick(n,this,i)):e.nextTick(n,this,i)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(i||null,(function(n){!o&&n?a._writableState?a._writableState.errorEmitted?e.nextTick(r,a):(a._writableState.errorEmitted=!0,e.nextTick(t,a,n)):e.nextTick(t,a,n):o?(e.nextTick(r,a),o(n)):e.nextTick(r,a)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,t){var r=e._readableState,n=e._writableState;r&&r.autoDestroy||n&&n.autoDestroy?e.destroy(t):e.emit("error",t)}}}).call(this)}).call(this,ot);var Cr={},Br={};function Dr(e,t,r){r||(r=Error);var n=function(e){var r,n;function i(r,n,i){return e.call(this,function(e,r,n){return"string"==typeof t?t:t(e,r,n)}(r,n,i))||this}return n=e,(r=i).prototype=Object.create(n.prototype),r.prototype.constructor=r,r.__proto__=n,i}(r);n.prototype.name=r.name,n.prototype.code=e,Br[e]=n}function Fr(e,t){if(Array.isArray(e)){var r=e.length;return e=e.map((function(e){return String(e)})),r>2?"one of ".concat(t," ").concat(e.slice(0,r-1).join(", "),", or ")+e[r-1]:2===r?"one of ".concat(t," ").concat(e[0]," or ").concat(e[1]):"of ".concat(t," ").concat(e[0])}return"of ".concat(t," ").concat(String(e))}Dr("ERR_INVALID_OPT_VALUE",(function(e,t){return'The value "'+t+'" is invalid for option "'+e+'"'}),TypeError),Dr("ERR_INVALID_ARG_TYPE",(function(e,t,r){var n,i,o,a;if("string"==typeof t&&("not ","not "===t.substr(0,"not ".length))?(n="must not be",t=t.replace(/^not /,"")):n="must be",o=e,(void 0===a||a>o.length)&&(a=o.length)," argument"===o.substring(a-" argument".length,a))i="The ".concat(e," ").concat(n," ").concat(Fr(t,"type"));else{var s=function(e,t,r){return"number"!=typeof r&&(r=0),!(r+".".length>e.length)&&-1!==e.indexOf(".",r)}(e)?"property":"argument";i='The "'.concat(e,'" ').concat(s," ").concat(n," ").concat(Fr(t,"type"))}return i+". Received type ".concat(typeof r)}),TypeError),Dr("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),Dr("ERR_METHOD_NOT_IMPLEMENTED",(function(e){return"The "+e+" method is not implemented"})),Dr("ERR_STREAM_PREMATURE_CLOSE","Premature close"),Dr("ERR_STREAM_DESTROYED",(function(e){return"Cannot call "+e+" after a stream was destroyed"})),Dr("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),Dr("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),Dr("ERR_STREAM_WRITE_AFTER_END","write after end"),Dr("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),Dr("ERR_UNKNOWN_ENCODING",(function(e){return"Unknown encoding: "+e}),TypeError),Dr("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),Cr.codes=Br;var Wr=Cr.codes.ERR_INVALID_OPT_VALUE,Hr={getHighWaterMark:function(e,t,r,n){var i=function(e,t,r){return null!=e.highWaterMark?e.highWaterMark:t?e[r]:null}(t,n,r);if(null!=i){if(!isFinite(i)||Math.floor(i)!==i||i<0)throw new Wr(n?r:"highWaterMark",i);return Math.floor(i)}return e.objectMode?16:16384}},Kr=$r,Yr=Cr.codes,qr=Yr.ERR_METHOD_NOT_IMPLEMENTED,zr=Yr.ERR_MULTIPLE_CALLBACK,Vr=Yr.ERR_TRANSFORM_ALREADY_TRANSFORMING,Gr=Yr.ERR_TRANSFORM_WITH_LENGTH_0,Xr=a({});function Zr(e,t){var r=this._transformState;r.transforming=!1;var n=r.writecb;if(null===n)return this.emit("error",new zr);r.writechunk=null,r.writecb=null,null!=t&&this.push(t),n(e);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function $r(e){if(!(this instanceof $r))return new $r(e);Xr.call(this,e),this._transformState={afterTransform:Zr.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",Jr)}function Jr(){var e=this;"function"!=typeof this._flush||this._readableState.destroyed?Qr(this,null,null):this._flush((function(t,r){Qr(e,t,r)}))}function Qr(e,t,r){if(t)return e.emit("error",t);if(null!=r&&e.push(r),e._writableState.length)throw new Gr;if(e._transformState.transforming)throw new Vr;return e.push(null)}rt($r,Xr),$r.prototype.push=function(e,t){return this._transformState.needTransform=!1,Xr.prototype.push.call(this,e,t)},$r.prototype._transform=function(e,t,r){r(new qr("_transform()"))},$r.prototype._write=function(e,t,r){var n=this._transformState;if(n.writecb=r,n.writechunk=e,n.writeencoding=t,!n.transforming){var i=this._readableState;(n.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},$r.prototype._read=function(e){var t=this._transformState;null===t.writechunk||t.transforming?t.needTransform=!0:(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform))},$r.prototype._destroy=function(e,t){Xr.prototype._destroy.call(this,e,(function(e){t(e)}))};var en,tn=rn;function rn(e){if(!(this instanceof rn))return new rn(e);Kr.call(this,e)}rt(rn,Kr),rn.prototype._transform=function(e,t,r){r(null,e)};var nn=Cr.codes,on=nn.ERR_MISSING_ARGS,an=nn.ERR_STREAM_DESTROYED;function sn(e){if(e)throw e}function un(e){e()}function fn(e,t){return e.pipe(t)}var ln={};(ln=ln=r({})).Stream=ln,ln.Readable=ln,ln.Writable=s({}),ln.Duplex=a({}),ln.Transform=Kr,ln.PassThrough=tn,ln.finished=o({}),ln.pipeline=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n,i=function(e){return e.length?"function"!=typeof e[e.length-1]?sn:e.pop():sn}(t);if(Array.isArray(t[0])&&(t=t[0]),t.length<2)throw new on("streams");var a=t.map((function(e,r){var s=r<t.length-1;return function(e,t,r,n){n=function(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}(n);var i=!1;e.on("close",(function(){i=!0})),void 0===en&&(en=o({})),en(e,{readable:t,writable:r},(function(e){if(e)return n(e);i=!0,n()}));var a=!1;return function(t){if(!i&&!a)return a=!0,function(e){return e.setHeader&&"function"==typeof e.abort}(e)?e.abort():"function"==typeof e.destroy?e.destroy():void n(t||new an("pipe"))}}(e,s,r>0,(function(e){n||(n=e),e&&a.forEach(un),s||(a.forEach(un),i(n))}))}));return t.reduce(fn)};const{Transform:cn}=ln,{StringDecoder:hn}=h({}),dn=Symbol("last"),pn=Symbol("decoder");function yn(e,t,r){var n;if(this.overflow){if(1===(n=this[pn].write(e).split(this.matcher)).length)return r();n.shift(),this.overflow=!1}else this[dn]+=this[pn].write(e),n=this[dn].split(this.matcher);this[dn]=n.pop();for(var i=0;i<n.length;i++)try{gn(this,this.mapper(n[i]))}catch(o){return r(o)}if(this.overflow=this[dn].length>this.maxLength,this.overflow&&!this.skipOverflow)return r(new Error("maximum buffer reached"));r()}function bn(e){if(this[dn]+=this[pn].end(),this[dn])try{gn(this,this.mapper(this[dn]))}catch(t){return e(t)}e()}function gn(e,t){void 0!==t&&e.push(t)}function wn(e){return e}var vn={EOL:"\n"};function mn(e,t){var r=[],n=[];return null==t&&(t=function(e,t){return r[0]===t?"[Circular ~]":"[Circular ~."+n.slice(0,r.indexOf(t)).join(".")+"]"}),function(i,o){if(r.length>0){var a=r.indexOf(this);~a?r.splice(a+1):r.push(this),~a?n.splice(a,1/0,i):n.push(i),~r.indexOf(o)&&(o=t.call(this,i,o))}else r.push(o);return null==e?o:e.call(this,i,o)}}var _n={};const{EOL:Sn}=vn;_n.parse=e=>((e=e||{}).strict=!1!==e.strict,function(e,t,r){switch(e=e||/\r?\n/,t=t||wn,r=r||{},arguments.length){case 1:"function"==typeof e?(t=e,e=/\r?\n/):"object"!=typeof e||e instanceof RegExp||(r=e,e=/\r?\n/);break;case 2:"function"==typeof e?(r=t,t=e,e=/\r?\n/):"object"==typeof t&&(r=t,t=wn)}(r=Object.assign({},r)).transform=yn,r.flush=bn,r.readableObjectMode=!0;const n=new cn(r);return n[dn]="",n[pn]=new hn("utf8"),n.matcher=e,n.mapper=t,n.maxLength=r.maxLength,n.skipOverflow=r.skipOverflow,n.overflow=!1,n}((function(t){try{if(t)return JSON.parse(t)}catch(kn){e.strict&&this.emit("error",new Error("Could not parse row "+t.slice(0,50)+"..."))}}),e));const{Err:En}=mt,{EvType:An}=vt;(function(e){(function(){var t=null;"undefined"!=typeof WebSocket?t=WebSocket:"undefined"!=typeof MozWebSocket?t=MozWebSocket:void 0!==e?t=e.WebSocket||e.MozWebSocket:"undefined"!=typeof window?t=window.WebSocket||window.MozWebSocket:"undefined"!=typeof self&&(t=self.WebSocket||self.MozWebSocket),t}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});const{Err:Rn}=mt,{EvType:Tn}=vt}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
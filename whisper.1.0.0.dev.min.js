!function(){var e,t=function(e){var t;return function(r){return t||e(t={exports:{},parent:r},t.exports),t.exports}},r=t((function(e,t){(function(t,r){(function(){"use strict";var o;e.exports=M,M.ReadableState=k,b.EventEmitter;var s,u=function(e,t){return e.listeners(t).length},f=y({}).Buffer,l=r.Uint8Array||function(){},c=g({});s=c&&c.debuglog?c.debuglog("stream"):function(){};var d,p,w,v=Nr.getHighWaterMark,m=Ur.codes,_=m.ERR_INVALID_ARG_TYPE,S=m.ERR_STREAM_PUSH_AFTER_EOF,E=m.ERR_METHOD_NOT_IMPLEMENTED,A=m.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;Qe(M,Sr);var R=Lr.errorOrDestroy,T=["error","close","destroy","pause","resume"];function k(e,t,r){o=o||a({}),e=e||{},"boolean"!=typeof r&&(r=t instanceof o),this.objectMode=!!e.objectMode,r&&(this.objectMode=this.objectMode||!!e.readableObjectMode),this.highWaterMark=v(this,e,"readableHighWaterMark",r),this.buffer=new Or,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(d||(d=h({}).StringDecoder),this.decoder=new d(e.encoding),this.encoding=e.encoding)}function M(e){if(o=o||a({}),!(this instanceof M))return new M(e);var t=this instanceof o;this._readableState=new k(e,this,t),this.readable=!0,e&&("function"==typeof e.read&&(this._read=e.read),"function"==typeof e.destroy&&(this._destroy=e.destroy)),Sr.call(this)}function O(e,t,r,n,i){s("readableAddChunk",t);var o,a=e._readableState;if(null===t)a.reading=!1,function(e,t){if(s("onEofChunk"),!t.ended){if(t.decoder){var r=t.decoder.end();r&&r.length&&(t.buffer.push(r),t.length+=t.objectMode?1:r.length)}t.ended=!0,t.sync?P(e):(t.needReadable=!1,t.emittedReadable||(t.emittedReadable=!0,I(e)))}}(e,a);else if(i||(o=function(e,t){var r,n;return n=t,f.isBuffer(n)||n instanceof l||"string"==typeof t||void 0===t||e.objectMode||(r=new _("chunk",["string","Buffer","Uint8Array"],t)),r}(a,t)),o)R(e,o);else if(a.objectMode||t&&t.length>0)if("string"==typeof t||a.objectMode||Object.getPrototypeOf(t)===f.prototype||(t=function(e){return f.from(e)}(t)),n)a.endEmitted?R(e,new A):L(e,a,t,!0);else if(a.ended)R(e,new S);else{if(a.destroyed)return!1;a.reading=!1,a.decoder&&!r?(t=a.decoder.write(t),a.objectMode||0!==t.length?L(e,a,t,!1):j(e,a)):L(e,a,t,!1)}else n||(a.reading=!1,j(e,a));return!a.ended&&(a.length<a.highWaterMark||0===a.length)}function L(e,t,r,n){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit("data",r)):(t.length+=t.objectMode?1:r.length,n?t.buffer.unshift(r):t.buffer.push(r),t.needReadable&&P(e)),j(e,t)}Object.defineProperty(M.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),M.prototype.destroy=Lr.destroy,M.prototype._undestroy=Lr.undestroy,M.prototype._destroy=function(e,t){t(e)},M.prototype.push=function(e,t){var r,n=this._readableState;return n.objectMode?r=!0:"string"==typeof e&&((t=t||n.defaultEncoding)!==n.encoding&&(e=f.from(e,t),t=""),r=!0),O(this,e,t,!1,r)},M.prototype.unshift=function(e){return O(this,e,null,!0,!1)},M.prototype.isPaused=function(){return!1===this._readableState.flowing},M.prototype.setEncoding=function(e){d||(d=h({}).StringDecoder);var t=new d(e);this._readableState.decoder=t,this._readableState.encoding=this._readableState.decoder.encoding;for(var r=this._readableState.buffer.head,n="";null!==r;)n+=t.write(r.data),r=r.next;return this._readableState.buffer.clear(),""!==n&&this._readableState.buffer.push(n),this._readableState.length=n.length,this};function U(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=1073741824?e=1073741824:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function P(e){var r=e._readableState;s("emitReadable",r.needReadable,r.emittedReadable),r.needReadable=!1,r.emittedReadable||(s("emitReadable",r.flowing),r.emittedReadable=!0,t.nextTick(I,e))}function I(e){var t=e._readableState;s("emitReadable_",t.destroyed,t.length,t.ended),t.destroyed||!t.length&&!t.ended||(e.emit("readable"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,D(e)}function j(e,r){r.readingMore||(r.readingMore=!0,t.nextTick(x,e,r))}function x(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var r=t.length;if(s("maybeReadMore read 0"),e.read(0),r===t.length)break}t.readingMore=!1}function N(e){var t=e._readableState;t.readableListening=e.listenerCount("readable")>0,t.resumeScheduled&&!t.paused?t.flowing=!0:e.listenerCount("data")>0&&e.resume()}function C(e){s("readable nexttick read 0"),e.read(0)}function B(e,t){s("resume",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit("resume"),D(e),t.flowing&&!t.reading&&e.read(0)}function D(e){var t=e._readableState;for(s("flow",t.flowing);t.flowing&&null!==e.read(););}function F(e,t){return 0===t.length?null:(t.objectMode?r=t.buffer.shift():!e||e>=t.length?(r=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):r=t.buffer.consume(e,t.decoder),r);var r}function H(e){var r=e._readableState;s("endReadable",r.endEmitted),r.endEmitted||(r.ended=!0,t.nextTick(W,r,e))}function W(e,t){if(s("endReadableNT",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,t.readable=!1,t.emit("end"),e.autoDestroy)){var r=t._writableState;(!r||r.autoDestroy&&r.finished)&&t.destroy()}}function K(e,t){for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}M.prototype.read=function(e){s("read",e),e=parseInt(e,10);var t=this._readableState,r=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0!==t.highWaterMark?t.length>=t.highWaterMark:t.length>0)||t.ended))return s("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?H(this):P(this),null;if(0===(e=U(e,t))&&t.ended)return 0===t.length&&H(this),null;var n,i=t.needReadable;return s("need readable",i),(0===t.length||t.length-e<t.highWaterMark)&&s("length less than watermark",i=!0),t.ended||t.reading?s("reading or ended",i=!1):i&&(s("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=U(r,t))),null===(n=e>0?F(e,t):null)?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(t.ended||(t.needReadable=!0),r!==e&&t.ended&&H(this)),null!==n&&this.emit("data",n),n},M.prototype._read=function(e){R(this,new E("_read()"))},M.prototype.pipe=function(e,r){var n=this,i=this._readableState;switch(i.pipesCount){case 0:i.pipes=e;break;case 1:i.pipes=[i.pipes,e];break;default:i.pipes.push(e)}i.pipesCount+=1,s("pipe count=%d opts=%j",i.pipesCount,r);var o=r&&!1===r.end||e===t.stdout||e===t.stderr?y:a;function a(){s("onend"),e.end()}i.endEmitted?t.nextTick(o):n.once("end",o),e.on("unpipe",(function t(r,o){s("onunpipe"),r===n&&o&&!1===o.hasUnpiped&&(o.hasUnpiped=!0,s("cleanup"),e.removeListener("close",d),e.removeListener("finish",p),e.removeListener("drain",f),e.removeListener("error",h),e.removeListener("unpipe",t),n.removeListener("end",a),n.removeListener("end",y),n.removeListener("data",c),l=!0,!i.awaitDrain||e._writableState&&!e._writableState.needDrain||f())}));var f=function(e){return function(){var t=e._readableState;s("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&u(e,"data")&&(t.flowing=!0,D(e))}}(n);e.on("drain",f);var l=!1;function c(t){s("ondata");var r=e.write(t);s("dest.write",r),!1===r&&((1===i.pipesCount&&i.pipes===e||i.pipesCount>1&&-1!==K(i.pipes,e))&&!l&&(s("false write response, pause",i.awaitDrain),i.awaitDrain++),n.pause())}function h(t){s("onerror",t),y(),e.removeListener("error",h),0===u(e,"error")&&R(e,t)}function d(){e.removeListener("finish",p),y()}function p(){s("onfinish"),e.removeListener("close",d),y()}function y(){s("unpipe"),n.unpipe(e)}return n.on("data",c),function(e,t,r){if("function"==typeof e.prependListener)return e.prependListener("error",r);e._events&&e._events.error?Array.isArray(e._events.error)?e._events.error.unshift(r):e._events.error=[r,e._events.error]:e.on("error",r)}(e,0,h),e.once("close",d),e.once("finish",p),e.emit("pipe",n),i.flowing||(s("pipe resume"),n.resume()),e},M.prototype.unpipe=function(e){var t=this._readableState,r={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes||(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,r)),this;if(!e){var n=t.pipes,i=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var o=0;o<i;o++)n[o].emit("unpipe",this,{hasUnpiped:!1});return this}var a=K(t.pipes,e);return-1===a||(t.pipes.splice(a,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,r)),this},M.prototype.on=function(e,r){var n=Sr.prototype.on.call(this,e,r),i=this._readableState;return"data"===e?(i.readableListening=this.listenerCount("readable")>0,!1!==i.flowing&&this.resume()):"readable"===e&&(i.endEmitted||i.readableListening||(i.readableListening=i.needReadable=!0,i.flowing=!1,i.emittedReadable=!1,s("on readable",i.length,i.reading),i.length?P(this):i.reading||t.nextTick(C,this))),n},M.prototype.addListener=M.prototype.on,M.prototype.removeListener=function(e,r){var n=Sr.prototype.removeListener.call(this,e,r);return"readable"===e&&t.nextTick(N,this),n},M.prototype.removeAllListeners=function(e){var r=Sr.prototype.removeAllListeners.apply(this,arguments);return"readable"!==e&&void 0!==e||t.nextTick(N,this),r},M.prototype.resume=function(){var e=this._readableState;return e.flowing||(s("resume"),e.flowing=!e.readableListening,function(e,r){r.resumeScheduled||(r.resumeScheduled=!0,t.nextTick(B,e,r))}(this,e)),e.paused=!1,this},M.prototype.pause=function(){return s("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(s("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},M.prototype.wrap=function(e){var t=this,r=this._readableState,n=!1;for(var i in e.on("end",(function(){if(s("wrapped end"),r.decoder&&!r.ended){var e=r.decoder.end();e&&e.length&&t.push(e)}t.push(null)})),e.on("data",(function(i){s("wrapped data"),r.decoder&&(i=r.decoder.write(i)),r.objectMode&&null==i||(r.objectMode||i&&i.length)&&(t.push(i)||(n=!0,e.pause()))})),e)void 0===this[i]&&"function"==typeof e[i]&&(this[i]=function(t){return function(){return e[t].apply(e,arguments)}}(i));for(var o=0;o<T.length;o++)e.on(T[o],this.emit.bind(this,T[o]));return this._read=function(t){s("wrapped _read",t),n&&(n=!1,e.resume())},this},"function"==typeof Symbol&&(M.prototype[Symbol.asyncIterator]=function(){return void 0===p&&(p=i({})),p(this)}),Object.defineProperty(M.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(M.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(M.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),M._fromList=F,Object.defineProperty(M.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),"function"==typeof Symbol&&(M.from=function(e,t){return void 0===w&&(w=n({})),w(M,e,t)})}).call(this)}).call(this,rt,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})})),n=t((function(e,t){e.exports=function(){throw new Error("Readable.from is not available in the browser")}})),i=t((function(e,t){(function(t){(function(){"use strict";var r;function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var i=o({}),a=Symbol("lastResolve"),s=Symbol("lastReject"),u=Symbol("error"),f=Symbol("ended"),l=Symbol("lastPromise"),c=Symbol("handlePromise"),h=Symbol("stream");function d(e,t){return{value:e,done:t}}function p(e){var t=e[a];if(null!==t){var r=e[h].read();null!==r&&(e[l]=null,e[a]=null,e[s]=null,t(d(r,!1)))}}var y=Object.getPrototypeOf((function(){})),g=Object.setPrototypeOf((n(r={get stream(){return this[h]},next:function(){var e=this,r=this[u];if(null!==r)return Promise.reject(r);if(this[f])return Promise.resolve(d(void 0,!0));if(this[h].destroyed)return new Promise((function(r,n){t.nextTick((function(){e[u]?n(e[u]):r(d(void 0,!0))}))}));var n,i=this[l];if(i)n=new Promise(function(e,t){return function(r,n){e.then((function(){t[f]?r(d(void 0,!0)):t[c](r,n)}),n)}}(i,this));else{var o=this[h].read();if(null!==o)return Promise.resolve(d(o,!1));n=new Promise(this[c])}return this[l]=n,n}},Symbol.asyncIterator,(function(){return this})),n(r,"return",(function(){var e=this;return new Promise((function(t,r){e[h].destroy(null,(function(e){e?r(e):t(d(void 0,!0))}))}))})),r),y);e.exports=function(e){var r,o=Object.create(g,(n(r={},h,{value:e,writable:!0}),n(r,a,{value:null,writable:!0}),n(r,s,{value:null,writable:!0}),n(r,u,{value:null,writable:!0}),n(r,f,{value:e._readableState.endEmitted,writable:!0}),n(r,c,{value:function(e,t){var r=o[h].read();r?(o[l]=null,o[a]=null,o[s]=null,e(d(r,!1))):(o[a]=e,o[s]=t)},writable:!0}),r));return o[l]=null,i(e,(function(e){if(e&&"ERR_STREAM_PREMATURE_CLOSE"!==e.code){var t=o[s];return null!==t&&(o[l]=null,o[a]=null,o[s]=null,t(e)),void(o[u]=e)}var r=o[a];null!==r&&(o[l]=null,o[a]=null,o[s]=null,r(d(void 0,!0))),o[f]=!0})),e.on("readable",function(e){t.nextTick(p,e)}.bind(null,o)),o}}).call(this)}).call(this,rt)})),o=t((function(e,t){"use strict";var r=Ur.codes.ERR_STREAM_PREMATURE_CLOSE;function n(){}e.exports=function e(t,i,o){if("function"==typeof i)return e(t,null,i);i||(i={}),o=function(e){var t=!1;return function(){if(!t){t=!0;for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];e.apply(this,n)}}}(o||n);var a=i.readable||!1!==i.readable&&t.readable,s=i.writable||!1!==i.writable&&t.writable,u=function(){t.writable||l()},f=t._writableState&&t._writableState.finished,l=function(){s=!1,f=!0,a||o.call(t)},c=t._readableState&&t._readableState.endEmitted,h=function(){a=!1,c=!0,s||o.call(t)},d=function(e){o.call(t,e)},p=function(){var e;return a&&!c?(t._readableState&&t._readableState.ended||(e=new r),o.call(t,e)):s&&!f?(t._writableState&&t._writableState.ended||(e=new r),o.call(t,e)):void 0},y=function(){t.req.on("finish",l)};return function(e){return e.setHeader&&"function"==typeof e.abort}(t)?(t.on("complete",l),t.on("abort",p),t.req?y():t.on("request",y)):s&&!t._writableState&&(t.on("end",u),t.on("close",u)),t.on("end",h),t.on("finish",l),!1!==i.error&&t.on("error",d),t.on("close",p),function(){t.removeListener("complete",l),t.removeListener("abort",p),t.removeListener("request",y),t.req&&t.req.removeListener("finish",l),t.removeListener("end",u),t.removeListener("close",u),t.removeListener("finish",l),t.removeListener("end",h),t.removeListener("error",d),t.removeListener("close",p)}}})),a=t((function(e,t){(function(t){(function(){"use strict";var n=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};e.exports=l;var i=r({}),o=s({});Qe(l,i);for(var a=n(o.prototype),u=0;u<a.length;u++){var f=a[u];l.prototype[f]||(l.prototype[f]=o.prototype[f])}function l(e){if(!(this instanceof l))return new l(e);i.call(this,e),o.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once("end",c)))}function c(){this._writableState.ended||t.nextTick(h,this)}function h(e){e.end()}Object.defineProperty(l.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(l.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(l.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(l.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}})}).call(this)}).call(this,rt)})),s=t((function(e,t){(function(t,r){(function(){"use strict";function n(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,r){var n=e.entry;for(e.entry=null;n;){var i=n.callback;t.pendingcb--,i(void 0),n=n.next}t.corkedRequestsFree.next=e}(t,e)}}var i;e.exports=A,A.WritableState=E;var o,s={deprecate:Kt},u=y({}).Buffer,f=r.Uint8Array||function(){},l=Nr.getHighWaterMark,c=Ur.codes,h=c.ERR_INVALID_ARG_TYPE,d=c.ERR_METHOD_NOT_IMPLEMENTED,p=c.ERR_MULTIPLE_CALLBACK,g=c.ERR_STREAM_CANNOT_PIPE,b=c.ERR_STREAM_DESTROYED,w=c.ERR_STREAM_NULL_VALUES,v=c.ERR_STREAM_WRITE_AFTER_END,m=c.ERR_UNKNOWN_ENCODING,_=Lr.errorOrDestroy;function S(){}function E(e,r,o){i=i||a({}),e=e||{},"boolean"!=typeof o&&(o=r instanceof i),this.objectMode=!!e.objectMode,o&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=l(this,e,"writableHighWaterMark",o),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var s=!1===e.decodeStrings;this.decodeStrings=!s,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,r){var n=e._writableState,i=n.sync,o=n.writecb;if("function"!=typeof o)throw new p;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(n),r)!function(e,r,n,i,o){--r.pendingcb,n?(t.nextTick(o,i),t.nextTick(L,e,r),e._writableState.errorEmitted=!0,_(e,i)):(o(i),e._writableState.errorEmitted=!0,_(e,i),L(e,r))}(e,n,i,r,o);else{var a=M(n)||e.destroyed;a||n.corked||n.bufferProcessing||!n.bufferedRequest||k(e,n),i?t.nextTick(T,e,n,a,o):T(e,n,a,o)}}(r,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new n(this)}function A(e){var t=this instanceof(i=i||a({}));if(!t&&!o.call(A,this))return new A(e);this._writableState=new E(e,this,t),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final)),Sr.call(this)}function R(e,t,r,n,i,o,a){t.writelen=n,t.writecb=a,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new b("write")):r?e._writev(i,t.onwrite):e._write(i,o,t.onwrite),t.sync=!1}function T(e,t,r,n){r||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,n(),L(e,t)}function k(e,t){t.bufferProcessing=!0;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var i=t.bufferedRequestCount,o=new Array(i),a=t.corkedRequestsFree;a.entry=r;for(var s=0,u=!0;r;)o[s]=r,r.isBuf||(u=!1),r=r.next,s+=1;o.allBuffers=u,R(e,t,!0,t.length,o,"",a.finish),t.pendingcb++,t.lastBufferedRequest=null,a.next?(t.corkedRequestsFree=a.next,a.next=null):t.corkedRequestsFree=new n(t),t.bufferedRequestCount=0}else{for(;r;){var f=r.chunk,l=r.encoding,c=r.callback;if(R(e,t,!1,t.objectMode?1:f.length,f,l,c),r=r.next,t.bufferedRequestCount--,t.writing)break}null===r&&(t.lastBufferedRequest=null)}t.bufferedRequest=r,t.bufferProcessing=!1}function M(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function O(e,t){e._final((function(r){t.pendingcb--,r&&_(e,r),t.prefinished=!0,e.emit("prefinish"),L(e,t)}))}function L(e,r){var n=M(r);if(n&&(function(e,r){r.prefinished||r.finalCalled||("function"!=typeof e._final||r.destroyed?(r.prefinished=!0,e.emit("prefinish")):(r.pendingcb++,r.finalCalled=!0,t.nextTick(O,e,r)))}(e,r),0===r.pendingcb&&(r.finished=!0,e.emit("finish"),r.autoDestroy))){var i=e._readableState;(!i||i.autoDestroy&&i.endEmitted)&&e.destroy()}return n}Qe(A,Sr),E.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(E.prototype,"buffer",{get:s.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(o=Function.prototype[Symbol.hasInstance],Object.defineProperty(A,Symbol.hasInstance,{value:function(e){return!!o.call(this,e)||this===A&&e&&e._writableState instanceof E}})):o=function(e){return e instanceof this},A.prototype.pipe=function(){_(this,new g)},A.prototype.write=function(e,r,n){var i,o=this._writableState,a=!1,s=!o.objectMode&&(i=e,u.isBuffer(i)||i instanceof f);return s&&!u.isBuffer(e)&&(e=function(e){return u.from(e)}(e)),"function"==typeof r&&(n=r,r=null),s?r="buffer":r||(r=o.defaultEncoding),"function"!=typeof n&&(n=S),o.ending?function(e,r){var n=new v;_(e,n),t.nextTick(r,n)}(this,n):(s||function(e,r,n,i){var o;return null===n?o=new w:"string"==typeof n||r.objectMode||(o=new h("chunk",["string","Buffer"],n)),!o||(_(e,o),t.nextTick(i,o),!1)}(this,o,e,n))&&(o.pendingcb++,a=function(e,t,r,n,i,o){if(!r){var a=function(e,t,r){return e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=u.from(t,r)),t}(t,n,i);n!==a&&(r=!0,i="buffer",n=a)}var s=t.objectMode?1:n.length;t.length+=s;var f=t.length<t.highWaterMark;if(f||(t.needDrain=!0),t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:n,encoding:i,isBuf:r,callback:o,next:null},l?l.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else R(e,t,!1,s,n,i,o);return f}(this,o,s,e,r,n)),a},A.prototype.cork=function(){this._writableState.corked++},A.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||k(this,e))},A.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new m(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(A.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(A.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),A.prototype._write=function(e,t,r){r(new d("_write()"))},A.prototype._writev=null,A.prototype.end=function(e,r,n){var i=this._writableState;return"function"==typeof e?(n=e,e=null,r=null):"function"==typeof r&&(n=r,r=null),null!=e&&this.write(e,r),i.corked&&(i.corked=1,this.uncork()),i.ending||function(e,r,n){r.ending=!0,L(e,r),n&&(r.finished?t.nextTick(n):e.once("finish",n)),r.ended=!0,e.writable=!1}(this,i,n),this},Object.defineProperty(A.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(A.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),A.prototype.destroy=Lr.destroy,A.prototype._undestroy=Lr.undestroy,A.prototype._destroy=function(e,t){t(e)}}).call(this)}).call(this,rt,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})})),u=t((function(e,t){(function(t,r){(function(){"use strict";var n;e.exports=M,M.ReadableState=k,b.EventEmitter;var i,o=function(e,t){return e.listeners(t).length},a=y({}).Buffer,s=r.Uint8Array||function(){},u=g({});i=u&&u.debuglog?u.debuglog("stream"):function(){};var c,p,w,v=Wt.getHighWaterMark,m=Ct.codes,_=m.ERR_INVALID_ARG_TYPE,S=m.ERR_STREAM_PUSH_AFTER_EOF,E=m.ERR_METHOD_NOT_IMPLEMENTED,A=m.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;Qe(M,wt);var R=Nt.errorOrDestroy,T=["error","close","destroy","pause","resume"];function k(e,t,r){n=n||d({}),e=e||{},"boolean"!=typeof r&&(r=t instanceof n),this.objectMode=!!e.objectMode,r&&(this.objectMode=this.objectMode||!!e.readableObjectMode),this.highWaterMark=v(this,e,"readableHighWaterMark",r),this.buffer=new xt,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(c||(c=h({}).StringDecoder),this.decoder=new c(e.encoding),this.encoding=e.encoding)}function M(e){if(n=n||d({}),!(this instanceof M))return new M(e);var t=this instanceof n;this._readableState=new k(e,this,t),this.readable=!0,e&&("function"==typeof e.read&&(this._read=e.read),"function"==typeof e.destroy&&(this._destroy=e.destroy)),wt.call(this)}function O(e,t,r,n,o){i("readableAddChunk",t);var u,f=e._readableState;if(null===t)f.reading=!1,function(e,t){if(i("onEofChunk"),!t.ended){if(t.decoder){var r=t.decoder.end();r&&r.length&&(t.buffer.push(r),t.length+=t.objectMode?1:r.length)}t.ended=!0,t.sync?P(e):(t.needReadable=!1,t.emittedReadable||(t.emittedReadable=!0,I(e)))}}(e,f);else if(o||(u=function(e,t){var r,n;return n=t,a.isBuffer(n)||n instanceof s||"string"==typeof t||void 0===t||e.objectMode||(r=new _("chunk",["string","Buffer","Uint8Array"],t)),r}(f,t)),u)R(e,u);else if(f.objectMode||t&&t.length>0)if("string"==typeof t||f.objectMode||Object.getPrototypeOf(t)===a.prototype||(t=function(e){return a.from(e)}(t)),n)f.endEmitted?R(e,new A):L(e,f,t,!0);else if(f.ended)R(e,new S);else{if(f.destroyed)return!1;f.reading=!1,f.decoder&&!r?(t=f.decoder.write(t),f.objectMode||0!==t.length?L(e,f,t,!1):j(e,f)):L(e,f,t,!1)}else n||(f.reading=!1,j(e,f));return!f.ended&&(f.length<f.highWaterMark||0===f.length)}function L(e,t,r,n){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit("data",r)):(t.length+=t.objectMode?1:r.length,n?t.buffer.unshift(r):t.buffer.push(r),t.needReadable&&P(e)),j(e,t)}Object.defineProperty(M.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),M.prototype.destroy=Nt.destroy,M.prototype._undestroy=Nt.undestroy,M.prototype._destroy=function(e,t){t(e)},M.prototype.push=function(e,t){var r,n=this._readableState;return n.objectMode?r=!0:"string"==typeof e&&((t=t||n.defaultEncoding)!==n.encoding&&(e=a.from(e,t),t=""),r=!0),O(this,e,t,!1,r)},M.prototype.unshift=function(e){return O(this,e,null,!0,!1)},M.prototype.isPaused=function(){return!1===this._readableState.flowing},M.prototype.setEncoding=function(e){c||(c=h({}).StringDecoder);var t=new c(e);this._readableState.decoder=t,this._readableState.encoding=this._readableState.decoder.encoding;for(var r=this._readableState.buffer.head,n="";null!==r;)n+=t.write(r.data),r=r.next;return this._readableState.buffer.clear(),""!==n&&this._readableState.buffer.push(n),this._readableState.length=n.length,this};function U(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=1073741824?e=1073741824:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function P(e){var r=e._readableState;i("emitReadable",r.needReadable,r.emittedReadable),r.needReadable=!1,r.emittedReadable||(i("emitReadable",r.flowing),r.emittedReadable=!0,t.nextTick(I,e))}function I(e){var t=e._readableState;i("emitReadable_",t.destroyed,t.length,t.ended),t.destroyed||!t.length&&!t.ended||(e.emit("readable"),t.emittedReadable=!1),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,D(e)}function j(e,r){r.readingMore||(r.readingMore=!0,t.nextTick(x,e,r))}function x(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var r=t.length;if(i("maybeReadMore read 0"),e.read(0),r===t.length)break}t.readingMore=!1}function N(e){var t=e._readableState;t.readableListening=e.listenerCount("readable")>0,t.resumeScheduled&&!t.paused?t.flowing=!0:e.listenerCount("data")>0&&e.resume()}function C(e){i("readable nexttick read 0"),e.read(0)}function B(e,t){i("resume",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit("resume"),D(e),t.flowing&&!t.reading&&e.read(0)}function D(e){var t=e._readableState;for(i("flow",t.flowing);t.flowing&&null!==e.read(););}function F(e,t){return 0===t.length?null:(t.objectMode?r=t.buffer.shift():!e||e>=t.length?(r=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):r=t.buffer.consume(e,t.decoder),r);var r}function H(e){var r=e._readableState;i("endReadable",r.endEmitted),r.endEmitted||(r.ended=!0,t.nextTick(W,r,e))}function W(e,t){if(i("endReadableNT",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,t.readable=!1,t.emit("end"),e.autoDestroy)){var r=t._writableState;(!r||r.autoDestroy&&r.finished)&&t.destroy()}}function K(e,t){for(var r=0,n=e.length;r<n;r++)if(e[r]===t)return r;return-1}M.prototype.read=function(e){i("read",e),e=parseInt(e,10);var t=this._readableState,r=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0!==t.highWaterMark?t.length>=t.highWaterMark:t.length>0)||t.ended))return i("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?H(this):P(this),null;if(0===(e=U(e,t))&&t.ended)return 0===t.length&&H(this),null;var n,o=t.needReadable;return i("need readable",o),(0===t.length||t.length-e<t.highWaterMark)&&i("length less than watermark",o=!0),t.ended||t.reading?i("reading or ended",o=!1):o&&(i("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=U(r,t))),null===(n=e>0?F(e,t):null)?(t.needReadable=t.length<=t.highWaterMark,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(t.ended||(t.needReadable=!0),r!==e&&t.ended&&H(this)),null!==n&&this.emit("data",n),n},M.prototype._read=function(e){R(this,new E("_read()"))},M.prototype.pipe=function(e,r){var n=this,a=this._readableState;switch(a.pipesCount){case 0:a.pipes=e;break;case 1:a.pipes=[a.pipes,e];break;default:a.pipes.push(e)}a.pipesCount+=1,i("pipe count=%d opts=%j",a.pipesCount,r);var s=r&&!1===r.end||e===t.stdout||e===t.stderr?y:u;function u(){i("onend"),e.end()}a.endEmitted?t.nextTick(s):n.once("end",s),e.on("unpipe",(function t(r,o){i("onunpipe"),r===n&&o&&!1===o.hasUnpiped&&(o.hasUnpiped=!0,i("cleanup"),e.removeListener("close",d),e.removeListener("finish",p),e.removeListener("drain",f),e.removeListener("error",h),e.removeListener("unpipe",t),n.removeListener("end",u),n.removeListener("end",y),n.removeListener("data",c),l=!0,!a.awaitDrain||e._writableState&&!e._writableState.needDrain||f())}));var f=function(e){return function(){var t=e._readableState;i("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&o(e,"data")&&(t.flowing=!0,D(e))}}(n);e.on("drain",f);var l=!1;function c(t){i("ondata");var r=e.write(t);i("dest.write",r),!1===r&&((1===a.pipesCount&&a.pipes===e||a.pipesCount>1&&-1!==K(a.pipes,e))&&!l&&(i("false write response, pause",a.awaitDrain),a.awaitDrain++),n.pause())}function h(t){i("onerror",t),y(),e.removeListener("error",h),0===o(e,"error")&&R(e,t)}function d(){e.removeListener("finish",p),y()}function p(){i("onfinish"),e.removeListener("close",d),y()}function y(){i("unpipe"),n.unpipe(e)}return n.on("data",c),function(e,t,r){if("function"==typeof e.prependListener)return e.prependListener("error",r);e._events&&e._events.error?Array.isArray(e._events.error)?e._events.error.unshift(r):e._events.error=[r,e._events.error]:e.on("error",r)}(e,0,h),e.once("close",d),e.once("finish",p),e.emit("pipe",n),a.flowing||(i("pipe resume"),n.resume()),e},M.prototype.unpipe=function(e){var t=this._readableState,r={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes||(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,r)),this;if(!e){var n=t.pipes,i=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var o=0;o<i;o++)n[o].emit("unpipe",this,{hasUnpiped:!1});return this}var a=K(t.pipes,e);return-1===a||(t.pipes.splice(a,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,r)),this},M.prototype.on=function(e,r){var n=wt.prototype.on.call(this,e,r),o=this._readableState;return"data"===e?(o.readableListening=this.listenerCount("readable")>0,!1!==o.flowing&&this.resume()):"readable"===e&&(o.endEmitted||o.readableListening||(o.readableListening=o.needReadable=!0,o.flowing=!1,o.emittedReadable=!1,i("on readable",o.length,o.reading),o.length?P(this):o.reading||t.nextTick(C,this))),n},M.prototype.addListener=M.prototype.on,M.prototype.removeListener=function(e,r){var n=wt.prototype.removeListener.call(this,e,r);return"readable"===e&&t.nextTick(N,this),n},M.prototype.removeAllListeners=function(e){var r=wt.prototype.removeAllListeners.apply(this,arguments);return"readable"!==e&&void 0!==e||t.nextTick(N,this),r},M.prototype.resume=function(){var e=this._readableState;return e.flowing||(i("resume"),e.flowing=!e.readableListening,function(e,r){r.resumeScheduled||(r.resumeScheduled=!0,t.nextTick(B,e,r))}(this,e)),e.paused=!1,this},M.prototype.pause=function(){return i("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(i("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},M.prototype.wrap=function(e){var t=this,r=this._readableState,n=!1;for(var o in e.on("end",(function(){if(i("wrapped end"),r.decoder&&!r.ended){var e=r.decoder.end();e&&e.length&&t.push(e)}t.push(null)})),e.on("data",(function(o){i("wrapped data"),r.decoder&&(o=r.decoder.write(o)),r.objectMode&&null==o||(r.objectMode||o&&o.length)&&(t.push(o)||(n=!0,e.pause()))})),e)void 0===this[o]&&"function"==typeof e[o]&&(this[o]=function(t){return function(){return e[t].apply(e,arguments)}}(o));for(var a=0;a<T.length;a++)e.on(T[a],this.emit.bind(this,T[a]));return this._read=function(t){i("wrapped _read",t),n&&(n=!1,e.resume())},this},"function"==typeof Symbol&&(M.prototype[Symbol.asyncIterator]=function(){return void 0===p&&(p=l({})),p(this)}),Object.defineProperty(M.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(M.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(M.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),M._fromList=F,Object.defineProperty(M.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),"function"==typeof Symbol&&(M.from=function(e,t){return void 0===w&&(w=f({})),w(M,e,t)})}).call(this)}).call(this,rt,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})})),f=t((function(e,t){e.exports=function(){throw new Error("Readable.from is not available in the browser")}})),l=t((function(e,t){(function(t){(function(){"use strict";var r;function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var i=c({}),o=Symbol("lastResolve"),a=Symbol("lastReject"),s=Symbol("error"),u=Symbol("ended"),f=Symbol("lastPromise"),l=Symbol("handlePromise"),h=Symbol("stream");function d(e,t){return{value:e,done:t}}function p(e){var t=e[o];if(null!==t){var r=e[h].read();null!==r&&(e[f]=null,e[o]=null,e[a]=null,t(d(r,!1)))}}var y=Object.getPrototypeOf((function(){})),g=Object.setPrototypeOf((n(r={get stream(){return this[h]},next:function(){var e=this,r=this[s];if(null!==r)return Promise.reject(r);if(this[u])return Promise.resolve(d(void 0,!0));if(this[h].destroyed)return new Promise((function(r,n){t.nextTick((function(){e[s]?n(e[s]):r(d(void 0,!0))}))}));var n,i=this[f];if(i)n=new Promise(function(e,t){return function(r,n){e.then((function(){t[u]?r(d(void 0,!0)):t[l](r,n)}),n)}}(i,this));else{var o=this[h].read();if(null!==o)return Promise.resolve(d(o,!1));n=new Promise(this[l])}return this[f]=n,n}},Symbol.asyncIterator,(function(){return this})),n(r,"return",(function(){var e=this;return new Promise((function(t,r){e[h].destroy(null,(function(e){e?r(e):t(d(void 0,!0))}))}))})),r),y);e.exports=function(e){var r,c=Object.create(g,(n(r={},h,{value:e,writable:!0}),n(r,o,{value:null,writable:!0}),n(r,a,{value:null,writable:!0}),n(r,s,{value:null,writable:!0}),n(r,u,{value:e._readableState.endEmitted,writable:!0}),n(r,l,{value:function(e,t){var r=c[h].read();r?(c[f]=null,c[o]=null,c[a]=null,e(d(r,!1))):(c[o]=e,c[a]=t)},writable:!0}),r));return c[f]=null,i(e,(function(e){if(e&&"ERR_STREAM_PREMATURE_CLOSE"!==e.code){var t=c[a];return null!==t&&(c[f]=null,c[o]=null,c[a]=null,t(e)),void(c[s]=e)}var r=c[o];null!==r&&(c[f]=null,c[o]=null,c[a]=null,r(d(void 0,!0))),c[u]=!0})),e.on("readable",function(e){t.nextTick(p,e)}.bind(null,c)),c}}).call(this)}).call(this,rt)})),c=t((function(e,t){"use strict";var r=Ct.codes.ERR_STREAM_PREMATURE_CLOSE;function n(){}e.exports=function e(t,i,o){if("function"==typeof i)return e(t,null,i);i||(i={}),o=function(e){var t=!1;return function(){if(!t){t=!0;for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];e.apply(this,n)}}}(o||n);var a=i.readable||!1!==i.readable&&t.readable,s=i.writable||!1!==i.writable&&t.writable,u=function(){t.writable||l()},f=t._writableState&&t._writableState.finished,l=function(){s=!1,f=!0,a||o.call(t)},c=t._readableState&&t._readableState.endEmitted,h=function(){a=!1,c=!0,s||o.call(t)},d=function(e){o.call(t,e)},p=function(){var e;return a&&!c?(t._readableState&&t._readableState.ended||(e=new r),o.call(t,e)):s&&!f?(t._writableState&&t._writableState.ended||(e=new r),o.call(t,e)):void 0},y=function(){t.req.on("finish",l)};return function(e){return e.setHeader&&"function"==typeof e.abort}(t)?(t.on("complete",l),t.on("abort",p),t.req?y():t.on("request",y)):s&&!t._writableState&&(t.on("end",u),t.on("close",u)),t.on("end",h),t.on("finish",l),!1!==i.error&&t.on("error",d),t.on("close",p),function(){t.removeListener("complete",l),t.removeListener("abort",p),t.removeListener("request",y),t.req&&t.req.removeListener("finish",l),t.removeListener("end",u),t.removeListener("close",u),t.removeListener("finish",l),t.removeListener("end",h),t.removeListener("error",d),t.removeListener("close",p)}}})),h=t((function(e,t){"use strict";var r=Yt.Buffer,n=r.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function i(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}(e);if("string"!=typeof t&&(r.isEncoding===n||!n(e)))throw new Error("Unknown encoding: "+e);return t||e}(e),this.encoding){case"utf16le":this.text=s,this.end=u,t=4;break;case"utf8":this.fillLast=a,t=4;break;case"base64":this.text=f,this.end=l,t=3;break;default:return this.write=c,void(this.end=h)}this.lastNeed=0,this.lastTotal=0,this.lastChar=r.allocUnsafe(t)}function o(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function a(e){var t=this.lastTotal-this.lastNeed,r=function(e,t,r){if(128!=(192&t[0]))return e.lastNeed=0,"\ufffd";if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,"\ufffd";if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,"\ufffd"}}(this,e);return void 0!==r?r:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function s(e,t){if((e.length-t)%2==0){var r=e.toString("utf16le",t);if(r){var n=r.charCodeAt(r.length-1);if(n>=55296&&n<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],r.slice(0,-1)}return r}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function u(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,r)}return t}function f(e,t){var r=(e.length-t)%3;return 0===r?e.toString("base64",t):(this.lastNeed=3-r,this.lastTotal=3,1===r?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-r))}function l(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function c(e){return e.toString(this.encoding)}function h(e){return e&&e.length?this.write(e):""}t.StringDecoder=i,i.prototype.write=function(e){if(0===e.length)return"";var t,r;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";r=this.lastNeed,this.lastNeed=0}else r=0;return r<e.length?t?t+this.text(e,r):this.text(e,r):t||""},i.prototype.end=function(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"\ufffd":t},i.prototype.text=function(e,t){var r=function(e,t,r){var n=t.length-1;if(n<r)return 0;var i=o(t[n]);return i>=0?(i>0&&(e.lastNeed=i-1),i):--n<r||-2===i?0:(i=o(t[n]))>=0?(i>0&&(e.lastNeed=i-2),i):--n<r||-2===i?0:(i=o(t[n]))>=0?(i>0&&(2===i?i=0:e.lastNeed=i-3),i):0}(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=r;var n=e.length-(r-this.lastNeed);return e.copy(this.lastChar,0,n),e.toString("utf8",t,n)},i.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}})),d=t((function(e,t){(function(t){(function(){"use strict";var r=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};e.exports=f;var n=u({}),i=p({});Qe(f,n);for(var o=r(i.prototype),a=0;a<o.length;a++){var s=o[a];f.prototype[s]||(f.prototype[s]=i.prototype[s])}function f(e){if(!(this instanceof f))return new f(e);n.call(this,e),i.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once("end",l)))}function l(){this._writableState.ended||t.nextTick(c,this)}function c(e){e.end()}Object.defineProperty(f.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(f.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(f.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(f.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&this._readableState.destroyed&&this._writableState.destroyed},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}})}).call(this)}).call(this,rt)})),p=t((function(e,t){(function(t,r){(function(){"use strict";function n(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,r){var n=e.entry;for(e.entry=null;n;){var i=n.callback;t.pendingcb--,i(void 0),n=n.next}t.corkedRequestsFree.next=e}(t,e)}}var i;e.exports=A,A.WritableState=E;var o,a={deprecate:Kt},s=y({}).Buffer,u=r.Uint8Array||function(){},f=Wt.getHighWaterMark,l=Ct.codes,c=l.ERR_INVALID_ARG_TYPE,h=l.ERR_METHOD_NOT_IMPLEMENTED,p=l.ERR_MULTIPLE_CALLBACK,g=l.ERR_STREAM_CANNOT_PIPE,b=l.ERR_STREAM_DESTROYED,w=l.ERR_STREAM_NULL_VALUES,v=l.ERR_STREAM_WRITE_AFTER_END,m=l.ERR_UNKNOWN_ENCODING,_=Nt.errorOrDestroy;function S(){}function E(e,r,o){i=i||d({}),e=e||{},"boolean"!=typeof o&&(o=r instanceof i),this.objectMode=!!e.objectMode,o&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=f(this,e,"writableHighWaterMark",o),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var a=!1===e.decodeStrings;this.decodeStrings=!a,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,r){var n=e._writableState,i=n.sync,o=n.writecb;if("function"!=typeof o)throw new p;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(n),r)!function(e,r,n,i,o){--r.pendingcb,n?(t.nextTick(o,i),t.nextTick(L,e,r),e._writableState.errorEmitted=!0,_(e,i)):(o(i),e._writableState.errorEmitted=!0,_(e,i),L(e,r))}(e,n,i,r,o);else{var a=M(n)||e.destroyed;a||n.corked||n.bufferProcessing||!n.bufferedRequest||k(e,n),i?t.nextTick(T,e,n,a,o):T(e,n,a,o)}}(r,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==e.emitClose,this.autoDestroy=!!e.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new n(this)}function A(e){var t=this instanceof(i=i||d({}));if(!t&&!o.call(A,this))return new A(e);this._writableState=new E(e,this,t),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final)),wt.call(this)}function R(e,t,r,n,i,o,a){t.writelen=n,t.writecb=a,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new b("write")):r?e._writev(i,t.onwrite):e._write(i,o,t.onwrite),t.sync=!1}function T(e,t,r,n){r||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,n(),L(e,t)}function k(e,t){t.bufferProcessing=!0;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var i=t.bufferedRequestCount,o=new Array(i),a=t.corkedRequestsFree;a.entry=r;for(var s=0,u=!0;r;)o[s]=r,r.isBuf||(u=!1),r=r.next,s+=1;o.allBuffers=u,R(e,t,!0,t.length,o,"",a.finish),t.pendingcb++,t.lastBufferedRequest=null,a.next?(t.corkedRequestsFree=a.next,a.next=null):t.corkedRequestsFree=new n(t),t.bufferedRequestCount=0}else{for(;r;){var f=r.chunk,l=r.encoding,c=r.callback;if(R(e,t,!1,t.objectMode?1:f.length,f,l,c),r=r.next,t.bufferedRequestCount--,t.writing)break}null===r&&(t.lastBufferedRequest=null)}t.bufferedRequest=r,t.bufferProcessing=!1}function M(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function O(e,t){e._final((function(r){t.pendingcb--,r&&_(e,r),t.prefinished=!0,e.emit("prefinish"),L(e,t)}))}function L(e,r){var n=M(r);if(n&&(function(e,r){r.prefinished||r.finalCalled||("function"!=typeof e._final||r.destroyed?(r.prefinished=!0,e.emit("prefinish")):(r.pendingcb++,r.finalCalled=!0,t.nextTick(O,e,r)))}(e,r),0===r.pendingcb&&(r.finished=!0,e.emit("finish"),r.autoDestroy))){var i=e._readableState;(!i||i.autoDestroy&&i.endEmitted)&&e.destroy()}return n}Qe(A,wt),E.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(E.prototype,"buffer",{get:a.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(o=Function.prototype[Symbol.hasInstance],Object.defineProperty(A,Symbol.hasInstance,{value:function(e){return!!o.call(this,e)||this===A&&e&&e._writableState instanceof E}})):o=function(e){return e instanceof this},A.prototype.pipe=function(){_(this,new g)},A.prototype.write=function(e,r,n){var i,o=this._writableState,a=!1,f=!o.objectMode&&(i=e,s.isBuffer(i)||i instanceof u);return f&&!s.isBuffer(e)&&(e=function(e){return s.from(e)}(e)),"function"==typeof r&&(n=r,r=null),f?r="buffer":r||(r=o.defaultEncoding),"function"!=typeof n&&(n=S),o.ending?function(e,r){var n=new v;_(e,n),t.nextTick(r,n)}(this,n):(f||function(e,r,n,i){var o;return null===n?o=new w:"string"==typeof n||r.objectMode||(o=new c("chunk",["string","Buffer"],n)),!o||(_(e,o),t.nextTick(i,o),!1)}(this,o,e,n))&&(o.pendingcb++,a=function(e,t,r,n,i,o){if(!r){var a=function(e,t,r){return e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=s.from(t,r)),t}(t,n,i);n!==a&&(r=!0,i="buffer",n=a)}var u=t.objectMode?1:n.length;t.length+=u;var f=t.length<t.highWaterMark;if(f||(t.needDrain=!0),t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:n,encoding:i,isBuf:r,callback:o,next:null},l?l.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else R(e,t,!1,u,n,i,o);return f}(this,o,f,e,r,n)),a},A.prototype.cork=function(){this._writableState.corked++},A.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||k(this,e))},A.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new m(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(A.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(A.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),A.prototype._write=function(e,t,r){r(new h("_write()"))},A.prototype._writev=null,A.prototype.end=function(e,r,n){var i=this._writableState;return"function"==typeof e?(n=e,e=null,r=null):"function"==typeof r&&(n=r,r=null),null!=e&&this.write(e,r),i.corked&&(i.corked=1,this.uncork()),i.ending||function(e,r,n){r.ending=!0,L(e,r),n&&(r.finished?t.nextTick(n):e.once("finish",n)),r.ended=!0,e.writable=!1}(this,i,n),this},Object.defineProperty(A.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(A.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),A.prototype.destroy=Nt.destroy,A.prototype._undestroy=Nt.undestroy,A.prototype._destroy=function(e,t){t(e)}}).call(this)}).call(this,rt,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})})),y=t((function(e,t){(function(e){(function(){"use strict";t.Buffer=r,t.SlowBuffer=function(e){return+e!=e&&(e=0),r.alloc(+e)},t.INSPECT_MAX_BYTES=50;function e(e){if(e>2147483647)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return t.__proto__=r.prototype,t}function r(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return o(e)}return n(e,t,r)}function n(t,n,i){if("string"==typeof t)return function(t,n){if("string"==typeof n&&""!==n||(n="utf8"),!r.isEncoding(n))throw new TypeError("Unknown encoding: "+n);var i=0|u(t,n),o=e(i),a=o.write(t,n);return a!==i&&(o=o.slice(0,a)),o}(t,n);if(ArrayBuffer.isView(t))return a(t);if(null==t)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(x(t,ArrayBuffer)||t&&x(t.buffer,ArrayBuffer))return function(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');var i;return(i=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n)).__proto__=r.prototype,i}(t,n,i);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');var o=t.valueOf&&t.valueOf();if(null!=o&&o!==t)return r.from(o,n,i);var f=function(t){if(r.isBuffer(t)){var n=0|s(t.length),i=e(n);return 0===i.length||t.copy(i,0,0,n),i}return void 0!==t.length?"number"!=typeof t.length||N(t.length)?e(0):a(t):"Buffer"===t.type&&Array.isArray(t.data)?a(t.data):void 0}(t);if(f)return f;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return r.from(t[Symbol.toPrimitive]("string"),n,i);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function i(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function o(t){return i(t),e(t<0?0:0|s(t))}function a(t){for(var r=t.length<0?0:0|s(t.length),n=e(r),i=0;i<r;i+=1)n[i]=255&t[i];return n}function s(e){if(e>=2147483647)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+2147483647..toString(16)+" bytes");return 0|e}function u(e,t){if(r.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||x(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var n=e.length,i=arguments.length>2&&!0===arguments[2];if(!i&&0===n)return 0;for(var o=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return P(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return I(e).length;default:if(o)return i?-1:P(e).length;t=(""+t).toLowerCase(),o=!0}}function f(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function l(e,t,n,i,o){if(0===e.length)return-1;if("string"==typeof n?(i=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),N(n=+n)&&(n=o?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(o)return-1;n=e.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof t&&(t=r.from(t,i)),r.isBuffer(t))return 0===t.length?-1:c(e,t,n,i,o);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):c(e,[t],n,i,o);throw new TypeError("val must be string, number or Buffer")}function c(e,t,r,n,i){var o,a=1,s=e.length,u=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;a=2,s/=2,u/=2,r/=2}function f(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(i){var l=-1;for(o=r;o<s;o++)if(f(e,o)===f(t,-1===l?0:o-l)){if(-1===l&&(l=o),o-l+1===u)return l*a}else-1!==l&&(o-=o-l),l=-1}else for(r+u>s&&(r=s-u),o=r;o>=0;o--){for(var c=!0,h=0;h<u;h++)if(f(e,o+h)!==f(t,h)){c=!1;break}if(c)return o}return-1}function h(e,t,r,n){r=Number(r)||0;var i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;var o=t.length;n>o/2&&(n=o/2);for(var a=0;a<n;++a){var s=parseInt(t.substr(2*a,2),16);if(N(s))return a;e[r+a]=s}return a}function d(e,t,r,n){return j(P(t,e.length-r),e,r,n)}function p(e,t,r,n){return j(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function y(e,t,r,n){return p(e,t,r,n)}function g(e,t,r,n){return j(I(t),e,r,n)}function b(e,t,r,n){return j(function(e,t){for(var r,n,i,o=[],a=0;a<e.length&&!((t-=2)<0);++a)n=(r=e.charCodeAt(a))>>8,i=r%256,o.push(i),o.push(n);return o}(t,e.length-r),e,r,n)}function w(e,t,r){return 0===t&&r===e.length?vt.fromByteArray(e):vt.fromByteArray(e.slice(t,r))}function v(e,t,r){r=Math.min(e.length,r);for(var n=[],i=t;i<r;){var o,a,s,u,f=e[i],l=null,c=f>239?4:f>223?3:f>191?2:1;if(i+c<=r)switch(c){case 1:f<128&&(l=f);break;case 2:128==(192&(o=e[i+1]))&&(u=(31&f)<<6|63&o)>127&&(l=u);break;case 3:o=e[i+1],a=e[i+2],128==(192&o)&&128==(192&a)&&(u=(15&f)<<12|(63&o)<<6|63&a)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:o=e[i+1],a=e[i+2],s=e[i+3],128==(192&o)&&128==(192&a)&&128==(192&s)&&(u=(15&f)<<18|(63&o)<<12|(63&a)<<6|63&s)>65535&&u<1114112&&(l=u)}null===l?(l=65533,c=1):l>65535&&(l-=65536,n.push(l>>>10&1023|55296),l=56320|1023&l),n.push(l),i+=c}return function(e){var t=e.length;if(t<=m)return String.fromCharCode.apply(String,e);for(var r="",n=0;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=m));return r}(n)}t.kMaxLength=2147483647,r.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()}catch(t){return!1}}(),r.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(r.prototype,"parent",{enumerable:!0,get:function(){if(r.isBuffer(this))return this.buffer}}),Object.defineProperty(r.prototype,"offset",{enumerable:!0,get:function(){if(r.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&r[Symbol.species]===r&&Object.defineProperty(r,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),r.poolSize=8192,r.from=function(e,t,r){return n(e,t,r)},r.prototype.__proto__=Uint8Array.prototype,r.__proto__=Uint8Array,r.alloc=function(t,r,n){return function(t,r,n){return i(t),t<=0?e(t):void 0!==r?"string"==typeof n?e(t).fill(r,n):e(t).fill(r):e(t)}(t,r,n)},r.allocUnsafe=function(e){return o(e)},r.allocUnsafeSlow=function(e){return o(e)},r.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==r.prototype},r.compare=function(e,t){if(x(e,Uint8Array)&&(e=r.from(e,e.offset,e.byteLength)),x(t,Uint8Array)&&(t=r.from(t,t.offset,t.byteLength)),!r.isBuffer(e)||!r.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var n=e.length,i=t.length,o=0,a=Math.min(n,i);o<a;++o)if(e[o]!==t[o]){n=e[o],i=t[o];break}return n<i?-1:i<n?1:0},r.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},r.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return r.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var i=r.allocUnsafe(t),o=0;for(n=0;n<e.length;++n){var a=e[n];if(x(a,Uint8Array)&&(a=r.from(a)),!r.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(i,o),o+=a.length}return i},r.byteLength=u,r.prototype._isBuffer=!0,r.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)f(this,t,t+1);return this},r.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)f(this,t,t+3),f(this,t+1,t+2);return this},r.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)f(this,t,t+7),f(this,t+1,t+6),f(this,t+2,t+5),f(this,t+3,t+4);return this},r.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?v(this,0,e):function(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return E(this,t,r);case"utf8":case"utf-8":return v(this,t,r);case"ascii":return _(this,t,r);case"latin1":case"binary":return S(this,t,r);case"base64":return w(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}.apply(this,arguments)},r.prototype.toLocaleString=r.prototype.toString,r.prototype.equals=function(e){if(!r.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===r.compare(this,e)},r.prototype.inspect=function(){var e="",r=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},r.prototype.compare=function(e,t,n,i,o){if(x(e,Uint8Array)&&(e=r.from(e,e.offset,e.byteLength)),!r.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===i&&(i=0),void 0===o&&(o=this.length),t<0||n>e.length||i<0||o>this.length)throw new RangeError("out of range index");if(i>=o&&t>=n)return 0;if(i>=o)return-1;if(t>=n)return 1;if(this===e)return 0;for(var a=(o>>>=0)-(i>>>=0),s=(n>>>=0)-(t>>>=0),u=Math.min(a,s),f=this.slice(i,o),l=e.slice(t,n),c=0;c<u;++c)if(f[c]!==l[c]){a=f[c],s=l[c];break}return a<s?-1:s<a?1:0},r.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},r.prototype.indexOf=function(e,t,r){return l(this,e,t,r,!0)},r.prototype.lastIndexOf=function(e,t,r){return l(this,e,t,r,!1)},r.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var o=!1;;)switch(n){case"hex":return h(this,e,t,r);case"utf8":case"utf-8":return d(this,e,t,r);case"ascii":return p(this,e,t,r);case"latin1":case"binary":return y(this,e,t,r);case"base64":return g(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return b(this,e,t,r);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},r.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var m=4096;function _(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(127&e[i]);return n}function S(e,t,r){var n="";r=Math.min(e.length,r);for(var i=t;i<r;++i)n+=String.fromCharCode(e[i]);return n}function E(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);for(var i="",o=t;o<r;++o)i+=U(e[o]);return i}function A(e,t,r){for(var n=e.slice(t,r),i="",o=0;o<n.length;o+=2)i+=String.fromCharCode(n[o]+256*n[o+1]);return i}function R(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function T(e,t,n,i,o,a){if(!r.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<a)throw new RangeError('"value" argument is out of bounds');if(n+i>e.length)throw new RangeError("Index out of range")}function k(e,t,r,n,i,o){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function M(e,t,r,n,i){return t=+t,r>>>=0,i||k(e,0,r,4),Mt.write(e,t,r,n,23,4),r+4}function O(e,t,r,n,i){return t=+t,r>>>=0,i||k(e,0,r,8),Mt.write(e,t,r,n,52,8),r+8}r.prototype.slice=function(e,t){var n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);var i=this.subarray(e,t);return i.__proto__=r.prototype,i},r.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return n},r.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);for(var n=this[e+--t],i=1;t>0&&(i*=256);)n+=this[e+--t]*i;return n},r.prototype.readUInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),this[e]},r.prototype.readUInt16LE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]|this[e+1]<<8},r.prototype.readUInt16BE=function(e,t){return e>>>=0,t||R(e,2,this.length),this[e]<<8|this[e+1]},r.prototype.readUInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},r.prototype.readUInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},r.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);for(var n=this[e],i=1,o=0;++o<t&&(i*=256);)n+=this[e+o]*i;return n>=(i*=128)&&(n-=Math.pow(2,8*t)),n},r.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||R(e,t,this.length);for(var n=t,i=1,o=this[e+--n];n>0&&(i*=256);)o+=this[e+--n]*i;return o>=(i*=128)&&(o-=Math.pow(2,8*t)),o},r.prototype.readInt8=function(e,t){return e>>>=0,t||R(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},r.prototype.readInt16LE=function(e,t){e>>>=0,t||R(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},r.prototype.readInt16BE=function(e,t){e>>>=0,t||R(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},r.prototype.readInt32LE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},r.prototype.readInt32BE=function(e,t){return e>>>=0,t||R(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},r.prototype.readFloatLE=function(e,t){return e>>>=0,t||R(e,4,this.length),Mt.read(this,e,!0,23,4)},r.prototype.readFloatBE=function(e,t){return e>>>=0,t||R(e,4,this.length),Mt.read(this,e,!1,23,4)},r.prototype.readDoubleLE=function(e,t){return e>>>=0,t||R(e,8,this.length),Mt.read(this,e,!0,52,8)},r.prototype.readDoubleBE=function(e,t){return e>>>=0,t||R(e,8,this.length),Mt.read(this,e,!1,52,8)},r.prototype.writeUIntLE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||T(this,e,t,r,Math.pow(2,8*r)-1,0);var i=1,o=0;for(this[t]=255&e;++o<r&&(i*=256);)this[t+o]=e/i&255;return t+r},r.prototype.writeUIntBE=function(e,t,r,n){e=+e,t>>>=0,r>>>=0,n||T(this,e,t,r,Math.pow(2,8*r)-1,0);var i=r-1,o=1;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=e/o&255;return t+r},r.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,1,255,0),this[t]=255&e,t+1},r.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},r.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},r.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},r.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},r.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var i=Math.pow(2,8*r-1);T(this,e,t,r,i-1,-i)}var o=0,a=1,s=0;for(this[t]=255&e;++o<r&&(a*=256);)e<0&&0===s&&0!==this[t+o-1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+r},r.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){var i=Math.pow(2,8*r-1);T(this,e,t,r,i-1,-i)}var o=r-1,a=1,s=0;for(this[t+o]=255&e;--o>=0&&(a*=256);)e<0&&0===s&&0!==this[t+o+1]&&(s=1),this[t+o]=(e/a>>0)-s&255;return t+r},r.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},r.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},r.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},r.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},r.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||T(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},r.prototype.writeFloatLE=function(e,t,r){return M(this,e,t,!0,r)},r.prototype.writeFloatBE=function(e,t,r){return M(this,e,t,!1,r)},r.prototype.writeDoubleLE=function(e,t,r){return O(this,e,t,!0,r)},r.prototype.writeDoubleBE=function(e,t,r){return O(this,e,t,!1,r)},r.prototype.copy=function(e,t,n,i){if(!r.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),i||0===i||(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<n&&(i=n),i===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-n&&(i=e.length-t+n);var o=i-n;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(t,n,i);else if(this===e&&n<t&&t<i)for(var a=o-1;a>=0;--a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,i),t);return o},r.prototype.fill=function(e,t,n,i){if("string"==typeof e){if("string"==typeof t?(i=t,t=0,n=this.length):"string"==typeof n&&(i=n,n=this.length),void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!r.isEncoding(i))throw new TypeError("Unknown encoding: "+i);if(1===e.length){var o=e.charCodeAt(0);("utf8"===i&&o<128||"latin1"===i)&&(e=o)}}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var a;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(a=t;a<n;++a)this[a]=e;else{var s=r.isBuffer(e)?e:r.from(e,i),u=s.length;if(0===u)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<n-t;++a)this[a+t]=s[a%u]}return this};var L=/[^+\/0-9A-Za-z-_]/g;function U(e){return e<16?"0"+e.toString(16):e.toString(16)}function P(e,t){var r;t=t||1/0;for(var n=e.length,i=null,o=[],a=0;a<n;++a){if((r=e.charCodeAt(a))>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===n){(t-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(t-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;o.push(r)}else if(r<2048){if((t-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function I(e){return vt.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(L,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function j(e,t,r,n){for(var i=0;i<n&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}function x(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function N(e){return e!=e}}).call(this)}).call(this,y({}).Buffer)})),g=t((function(e,t){})),b={},w="object"==typeof Reflect?Reflect:null,v=w&&"function"==typeof w.apply?w.apply:function(e,t,r){return Function.prototype.apply.call(e,t,r)};e=w&&"function"==typeof w.ownKeys?w.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var m=Number.isNaN||function(e){return e!=e};function _(){_.init.call(this)}(b=_).once=function(e,t){return new Promise((function(r,n){function i(){void 0!==o&&e.removeListener("error",o),r([].slice.call(arguments))}var o;"error"!==t&&(o=function(r){e.removeListener(t,i),n(r)},e.once("error",o)),e.once(t,i)}))},_.EventEmitter=_,_.prototype._events=void 0,_.prototype._eventsCount=0,_.prototype._maxListeners=void 0;var S=10;function E(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function A(e){return void 0===e._maxListeners?_.defaultMaxListeners:e._maxListeners}function R(e,t,r,n){var i,o,a,s;if(E(r),void 0===(o=e._events)?(o=e._events=Object.create(null),e._eventsCount=0):(void 0!==o.newListener&&(e.emit("newListener",t,r.listener?r.listener:r),o=e._events),a=o[t]),void 0===a)a=o[t]=r,++e._eventsCount;else if("function"==typeof a?a=o[t]=n?[r,a]:[a,r]:n?a.unshift(r):a.push(r),(i=A(e))>0&&a.length>i&&!a.warned){a.warned=!0;var u=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");u.name="MaxListenersExceededWarning",u.emitter=e,u.type=t,u.count=a.length,s=u,console&&console.warn&&console.warn(s)}return e}function T(e,t,r){var n={fired:!1,wrapFn:void 0,target:e,type:t,listener:r},i=function(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}.bind(n);return i.listener=r,n.wrapFn=i,i}function k(e,t,r){var n=e._events;if(void 0===n)return[];var i=n[t];return void 0===i?[]:"function"==typeof i?r?[i.listener||i]:[i]:r?function(e){for(var t=new Array(e.length),r=0;r<t.length;++r)t[r]=e[r].listener||e[r];return t}(i):O(i,i.length)}function M(e){var t=this._events;if(void 0!==t){var r=t[e];if("function"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function O(e,t){for(var r=new Array(t),n=0;n<t;++n)r[n]=e[n];return r}Object.defineProperty(_,"defaultMaxListeners",{enumerable:!0,get:function(){return S},set:function(e){if("number"!=typeof e||e<0||m(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");S=e}}),_.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},_.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||m(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},_.prototype.getMaxListeners=function(){return A(this)},_.prototype.emit=function(e){for(var t=[],r=1;r<arguments.length;r++)t.push(arguments[r]);var n="error"===e,i=this._events;if(void 0!==i)n=n&&void 0===i.error;else if(!n)return!1;if(n){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var s=i[e];if(void 0===s)return!1;if("function"==typeof s)v(s,this,t);else{var u=s.length,f=O(s,u);for(r=0;r<u;++r)v(f[r],this,t)}return!0},_.prototype.addListener=function(e,t){return R(this,e,t,!1)},_.prototype.on=_.prototype.addListener,_.prototype.prependListener=function(e,t){return R(this,e,t,!0)},_.prototype.once=function(e,t){return E(t),this.on(e,T(this,e,t)),this},_.prototype.prependOnceListener=function(e,t){return E(t),this.prependListener(e,T(this,e,t)),this},_.prototype.removeListener=function(e,t){var r,n,i,o,a;if(E(t),void 0===(n=this._events))return this;if(void 0===(r=n[e]))return this;if(r===t||r.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit("removeListener",e,r.listener||t));else if("function"!=typeof r){for(i=-1,o=r.length-1;o>=0;o--)if(r[o]===t||r[o].listener===t){a=r[o].listener,i=o;break}if(i<0)return this;0===i?r.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(r,i),1===r.length&&(n[e]=r[0]),void 0!==n.removeListener&&this.emit("removeListener",e,a||t)}return this},_.prototype.off=_.prototype.removeListener,_.prototype.removeAllListeners=function(e){var t,r,n;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[e]),this;if(0===arguments.length){var i,o=Object.keys(r);for(n=0;n<o.length;++n)"removeListener"!==(i=o[n])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=r[e]))this.removeListener(e,t);else if(void 0!==t)for(n=t.length-1;n>=0;n--)this.removeListener(e,t[n]);return this},_.prototype.listeners=function(e){return k(this,e,!0)},_.prototype.rawListeners=function(e){return k(this,e,!1)},_.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):M.call(e,t)},_.prototype.listenerCount=M,_.prototype.eventNames=function(){return this._eventsCount>0?e(this._events):[]};var L,U,P={exports:{}};L=this,U=function(){"use strict";var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";function t(e,t,r,n){var i,o,a,s=t||[0],u=(r=r||0)>>>3,f=-1===n?3:0;for(i=0;i<e.length;i+=1)o=(a=i+u)>>>2,s.length<=o&&s.push(0),s[o]|=e[i]<<8*(f+n*(a%4));return{value:s,binLen:8*e.length+r}}function r(r,n,i){switch(n){case"UTF8":case"UTF16BE":case"UTF16LE":break;default:throw new Error("encoding must be UTF8, UTF16BE, or UTF16LE")}switch(r){case"HEX":return function(e,t,r){return function(e,t,r,n){var i,o,a,s;if(0!=e.length%2)throw new Error("String of HEX type must be in byte increments");var u=t||[0],f=(r=r||0)>>>3,l=-1===n?3:0;for(i=0;i<e.length;i+=2){if(o=parseInt(e.substr(i,2),16),isNaN(o))throw new Error("String of HEX type contains invalid characters");for(a=(s=(i>>>1)+f)>>>2;u.length<=a;)u.push(0);u[a]|=o<<8*(l+n*(s%4))}return{value:u,binLen:4*e.length+r}}(e,t,r,i)};case"TEXT":return function(e,t,r){return function(e,t,r,n,i){var o,a,s,u,f,l,c,h,d=0,p=r||[0],y=(n=n||0)>>>3;if("UTF8"===t)for(c=-1===i?3:0,s=0;s<e.length;s+=1)for(a=[],128>(o=e.charCodeAt(s))?a.push(o):2048>o?(a.push(192|o>>>6),a.push(128|63&o)):55296>o||57344<=o?a.push(224|o>>>12,128|o>>>6&63,128|63&o):(s+=1,o=65536+((1023&o)<<10|1023&e.charCodeAt(s)),a.push(240|o>>>18,128|o>>>12&63,128|o>>>6&63,128|63&o)),u=0;u<a.length;u+=1){for(f=(l=d+y)>>>2;p.length<=f;)p.push(0);p[f]|=a[u]<<8*(c+i*(l%4)),d+=1}else for(c=-1===i?2:0,h="UTF16LE"===t&&1!==i||"UTF16LE"!==t&&1===i,s=0;s<e.length;s+=1){for(o=e.charCodeAt(s),!0===h&&(o=(u=255&o)<<8|o>>>8),f=(l=d+y)>>>2;p.length<=f;)p.push(0);p[f]|=o<<8*(c+i*(l%4)),d+=2}return{value:p,binLen:8*d+n}}(e,n,t,r,i)};case"B64":return function(t,r,n){return function(t,r,n,i){var o,a,s,u,f,l,c=0,h=r||[0],d=(n=n||0)>>>3,p=-1===i?3:0,y=t.indexOf("=");if(-1===t.search(/^[a-zA-Z0-9=+\/]+$/))throw new Error("Invalid character in base-64 string");if(t=t.replace(/=/g,""),-1!==y&&y<t.length)throw new Error("Invalid '=' found in base-64 string");for(o=0;o<t.length;o+=4){for(u=t.substr(o,4),s=0,a=0;a<u.length;a+=1)s|=e.indexOf(u.charAt(a))<<18-6*a;for(a=0;a<u.length-1;a+=1){for(f=(l=c+d)>>>2;h.length<=f;)h.push(0);h[f]|=(s>>>16-8*a&255)<<8*(p+i*(l%4)),c+=1}}return{value:h,binLen:8*c+n}}(t,r,n,i)};case"BYTES":return function(e,t,r){return function(e,t,r,n){var i,o,a,s,u=t||[0],f=(r=r||0)>>>3,l=-1===n?3:0;for(o=0;o<e.length;o+=1)i=e.charCodeAt(o),a=(s=o+f)>>>2,u.length<=a&&u.push(0),u[a]|=i<<8*(l+n*(s%4));return{value:u,binLen:8*e.length+r}}(e,t,r,i)};case"ARRAYBUFFER":try{new ArrayBuffer(0)}catch(e){throw new Error("ARRAYBUFFER not supported by this environment")}return function(e,r,n){return function(e,r,n,i){return t(new Uint8Array(e),r,n,i)}(e,r,n,i)};case"UINT8ARRAY":try{new Uint8Array(0)}catch(e){throw new Error("UINT8ARRAY not supported by this environment")}return function(e,r,n){return t(e,r,n,i)};default:throw new Error("format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY")}}function n(t,r,n,i){switch(t){case"HEX":return function(e){return function(e,t,r,n){var i,o,a="",s=t/8,u=-1===r?3:0;for(i=0;i<s;i+=1)o=e[i>>>2]>>>8*(u+r*(i%4)),a+="0123456789abcdef".charAt(o>>>4&15)+"0123456789abcdef".charAt(15&o);return n.outputUpper?a.toUpperCase():a}(e,r,n,i)};case"B64":return function(t){return function(t,r,n,i){var o,a,s,u,f,l="",c=r/8,h=-1===n?3:0;for(o=0;o<c;o+=3)for(u=o+1<c?t[o+1>>>2]:0,f=o+2<c?t[o+2>>>2]:0,s=(t[o>>>2]>>>8*(h+n*(o%4))&255)<<16|(u>>>8*(h+n*((o+1)%4))&255)<<8|f>>>8*(h+n*((o+2)%4))&255,a=0;a<4;a+=1)l+=8*o+6*a<=r?e.charAt(s>>>6*(3-a)&63):i.b64Pad;return l}(t,r,n,i)};case"BYTES":return function(e){return function(e,t,r){var n,i,o="",a=t/8,s=-1===r?3:0;for(n=0;n<a;n+=1)i=e[n>>>2]>>>8*(s+r*(n%4))&255,o+=String.fromCharCode(i);return o}(e,r,n)};case"ARRAYBUFFER":try{new ArrayBuffer(0)}catch(e){throw new Error("ARRAYBUFFER not supported by this environment")}return function(e){return function(e,t,r){var n,i=t/8,o=new ArrayBuffer(i),a=new Uint8Array(o),s=-1===r?3:0;for(n=0;n<i;n+=1)a[n]=e[n>>>2]>>>8*(s+r*(n%4))&255;return o}(e,r,n)};case"UINT8ARRAY":try{new Uint8Array(0)}catch(e){throw new Error("UINT8ARRAY not supported by this environment")}return function(e){return function(e,t,r){var n,i=t/8,o=-1===r?3:0,a=new Uint8Array(i);for(n=0;n<i;n+=1)a[n]=e[n>>>2]>>>8*(o+r*(n%4))&255;return a}(e,r,n)};default:throw new Error("format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY")}}var i=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],o=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],a=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],s="Chosen SHA variant is not supported";function u(e,t){var r,n,i=e.binLen>>>3,o=t.binLen>>>3,a=i<<3,s=4-i<<3;if(i%4!=0){for(r=0;r<o;r+=4)n=i+r>>>2,e.value[n]|=t.value[r>>>2]<<a,e.value.push(0),e.value[n+1]|=t.value[r>>>2]>>>s;return(e.value.length<<2)-4>=o+i&&e.value.pop(),{value:e.value,binLen:e.binLen+t.binLen}}return{value:e.value.concat(t.value),binLen:e.binLen+t.binLen}}function f(e){var t={outputUpper:!1,b64Pad:"=",outputLen:-1},r=e||{},n="Output length must be a multiple of 8";if(t.outputUpper=r.outputUpper||!1,r.b64Pad&&(t.b64Pad=r.b64Pad),r.outputLen){if(r.outputLen%8!=0)throw new Error(n);t.outputLen=r.outputLen}else if(r.shakeLen){if(r.shakeLen%8!=0)throw new Error(n);t.outputLen=r.shakeLen}if("boolean"!=typeof t.outputUpper)throw new Error("Invalid outputUpper formatting option");if("string"!=typeof t.b64Pad)throw new Error("Invalid b64Pad formatting option");return t}function l(e,t,n,i){var o=e+" must include a value and format";if(!t){if(!i)throw new Error(o);return i}if(void 0===t.value||!t.format)throw new Error(o);return r(t.format,t.encoding||"UTF8",n)(t.value)}var c=function(){function e(e,t,r){var n=r||{};if(this.t=t,this.i=n.encoding||"UTF8",this.numRounds=n.numRounds||1,isNaN(this.numRounds)||this.numRounds!==parseInt(this.numRounds,10)||1>this.numRounds)throw new Error("numRounds must a integer >= 1");this.o=e,this.u=[],this.s=0,this.h=!1,this.v=0,this.A=!1,this.l=[],this.H=[]}return e.prototype.update=function(e){var t,r=0,n=this.S>>>5,i=this.m(e,this.u,this.s),o=i.binLen,a=i.value,s=o>>>5;for(t=0;t<s;t+=n)r+this.S<=o&&(this.p=this.R(a.slice(t,t+n),this.p),r+=this.S);this.v+=r,this.u=a.slice(r>>>5),this.s=o%this.S,this.h=!0},e.prototype.getHash=function(e,t){var r,i,o=this.U,a=f(t);if(this.C){if(-1===a.outputLen)throw new Error("Output length must be specified in options");o=a.outputLen}var s=n(e,o,this.T,a);if(this.A&&this.F)return s(this.F(a));for(i=this.K(this.u.slice(),this.s,this.v,this.B(this.p),o),r=1;r<this.numRounds;r+=1)this.C&&o%32!=0&&(i[i.length-1]&=16777215>>>24-o%32),i=this.K(i,o,0,this.L(this.o),o);return s(i)},e.prototype.setHMACKey=function(e,t,n){if(!this.g)throw new Error("Variant does not support HMAC");if(this.h)throw new Error("Cannot set MAC key after calling update");var i=r(t,(n||{}).encoding||"UTF8",this.T);this.k(i(e))},e.prototype.k=function(e){var t,r=this.S>>>3,n=r/4-1;if(1!==this.numRounds)throw new Error("Cannot set numRounds with MAC");if(this.A)throw new Error("MAC key already set");for(r<e.binLen/8&&(e.value=this.K(e.value,e.binLen,0,this.L(this.o),this.U));e.value.length<=n;)e.value.push(0);for(t=0;t<=n;t+=1)this.l[t]=909522486^e.value[t],this.H[t]=1549556828^e.value[t];this.p=this.R(this.l,this.p),this.v=this.S,this.A=!0},e.prototype.getHMAC=function(e,t){var r=f(t);return n(e,this.U,this.T,r)(this.Y())},e.prototype.Y=function(){var e;if(!this.A)throw new Error("Cannot call getHMAC without first setting MAC key");var t=this.K(this.u.slice(),this.s,this.v,this.B(this.p),this.U);return e=this.R(this.H,this.L(this.o)),this.K(t,this.U,this.S,e,this.U)},e}(),h=function(e,t){return(h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};function d(e,t){function r(){this.constructor=e}h(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}function p(e,t){return e<<t|e>>>32-t}function y(e,t){return e>>>t|e<<32-t}function g(e,t){return e>>>t}function b(e,t,r){return e^t^r}function w(e,t,r){return e&t^~e&r}function v(e,t,r){return e&t^e&r^t&r}function m(e){return y(e,2)^y(e,13)^y(e,22)}function _(e,t){var r=(65535&e)+(65535&t);return(65535&(e>>>16)+(t>>>16)+(r>>>16))<<16|65535&r}function S(e,t,r,n){var i=(65535&e)+(65535&t)+(65535&r)+(65535&n);return(65535&(e>>>16)+(t>>>16)+(r>>>16)+(n>>>16)+(i>>>16))<<16|65535&i}function E(e,t,r,n,i){var o=(65535&e)+(65535&t)+(65535&r)+(65535&n)+(65535&i);return(65535&(e>>>16)+(t>>>16)+(r>>>16)+(n>>>16)+(i>>>16)+(o>>>16))<<16|65535&o}function A(e){return y(e,7)^y(e,18)^g(e,3)}function R(e){return y(e,6)^y(e,11)^y(e,25)}function T(e){return[1732584193,4023233417,2562383102,271733878,3285377520]}function k(e,t){var r,n,i,o,a,s,u,f=[];for(r=t[0],n=t[1],i=t[2],o=t[3],a=t[4],u=0;u<80;u+=1)f[u]=u<16?e[u]:p(f[u-3]^f[u-8]^f[u-14]^f[u-16],1),s=u<20?E(p(r,5),w(n,i,o),a,1518500249,f[u]):u<40?E(p(r,5),b(n,i,o),a,1859775393,f[u]):u<60?E(p(r,5),v(n,i,o),a,2400959708,f[u]):E(p(r,5),b(n,i,o),a,3395469782,f[u]),a=o,o=i,i=p(n,30),n=r,r=s;return t[0]=_(r,t[0]),t[1]=_(n,t[1]),t[2]=_(i,t[2]),t[3]=_(o,t[3]),t[4]=_(a,t[4]),t}function M(e,t,r,n){for(var i,o=15+(t+65>>>9<<4),a=t+r;e.length<=o;)e.push(0);for(e[t>>>5]|=128<<24-t%32,e[o]=4294967295&a,e[o-1]=a/4294967296|0,i=0;i<e.length;i+=16)n=k(e.slice(i,i+16),n);return n}var O=function(e){function t(t,n,i){var o=this;if("SHA-1"!==t)throw new Error(s);var a=i||{};return(o=e.call(this,t,n,i)||this).g=!0,o.F=o.Y,o.T=-1,o.m=r(o.t,o.i,o.T),o.R=k,o.B=function(e){return e.slice()},o.L=T,o.K=M,o.p=[1732584193,4023233417,2562383102,271733878,3285377520],o.S=512,o.U=160,o.C=!1,a.hmacKey&&o.k(l("hmacKey",a.hmacKey,o.T)),o}return d(t,e),t}(c);function L(e){return"SHA-224"==e?o.slice():a.slice()}function U(e,t){var r,n,o,a,s,u,f,l,c,h,d,p,b=[];for(r=t[0],n=t[1],o=t[2],a=t[3],s=t[4],u=t[5],f=t[6],l=t[7],d=0;d<64;d+=1)b[d]=d<16?e[d]:S(y(p=b[d-2],17)^y(p,19)^g(p,10),b[d-7],A(b[d-15]),b[d-16]),c=E(l,R(s),w(s,u,f),i[d],b[d]),h=_(m(r),v(r,n,o)),l=f,f=u,u=s,s=_(a,c),a=o,o=n,n=r,r=_(c,h);return t[0]=_(r,t[0]),t[1]=_(n,t[1]),t[2]=_(o,t[2]),t[3]=_(a,t[3]),t[4]=_(s,t[4]),t[5]=_(u,t[5]),t[6]=_(f,t[6]),t[7]=_(l,t[7]),t}var P=function(e){function t(t,n,i){var o=this;if("SHA-224"!==t&&"SHA-256"!==t)throw new Error(s);var a=i||{};return(o=e.call(this,t,n,i)||this).F=o.Y,o.g=!0,o.T=-1,o.m=r(o.t,o.i,o.T),o.R=U,o.B=function(e){return e.slice()},o.L=L,o.K=function(e,r,n,i){return function(e,t,r,n,i){for(var o,a=15+(t+65>>>9<<4),s=t+r;e.length<=a;)e.push(0);for(e[t>>>5]|=128<<24-t%32,e[a]=4294967295&s,e[a-1]=s/4294967296|0,o=0;o<e.length;o+=16)n=U(e.slice(o,o+16),n);return"SHA-224"===i?[n[0],n[1],n[2],n[3],n[4],n[5],n[6]]:n}(e,r,n,i,t)},o.p=L(t),o.S=512,o.U="SHA-224"===t?224:256,o.C=!1,a.hmacKey&&o.k(l("hmacKey",a.hmacKey,o.T)),o}return d(t,e),t}(c),I=function(e,t){this.N=e,this.I=t};function j(e,t){var r;return t>32?(r=64-t,new I(e.I<<t|e.N>>>r,e.N<<t|e.I>>>r)):0!==t?(r=32-t,new I(e.N<<t|e.I>>>r,e.I<<t|e.N>>>r)):e}function x(e,t){var r;return t<32?(r=32-t,new I(e.N>>>t|e.I<<r,e.I>>>t|e.N<<r)):(r=64-t,new I(e.I>>>t|e.N<<r,e.N>>>t|e.I<<r))}function N(e,t){return new I(e.N>>>t,e.I>>>t|e.N<<32-t)}function C(e,t,r){return new I(e.N&t.N^~e.N&r.N,e.I&t.I^~e.I&r.I)}function B(e,t,r){return new I(e.N&t.N^e.N&r.N^t.N&r.N,e.I&t.I^e.I&r.I^t.I&r.I)}function D(e){var t=x(e,28),r=x(e,34),n=x(e,39);return new I(t.N^r.N^n.N,t.I^r.I^n.I)}function F(e,t){var r,n;r=(65535&e.I)+(65535&t.I);var i=(65535&(n=(e.I>>>16)+(t.I>>>16)+(r>>>16)))<<16|65535&r;return r=(65535&e.N)+(65535&t.N)+(n>>>16),n=(e.N>>>16)+(t.N>>>16)+(r>>>16),new I((65535&n)<<16|65535&r,i)}function H(e,t,r,n){var i,o;i=(65535&e.I)+(65535&t.I)+(65535&r.I)+(65535&n.I);var a=(65535&(o=(e.I>>>16)+(t.I>>>16)+(r.I>>>16)+(n.I>>>16)+(i>>>16)))<<16|65535&i;return i=(65535&e.N)+(65535&t.N)+(65535&r.N)+(65535&n.N)+(o>>>16),o=(e.N>>>16)+(t.N>>>16)+(r.N>>>16)+(n.N>>>16)+(i>>>16),new I((65535&o)<<16|65535&i,a)}function W(e,t,r,n,i){var o,a;o=(65535&e.I)+(65535&t.I)+(65535&r.I)+(65535&n.I)+(65535&i.I);var s=(65535&(a=(e.I>>>16)+(t.I>>>16)+(r.I>>>16)+(n.I>>>16)+(i.I>>>16)+(o>>>16)))<<16|65535&o;return o=(65535&e.N)+(65535&t.N)+(65535&r.N)+(65535&n.N)+(65535&i.N)+(a>>>16),a=(e.N>>>16)+(t.N>>>16)+(r.N>>>16)+(n.N>>>16)+(i.N>>>16)+(o>>>16),new I((65535&a)<<16|65535&o,s)}function K(e,t){return new I(e.N^t.N,e.I^t.I)}function Y(e){var t=x(e,1),r=x(e,8),n=N(e,7);return new I(t.N^r.N^n.N,t.I^r.I^n.I)}function q(e){var t=x(e,14),r=x(e,18),n=x(e,41);return new I(t.N^r.N^n.N,t.I^r.I^n.I)}var z=[new I(i[0],3609767458),new I(i[1],602891725),new I(i[2],3964484399),new I(i[3],2173295548),new I(i[4],4081628472),new I(i[5],3053834265),new I(i[6],2937671579),new I(i[7],3664609560),new I(i[8],2734883394),new I(i[9],1164996542),new I(i[10],1323610764),new I(i[11],3590304994),new I(i[12],4068182383),new I(i[13],991336113),new I(i[14],633803317),new I(i[15],3479774868),new I(i[16],2666613458),new I(i[17],944711139),new I(i[18],2341262773),new I(i[19],2007800933),new I(i[20],1495990901),new I(i[21],1856431235),new I(i[22],3175218132),new I(i[23],2198950837),new I(i[24],3999719339),new I(i[25],766784016),new I(i[26],2566594879),new I(i[27],3203337956),new I(i[28],1034457026),new I(i[29],2466948901),new I(i[30],3758326383),new I(i[31],168717936),new I(i[32],1188179964),new I(i[33],1546045734),new I(i[34],1522805485),new I(i[35],2643833823),new I(i[36],2343527390),new I(i[37],1014477480),new I(i[38],1206759142),new I(i[39],344077627),new I(i[40],1290863460),new I(i[41],3158454273),new I(i[42],3505952657),new I(i[43],106217008),new I(i[44],3606008344),new I(i[45],1432725776),new I(i[46],1467031594),new I(i[47],851169720),new I(i[48],3100823752),new I(i[49],1363258195),new I(i[50],3750685593),new I(i[51],3785050280),new I(i[52],3318307427),new I(i[53],3812723403),new I(i[54],2003034995),new I(i[55],3602036899),new I(i[56],1575990012),new I(i[57],1125592928),new I(i[58],2716904306),new I(i[59],442776044),new I(i[60],593698344),new I(i[61],3733110249),new I(i[62],2999351573),new I(i[63],3815920427),new I(3391569614,3928383900),new I(3515267271,566280711),new I(3940187606,3454069534),new I(4118630271,4000239992),new I(116418474,1914138554),new I(174292421,2731055270),new I(289380356,3203993006),new I(460393269,320620315),new I(685471733,587496836),new I(852142971,1086792851),new I(1017036298,365543100),new I(1126000580,2618297676),new I(1288033470,3409855158),new I(1501505948,4234509866),new I(1607167915,987167468),new I(1816402316,1246189591)];function V(e){return"SHA-384"===e?[new I(3418070365,o[0]),new I(1654270250,o[1]),new I(2438529370,o[2]),new I(355462360,o[3]),new I(1731405415,o[4]),new I(41048885895,o[5]),new I(3675008525,o[6]),new I(1203062813,o[7])]:[new I(a[0],4089235720),new I(a[1],2227873595),new I(a[2],4271175723),new I(a[3],1595750129),new I(a[4],2917565137),new I(a[5],725511199),new I(a[6],4215389547),new I(a[7],327033209)]}function G(e,t){var r,n,i,o,a,s,u,f,l,c,h,d,p,y,g,b,w=[];for(r=t[0],n=t[1],i=t[2],o=t[3],a=t[4],s=t[5],u=t[6],f=t[7],h=0;h<80;h+=1)h<16?(d=2*h,w[h]=new I(e[d],e[d+1])):w[h]=H((y=x(p=w[h-2],19),g=x(p,61),b=N(p,6),new I(y.N^g.N^b.N,y.I^g.I^b.I)),w[h-7],Y(w[h-15]),w[h-16]),l=W(f,q(a),C(a,s,u),z[h],w[h]),c=F(D(r),B(r,n,i)),f=u,u=s,s=a,a=F(o,l),o=i,i=n,n=r,r=F(l,c);return t[0]=F(r,t[0]),t[1]=F(n,t[1]),t[2]=F(i,t[2]),t[3]=F(o,t[3]),t[4]=F(a,t[4]),t[5]=F(s,t[5]),t[6]=F(u,t[6]),t[7]=F(f,t[7]),t}var X=function(e){function t(t,n,i){var o=this;if("SHA-384"!==t&&"SHA-512"!==t)throw new Error(s);var a=i||{};return(o=e.call(this,t,n,i)||this).F=o.Y,o.g=!0,o.T=-1,o.m=r(o.t,o.i,o.T),o.R=G,o.B=function(e){return e.slice()},o.L=V,o.K=function(e,r,n,i){return function(e,t,r,n,i){for(var o,a=31+(t+129>>>10<<5),s=t+r;e.length<=a;)e.push(0);for(e[t>>>5]|=128<<24-t%32,e[a]=4294967295&s,e[a-1]=s/4294967296|0,o=0;o<e.length;o+=32)n=G(e.slice(o,o+32),n);return"SHA-384"===i?[(n=n)[0].N,n[0].I,n[1].N,n[1].I,n[2].N,n[2].I,n[3].N,n[3].I,n[4].N,n[4].I,n[5].N,n[5].I]:[n[0].N,n[0].I,n[1].N,n[1].I,n[2].N,n[2].I,n[3].N,n[3].I,n[4].N,n[4].I,n[5].N,n[5].I,n[6].N,n[6].I,n[7].N,n[7].I]}(e,r,n,i,t)},o.p=V(t),o.S=1024,o.U="SHA-384"===t?384:512,o.C=!1,a.hmacKey&&o.k(l("hmacKey",a.hmacKey,o.T)),o}return d(t,e),t}(c),J=[new I(0,1),new I(0,32898),new I(2147483648,32906),new I(2147483648,2147516416),new I(0,32907),new I(0,2147483649),new I(2147483648,2147516545),new I(2147483648,32777),new I(0,138),new I(0,136),new I(0,2147516425),new I(0,2147483658),new I(0,2147516555),new I(2147483648,139),new I(2147483648,32905),new I(2147483648,32771),new I(2147483648,32770),new I(2147483648,128),new I(0,32778),new I(2147483648,2147483658),new I(2147483648,2147516545),new I(2147483648,32896),new I(0,2147483649),new I(2147483648,2147516424)],Z=[[0,36,3,41,18],[1,44,10,45,2],[62,6,43,15,61],[28,55,25,21,56],[27,20,39,8,14]];function $(e){var t,r=[];for(t=0;t<5;t+=1)r[t]=[new I(0,0),new I(0,0),new I(0,0),new I(0,0),new I(0,0)];return r}function Q(e){var t,r=[];for(t=0;t<5;t+=1)r[t]=e[t].slice();return r}function ee(e,t){var r,n,i,o,a,s,u,f,l,c=[],h=[];if(null!==e)for(n=0;n<e.length;n+=2)t[(n>>>1)%5][(n>>>1)/5|0]=K(t[(n>>>1)%5][(n>>>1)/5|0],new I(e[n+1],e[n]));for(r=0;r<24;r+=1){for(o=$(),n=0;n<5;n+=1)c[n]=(a=t[n][0],s=t[n][1],u=t[n][2],f=t[n][3],l=t[n][4],new I(a.N^s.N^u.N^f.N^l.N,a.I^s.I^u.I^f.I^l.I));for(n=0;n<5;n+=1)h[n]=K(c[(n+4)%5],j(c[(n+1)%5],1));for(n=0;n<5;n+=1)for(i=0;i<5;i+=1)t[n][i]=K(t[n][i],h[n]);for(n=0;n<5;n+=1)for(i=0;i<5;i+=1)o[i][(2*n+3*i)%5]=j(t[n][i],Z[n][i]);for(n=0;n<5;n+=1)for(i=0;i<5;i+=1)t[n][i]=K(o[n][i],new I(~o[(n+1)%5][i].N&o[(n+2)%5][i].N,~o[(n+1)%5][i].I&o[(n+2)%5][i].I));t[0][0]=K(t[0][0],J[r])}return t}function te(e){var t,r,n=0,i=[0,0],o=[4294967295&e,e/4294967296&2097151];for(t=6;t>=0;t--)0==(r=o[t>>2]>>>8*t&255)&&0===n||(i[n+1>>2]|=r<<8*(n+1),n+=1);return n=0!==n?n:1,i[0]|=n,{value:n+1>4?i:[i[0]],binLen:8+8*n}}function re(e){return u(te(e.binLen),e)}function ne(e,t){var r,n=te(t),i=t>>>2,o=(i-(n=u(n,e)).value.length%i)%i;for(r=0;r<o;r++)n.value.push(0);return n.value}var ie=function(e){function t(t,n,i){var o=this,a=6,u=0,f=i||{};if(1!==(o=e.call(this,t,n,i)||this).numRounds){if(f.kmacKey||f.hmacKey)throw new Error("Cannot set numRounds with MAC");if("CSHAKE128"===o.o||"CSHAKE256"===o.o)throw new Error("Cannot set numRounds for CSHAKE variants")}switch(o.T=1,o.m=r(o.t,o.i,o.T),o.R=ee,o.B=Q,o.L=$,o.p=$(),o.C=!1,t){case"SHA3-224":o.S=u=1152,o.U=224,o.g=!0,o.F=o.Y;break;case"SHA3-256":o.S=u=1088,o.U=256,o.g=!0,o.F=o.Y;break;case"SHA3-384":o.S=u=832,o.U=384,o.g=!0,o.F=o.Y;break;case"SHA3-512":o.S=u=576,o.U=512,o.g=!0,o.F=o.Y;break;case"SHAKE128":a=31,o.S=u=1344,o.U=-1,o.C=!0,o.g=!1,o.F=null;break;case"SHAKE256":a=31,o.S=u=1088,o.U=-1,o.C=!0,o.g=!1,o.F=null;break;case"KMAC128":a=4,o.S=u=1344,o.M(i),o.U=-1,o.C=!0,o.g=!1,o.F=o.X;break;case"KMAC256":a=4,o.S=u=1088,o.M(i),o.U=-1,o.C=!0,o.g=!1,o.F=o.X;break;case"CSHAKE128":o.S=u=1344,a=o.O(i),o.U=-1,o.C=!0,o.g=!1,o.F=null;break;case"CSHAKE256":o.S=u=1088,a=o.O(i),o.U=-1,o.C=!0,o.g=!1,o.F=null;break;default:throw new Error(s)}return o.K=function(e,t,r,n,i){return function(e,t,r,n,i,o,a){var s,u,f=0,l=[],c=i>>>5,h=t>>>5;for(s=0;s<h&&t>=i;s+=c)n=ee(e.slice(s,s+c),n),t-=i;for(e=e.slice(s),t%=i;e.length<c;)e.push(0);for(e[(s=t>>>3)>>2]^=o<<s%4*8,e[c-1]^=2147483648,n=ee(e,n);32*l.length<a&&(u=n[f%5][f/5|0],l.push(u.I),!(32*l.length>=a));)l.push(u.N),0==64*(f+=1)%i&&(ee(null,n),f=0);return l}(e,t,0,n,u,a,i)},f.hmacKey&&o.k(l("hmacKey",f.hmacKey,o.T)),o}return d(t,e),t.prototype.O=function(e,t){var r=function(e){var t=e||{};return{funcName:l("funcName",t.funcName,1,{value:[],binLen:0}),customization:l("Customization",t.customization,1,{value:[],binLen:0})}}(e||{});t&&(r.funcName=t);var n=u(re(r.funcName),re(r.customization));if(0!==r.customization.binLen||0!==r.funcName.binLen){for(var i=ne(n,this.S>>>3),o=0;o<i.length;o+=this.S>>>5)this.p=this.R(i.slice(o,o+(this.S>>>5)),this.p),this.v+=this.S;return 4}return 31},t.prototype.M=function(e){var t=function(e){var t=e||{};return{kmacKey:l("kmacKey",t.kmacKey,1),funcName:{value:[1128353099],binLen:32},customization:l("Customization",t.customization,1,{value:[],binLen:0})}}(e||{});this.O(e,t.funcName);for(var r=ne(re(t.kmacKey),this.S>>>3),n=0;n<r.length;n+=this.S>>>5)this.p=this.R(r.slice(n,n+(this.S>>>5)),this.p),this.v+=this.S;this.A=!0},t.prototype.X=function(e){var t=u({value:this.u.slice(),binLen:this.s},function(e){var t,r,n=0,i=[0,0],o=[4294967295&e,e/4294967296&2097151];for(t=6;t>=0;t--)0==(r=o[t>>2]>>>8*t&255)&&0===n||(i[n>>2]|=r<<8*n,n+=1);return i[(n=0!==n?n:1)>>2]|=n<<8*n,{value:n+1>4?i:[i[0]],binLen:8+8*n}}(e.outputLen));return this.K(t.value,t.binLen,this.v,this.B(this.p),e.outputLen)},t}(c);return function(){function e(e,t,r){if("SHA-1"==e)this.j=new O(e,t,r);else if("SHA-224"==e||"SHA-256"==e)this.j=new P(e,t,r);else if("SHA-384"==e||"SHA-512"==e)this.j=new X(e,t,r);else{if("SHA3-224"!=e&&"SHA3-256"!=e&&"SHA3-384"!=e&&"SHA3-512"!=e&&"SHAKE128"!=e&&"SHAKE256"!=e&&"CSHAKE128"!=e&&"CSHAKE256"!=e&&"KMAC128"!=e&&"KMAC256"!=e)throw new Error(s);this.j=new ie(e,t,r)}}return e.prototype.update=function(e){this.j.update(e)},e.prototype.getHash=function(e,t){return this.j.getHash(e,t)},e.prototype.setHMACKey=function(e,t,r){this.j.setHMACKey(e,t,r)},e.prototype.getHMAC=function(e,t){return this.j.getHMAC(e,t)},e}()},"object"==typeof P.exports?P.exports=U():"function"==typeof define&&define.amd?define(U):(L=L||self).jsSHA=U(),P=P.exports;var I={exports:{}};!function(e){"use strict";var t=function(e){var t,r=new Float64Array(16);if(e)for(t=0;t<e.length;t++)r[t]=e[t];return r},r=function(){throw new Error("no PRNG")},n=new Uint8Array(16),i=new Uint8Array(32);i[0]=9;var o=t(),a=t([1]),s=t([56129,1]),u=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),f=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),l=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),c=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),h=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function d(e,t,r,n){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r,e[t+4]=n>>24&255,e[t+5]=n>>16&255,e[t+6]=n>>8&255,e[t+7]=255&n}function p(e,t,r,n,i){var o,a=0;for(o=0;o<i;o++)a|=e[t+o]^r[n+o];return(1&a-1>>>8)-1}function y(e,t,r,n){return p(e,t,r,n,16)}function b(e,t,r,n){return p(e,t,r,n,32)}function w(e,t,r,n){!function(e,t,r,n){for(var i,o=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,f=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,c=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,y=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,g=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,b=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,w=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,v=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,m=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,_=o,S=a,E=s,A=u,R=f,T=l,k=c,M=h,O=d,L=p,U=y,P=g,I=b,j=w,x=v,N=m,C=0;C<20;C+=2)_^=(i=(I^=(i=(O^=(i=(R^=(i=_+I|0)<<7|i>>>25)+_|0)<<9|i>>>23)+R|0)<<13|i>>>19)+O|0)<<18|i>>>14,T^=(i=(S^=(i=(j^=(i=(L^=(i=T+S|0)<<7|i>>>25)+T|0)<<9|i>>>23)+L|0)<<13|i>>>19)+j|0)<<18|i>>>14,U^=(i=(k^=(i=(E^=(i=(x^=(i=U+k|0)<<7|i>>>25)+U|0)<<9|i>>>23)+x|0)<<13|i>>>19)+E|0)<<18|i>>>14,N^=(i=(P^=(i=(M^=(i=(A^=(i=N+P|0)<<7|i>>>25)+N|0)<<9|i>>>23)+A|0)<<13|i>>>19)+M|0)<<18|i>>>14,_^=(i=(A^=(i=(E^=(i=(S^=(i=_+A|0)<<7|i>>>25)+_|0)<<9|i>>>23)+S|0)<<13|i>>>19)+E|0)<<18|i>>>14,T^=(i=(R^=(i=(M^=(i=(k^=(i=T+R|0)<<7|i>>>25)+T|0)<<9|i>>>23)+k|0)<<13|i>>>19)+M|0)<<18|i>>>14,U^=(i=(L^=(i=(O^=(i=(P^=(i=U+L|0)<<7|i>>>25)+U|0)<<9|i>>>23)+P|0)<<13|i>>>19)+O|0)<<18|i>>>14,N^=(i=(x^=(i=(j^=(i=(I^=(i=N+x|0)<<7|i>>>25)+N|0)<<9|i>>>23)+I|0)<<13|i>>>19)+j|0)<<18|i>>>14;_=_+o|0,S=S+a|0,E=E+s|0,A=A+u|0,R=R+f|0,T=T+l|0,k=k+c|0,M=M+h|0,O=O+d|0,L=L+p|0,U=U+y|0,P=P+g|0,I=I+b|0,j=j+w|0,x=x+v|0,N=N+m|0,e[0]=_>>>0&255,e[1]=_>>>8&255,e[2]=_>>>16&255,e[3]=_>>>24&255,e[4]=S>>>0&255,e[5]=S>>>8&255,e[6]=S>>>16&255,e[7]=S>>>24&255,e[8]=E>>>0&255,e[9]=E>>>8&255,e[10]=E>>>16&255,e[11]=E>>>24&255,e[12]=A>>>0&255,e[13]=A>>>8&255,e[14]=A>>>16&255,e[15]=A>>>24&255,e[16]=R>>>0&255,e[17]=R>>>8&255,e[18]=R>>>16&255,e[19]=R>>>24&255,e[20]=T>>>0&255,e[21]=T>>>8&255,e[22]=T>>>16&255,e[23]=T>>>24&255,e[24]=k>>>0&255,e[25]=k>>>8&255,e[26]=k>>>16&255,e[27]=k>>>24&255,e[28]=M>>>0&255,e[29]=M>>>8&255,e[30]=M>>>16&255,e[31]=M>>>24&255,e[32]=O>>>0&255,e[33]=O>>>8&255,e[34]=O>>>16&255,e[35]=O>>>24&255,e[36]=L>>>0&255,e[37]=L>>>8&255,e[38]=L>>>16&255,e[39]=L>>>24&255,e[40]=U>>>0&255,e[41]=U>>>8&255,e[42]=U>>>16&255,e[43]=U>>>24&255,e[44]=P>>>0&255,e[45]=P>>>8&255,e[46]=P>>>16&255,e[47]=P>>>24&255,e[48]=I>>>0&255,e[49]=I>>>8&255,e[50]=I>>>16&255,e[51]=I>>>24&255,e[52]=j>>>0&255,e[53]=j>>>8&255,e[54]=j>>>16&255,e[55]=j>>>24&255,e[56]=x>>>0&255,e[57]=x>>>8&255,e[58]=x>>>16&255,e[59]=x>>>24&255,e[60]=N>>>0&255,e[61]=N>>>8&255,e[62]=N>>>16&255,e[63]=N>>>24&255}(e,t,r,n)}function v(e,t,r,n){!function(e,t,r,n){for(var i,o=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,s=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,u=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,f=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,l=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,c=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,h=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,d=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,y=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,g=255&r[16]|(255&r[17])<<8|(255&r[18])<<16|(255&r[19])<<24,b=255&r[20]|(255&r[21])<<8|(255&r[22])<<16|(255&r[23])<<24,w=255&r[24]|(255&r[25])<<8|(255&r[26])<<16|(255&r[27])<<24,v=255&r[28]|(255&r[29])<<8|(255&r[30])<<16|(255&r[31])<<24,m=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,_=0;_<20;_+=2)o^=(i=(b^=(i=(d^=(i=(f^=(i=o+b|0)<<7|i>>>25)+o|0)<<9|i>>>23)+f|0)<<13|i>>>19)+d|0)<<18|i>>>14,l^=(i=(a^=(i=(w^=(i=(p^=(i=l+a|0)<<7|i>>>25)+l|0)<<9|i>>>23)+p|0)<<13|i>>>19)+w|0)<<18|i>>>14,y^=(i=(c^=(i=(s^=(i=(v^=(i=y+c|0)<<7|i>>>25)+y|0)<<9|i>>>23)+v|0)<<13|i>>>19)+s|0)<<18|i>>>14,m^=(i=(g^=(i=(h^=(i=(u^=(i=m+g|0)<<7|i>>>25)+m|0)<<9|i>>>23)+u|0)<<13|i>>>19)+h|0)<<18|i>>>14,o^=(i=(u^=(i=(s^=(i=(a^=(i=o+u|0)<<7|i>>>25)+o|0)<<9|i>>>23)+a|0)<<13|i>>>19)+s|0)<<18|i>>>14,l^=(i=(f^=(i=(h^=(i=(c^=(i=l+f|0)<<7|i>>>25)+l|0)<<9|i>>>23)+c|0)<<13|i>>>19)+h|0)<<18|i>>>14,y^=(i=(p^=(i=(d^=(i=(g^=(i=y+p|0)<<7|i>>>25)+y|0)<<9|i>>>23)+g|0)<<13|i>>>19)+d|0)<<18|i>>>14,m^=(i=(v^=(i=(w^=(i=(b^=(i=m+v|0)<<7|i>>>25)+m|0)<<9|i>>>23)+b|0)<<13|i>>>19)+w|0)<<18|i>>>14;e[0]=o>>>0&255,e[1]=o>>>8&255,e[2]=o>>>16&255,e[3]=o>>>24&255,e[4]=l>>>0&255,e[5]=l>>>8&255,e[6]=l>>>16&255,e[7]=l>>>24&255,e[8]=y>>>0&255,e[9]=y>>>8&255,e[10]=y>>>16&255,e[11]=y>>>24&255,e[12]=m>>>0&255,e[13]=m>>>8&255,e[14]=m>>>16&255,e[15]=m>>>24&255,e[16]=c>>>0&255,e[17]=c>>>8&255,e[18]=c>>>16&255,e[19]=c>>>24&255,e[20]=h>>>0&255,e[21]=h>>>8&255,e[22]=h>>>16&255,e[23]=h>>>24&255,e[24]=d>>>0&255,e[25]=d>>>8&255,e[26]=d>>>16&255,e[27]=d>>>24&255,e[28]=p>>>0&255,e[29]=p>>>8&255,e[30]=p>>>16&255,e[31]=p>>>24&255}(e,t,r,n)}var m=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function _(e,t,r,n,i,o,a){var s,u,f=new Uint8Array(16),l=new Uint8Array(64);for(u=0;u<16;u++)f[u]=0;for(u=0;u<8;u++)f[u]=o[u];for(;i>=64;){for(w(l,f,a,m),u=0;u<64;u++)e[t+u]=r[n+u]^l[u];for(s=1,u=8;u<16;u++)s=s+(255&f[u])|0,f[u]=255&s,s>>>=8;i-=64,t+=64,n+=64}if(i>0)for(w(l,f,a,m),u=0;u<i;u++)e[t+u]=r[n+u]^l[u];return 0}function S(e,t,r,n,i){var o,a,s=new Uint8Array(16),u=new Uint8Array(64);for(a=0;a<16;a++)s[a]=0;for(a=0;a<8;a++)s[a]=n[a];for(;r>=64;){for(w(u,s,i,m),a=0;a<64;a++)e[t+a]=u[a];for(o=1,a=8;a<16;a++)o=o+(255&s[a])|0,s[a]=255&o,o>>>=8;r-=64,t+=64}if(r>0)for(w(u,s,i,m),a=0;a<r;a++)e[t+a]=u[a];return 0}function E(e,t,r,n,i){var o=new Uint8Array(32);v(o,n,i,m);for(var a=new Uint8Array(8),s=0;s<8;s++)a[s]=n[s+16];return S(e,t,r,a,o)}function A(e,t,r,n,i,o,a){var s=new Uint8Array(32);v(s,o,a,m);for(var u=new Uint8Array(8),f=0;f<8;f++)u[f]=o[f+16];return _(e,t,r,n,i,u,s)}var R=function(e){var t,r,n,i,o,a,s,u;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&e[0]|(255&e[1])<<8,this.r[0]=8191&t,r=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(t>>>13|r<<3),n=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(r>>>10|n<<6),i=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(n>>>7|i<<9),o=255&e[8]|(255&e[9])<<8,this.r[4]=255&(i>>>4|o<<12),this.r[5]=o>>>1&8190,a=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(o>>>14|a<<2),s=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(a>>>11|s<<5),u=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(s>>>8|u<<8),this.r[9]=u>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function T(e,t,r,n,i,o){var a=new R(o);return a.update(r,n,i),a.finish(e,t),0}function k(e,t,r,n,i,o){var a=new Uint8Array(16);return T(a,0,r,n,i,o),y(e,t,a,0)}function M(e,t,r,n,i){var o;if(r<32)return-1;for(A(e,0,t,0,r,n,i),T(e,16,e,32,r-32,e),o=0;o<16;o++)e[o]=0;return 0}function O(e,t,r,n,i){var o,a=new Uint8Array(32);if(r<32)return-1;if(E(a,0,32,n,i),0!==k(t,16,t,32,r-32,a))return-1;for(A(e,0,t,0,r,n,i),o=0;o<32;o++)e[o]=0;return 0}function L(e,t){var r;for(r=0;r<16;r++)e[r]=0|t[r]}function U(e){var t,r,n=1;for(t=0;t<16;t++)r=e[t]+n+65535,n=Math.floor(r/65536),e[t]=r-65536*n;e[0]+=n-1+37*(n-1)}function P(e,t,r){for(var n,i=~(r-1),o=0;o<16;o++)n=i&(e[o]^t[o]),e[o]^=n,t[o]^=n}function I(e,r){var n,i,o,a=t(),s=t();for(n=0;n<16;n++)s[n]=r[n];for(U(s),U(s),U(s),i=0;i<2;i++){for(a[0]=s[0]-65517,n=1;n<15;n++)a[n]=s[n]-65535-(a[n-1]>>16&1),a[n-1]&=65535;a[15]=s[15]-32767-(a[14]>>16&1),o=a[15]>>16&1,a[14]&=65535,P(s,a,1-o)}for(n=0;n<16;n++)e[2*n]=255&s[n],e[2*n+1]=s[n]>>8}function j(e,t){var r=new Uint8Array(32),n=new Uint8Array(32);return I(r,e),I(n,t),b(r,0,n,0)}function x(e){var t=new Uint8Array(32);return I(t,e),1&t[0]}function N(e,t){var r;for(r=0;r<16;r++)e[r]=t[2*r]+(t[2*r+1]<<8);e[15]&=32767}function C(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]+r[n]}function B(e,t,r){for(var n=0;n<16;n++)e[n]=t[n]-r[n]}function D(e,t,r){var n,i,o=0,a=0,s=0,u=0,f=0,l=0,c=0,h=0,d=0,p=0,y=0,g=0,b=0,w=0,v=0,m=0,_=0,S=0,E=0,A=0,R=0,T=0,k=0,M=0,O=0,L=0,U=0,P=0,I=0,j=0,x=0,N=r[0],C=r[1],B=r[2],D=r[3],F=r[4],H=r[5],W=r[6],K=r[7],Y=r[8],q=r[9],z=r[10],V=r[11],G=r[12],X=r[13],J=r[14],Z=r[15];o+=(n=t[0])*N,a+=n*C,s+=n*B,u+=n*D,f+=n*F,l+=n*H,c+=n*W,h+=n*K,d+=n*Y,p+=n*q,y+=n*z,g+=n*V,b+=n*G,w+=n*X,v+=n*J,m+=n*Z,a+=(n=t[1])*N,s+=n*C,u+=n*B,f+=n*D,l+=n*F,c+=n*H,h+=n*W,d+=n*K,p+=n*Y,y+=n*q,g+=n*z,b+=n*V,w+=n*G,v+=n*X,m+=n*J,_+=n*Z,s+=(n=t[2])*N,u+=n*C,f+=n*B,l+=n*D,c+=n*F,h+=n*H,d+=n*W,p+=n*K,y+=n*Y,g+=n*q,b+=n*z,w+=n*V,v+=n*G,m+=n*X,_+=n*J,S+=n*Z,u+=(n=t[3])*N,f+=n*C,l+=n*B,c+=n*D,h+=n*F,d+=n*H,p+=n*W,y+=n*K,g+=n*Y,b+=n*q,w+=n*z,v+=n*V,m+=n*G,_+=n*X,S+=n*J,E+=n*Z,f+=(n=t[4])*N,l+=n*C,c+=n*B,h+=n*D,d+=n*F,p+=n*H,y+=n*W,g+=n*K,b+=n*Y,w+=n*q,v+=n*z,m+=n*V,_+=n*G,S+=n*X,E+=n*J,A+=n*Z,l+=(n=t[5])*N,c+=n*C,h+=n*B,d+=n*D,p+=n*F,y+=n*H,g+=n*W,b+=n*K,w+=n*Y,v+=n*q,m+=n*z,_+=n*V,S+=n*G,E+=n*X,A+=n*J,R+=n*Z,c+=(n=t[6])*N,h+=n*C,d+=n*B,p+=n*D,y+=n*F,g+=n*H,b+=n*W,w+=n*K,v+=n*Y,m+=n*q,_+=n*z,S+=n*V,E+=n*G,A+=n*X,R+=n*J,T+=n*Z,h+=(n=t[7])*N,d+=n*C,p+=n*B,y+=n*D,g+=n*F,b+=n*H,w+=n*W,v+=n*K,m+=n*Y,_+=n*q,S+=n*z,E+=n*V,A+=n*G,R+=n*X,T+=n*J,k+=n*Z,d+=(n=t[8])*N,p+=n*C,y+=n*B,g+=n*D,b+=n*F,w+=n*H,v+=n*W,m+=n*K,_+=n*Y,S+=n*q,E+=n*z,A+=n*V,R+=n*G,T+=n*X,k+=n*J,M+=n*Z,p+=(n=t[9])*N,y+=n*C,g+=n*B,b+=n*D,w+=n*F,v+=n*H,m+=n*W,_+=n*K,S+=n*Y,E+=n*q,A+=n*z,R+=n*V,T+=n*G,k+=n*X,M+=n*J,O+=n*Z,y+=(n=t[10])*N,g+=n*C,b+=n*B,w+=n*D,v+=n*F,m+=n*H,_+=n*W,S+=n*K,E+=n*Y,A+=n*q,R+=n*z,T+=n*V,k+=n*G,M+=n*X,O+=n*J,L+=n*Z,g+=(n=t[11])*N,b+=n*C,w+=n*B,v+=n*D,m+=n*F,_+=n*H,S+=n*W,E+=n*K,A+=n*Y,R+=n*q,T+=n*z,k+=n*V,M+=n*G,O+=n*X,L+=n*J,U+=n*Z,b+=(n=t[12])*N,w+=n*C,v+=n*B,m+=n*D,_+=n*F,S+=n*H,E+=n*W,A+=n*K,R+=n*Y,T+=n*q,k+=n*z,M+=n*V,O+=n*G,L+=n*X,U+=n*J,P+=n*Z,w+=(n=t[13])*N,v+=n*C,m+=n*B,_+=n*D,S+=n*F,E+=n*H,A+=n*W,R+=n*K,T+=n*Y,k+=n*q,M+=n*z,O+=n*V,L+=n*G,U+=n*X,P+=n*J,I+=n*Z,v+=(n=t[14])*N,m+=n*C,_+=n*B,S+=n*D,E+=n*F,A+=n*H,R+=n*W,T+=n*K,k+=n*Y,M+=n*q,O+=n*z,L+=n*V,U+=n*G,P+=n*X,I+=n*J,j+=n*Z,m+=(n=t[15])*N,a+=38*(S+=n*B),s+=38*(E+=n*D),u+=38*(A+=n*F),f+=38*(R+=n*H),l+=38*(T+=n*W),c+=38*(k+=n*K),h+=38*(M+=n*Y),d+=38*(O+=n*q),p+=38*(L+=n*z),y+=38*(U+=n*V),g+=38*(P+=n*G),b+=38*(I+=n*X),w+=38*(j+=n*J),v+=38*(x+=n*Z),o=(n=(o+=38*(_+=n*C))+(i=1)+65535)-65536*(i=Math.floor(n/65536)),a=(n=a+i+65535)-65536*(i=Math.floor(n/65536)),s=(n=s+i+65535)-65536*(i=Math.floor(n/65536)),u=(n=u+i+65535)-65536*(i=Math.floor(n/65536)),f=(n=f+i+65535)-65536*(i=Math.floor(n/65536)),l=(n=l+i+65535)-65536*(i=Math.floor(n/65536)),c=(n=c+i+65535)-65536*(i=Math.floor(n/65536)),h=(n=h+i+65535)-65536*(i=Math.floor(n/65536)),d=(n=d+i+65535)-65536*(i=Math.floor(n/65536)),p=(n=p+i+65535)-65536*(i=Math.floor(n/65536)),y=(n=y+i+65535)-65536*(i=Math.floor(n/65536)),g=(n=g+i+65535)-65536*(i=Math.floor(n/65536)),b=(n=b+i+65535)-65536*(i=Math.floor(n/65536)),w=(n=w+i+65535)-65536*(i=Math.floor(n/65536)),v=(n=v+i+65535)-65536*(i=Math.floor(n/65536)),m=(n=m+i+65535)-65536*(i=Math.floor(n/65536)),o=(n=(o+=i-1+37*(i-1))+(i=1)+65535)-65536*(i=Math.floor(n/65536)),a=(n=a+i+65535)-65536*(i=Math.floor(n/65536)),s=(n=s+i+65535)-65536*(i=Math.floor(n/65536)),u=(n=u+i+65535)-65536*(i=Math.floor(n/65536)),f=(n=f+i+65535)-65536*(i=Math.floor(n/65536)),l=(n=l+i+65535)-65536*(i=Math.floor(n/65536)),c=(n=c+i+65535)-65536*(i=Math.floor(n/65536)),h=(n=h+i+65535)-65536*(i=Math.floor(n/65536)),d=(n=d+i+65535)-65536*(i=Math.floor(n/65536)),p=(n=p+i+65535)-65536*(i=Math.floor(n/65536)),y=(n=y+i+65535)-65536*(i=Math.floor(n/65536)),g=(n=g+i+65535)-65536*(i=Math.floor(n/65536)),b=(n=b+i+65535)-65536*(i=Math.floor(n/65536)),w=(n=w+i+65535)-65536*(i=Math.floor(n/65536)),v=(n=v+i+65535)-65536*(i=Math.floor(n/65536)),m=(n=m+i+65535)-65536*(i=Math.floor(n/65536)),o+=i-1+37*(i-1),e[0]=o,e[1]=a,e[2]=s,e[3]=u,e[4]=f,e[5]=l,e[6]=c,e[7]=h,e[8]=d,e[9]=p,e[10]=y,e[11]=g,e[12]=b,e[13]=w,e[14]=v,e[15]=m}function F(e,t){D(e,t,t)}function H(e,r){var n,i=t();for(n=0;n<16;n++)i[n]=r[n];for(n=253;n>=0;n--)F(i,i),2!==n&&4!==n&&D(i,i,r);for(n=0;n<16;n++)e[n]=i[n]}function W(e,r){var n,i=t();for(n=0;n<16;n++)i[n]=r[n];for(n=250;n>=0;n--)F(i,i),1!==n&&D(i,i,r);for(n=0;n<16;n++)e[n]=i[n]}function K(e,r,n){var i,o,a=new Uint8Array(32),u=new Float64Array(80),f=t(),l=t(),c=t(),h=t(),d=t(),p=t();for(o=0;o<31;o++)a[o]=r[o];for(a[31]=127&r[31]|64,a[0]&=248,N(u,n),o=0;o<16;o++)l[o]=u[o],h[o]=f[o]=c[o]=0;for(f[0]=h[0]=1,o=254;o>=0;--o)P(f,l,i=a[o>>>3]>>>(7&o)&1),P(c,h,i),C(d,f,c),B(f,f,c),C(c,l,h),B(l,l,h),F(h,d),F(p,f),D(f,c,f),D(c,l,d),C(d,f,c),B(f,f,c),F(l,f),B(c,h,p),D(f,c,s),C(f,f,h),D(c,c,f),D(f,h,p),D(h,l,u),F(l,d),P(f,l,i),P(c,h,i);for(o=0;o<16;o++)u[o+16]=f[o],u[o+32]=c[o],u[o+48]=l[o],u[o+64]=h[o];var y=u.subarray(32),g=u.subarray(16);return H(y,y),D(g,g,y),I(e,g),0}function Y(e,t){return K(e,t,i)}function q(e,t){return r(t,32),Y(e,t)}function z(e,t,r){var i=new Uint8Array(32);return K(i,r,t),v(e,n,i,m)}R.prototype.blocks=function(e,t,r){for(var n,i,o,a,s,u,f,l,c,h,d,p,y,g,b,w,v,m,_,S=this.fin?0:2048,E=this.h[0],A=this.h[1],R=this.h[2],T=this.h[3],k=this.h[4],M=this.h[5],O=this.h[6],L=this.h[7],U=this.h[8],P=this.h[9],I=this.r[0],j=this.r[1],x=this.r[2],N=this.r[3],C=this.r[4],B=this.r[5],D=this.r[6],F=this.r[7],H=this.r[8],W=this.r[9];r>=16;)h=c=0,h+=(E+=8191&(n=255&e[t+0]|(255&e[t+1])<<8))*I,h+=(A+=8191&(n>>>13|(i=255&e[t+2]|(255&e[t+3])<<8)<<3))*(5*W),h+=(R+=8191&(i>>>10|(o=255&e[t+4]|(255&e[t+5])<<8)<<6))*(5*H),h+=(T+=8191&(o>>>7|(a=255&e[t+6]|(255&e[t+7])<<8)<<9))*(5*F),c=(h+=(k+=8191&(a>>>4|(s=255&e[t+8]|(255&e[t+9])<<8)<<12))*(5*D))>>>13,h&=8191,h+=(M+=s>>>1&8191)*(5*B),h+=(O+=8191&(s>>>14|(u=255&e[t+10]|(255&e[t+11])<<8)<<2))*(5*C),h+=(L+=8191&(u>>>11|(f=255&e[t+12]|(255&e[t+13])<<8)<<5))*(5*N),h+=(U+=8191&(f>>>8|(l=255&e[t+14]|(255&e[t+15])<<8)<<8))*(5*x),d=c+=(h+=(P+=l>>>5|S)*(5*j))>>>13,d+=E*j,d+=A*I,d+=R*(5*W),d+=T*(5*H),c=(d+=k*(5*F))>>>13,d&=8191,d+=M*(5*D),d+=O*(5*B),d+=L*(5*C),d+=U*(5*N),c+=(d+=P*(5*x))>>>13,d&=8191,p=c,p+=E*x,p+=A*j,p+=R*I,p+=T*(5*W),c=(p+=k*(5*H))>>>13,p&=8191,p+=M*(5*F),p+=O*(5*D),p+=L*(5*B),p+=U*(5*C),y=c+=(p+=P*(5*N))>>>13,y+=E*N,y+=A*x,y+=R*j,y+=T*I,c=(y+=k*(5*W))>>>13,y&=8191,y+=M*(5*H),y+=O*(5*F),y+=L*(5*D),y+=U*(5*B),g=c+=(y+=P*(5*C))>>>13,g+=E*C,g+=A*N,g+=R*x,g+=T*j,c=(g+=k*I)>>>13,g&=8191,g+=M*(5*W),g+=O*(5*H),g+=L*(5*F),g+=U*(5*D),b=c+=(g+=P*(5*B))>>>13,b+=E*B,b+=A*C,b+=R*N,b+=T*x,c=(b+=k*j)>>>13,b&=8191,b+=M*I,b+=O*(5*W),b+=L*(5*H),b+=U*(5*F),w=c+=(b+=P*(5*D))>>>13,w+=E*D,w+=A*B,w+=R*C,w+=T*N,c=(w+=k*x)>>>13,w&=8191,w+=M*j,w+=O*I,w+=L*(5*W),w+=U*(5*H),v=c+=(w+=P*(5*F))>>>13,v+=E*F,v+=A*D,v+=R*B,v+=T*C,c=(v+=k*N)>>>13,v&=8191,v+=M*x,v+=O*j,v+=L*I,v+=U*(5*W),m=c+=(v+=P*(5*H))>>>13,m+=E*H,m+=A*F,m+=R*D,m+=T*B,c=(m+=k*C)>>>13,m&=8191,m+=M*N,m+=O*x,m+=L*j,m+=U*I,_=c+=(m+=P*(5*W))>>>13,_+=E*W,_+=A*H,_+=R*F,_+=T*D,c=(_+=k*B)>>>13,_&=8191,_+=M*C,_+=O*N,_+=L*x,_+=U*j,E=h=8191&(c=(c=((c+=(_+=P*I)>>>13)<<2)+c|0)+(h&=8191)|0),A=d+=c>>>=13,R=p&=8191,T=y&=8191,k=g&=8191,M=b&=8191,O=w&=8191,L=v&=8191,U=m&=8191,P=_&=8191,t+=16,r-=16;this.h[0]=E,this.h[1]=A,this.h[2]=R,this.h[3]=T,this.h[4]=k,this.h[5]=M,this.h[6]=O,this.h[7]=L,this.h[8]=U,this.h[9]=P},R.prototype.finish=function(e,t){var r,n,i,o,a=new Uint16Array(10);if(this.leftover){for(o=this.leftover,this.buffer[o++]=1;o<16;o++)this.buffer[o]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(r=this.h[1]>>>13,this.h[1]&=8191,o=2;o<10;o++)this.h[o]+=r,r=this.h[o]>>>13,this.h[o]&=8191;for(this.h[0]+=5*r,r=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=r,r=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=r,a[0]=this.h[0]+5,r=a[0]>>>13,a[0]&=8191,o=1;o<10;o++)a[o]=this.h[o]+r,r=a[o]>>>13,a[o]&=8191;for(a[9]-=8192,n=(1^r)-1,o=0;o<10;o++)a[o]&=n;for(n=~n,o=0;o<10;o++)this.h[o]=this.h[o]&n|a[o];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),i=this.h[0]+this.pad[0],this.h[0]=65535&i,o=1;o<8;o++)i=(this.h[o]+this.pad[o]|0)+(i>>>16)|0,this.h[o]=65535&i;e[t+0]=this.h[0]>>>0&255,e[t+1]=this.h[0]>>>8&255,e[t+2]=this.h[1]>>>0&255,e[t+3]=this.h[1]>>>8&255,e[t+4]=this.h[2]>>>0&255,e[t+5]=this.h[2]>>>8&255,e[t+6]=this.h[3]>>>0&255,e[t+7]=this.h[3]>>>8&255,e[t+8]=this.h[4]>>>0&255,e[t+9]=this.h[4]>>>8&255,e[t+10]=this.h[5]>>>0&255,e[t+11]=this.h[5]>>>8&255,e[t+12]=this.h[6]>>>0&255,e[t+13]=this.h[6]>>>8&255,e[t+14]=this.h[7]>>>0&255,e[t+15]=this.h[7]>>>8&255},R.prototype.update=function(e,t,r){var n,i;if(this.leftover){for((i=16-this.leftover)>r&&(i=r),n=0;n<i;n++)this.buffer[this.leftover+n]=e[t+n];if(r-=i,t+=i,this.leftover+=i,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(r>=16&&(i=r-r%16,this.blocks(e,t,i),t+=i,r-=i),r){for(n=0;n<r;n++)this.buffer[this.leftover+n]=e[t+n];this.leftover+=r}};var V=M,G=O,X=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function J(e,t,r,n){for(var i,o,a,s,u,f,l,c,h,d,p,y,g,b,w,v,m,_,S,E,A,R,T,k,M,O,L=new Int32Array(16),U=new Int32Array(16),P=e[0],I=e[1],j=e[2],x=e[3],N=e[4],C=e[5],B=e[6],D=e[7],F=t[0],H=t[1],W=t[2],K=t[3],Y=t[4],q=t[5],z=t[6],V=t[7],G=0;n>=128;){for(S=0;S<16;S++)E=8*S+G,L[S]=r[E+0]<<24|r[E+1]<<16|r[E+2]<<8|r[E+3],U[S]=r[E+4]<<24|r[E+5]<<16|r[E+6]<<8|r[E+7];for(S=0;S<80;S++)if(i=P,o=I,a=j,s=x,u=N,f=C,l=B,h=F,d=H,p=W,y=K,g=Y,b=q,w=z,T=65535&(R=V),k=R>>>16,M=65535&(A=D),O=A>>>16,T+=65535&(R=(Y>>>14|N<<18)^(Y>>>18|N<<14)^(N>>>9|Y<<23)),k+=R>>>16,M+=65535&(A=(N>>>14|Y<<18)^(N>>>18|Y<<14)^(Y>>>9|N<<23)),O+=A>>>16,T+=65535&(R=Y&q^~Y&z),k+=R>>>16,M+=65535&(A=N&C^~N&B),O+=A>>>16,T+=65535&(R=X[2*S+1]),k+=R>>>16,M+=65535&(A=X[2*S]),O+=A>>>16,A=L[S%16],k+=(R=U[S%16])>>>16,M+=65535&A,O+=A>>>16,M+=(k+=(T+=65535&R)>>>16)>>>16,T=65535&(R=_=65535&T|k<<16),k=R>>>16,M=65535&(A=m=65535&M|(O+=M>>>16)<<16),O=A>>>16,T+=65535&(R=(F>>>28|P<<4)^(P>>>2|F<<30)^(P>>>7|F<<25)),k+=R>>>16,M+=65535&(A=(P>>>28|F<<4)^(F>>>2|P<<30)^(F>>>7|P<<25)),O+=A>>>16,k+=(R=F&H^F&W^H&W)>>>16,M+=65535&(A=P&I^P&j^I&j),O+=A>>>16,c=65535&(M+=(k+=(T+=65535&R)>>>16)>>>16)|(O+=M>>>16)<<16,v=65535&T|k<<16,T=65535&(R=y),k=R>>>16,M=65535&(A=s),O=A>>>16,k+=(R=_)>>>16,M+=65535&(A=m),O+=A>>>16,I=i,j=o,x=a,N=s=65535&(M+=(k+=(T+=65535&R)>>>16)>>>16)|(O+=M>>>16)<<16,C=u,B=f,D=l,P=c,H=h,W=d,K=p,Y=y=65535&T|k<<16,q=g,z=b,V=w,F=v,S%16==15)for(E=0;E<16;E++)A=L[E],T=65535&(R=U[E]),k=R>>>16,M=65535&A,O=A>>>16,A=L[(E+9)%16],T+=65535&(R=U[(E+9)%16]),k+=R>>>16,M+=65535&A,O+=A>>>16,m=L[(E+1)%16],T+=65535&(R=((_=U[(E+1)%16])>>>1|m<<31)^(_>>>8|m<<24)^(_>>>7|m<<25)),k+=R>>>16,M+=65535&(A=(m>>>1|_<<31)^(m>>>8|_<<24)^m>>>7),O+=A>>>16,m=L[(E+14)%16],k+=(R=((_=U[(E+14)%16])>>>19|m<<13)^(m>>>29|_<<3)^(_>>>6|m<<26))>>>16,M+=65535&(A=(m>>>19|_<<13)^(_>>>29|m<<3)^m>>>6),O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,L[E]=65535&M|O<<16,U[E]=65535&T|k<<16;T=65535&(R=F),k=R>>>16,M=65535&(A=P),O=A>>>16,A=e[0],k+=(R=t[0])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[0]=P=65535&M|O<<16,t[0]=F=65535&T|k<<16,T=65535&(R=H),k=R>>>16,M=65535&(A=I),O=A>>>16,A=e[1],k+=(R=t[1])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[1]=I=65535&M|O<<16,t[1]=H=65535&T|k<<16,T=65535&(R=W),k=R>>>16,M=65535&(A=j),O=A>>>16,A=e[2],k+=(R=t[2])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[2]=j=65535&M|O<<16,t[2]=W=65535&T|k<<16,T=65535&(R=K),k=R>>>16,M=65535&(A=x),O=A>>>16,A=e[3],k+=(R=t[3])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[3]=x=65535&M|O<<16,t[3]=K=65535&T|k<<16,T=65535&(R=Y),k=R>>>16,M=65535&(A=N),O=A>>>16,A=e[4],k+=(R=t[4])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[4]=N=65535&M|O<<16,t[4]=Y=65535&T|k<<16,T=65535&(R=q),k=R>>>16,M=65535&(A=C),O=A>>>16,A=e[5],k+=(R=t[5])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[5]=C=65535&M|O<<16,t[5]=q=65535&T|k<<16,T=65535&(R=z),k=R>>>16,M=65535&(A=B),O=A>>>16,A=e[6],k+=(R=t[6])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[6]=B=65535&M|O<<16,t[6]=z=65535&T|k<<16,T=65535&(R=V),k=R>>>16,M=65535&(A=D),O=A>>>16,A=e[7],k+=(R=t[7])>>>16,M+=65535&A,O+=A>>>16,O+=(M+=(k+=(T+=65535&R)>>>16)>>>16)>>>16,e[7]=D=65535&M|O<<16,t[7]=V=65535&T|k<<16,G+=128,n-=128}return n}function Z(e,t,r){var n,i=new Int32Array(8),o=new Int32Array(8),a=new Uint8Array(256),s=r;for(i[0]=1779033703,i[1]=3144134277,i[2]=1013904242,i[3]=2773480762,i[4]=1359893119,i[5]=2600822924,i[6]=528734635,i[7]=1541459225,o[0]=4089235720,o[1]=2227873595,o[2]=4271175723,o[3]=1595750129,o[4]=2917565137,o[5]=725511199,o[6]=4215389547,o[7]=327033209,J(i,o,t,r),r%=128,n=0;n<r;n++)a[n]=t[s-r+n];for(a[r]=128,a[(r=256-128*(r<112?1:0))-9]=0,d(a,r-8,s/536870912|0,s<<3),J(i,o,a,r),n=0;n<8;n++)d(e,8*n,i[n],o[n]);return 0}function $(e,r){var n=t(),i=t(),o=t(),a=t(),s=t(),u=t(),l=t(),c=t(),h=t();B(n,e[1],e[0]),B(h,r[1],r[0]),D(n,n,h),C(i,e[0],e[1]),C(h,r[0],r[1]),D(i,i,h),D(o,e[3],r[3]),D(o,o,f),D(a,e[2],r[2]),C(a,a,a),B(s,i,n),B(u,a,o),C(l,a,o),C(c,i,n),D(e[0],s,u),D(e[1],c,l),D(e[2],l,u),D(e[3],s,c)}function Q(e,t,r){var n;for(n=0;n<4;n++)P(e[n],t[n],r)}function ee(e,r){var n=t(),i=t(),o=t();H(o,r[2]),D(n,r[0],o),D(i,r[1],o),I(e,i),e[31]^=x(n)<<7}function te(e,t,r){var n,i;for(L(e[0],o),L(e[1],a),L(e[2],a),L(e[3],o),i=255;i>=0;--i)Q(e,t,n=r[i/8|0]>>(7&i)&1),$(t,e),$(e,e),Q(e,t,n)}function re(e,r){var n=[t(),t(),t(),t()];L(n[0],l),L(n[1],c),L(n[2],a),D(n[3],l,c),te(e,n,r)}function ne(e,n,i){var o,a=new Uint8Array(64),s=[t(),t(),t(),t()];for(i||r(n,32),Z(a,n,32),a[0]&=248,a[31]&=127,a[31]|=64,re(s,a),ee(e,s),o=0;o<32;o++)n[o+32]=e[o];return 0}var ie=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function oe(e,t){var r,n,i,o;for(n=63;n>=32;--n){for(r=0,i=n-32,o=n-12;i<o;++i)t[i]+=r-16*t[n]*ie[i-(n-32)],r=Math.floor((t[i]+128)/256),t[i]-=256*r;t[i]+=r,t[n]=0}for(r=0,i=0;i<32;i++)t[i]+=r-(t[31]>>4)*ie[i],r=t[i]>>8,t[i]&=255;for(i=0;i<32;i++)t[i]-=r*ie[i];for(n=0;n<32;n++)t[n+1]+=t[n]>>8,e[n]=255&t[n]}function ae(e){var t,r=new Float64Array(64);for(t=0;t<64;t++)r[t]=e[t];for(t=0;t<64;t++)e[t]=0;oe(e,r)}function se(e,r,n,i){var o,a,s=new Uint8Array(64),u=new Uint8Array(64),f=new Uint8Array(64),l=new Float64Array(64),c=[t(),t(),t(),t()];Z(s,i,32),s[0]&=248,s[31]&=127,s[31]|=64;var h=n+64;for(o=0;o<n;o++)e[64+o]=r[o];for(o=0;o<32;o++)e[32+o]=s[32+o];for(Z(f,e.subarray(32),n+32),ae(f),re(c,f),ee(e,c),o=32;o<64;o++)e[o]=i[o];for(Z(u,e,n+64),ae(u),o=0;o<64;o++)l[o]=0;for(o=0;o<32;o++)l[o]=f[o];for(o=0;o<32;o++)for(a=0;a<32;a++)l[o+a]+=u[o]*s[a];return oe(e.subarray(32),l),h}function ue(e,r,n,i){var s,f=new Uint8Array(32),l=new Uint8Array(64),c=[t(),t(),t(),t()],d=[t(),t(),t(),t()];if(n<64)return-1;if(function(e,r){var n=t(),i=t(),s=t(),f=t(),l=t(),c=t(),d=t();return L(e[2],a),N(e[1],r),F(s,e[1]),D(f,s,u),B(s,s,e[2]),C(f,e[2],f),F(l,f),F(c,l),D(d,c,l),D(n,d,s),D(n,n,f),W(n,n),D(n,n,s),D(n,n,f),D(n,n,f),D(e[0],n,f),F(i,e[0]),D(i,i,f),j(i,s)&&D(e[0],e[0],h),F(i,e[0]),D(i,i,f),j(i,s)?-1:(x(e[0])===r[31]>>7&&B(e[0],o,e[0]),D(e[3],e[0],e[1]),0)}(d,i))return-1;for(s=0;s<n;s++)e[s]=r[s];for(s=0;s<32;s++)e[s+32]=i[s];if(Z(l,e,n),ae(l),te(c,d,l),re(d,r.subarray(32)),$(c,d),ee(f,c),n-=64,b(r,0,f,0)){for(s=0;s<n;s++)e[s]=0;return-1}for(s=0;s<n;s++)e[s]=r[s+64];return n}var fe;function le(e,t){if(32!==e.length)throw new Error("bad key size");if(24!==t.length)throw new Error("bad nonce size")}function ce(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function he(e){for(var t=0;t<e.length;t++)e[t]=0}e.lowlevel={crypto_core_hsalsa20:v,crypto_stream_xor:A,crypto_stream:E,crypto_stream_salsa20_xor:_,crypto_stream_salsa20:S,crypto_onetimeauth:T,crypto_onetimeauth_verify:k,crypto_verify_16:y,crypto_verify_32:b,crypto_secretbox:M,crypto_secretbox_open:O,crypto_scalarmult:K,crypto_scalarmult_base:Y,crypto_box_beforenm:z,crypto_box_afternm:V,crypto_box:function(e,t,r,n,i,o){var a=new Uint8Array(32);return z(a,i,o),V(e,t,r,n,a)},crypto_box_open:function(e,t,r,n,i,o){var a=new Uint8Array(32);return z(a,i,o),G(e,t,r,n,a)},crypto_box_keypair:q,crypto_hash:Z,crypto_sign:se,crypto_sign_keypair:ne,crypto_sign_open:ue,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:64,crypto_sign_PUBLICKEYBYTES:32,crypto_sign_SECRETKEYBYTES:64,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:u,L:ie,pack25519:I,unpack25519:N,M:D,A:C,S:F,Z:B,pow2523:W,add:$,set25519:L,modL:oe,scalarmult:te,scalarbase:re},e.randomBytes=function(e){var t=new Uint8Array(e);return r(t,e),t},e.secretbox=function(e,t,r){ce(e,t,r),le(r,t);for(var n=new Uint8Array(32+e.length),i=new Uint8Array(n.length),o=0;o<e.length;o++)n[o+32]=e[o];return M(i,n,n.length,t,r),i.subarray(16)},e.secretbox.open=function(e,t,r){ce(e,t,r),le(r,t);for(var n=new Uint8Array(16+e.length),i=new Uint8Array(n.length),o=0;o<e.length;o++)n[o+16]=e[o];return n.length<32||0!==O(i,n,n.length,t,r)?null:i.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=16,e.scalarMult=function(e,t){if(ce(e,t),32!==e.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var r=new Uint8Array(32);return K(r,e,t),r},e.scalarMult.base=function(e){if(ce(e),32!==e.length)throw new Error("bad n size");var t=new Uint8Array(32);return Y(t,e),t},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(t,r,n,i){var o=e.box.before(n,i);return e.secretbox(t,r,o)},e.box.before=function(e,t){ce(e,t),function(e,t){if(32!==e.length)throw new Error("bad public key size");if(32!==t.length)throw new Error("bad secret key size")}(e,t);var r=new Uint8Array(32);return z(r,e,t),r},e.box.after=e.secretbox,e.box.open=function(t,r,n,i){var o=e.box.before(n,i);return e.secretbox.open(t,r,o)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(32);return q(e,t),{publicKey:e,secretKey:t}},e.box.keyPair.fromSecretKey=function(e){if(ce(e),32!==e.length)throw new Error("bad secret key size");var t=new Uint8Array(32);return Y(t,e),{publicKey:t,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,t){if(ce(e,t),64!==t.length)throw new Error("bad secret key size");var r=new Uint8Array(64+e.length);return se(r,e,e.length,t),r},e.sign.open=function(e,t){if(ce(e,t),32!==t.length)throw new Error("bad public key size");var r=new Uint8Array(e.length),n=ue(r,e,e.length,t);if(n<0)return null;for(var i=new Uint8Array(n),o=0;o<i.length;o++)i[o]=r[o];return i},e.sign.detached=function(t,r){for(var n=e.sign(t,r),i=new Uint8Array(64),o=0;o<i.length;o++)i[o]=n[o];return i},e.sign.detached.verify=function(e,t,r){if(ce(e,t,r),64!==t.length)throw new Error("bad signature size");if(32!==r.length)throw new Error("bad public key size");var n,i=new Uint8Array(64+e.length),o=new Uint8Array(64+e.length);for(n=0;n<64;n++)i[n]=t[n];for(n=0;n<e.length;n++)i[n+64]=e[n];return ue(o,i,i.length,r)>=0},e.sign.keyPair=function(){var e=new Uint8Array(32),t=new Uint8Array(64);return ne(e,t),{publicKey:e,secretKey:t}},e.sign.keyPair.fromSecretKey=function(e){if(ce(e),64!==e.length)throw new Error("bad secret key size");for(var t=new Uint8Array(32),r=0;r<t.length;r++)t[r]=e[32+r];return{publicKey:t,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(ce(e),32!==e.length)throw new Error("bad seed size");for(var t=new Uint8Array(32),r=new Uint8Array(64),n=0;n<32;n++)r[n]=e[n];return ne(t,r,!0),{publicKey:t,secretKey:r}},e.sign.publicKeyLength=32,e.sign.secretKeyLength=64,e.sign.seedLength=32,e.sign.signatureLength=64,e.hash=function(e){ce(e);var t=new Uint8Array(64);return Z(t,e,e.length),t},e.hash.hashLength=64,e.verify=function(e,t){return ce(e,t),0!==e.length&&0!==t.length&&e.length===t.length&&0===p(e,0,t,0,e.length)},e.setPRNG=function(e){r=e},(fe="undefined"!=typeof self?self.crypto||self.msCrypto:null)&&fe.getRandomValues?e.setPRNG((function(e,t){var r,n=new Uint8Array(t);for(r=0;r<t;r+=65536)fe.getRandomValues(n.subarray(r,r+Math.min(t-r,65536)));for(r=0;r<t;r++)e[r]=n[r];he(n)})):(fe=g({}))&&fe.randomBytes&&e.setPRNG((function(e,t){var r,n=fe.randomBytes(t);for(r=0;r<t;r++)e[r]=n[r];he(n)}))}(I.exports?I.exports:self.nacl=self.nacl||{}),I=I.exports;var j={exports:{}};(function(e){(function(){!function(e,t){"use strict";j.exports?j.exports=t():(e.nacl||(e.nacl={}),e.nacl.util=t())}(this,(function(){"use strict";var t={};function r(e){if(!/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(e))throw new TypeError("invalid encoding")}return t.decodeUTF8=function(e){if("string"!=typeof e)throw new TypeError("expected string");var t,r=unescape(encodeURIComponent(e)),n=new Uint8Array(r.length);for(t=0;t<r.length;t++)n[t]=r.charCodeAt(t);return n},t.encodeUTF8=function(e){var t,r=[];for(t=0;t<e.length;t++)r.push(String.fromCharCode(e[t]));return decodeURIComponent(escape(r.join("")))},"undefined"==typeof atob?void 0!==e.from?(t.encodeBase64=function(t){return e.from(t).toString("base64")},t.decodeBase64=function(t){return r(t),new Uint8Array(Array.prototype.slice.call(e.from(t,"base64"),0))}):(t.encodeBase64=function(t){return new e(t).toString("base64")},t.decodeBase64=function(t){return r(t),new Uint8Array(Array.prototype.slice.call(new e(t,"base64"),0))}):(t.encodeBase64=function(e){var t,r=[],n=e.length;for(t=0;t<n;t++)r.push(String.fromCharCode(e[t]));return btoa(r.join(""))},t.decodeBase64=function(e){r(e);var t,n=atob(e),i=new Uint8Array(n.length);for(t=0;t<n.length;t++)i[t]=n.charCodeAt(t);return i}),t}))}).call(this)}).call(this,g({}).Buffer),j=j.exports;var x,N="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,C=Object.prototype.toString,B=function(e){return!(N&&e&&"object"==typeof e&&Symbol.toStringTag in e)&&"[object Arguments]"===C.call(e)},D=function(e){return!!B(e)||null!==e&&"object"==typeof e&&"number"==typeof e.length&&e.length>=0&&"[object Array]"!==C.call(e)&&"[object Function]"===C.call(e.callee)},F=function(){return B(arguments)}();B.isLegacyArguments=D,x=F?B:D;var H=Object.prototype.toString,W=Function.prototype.toString,K=/^\s*(?:function)?\*/,Y="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,q=Object.getPrototypeOf,z=function(){if(!Y)return!1;try{return Function("return function*() {}")()}catch(e){}}(),V=z?q(z):{},G=Object.prototype.hasOwnProperty,X=Object.prototype.toString,J=function(e,t,r){if("[object Function]"!==X.call(t))throw new TypeError("iterator must be a function");var n=e.length;if(n===+n)for(var i=0;i<n;i++)t.call(r,e[i],i,e);else for(var o in e)G.call(e,o)&&t.call(r,e[o],o,e)},Z=Object.prototype.hasOwnProperty,$={};(function(e){(function(){"use strict";$=function(){return function(e,t,r){if(e.filter)return e.filter(t,r);if(null==e)throw new TypeError;if("function"!=typeof t)throw new TypeError;for(var n=[],i=0;i<e.length;i++)if(Z.call(e,i)){var o=e[i];t.call(r,o,i,e)&&n.push(o)}return n}(["BigInt64Array","BigUint64Array","Float32Array","Float64Array","Int16Array","Int32Array","Int8Array","Uint16Array","Uint32Array","Uint8Array","Uint8ClampedArray"],(function(t){return"function"==typeof e[t]}))}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});var Q={};(function(e){(function(){"use strict";var t=e.Symbol;Q=function(){return"function"==typeof t&&"function"==typeof Symbol&&"symbol"==typeof t("foo")&&"symbol"==typeof Symbol("bar")&&function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),r=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(r))return!1;for(t in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var n=Object.getOwnPropertySymbols(e);if(1!==n.length||n[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var i=Object.getOwnPropertyDescriptor(e,t);if(42!==i.value||!0!==i.enumerable)return!1}return!0}()}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});var ee=Array.prototype.slice,te=Object.prototype.toString,re=Function.prototype.bind||function(e){var t=this;if("function"!=typeof t||"[object Function]"!==te.call(t))throw new TypeError("Function.prototype.bind called on incompatible "+t);for(var r,n=ee.call(arguments,1),i=Math.max(0,t.length-n.length),o=[],a=0;a<i;a++)o.push("$"+a);if(r=Function("binder","return function ("+o.join(",")+"){ return binder.apply(this,arguments); }")((function(){if(this instanceof r){var i=t.apply(this,n.concat(ee.call(arguments)));return Object(i)===i?i:this}return t.apply(e,n.concat(ee.call(arguments)))})),t.prototype){var s=function(){};s.prototype=t.prototype,r.prototype=new s,s.prototype=null}return r},ne=TypeError,ie=Object.getOwnPropertyDescriptor;if(ie)try{ie({},"")}catch(Bn){ie=null}var oe,ae=function(){throw new ne},se=ie?function(){try{return ae}catch(e){try{return ie(arguments,"callee").get}catch(t){return ae}}}():ae,ue=Q(),fe=Object.getPrototypeOf||function(e){return e.__proto__},le="undefined"==typeof Uint8Array?void 0:fe(Uint8Array),ce={"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayBufferPrototype%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer.prototype,"%ArrayIteratorPrototype%":ue?fe([][Symbol.iterator]()):void 0,"%ArrayPrototype%":Array.prototype,"%ArrayProto_entries%":Array.prototype.entries,"%ArrayProto_forEach%":Array.prototype.forEach,"%ArrayProto_keys%":Array.prototype.keys,"%ArrayProto_values%":Array.prototype.values,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":void 0,"%AsyncFunctionPrototype%":void 0,"%AsyncGenerator%":void 0,"%AsyncGeneratorFunction%":void 0,"%AsyncGeneratorPrototype%":void 0,"%AsyncIteratorPrototype%":void 0,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%Boolean%":Boolean,"%BooleanPrototype%":Boolean.prototype,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%DataViewPrototype%":"undefined"==typeof DataView?void 0:DataView.prototype,"%Date%":Date,"%DatePrototype%":Date.prototype,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%ErrorPrototype%":Error.prototype,"%eval%":eval,"%EvalError%":EvalError,"%EvalErrorPrototype%":EvalError.prototype,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float32ArrayPrototype%":"undefined"==typeof Float32Array?void 0:Float32Array.prototype,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%Float64ArrayPrototype%":"undefined"==typeof Float64Array?void 0:Float64Array.prototype,"%Function%":Function,"%FunctionPrototype%":Function.prototype,"%Generator%":void 0,"%GeneratorFunction%":void 0,"%GeneratorPrototype%":void 0,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int8ArrayPrototype%":"undefined"==typeof Int8Array?void 0:Int8Array.prototype,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int16ArrayPrototype%":"undefined"==typeof Int16Array?void 0:Int8Array.prototype,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%Int32ArrayPrototype%":"undefined"==typeof Int32Array?void 0:Int32Array.prototype,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":ue?fe(fe([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%JSONParse%":"object"==typeof JSON?JSON.parse:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&ue?fe((new Map)[Symbol.iterator]()):void 0,"%MapPrototype%":"undefined"==typeof Map?void 0:Map.prototype,"%Math%":Math,"%Number%":Number,"%NumberPrototype%":Number.prototype,"%Object%":Object,"%ObjectPrototype%":Object.prototype,"%ObjProto_toString%":Object.prototype.toString,"%ObjProto_valueOf%":Object.prototype.valueOf,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%PromisePrototype%":"undefined"==typeof Promise?void 0:Promise.prototype,"%PromiseProto_then%":"undefined"==typeof Promise?void 0:Promise.prototype.then,"%Promise_all%":"undefined"==typeof Promise?void 0:Promise.all,"%Promise_reject%":"undefined"==typeof Promise?void 0:Promise.reject,"%Promise_resolve%":"undefined"==typeof Promise?void 0:Promise.resolve,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%RangeErrorPrototype%":RangeError.prototype,"%ReferenceError%":ReferenceError,"%ReferenceErrorPrototype%":ReferenceError.prototype,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%RegExpPrototype%":RegExp.prototype,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&ue?fe((new Set)[Symbol.iterator]()):void 0,"%SetPrototype%":"undefined"==typeof Set?void 0:Set.prototype,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%SharedArrayBufferPrototype%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer.prototype,"%String%":String,"%StringIteratorPrototype%":ue?fe(""[Symbol.iterator]()):void 0,"%StringPrototype%":String.prototype,"%Symbol%":ue?Symbol:void 0,"%SymbolPrototype%":ue?Symbol.prototype:void 0,"%SyntaxError%":SyntaxError,"%SyntaxErrorPrototype%":SyntaxError.prototype,"%ThrowTypeError%":se,"%TypedArray%":le,"%TypedArrayPrototype%":le?le.prototype:void 0,"%TypeError%":ne,"%TypeErrorPrototype%":ne.prototype,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ArrayPrototype%":"undefined"==typeof Uint8Array?void 0:Uint8Array.prototype,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint8ClampedArrayPrototype%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray.prototype,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint16ArrayPrototype%":"undefined"==typeof Uint16Array?void 0:Uint16Array.prototype,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%Uint32ArrayPrototype%":"undefined"==typeof Uint32Array?void 0:Uint32Array.prototype,"%URIError%":URIError,"%URIErrorPrototype%":URIError.prototype,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakMapPrototype%":"undefined"==typeof WeakMap?void 0:WeakMap.prototype,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet,"%WeakSetPrototype%":"undefined"==typeof WeakSet?void 0:WeakSet.prototype},he=re.call(Function.call,String.prototype.replace),de=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,pe=/\\(\\)?/g,ye=function(e,t){if("string"!=typeof e||0===e.length)throw new TypeError("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new TypeError('"allowMissing" argument must be a boolean');for(var r,n=(r=[],he(e,de,(function(e,t,n,i){r[r.length]=n?he(i,pe,"$1"):t||e})),r),i=function(e,t){if(!(e in ce))throw new SyntaxError("intrinsic "+e+" does not exist!");if(void 0===ce[e]&&!t)throw new ne("intrinsic "+e+" exists, but is not available. Please file an issue!");return ce[e]}("%"+(n.length>0?n[0]:"")+"%",t),o=1;o<n.length;o+=1)if(null!=i)if(ie&&o+1>=n.length){var a=ie(i,n[o]);if(!t&&!(n[o]in i))throw new ne("base intrinsic for "+e+" exists, but the property is not available.");i=a&&"get"in a&&!("originalValue"in a.get)?a.get:i[n[o]]}else i=i[n[o]];return i},ge=ye("%Function.prototype.apply%"),be=ye("%Function.prototype.call%"),we=ye("%Reflect.apply%",!0)||re.call(be,ge),ve=ye("%Object.defineProperty%",!0);if(ve)try{ve({},"a",{value:1})}catch(Bn){ve=null}oe=function(){return we(re,be,arguments)};var me=function(){return we(re,ge,arguments)};ve?ve(oe,"apply",{value:me}):oe.apply=me;var _e=oe(ye("String.prototype.indexOf")),Se=function(e,t){var r=ye(e,!!t);return"function"==typeof r&&_e(e,".prototype.")?oe(r):r},Ee=ye("%Object.getOwnPropertyDescriptor%");if(Ee)try{Ee([],"length")}catch(Bn){Ee=null}var Ae=Ee,Re={};(function(e){(function(){"use strict";var t=Se("Object.prototype.toString"),r=Q()&&"symbol"==typeof Symbol.toStringTag,n=$(),i=Se("Array.prototype.indexOf",!0)||function(e,t){for(var r=0;r<e.length;r+=1)if(e[r]===t)return r;return-1},o=Se("String.prototype.slice"),a={},s=Object.getPrototypeOf;r&&Ae&&s&&J(n,(function(t){var r=new e[t];if(!(Symbol.toStringTag in r))throw new EvalError("this engine has support for Symbol.toStringTag, but "+t+" does not have the property! Please report this.");var n=s(r),i=Ae(n,Symbol.toStringTag);if(!i){var o=s(n);i=Ae(o,Symbol.toStringTag)}a[t]=i.get})),Re=function(e){if(!e||"object"!=typeof e)return!1;if(!r){var s=o(t(e),8,-1);return i(n,s)>-1}return!!Ae&&function(e){var t=!1;return J(a,(function(r,n){if(!t)try{t=r.call(e)===n}catch(Bn){}})),t}(e)}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});var Te={};(function(e){(function(){"use strict";var t=Se("Object.prototype.toString"),r=Q()&&"symbol"==typeof Symbol.toStringTag,n=$(),i=Se("String.prototype.slice"),o={},a=Object.getPrototypeOf;r&&Ae&&a&&J(n,(function(t){if("function"==typeof e[t]){var r=new e[t];if(!(Symbol.toStringTag in r))throw new EvalError("this engine has support for Symbol.toStringTag, but "+t+" does not have the property! Please report this.");var n=a(r),i=Ae(n,Symbol.toStringTag);if(!i){var s=a(n);i=Ae(s,Symbol.toStringTag)}o[t]=i.get}})),Te=function(e){return!!Re(e)&&(r?function(e){var t=!1;return J(o,(function(r,n){if(!t)try{var i=r.call(e);i===n&&(t=i)}catch(Bn){}})),t}(e):i(t(e),8,-1))}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});var ke={};function Me(e){return e.call.bind(e)}var Oe="undefined"!=typeof BigInt,Le="undefined"!=typeof Symbol,Ue=Me(Object.prototype.toString),Pe=Me(Number.prototype.valueOf),Ie=Me(String.prototype.valueOf),je=Me(Boolean.prototype.valueOf);if(Oe)var xe=Me(BigInt.prototype.valueOf);if(Le)var Ne=Me(Symbol.prototype.valueOf);function Ce(e,t){if("object"!=typeof e)return!1;try{return t(e),!0}catch(Bn){return!1}}function Be(e){return"[object Map]"===Ue(e)}function De(e){return"[object Set]"===Ue(e)}function Fe(e){return"[object WeakMap]"===Ue(e)}function He(e){return"[object WeakSet]"===Ue(e)}function We(e){return"[object ArrayBuffer]"===Ue(e)}function Ke(e){return"undefined"!=typeof ArrayBuffer&&(We.working?We(e):e instanceof ArrayBuffer)}function Ye(e){return"[object DataView]"===Ue(e)}function qe(e){return"undefined"!=typeof DataView&&(Ye.working?Ye(e):e instanceof DataView)}function ze(e){return"[object SharedArrayBuffer]"===Ue(e)}function Ve(e){return"undefined"!=typeof SharedArrayBuffer&&(ze.working?ze(e):e instanceof SharedArrayBuffer)}function Ge(e){return Ce(e,Pe)}function Xe(e){return Ce(e,Ie)}function Je(e){return Ce(e,je)}function Ze(e){return Oe&&Ce(e,xe)}function $e(e){return Le&&Ce(e,Ne)}ke.isArgumentsObject=x,ke.isGeneratorFunction=function(e){return"function"==typeof e&&(!!K.test(W.call(e))||(Y?q(e)===V:"[object GeneratorFunction]"===H.call(e)))},ke.isTypedArray=Re,ke.isPromise=function(e){return"undefined"!=typeof Promise&&e instanceof Promise||null!==e&&"object"==typeof e&&"function"==typeof e.then&&"function"==typeof e.catch},ke.isArrayBufferView=function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):Re(e)||qe(e)},ke.isUint8Array=function(e){return"Uint8Array"===Te(e)},ke.isUint8ClampedArray=function(e){return"Uint8ClampedArray"===Te(e)},ke.isUint16Array=function(e){return"Uint16Array"===Te(e)},ke.isUint32Array=function(e){return"Uint32Array"===Te(e)},ke.isInt8Array=function(e){return"Int8Array"===Te(e)},ke.isInt16Array=function(e){return"Int16Array"===Te(e)},ke.isInt32Array=function(e){return"Int32Array"===Te(e)},ke.isFloat32Array=function(e){return"Float32Array"===Te(e)},ke.isFloat64Array=function(e){return"Float64Array"===Te(e)},ke.isBigInt64Array=function(e){return"BigInt64Array"===Te(e)},ke.isBigUint64Array=function(e){return"BigUint64Array"===Te(e)},Be.working="undefined"!=typeof Map&&Be(new Map),ke.isMap=function(e){return"undefined"!=typeof Map&&(Be.working?Be(e):e instanceof Map)},De.working="undefined"!=typeof Set&&De(new Set),ke.isSet=function(e){return"undefined"!=typeof Set&&(De.working?De(e):e instanceof Set)},Fe.working="undefined"!=typeof WeakMap&&Fe(new WeakMap),ke.isWeakMap=function(e){return"undefined"!=typeof WeakMap&&(Fe.working?Fe(e):e instanceof WeakMap)},He.working="undefined"!=typeof WeakSet&&He(new WeakSet),ke.isWeakSet=function(e){return He(e)},We.working="undefined"!=typeof ArrayBuffer&&We(new ArrayBuffer),ke.isArrayBuffer=Ke,Ye.working="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView&&Ye(new DataView(new ArrayBuffer(1),0,1)),ke.isDataView=qe,ze.working="undefined"!=typeof SharedArrayBuffer&&ze(new SharedArrayBuffer),ke.isSharedArrayBuffer=Ve,ke.isAsyncFunction=function(e){return"[object AsyncFunction]"===Ue(e)},ke.isMapIterator=function(e){return"[object Map Iterator]"===Ue(e)},ke.isSetIterator=function(e){return"[object Set Iterator]"===Ue(e)},ke.isGeneratorObject=function(e){return"[object Generator]"===Ue(e)},ke.isWebAssemblyCompiledModule=function(e){return"[object WebAssembly.Module]"===Ue(e)},ke.isNumberObject=Ge,ke.isStringObject=Xe,ke.isBooleanObject=Je,ke.isBigIntObject=Ze,ke.isSymbolObject=$e,ke.isBoxedPrimitive=function(e){return Ge(e)||Xe(e)||Je(e)||Ze(e)||$e(e)},ke.isAnyArrayBuffer=function(e){return"undefined"!=typeof Uint8Array&&(Ke(e)||Ve(e))},["isProxy","isExternal","isModuleNamespaceObject"].forEach((function(e){Object.defineProperty(ke,e,{enumerable:!1,value:function(){throw new Error(e+" is not supported in userland")}})}));var Qe={};Qe="function"==typeof Object.create?function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}};var et,tt,rt={},nt=rt={};function it(){throw new Error("setTimeout has not been defined")}function ot(){throw new Error("clearTimeout has not been defined")}function at(e){if(et===setTimeout)return setTimeout(e,0);if((et===it||!et)&&setTimeout)return et=setTimeout,setTimeout(e,0);try{return et(e,0)}catch(Bn){try{return et.call(null,e,0)}catch(Bn){return et.call(this,e,0)}}}!function(){try{et="function"==typeof setTimeout?setTimeout:it}catch(Bn){et=it}try{tt="function"==typeof clearTimeout?clearTimeout:ot}catch(Bn){tt=ot}}();var st,ut=[],ft=!1,lt=-1;function ct(){ft&&st&&(ft=!1,st.length?ut=st.concat(ut):lt=-1,ut.length&&ht())}function ht(){if(!ft){var e=at(ct);ft=!0;for(var t=ut.length;t;){for(st=ut,ut=[];++lt<t;)st&&st[lt].run();lt=-1,t=ut.length}st=null,ft=!1,function(e){if(tt===clearTimeout)return clearTimeout(e);if((tt===ot||!tt)&&clearTimeout)return tt=clearTimeout,clearTimeout(e);try{tt(e)}catch(Bn){try{return tt.call(null,e)}catch(Bn){return tt.call(this,e)}}}(e)}}function dt(e,t){this.fun=e,this.array=t}function pt(){}nt.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];ut.push(new dt(e,t)),1!==ut.length||ft||at(ht)},dt.prototype.run=function(){this.fun.apply(null,this.array)},nt.title="browser",nt.browser=!0,nt.env={},nt.argv=[],nt.version="",nt.versions={},nt.on=pt,nt.addListener=pt,nt.once=pt,nt.off=pt,nt.removeListener=pt,nt.removeAllListeners=pt,nt.emit=pt,nt.prependListener=pt,nt.prependOnceListener=pt,nt.listeners=function(e){return[]},nt.binding=function(e){throw new Error("process.binding is not supported")},nt.cwd=function(){return"/"},nt.chdir=function(e){throw new Error("process.chdir is not supported")},nt.umask=function(){return 0};var yt={};(function(e){(function(){var t=Object.getOwnPropertyDescriptors||function(e){for(var t=Object.keys(e),r={},n=0;n<t.length;n++)r[t[n]]=Object.getOwnPropertyDescriptor(e,t[n]);return r};if(e.env.NODE_DEBUG){var r=e.env.NODE_DEBUG;r=r.replace(/[|\\{}()[\]^$+?.]/g,"\\$&").replace(/\*/g,".*").replace(/,/g,"$|^").toUpperCase(),new RegExp("^"+r+"$","i")}function n(e,t){var r={seen:[],stylize:o};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),l(t)?r.showHidden=t:t&&yt._extend(r,t),p(r.showHidden)&&(r.showHidden=!1),p(r.depth)&&(r.depth=2),p(r.colors)&&(r.colors=!1),p(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=i),a(r,e,r.depth)}function i(e,t){var r=n.styles[t];return r?"\x1b["+n.colors[r][0]+"m"+e+"\x1b["+n.colors[r][1]+"m":e}function o(e,t){return e}function a(e,t,r){if(e.customInspect&&t&&v(t.inspect)&&t.inspect!==yt.inspect&&(!t.constructor||t.constructor.prototype!==t)){var n=t.inspect(r,e);return d(n)||(n=a(e,n,r)),n}var i=function(e,t){if(p(t))return e.stylize("undefined","undefined");if(d(t)){var r="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(r,"string")}return h(t)?e.stylize(""+t,"number"):l(t)?e.stylize(""+t,"boolean"):c(t)?e.stylize("null","null"):void 0}(e,t);if(i)return i;var o=Object.keys(t),g=function(e){var t={};return e.forEach((function(e,r){t[e]=!0})),t}(o);if(e.showHidden&&(o=Object.getOwnPropertyNames(t)),w(t)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return s(t);if(0===o.length){if(v(t)){var m=t.name?": "+t.name:"";return e.stylize("[Function"+m+"]","special")}if(y(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(b(t))return e.stylize(Date.prototype.toString.call(t),"date");if(w(t))return s(t)}var S,E="",A=!1,R=["{","}"];return f(t)&&(A=!0,R=["[","]"]),v(t)&&(E=" [Function"+(t.name?": "+t.name:"")+"]"),y(t)&&(E=" "+RegExp.prototype.toString.call(t)),b(t)&&(E=" "+Date.prototype.toUTCString.call(t)),w(t)&&(E=" "+s(t)),0!==o.length||A&&0!=t.length?r<0?y(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),S=A?function(e,t,r,n,i){for(var o=[],a=0,s=t.length;a<s;++a)_(t,String(a))?o.push(u(e,t,r,n,String(a),!0)):o.push("");return i.forEach((function(i){i.match(/^\d+$/)||o.push(u(e,t,r,n,i,!0))})),o}(e,t,r,g,o):o.map((function(n){return u(e,t,r,g,n,A)})),e.seen.pop(),function(e,t,r){return e.reduce((function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60?r[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+r[1]:r[0]+t+" "+e.join(", ")+" "+r[1]}(S,E,R)):R[0]+E+R[1]}function s(e){return"["+Error.prototype.toString.call(e)+"]"}function u(e,t,r,n,i,o){var s,u,f;if((f=Object.getOwnPropertyDescriptor(t,i)||{value:t[i]}).get?u=f.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):f.set&&(u=e.stylize("[Setter]","special")),_(n,i)||(s="["+i+"]"),u||(e.seen.indexOf(f.value)<0?(u=c(r)?a(e,f.value,null):a(e,f.value,r-1)).indexOf("\n")>-1&&(u=o?u.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+u.split("\n").map((function(e){return"   "+e})).join("\n")):u=e.stylize("[Circular]","special")),p(s)){if(o&&i.match(/^\d+$/))return u;(s=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(s=s.substr(1,s.length-2),s=e.stylize(s,"name")):(s=s.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),s=e.stylize(s,"string"))}return s+": "+u}function f(e){return Array.isArray(e)}function l(e){return"boolean"==typeof e}function c(e){return null===e}function h(e){return"number"==typeof e}function d(e){return"string"==typeof e}function p(e){return void 0===e}function y(e){return g(e)&&"[object RegExp]"===m(e)}function g(e){return"object"==typeof e&&null!==e}function b(e){return g(e)&&"[object Date]"===m(e)}function w(e){return g(e)&&("[object Error]"===m(e)||e instanceof Error)}function v(e){return"function"==typeof e}function m(e){return Object.prototype.toString.call(e)}yt.inspect=n,n.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},n.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},yt.types=ke,yt.types.isRegExp=y,yt.types.isDate=b,yt.types.isNativeError=w;function _(e,t){return Object.prototype.hasOwnProperty.call(e,t)}yt._extend=function(e,t){if(!t||!g(t))return e;for(var r=Object.keys(t),n=r.length;n--;)e[r[n]]=t[r[n]];return e};var S="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;yt.promisify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');if(S&&e[S]){var r;if("function"!=typeof(r=e[S]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(r,S,{value:r,enumerable:!1,writable:!1,configurable:!0}),r}function r(){for(var t,r,n=new Promise((function(e,n){t=e,r=n})),i=[],o=0;o<arguments.length;o++)i.push(arguments[o]);i.push((function(e,n){e?r(e):t(n)}));try{e.apply(this,i)}catch(a){r(a)}return n}return Object.setPrototypeOf(r,Object.getPrototypeOf(e)),S&&Object.defineProperty(r,S,{value:r,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(r,t(e))},yt.promisify.custom=S}).call(this)}).call(this,rt),I.util=j;for(var gt={Nacl:class{constructor(e){this.nonces=[],this.keys={publicKey:[],secretKey:[]},this.uint8keys={publicKey:"",secretKey:""},e?this.set(e):this.init()}init(){this.uint8keys=I.box.keyPair(),this.keys.publicKey=I.util.encodeBase64(this.uint8keys.publicKey),this.keys.secretKey=I.util.encodeBase64(this.uint8keys.secretKey)}set(e,t){try{this.uint8keys.publicKey=I.util.decodeBase64(e.publicKey),this.uint8keys.secretKey=I.util.decodeBase64(e.secretKey),this.keys=e}catch(Bn){this.keys.publicKey=I.util.encodeBase64(e.publicKey),this.keys.secretKey=I.util.encodeBase64(e.secretKey),this.uint8keys=e}}get(){return{publicKey:this.keys.publicKey,secretKey:this.keys.secretKey}}newNonce(){for(this.nonces.length>500&&this.nonces.slice(500,this.nonces.length-500);;){const e=I.randomBytes(I.secretbox.nonceLength),t=I.util.encodeBase64(e);if(!this.nonces.includes(t))return this.nonces.push(t),t}}hash(e,t,r,n){var i=Array.from(arguments);new yt.TextEncoder;const o=new P("SHA-512","TEXT",{encoding:"UTF8"});i.map(e=>{o.update(e)});const a=o.getHash("UINT8ARRAY");return I.util.encodeBase64(a)}encrypt(e,t,r){const n=I.util.decodeUTF8(e),i=I.util.decodeBase64(t),o=I.util.decodeBase64(r),a=I.box(n,i,o,this.uint8keys.secretKey);return I.util.encodeBase64(a)}decrypt(e,t,r){const n=I.util.decodeBase64(e),i=I.util.decodeBase64(t),o=I.util.decodeBase64(r),a=I.box.open(n,i,o,this.uint8keys.secretKey);return I.util.encodeUTF8(a)}publicKey(){return this.keys.publicKey}}},bt={},wt=b.EventEmitter,vt={toByteArray:function(e){var t,r,n=Tt(e),i=n[0],o=n[1],a=new St(function(e,t,r){return 3*(t+r)/4-r}(0,i,o)),s=0,u=o>0?i-4:i;for(r=0;r<u;r+=4)t=_t[e.charCodeAt(r)]<<18|_t[e.charCodeAt(r+1)]<<12|_t[e.charCodeAt(r+2)]<<6|_t[e.charCodeAt(r+3)],a[s++]=t>>16&255,a[s++]=t>>8&255,a[s++]=255&t;return 2===o&&(t=_t[e.charCodeAt(r)]<<2|_t[e.charCodeAt(r+1)]>>4,a[s++]=255&t),1===o&&(t=_t[e.charCodeAt(r)]<<10|_t[e.charCodeAt(r+1)]<<4|_t[e.charCodeAt(r+2)]>>2,a[s++]=t>>8&255,a[s++]=255&t),a},fromByteArray:function(e){for(var t,r=e.length,n=r%3,i=[],o=0,a=r-n;o<a;o+=16383)i.push(kt(e,o,o+16383>a?a:o+16383));return 1===n?(t=e[r-1],i.push(mt[t>>2]+mt[t<<4&63]+"==")):2===n&&(t=(e[r-2]<<8)+e[r-1],i.push(mt[t>>10]+mt[t>>4&63]+mt[t<<2&63]+"=")),i.join("")}},mt=[],_t=[],St="undefined"!=typeof Uint8Array?Uint8Array:Array,Et="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",At=0,Rt=Et.length;At<Rt;++At)mt[At]=Et[At],_t[Et.charCodeAt(At)]=At;function Tt(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function kt(e,t,r){for(var n,i,o=[],a=t;a<r;a+=3)n=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),o.push(mt[(i=n)>>18&63]+mt[i>>12&63]+mt[i>>6&63]+mt[63&i]);return o.join("")}_t["-".charCodeAt(0)]=62,_t["_".charCodeAt(0)]=63;var Mt={};function Ot(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Lt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Ut(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}Mt.read=function(e,t,r,n,i){var o,a,s=8*i-n-1,u=(1<<s)-1,f=u>>1,l=-7,c=r?i-1:0,h=r?-1:1,d=e[t+c];for(c+=h,o=d&(1<<-l)-1,d>>=-l,l+=s;l>0;o=256*o+e[t+c],c+=h,l-=8);for(a=o&(1<<-l)-1,o>>=-l,l+=n;l>0;a=256*a+e[t+c],c+=h,l-=8);if(0===o)o=1-f;else{if(o===u)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,n),o-=f}return(d?-1:1)*a*Math.pow(2,o-n)},Mt.write=function(e,t,r,n,i,o){var a,s,u,f=8*o-i-1,l=(1<<f)-1,c=l>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:o-1,p=n?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=l):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+c>=1?h/u:h*Math.pow(2,1-c))*u>=2&&(a++,u/=2),a+c>=l?(s=0,a=l):a+c>=1?(s=(t*u-1)*Math.pow(2,i),a+=c):(s=t*Math.pow(2,c-1)*Math.pow(2,i),a=0));i>=8;e[r+d]=255&s,d+=p,s/=256,i-=8);for(a=a<<i|s,f+=i;f>0;e[r+d]=255&a,d+=p,a/=256,f-=8);e[r+d-p]|=128*y};var Pt=y({}).Buffer,It=g({}).inspect,jt=It&&It.custom||"inspect",xt=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}var t,r;return t=e,(r=[{key:"push",value:function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length}},{key:"unshift",value:function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}},{key:"shift",value:function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(e){if(0===this.length)return"";for(var t=this.head,r=""+t.data;t=t.next;)r+=e+t.data;return r}},{key:"concat",value:function(e){if(0===this.length)return Pt.alloc(0);for(var t,r,n,i=Pt.allocUnsafe(e>>>0),o=this.head,a=0;o;)t=o.data,r=i,n=a,Pt.prototype.copy.call(t,r,n),a+=o.data.length,o=o.next;return i}},{key:"consume",value:function(e,t){var r;return e<this.head.data.length?(r=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):r=e===this.head.data.length?this.shift():t?this._getString(e):this._getBuffer(e),r}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(e){var t=this.head,r=1,n=t.data;for(e-=n.length;t=t.next;){var i=t.data,o=e>i.length?i.length:e;if(o===i.length?n+=i:n+=i.slice(0,e),0==(e-=o)){o===i.length?(++r,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=i.slice(o));break}++r}return this.length-=r,n}},{key:"_getBuffer",value:function(e){var t=Pt.allocUnsafe(e),r=this.head,n=1;for(r.data.copy(t),e-=r.data.length;r=r.next;){var i=r.data,o=e>i.length?i.length:e;if(i.copy(t,t.length-e,0,o),0==(e-=o)){o===i.length?(++n,r.next?this.head=r.next:this.head=this.tail=null):(this.head=r,r.data=i.slice(o));break}++n}return this.length-=n,t}},{key:jt,value:function(e,t){return It(this,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Ot(Object(r),!0).forEach((function(t){Lt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Ot(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},t,{depth:0,customInspect:!1}))}}])&&Ut(t.prototype,r),e}(),Nt={};(function(e){(function(){"use strict";function t(e,t){n(e,t),r(e)}function r(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit("close")}function n(e,t){e.emit("error",t)}Nt={destroy:function(i,o){var a=this,s=this._readableState&&this._readableState.destroyed,u=this._writableState&&this._writableState.destroyed;return s||u?(o?o(i):i&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,e.nextTick(n,this,i)):e.nextTick(n,this,i)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(i||null,(function(n){!o&&n?a._writableState?a._writableState.errorEmitted?e.nextTick(r,a):(a._writableState.errorEmitted=!0,e.nextTick(t,a,n)):e.nextTick(t,a,n):o?(e.nextTick(r,a),o(n)):e.nextTick(r,a)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,t){var r=e._readableState,n=e._writableState;r&&r.autoDestroy||n&&n.autoDestroy?e.destroy(t):e.emit("error",t)}}}).call(this)}).call(this,rt);var Ct={},Bt={};function Dt(e,t,r){r||(r=Error);var n=function(e){var r,n;function i(r,n,i){return e.call(this,function(e,r,n){return"string"==typeof t?t:t(e,r,n)}(r,n,i))||this}return n=e,(r=i).prototype=Object.create(n.prototype),r.prototype.constructor=r,r.__proto__=n,i}(r);n.prototype.name=r.name,n.prototype.code=e,Bt[e]=n}function Ft(e,t){if(Array.isArray(e)){var r=e.length;return e=e.map((function(e){return String(e)})),r>2?"one of ".concat(t," ").concat(e.slice(0,r-1).join(", "),", or ")+e[r-1]:2===r?"one of ".concat(t," ").concat(e[0]," or ").concat(e[1]):"of ".concat(t," ").concat(e[0])}return"of ".concat(t," ").concat(String(e))}Dt("ERR_INVALID_OPT_VALUE",(function(e,t){return'The value "'+t+'" is invalid for option "'+e+'"'}),TypeError),Dt("ERR_INVALID_ARG_TYPE",(function(e,t,r){var n,i,o,a;if("string"==typeof t&&("not ","not "===t.substr(0,"not ".length))?(n="must not be",t=t.replace(/^not /,"")):n="must be",o=e,(void 0===a||a>o.length)&&(a=o.length)," argument"===o.substring(a-" argument".length,a))i="The ".concat(e," ").concat(n," ").concat(Ft(t,"type"));else{var s=function(e,t,r){return"number"!=typeof r&&(r=0),!(r+".".length>e.length)&&-1!==e.indexOf(".",r)}(e)?"property":"argument";i='The "'.concat(e,'" ').concat(s," ").concat(n," ").concat(Ft(t,"type"))}return i+". Received type ".concat(typeof r)}),TypeError),Dt("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),Dt("ERR_METHOD_NOT_IMPLEMENTED",(function(e){return"The "+e+" method is not implemented"})),Dt("ERR_STREAM_PREMATURE_CLOSE","Premature close"),Dt("ERR_STREAM_DESTROYED",(function(e){return"Cannot call "+e+" after a stream was destroyed"})),Dt("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),Dt("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),Dt("ERR_STREAM_WRITE_AFTER_END","write after end"),Dt("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),Dt("ERR_UNKNOWN_ENCODING",(function(e){return"Unknown encoding: "+e}),TypeError),Dt("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),Ct.codes=Bt;var Ht=Ct.codes.ERR_INVALID_OPT_VALUE,Wt={getHighWaterMark:function(e,t,r,n){var i=function(e,t,r){return null!=e.highWaterMark?e.highWaterMark:t?e[r]:null}(t,n,r);if(null!=i){if(!isFinite(i)||Math.floor(i)!==i||i<0)throw new Ht(n?r:"highWaterMark",i);return Math.floor(i)}return e.objectMode?16:16384}},Kt={};(function(e){(function(){function t(t){try{if(!e.localStorage)return!1}catch(n){return!1}var r=e.localStorage[t];return null!=r&&"true"===String(r).toLowerCase()}Kt=function(e,r){if(t("noDeprecation"))return e;var n=!1;return function(){if(!n){if(t("throwDeprecation"))throw new Error(r);t("traceDeprecation")?console.trace(r):console.warn(r),n=!0}return e.apply(this,arguments)}}}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});var Yt={},qt=y({}),zt=qt.Buffer;function Vt(e,t){for(var r in e)t[r]=e[r]}function Gt(e,t,r){return zt(e,t,r)}zt.from&&zt.alloc&&zt.allocUnsafe&&zt.allocUnsafeSlow?Yt=qt:(Vt(qt,Yt),Yt.Buffer=Gt),Gt.prototype=Object.create(zt.prototype),Vt(zt,Gt),Gt.from=function(e,t,r){if("number"==typeof e)throw new TypeError("Argument must not be a number");return zt(e,t,r)},Gt.alloc=function(e,t,r){if("number"!=typeof e)throw new TypeError("Argument must be a number");var n=zt(e);return void 0!==t?"string"==typeof r?n.fill(t,r):n.fill(t):n.fill(0),n},Gt.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return zt(e)},Gt.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return qt.SlowBuffer(e)};var Xt=nr,Jt=Ct.codes,Zt=Jt.ERR_METHOD_NOT_IMPLEMENTED,$t=Jt.ERR_MULTIPLE_CALLBACK,Qt=Jt.ERR_TRANSFORM_ALREADY_TRANSFORMING,er=Jt.ERR_TRANSFORM_WITH_LENGTH_0,tr=d({});function rr(e,t){var r=this._transformState;r.transforming=!1;var n=r.writecb;if(null===n)return this.emit("error",new $t);r.writechunk=null,r.writecb=null,null!=t&&this.push(t),n(e);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function nr(e){if(!(this instanceof nr))return new nr(e);tr.call(this,e),this._transformState={afterTransform:rr.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",ir)}function ir(){var e=this;"function"!=typeof this._flush||this._readableState.destroyed?or(this,null,null):this._flush((function(t,r){or(e,t,r)}))}function or(e,t,r){if(t)return e.emit("error",t);if(null!=r&&e.push(r),e._writableState.length)throw new er;if(e._transformState.transforming)throw new Qt;return e.push(null)}Qe(nr,tr),nr.prototype.push=function(e,t){return this._transformState.needTransform=!1,tr.prototype.push.call(this,e,t)},nr.prototype._transform=function(e,t,r){r(new Zt("_transform()"))},nr.prototype._write=function(e,t,r){var n=this._transformState;if(n.writecb=r,n.writechunk=e,n.writeencoding=t,!n.transforming){var i=this._readableState;(n.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},nr.prototype._read=function(e){var t=this._transformState;null===t.writechunk||t.transforming?t.needTransform=!0:(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform))},nr.prototype._destroy=function(e,t){tr.prototype._destroy.call(this,e,(function(e){t(e)}))};var ar,sr=ur;function ur(e){if(!(this instanceof ur))return new ur(e);Xt.call(this,e)}Qe(ur,Xt),ur.prototype._transform=function(e,t,r){r(null,e)};var fr=Ct.codes,lr=fr.ERR_MISSING_ARGS,cr=fr.ERR_STREAM_DESTROYED;function hr(e){if(e)throw e}function dr(e){e()}function pr(e,t){return e.pipe(t)}var yr={};(yr=yr=u({})).Stream=yr,yr.Readable=yr,yr.Writable=p({}),yr.Duplex=d({}),yr.Transform=Xt,yr.PassThrough=sr,yr.finished=c({}),yr.pipeline=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n,i=function(e){return e.length?"function"!=typeof e[e.length-1]?hr:e.pop():hr}(t);if(Array.isArray(t[0])&&(t=t[0]),t.length<2)throw new lr("streams");var o=t.map((function(e,r){var a=r<t.length-1;return function(e,t,r,n){n=function(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}(n);var i=!1;e.on("close",(function(){i=!0})),void 0===ar&&(ar=c({})),ar(e,{readable:t,writable:r},(function(e){if(e)return n(e);i=!0,n()}));var o=!1;return function(t){if(!i&&!o)return o=!0,function(e){return e.setHeader&&"function"==typeof e.abort}(e)?e.abort():"function"==typeof e.destroy?e.destroy():void n(t||new cr("pipe"))}}(e,a,r>0,(function(e){n||(n=e),e&&o.forEach(dr),a||(o.forEach(dr),i(n))}))}));return t.reduce(pr)};var gr={};const{Transform:br}=yr;function wr(e){return(t,r,n)=>("function"==typeof t&&(n=r,r=t,t={}),"function"!=typeof r&&(r=(e,t,r)=>r(null,e)),"function"!=typeof n&&(n=null),e(t,r,n))}const vr=wr((e,t,r)=>{const n=new br(e);return n._transform=t,r&&(n._flush=r),n}),mr=wr((e,t,r)=>{function n(i){if(!(this instanceof n))return new n(i);this.options=Object.assign({},e,i),br.call(this,this.options),this._transform=t,r&&(this._flush=r)}return o=br,(i=n).super_=o,i.prototype=Object.create(o.prototype,{constructor:{value:i,enumerable:!1,writable:!0,configurable:!0}}),n;var i,o}),_r=wr((function(e,t,r){const n=new br(Object.assign({objectMode:!0,highWaterMark:16},e));return n._transform=t,r&&(n._flush=r),n}));(gr=vr).ctor=mr,gr.obj=_r;var Sr=b.EventEmitter;function Er(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Ar(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Rr(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var Tr=y({}).Buffer,kr=g({}).inspect,Mr=kr&&kr.custom||"inspect",Or=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}var t,r;return t=e,(r=[{key:"push",value:function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length}},{key:"unshift",value:function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length}},{key:"shift",value:function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(e){if(0===this.length)return"";for(var t=this.head,r=""+t.data;t=t.next;)r+=e+t.data;return r}},{key:"concat",value:function(e){if(0===this.length)return Tr.alloc(0);for(var t,r,n,i=Tr.allocUnsafe(e>>>0),o=this.head,a=0;o;)t=o.data,r=i,n=a,Tr.prototype.copy.call(t,r,n),a+=o.data.length,o=o.next;return i}},{key:"consume",value:function(e,t){var r;return e<this.head.data.length?(r=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):r=e===this.head.data.length?this.shift():t?this._getString(e):this._getBuffer(e),r}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(e){var t=this.head,r=1,n=t.data;for(e-=n.length;t=t.next;){var i=t.data,o=e>i.length?i.length:e;if(o===i.length?n+=i:n+=i.slice(0,e),0==(e-=o)){o===i.length?(++r,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=i.slice(o));break}++r}return this.length-=r,n}},{key:"_getBuffer",value:function(e){var t=Tr.allocUnsafe(e),r=this.head,n=1;for(r.data.copy(t),e-=r.data.length;r=r.next;){var i=r.data,o=e>i.length?i.length:e;if(i.copy(t,t.length-e,0,o),0==(e-=o)){o===i.length?(++n,r.next?this.head=r.next:this.head=this.tail=null):(this.head=r,r.data=i.slice(o));break}++n}return this.length-=n,t}},{key:Mr,value:function(e,t){return kr(this,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Er(Object(r),!0).forEach((function(t){Ar(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Er(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},t,{depth:0,customInspect:!1}))}}])&&Rr(t.prototype,r),e}(),Lr={};(function(e){(function(){"use strict";function t(e,t){n(e,t),r(e)}function r(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit("close")}function n(e,t){e.emit("error",t)}Lr={destroy:function(i,o){var a=this,s=this._readableState&&this._readableState.destroyed,u=this._writableState&&this._writableState.destroyed;return s||u?(o?o(i):i&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,e.nextTick(n,this,i)):e.nextTick(n,this,i)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(i||null,(function(n){!o&&n?a._writableState?a._writableState.errorEmitted?e.nextTick(r,a):(a._writableState.errorEmitted=!0,e.nextTick(t,a,n)):e.nextTick(t,a,n):o?(e.nextTick(r,a),o(n)):e.nextTick(r,a)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,t){var r=e._readableState,n=e._writableState;r&&r.autoDestroy||n&&n.autoDestroy?e.destroy(t):e.emit("error",t)}}}).call(this)}).call(this,rt);var Ur={},Pr={};function Ir(e,t,r){r||(r=Error);var n=function(e){var r,n;function i(r,n,i){return e.call(this,function(e,r,n){return"string"==typeof t?t:t(e,r,n)}(r,n,i))||this}return n=e,(r=i).prototype=Object.create(n.prototype),r.prototype.constructor=r,r.__proto__=n,i}(r);n.prototype.name=r.name,n.prototype.code=e,Pr[e]=n}function jr(e,t){if(Array.isArray(e)){var r=e.length;return e=e.map((function(e){return String(e)})),r>2?"one of ".concat(t," ").concat(e.slice(0,r-1).join(", "),", or ")+e[r-1]:2===r?"one of ".concat(t," ").concat(e[0]," or ").concat(e[1]):"of ".concat(t," ").concat(e[0])}return"of ".concat(t," ").concat(String(e))}Ir("ERR_INVALID_OPT_VALUE",(function(e,t){return'The value "'+t+'" is invalid for option "'+e+'"'}),TypeError),Ir("ERR_INVALID_ARG_TYPE",(function(e,t,r){var n,i,o,a;if("string"==typeof t&&("not ","not "===t.substr(0,"not ".length))?(n="must not be",t=t.replace(/^not /,"")):n="must be",o=e,(void 0===a||a>o.length)&&(a=o.length)," argument"===o.substring(a-" argument".length,a))i="The ".concat(e," ").concat(n," ").concat(jr(t,"type"));else{var s=function(e,t,r){return"number"!=typeof r&&(r=0),!(r+".".length>e.length)&&-1!==e.indexOf(".",r)}(e)?"property":"argument";i='The "'.concat(e,'" ').concat(s," ").concat(n," ").concat(jr(t,"type"))}return i+". Received type ".concat(typeof r)}),TypeError),Ir("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),Ir("ERR_METHOD_NOT_IMPLEMENTED",(function(e){return"The "+e+" method is not implemented"})),Ir("ERR_STREAM_PREMATURE_CLOSE","Premature close"),Ir("ERR_STREAM_DESTROYED",(function(e){return"Cannot call "+e+" after a stream was destroyed"})),Ir("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),Ir("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),Ir("ERR_STREAM_WRITE_AFTER_END","write after end"),Ir("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),Ir("ERR_UNKNOWN_ENCODING",(function(e){return"Unknown encoding: "+e}),TypeError),Ir("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),Ur.codes=Pr;var xr=Ur.codes.ERR_INVALID_OPT_VALUE,Nr={getHighWaterMark:function(e,t,r,n){var i=function(e,t,r){return null!=e.highWaterMark?e.highWaterMark:t?e[r]:null}(t,n,r);if(null!=i){if(!isFinite(i)||Math.floor(i)!==i||i<0)throw new xr(n?r:"highWaterMark",i);return Math.floor(i)}return e.objectMode?16:16384}},Cr=qr,Br=Ur.codes,Dr=Br.ERR_METHOD_NOT_IMPLEMENTED,Fr=Br.ERR_MULTIPLE_CALLBACK,Hr=Br.ERR_TRANSFORM_ALREADY_TRANSFORMING,Wr=Br.ERR_TRANSFORM_WITH_LENGTH_0,Kr=a({});function Yr(e,t){var r=this._transformState;r.transforming=!1;var n=r.writecb;if(null===n)return this.emit("error",new Fr);r.writechunk=null,r.writecb=null,null!=t&&this.push(t),n(e);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function qr(e){if(!(this instanceof qr))return new qr(e);Kr.call(this,e),this._transformState={afterTransform:Yr.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",zr)}function zr(){var e=this;"function"!=typeof this._flush||this._readableState.destroyed?Vr(this,null,null):this._flush((function(t,r){Vr(e,t,r)}))}function Vr(e,t,r){if(t)return e.emit("error",t);if(null!=r&&e.push(r),e._writableState.length)throw new Wr;if(e._transformState.transforming)throw new Hr;return e.push(null)}Qe(qr,Kr),qr.prototype.push=function(e,t){return this._transformState.needTransform=!1,Kr.prototype.push.call(this,e,t)},qr.prototype._transform=function(e,t,r){r(new Dr("_transform()"))},qr.prototype._write=function(e,t,r){var n=this._transformState;if(n.writecb=r,n.writechunk=e,n.writeencoding=t,!n.transforming){var i=this._readableState;(n.needTransform||i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}},qr.prototype._read=function(e){var t=this._transformState;null===t.writechunk||t.transforming?t.needTransform=!0:(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform))},qr.prototype._destroy=function(e,t){Kr.prototype._destroy.call(this,e,(function(e){t(e)}))};var Gr,Xr=Jr;function Jr(e){if(!(this instanceof Jr))return new Jr(e);Cr.call(this,e)}Qe(Jr,Cr),Jr.prototype._transform=function(e,t,r){r(null,e)};var Zr=Ur.codes,$r=Zr.ERR_MISSING_ARGS,Qr=Zr.ERR_STREAM_DESTROYED;function en(e){if(e)throw e}function tn(e){e()}function rn(e,t){return e.pipe(t)}var nn={};(nn=nn=r({})).Stream=nn,nn.Readable=nn,nn.Writable=s({}),nn.Duplex=a({}),nn.Transform=Cr,nn.PassThrough=Xr,nn.finished=o({}),nn.pipeline=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];var n,i=function(e){return e.length?"function"!=typeof e[e.length-1]?en:e.pop():en}(t);if(Array.isArray(t[0])&&(t=t[0]),t.length<2)throw new $r("streams");var a=t.map((function(e,r){var s=r<t.length-1;return function(e,t,r,n){n=function(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}(n);var i=!1;e.on("close",(function(){i=!0})),void 0===Gr&&(Gr=o({})),Gr(e,{readable:t,writable:r},(function(e){if(e)return n(e);i=!0,n()}));var a=!1;return function(t){if(!i&&!a)return a=!0,function(e){return e.setHeader&&"function"==typeof e.abort}(e)?e.abort():"function"==typeof e.destroy?e.destroy():void n(t||new Qr("pipe"))}}(e,s,r>0,(function(e){n||(n=e),e&&a.forEach(tn),s||(a.forEach(tn),i(n))}))}));return t.reduce(rn)};const{Transform:on}=nn,{StringDecoder:an}=h({}),sn=Symbol("last"),un=Symbol("decoder");function fn(e,t,r){var n;if(this.overflow){if(1===(n=this[un].write(e).split(this.matcher)).length)return r();n.shift(),this.overflow=!1}else this[sn]+=this[un].write(e),n=this[sn].split(this.matcher);this[sn]=n.pop();for(var i=0;i<n.length;i++)try{cn(this,this.mapper(n[i]))}catch(o){return r(o)}if(this.overflow=this[sn].length>this.maxLength,this.overflow&&!this.skipOverflow)return r(new Error("maximum buffer reached"));r()}function ln(e){if(this[sn]+=this[un].end(),this[sn])try{cn(this,this.mapper(this[sn]))}catch(t){return e(t)}e()}function cn(e,t){void 0!==t&&e.push(t)}function hn(e){return e}var dn={EOL:"\n"};function pn(e,t){var r=[],n=[];return null==t&&(t=function(e,t){return r[0]===t?"[Circular ~]":"[Circular ~."+n.slice(0,r.indexOf(t)).join(".")+"]"}),function(i,o){if(r.length>0){var a=r.indexOf(this);~a?r.splice(a+1):r.push(this),~a?n.splice(a,1/0,i):n.push(i),~r.indexOf(o)&&(o=t.call(this,i,o))}else r.push(o);return null==e?o:e.call(this,i,o)}}var yn={};const{EOL:gn}=dn;yn.parse=e=>((e=e||{}).strict=!1!==e.strict,function(e,t,r){switch(e=e||/\r?\n/,t=t||hn,r=r||{},arguments.length){case 1:"function"==typeof e?(t=e,e=/\r?\n/):"object"!=typeof e||e instanceof RegExp||(r=e,e=/\r?\n/);break;case 2:"function"==typeof e?(r=t,t=e,e=/\r?\n/):"object"==typeof t&&(r=t,t=hn)}(r=Object.assign({},r)).transform=fn,r.flush=ln,r.readableObjectMode=!0;const n=new on(r);return n[sn]="",n[un]=new an("utf8"),n.matcher=e,n.mapper=t,n.maxLength=r.maxLength,n.skipOverflow=r.skipOverflow,n.overflow=!1,n}((function(t){try{if(t)return JSON.parse(t)}catch(Bn){e.strict&&this.emit("error",new Error("Could not parse row "+t.slice(0,50)+"..."))}}),e));var bn,wn={Err:{SocketClosed:"socket is closed"}},vn=vn||{};vn.Connect="connect",vn.Disconnect="disconnect",vn.Message="message",vn.Error="error",vn.Reconnecting="reconnecting",vn.Reconnect="reconnect",bn={EvType:vn};const{Err:mn}=wn,{EvType:_n}=bn;var Sn={TcpTransport:class{constructor(e,t,r){this.events=new b,this.reconnectTimeout=r,this.reconnectHandle=null,this.socket=null,this.port=e,this.addr=t}on(e,t,r){return this.events.on(e,t,r)}once(e,t,r){return this.events.once(e,t,r)}off(e,t,r){return t?this.events.off(e,t,r):this.events.removeAllListeners(e)}trigger(){var e=Array.from(arguments);return this.events.emit.apply(this.events,e)}connect(){null!=this.socket&&this.close();var e=this;return this.socket=new bt.Socket,this.socket.setEncoding("utf8"),this.socket.pipe(yn.parse()).on("data",(function(t){e.trigger(_n.Message,t)})),this.socket.on("connect",(function(){e.trigger(_n.Connect)})),this.socket.on("close",(function(){e.trigger(_n.Disconnect),e.reconnectTimeout>0&&(e.trigger(_n.Reconnecting,e.reconnectTimeout),clearTimeout(e.reconnectHandle),e.reconnectHandle=setTimeout(e.reconnect.bind(e),e.reconnectTimeout))})),this.socket.on("error",(function(t){e.trigger(_n.Error,t),e.socket.destroy(),e.socket=null})),this.socket.connect(this.port,this.addr),this}send(e){if(!this.socket)return mn.SocketClosed;try{this.socket.write(JSON.stringify(e)+"\n")}catch(Bn){return Bn}return null}reconnect(){clearTimeout(this.reconnectHandle),this.trigger(_n.Reconnect,this.reconnectTimeout),this.connect(this.port,this.addr)}close(){this.socket.destroy(),this.socket=null}},TcpTestServer:e=>{var t=[],r=bt.createServer();return r.on("connection",e=>{t.push(e),e.setEncoding("utf8"),e.on("data",r=>{t.filter(t=>t!==e).map(e=>{e.write(r)})}),e.once("end",()=>{t=t.filter(t=>t!==e),e.destroy()}),e.on("error",r=>{t=t.filter(t=>t!==e),e.destroy()})}),r.listen(e,"127.0.0.1"),r}},En={};(function(e){(function(){var t=null;"undefined"!=typeof WebSocket?t=WebSocket:"undefined"!=typeof MozWebSocket?t=MozWebSocket:void 0!==e?t=e.WebSocket||e.MozWebSocket:"undefined"!=typeof window?t=window.WebSocket||window.MozWebSocket:"undefined"!=typeof self&&(t=self.WebSocket||self.MozWebSocket),En=t}).call(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{});const{Err:An}=wn,{EvType:Rn}=bn;var Tn={WsTransport:class{constructor(e,t){this.events=new b,this.reconnectTimeout=t,this.reconnectHandle=null,this.url=e,this.ws=null}on(e,t,r){return this.events.on(e,t,r)}once(e,t,r){return this.events.once(e,t,r)}off(e,t,r){return t?this.events.off(e,t,r):this.events.removeAllListeners(e)}trigger(){var e=Array.from(arguments);return this.events.emit.apply(this.events,e)}connect(){null!=this.ws&&this.close(),this.ws=new En(this.url);var e=this;return this.ws.onopen=()=>{e.trigger(Rn.Connect)},this.ws.onmessage=t=>{e.trigger(Rn.Message,t.data)},this.ws.onerror=t=>{e.trigger(Rn.Error,t),e.ws.close(),e.ws=null},this.ws.onclose=t=>{if(1e3==t.code){if(t.reason&&MsgType.hasOwnProperty(t.reason))return void e.trigger(Rn.Disconnect,t.reason)}else 1005!=t.code?e.reconnectTimeout>0&&(e.trigger(Rn.Reconnecting,e.reconnectTimeout),clearTimeout(e.reconnectHandle),e.reconnectHandle=setTimeout(e.reconnect.bind(e),e.reconnectTimeout)):e.trigger(Rn.Disconnect,t)},this}send(e){if(!this.ws||this.ws.readyState==En.CLOSED||this.ws.readyState==En.CLOSING)return An.SocketClosed;try{"object"==typeof e&&(e=JSON.stringify(e)),this.ws.send(e)}catch(Bn){return Bn}return null}reconnect(){clearTimeout(this.reconnectHandle),this.trigger(Rn.Reconnect,this.reconnectTimeout),this.connect(this.url)}close(){this.ws.close()}},WsTestServer:e=>{const t=new En.Server({port:e,noServer:!0});return t.on("connection",e=>{e.on("message",r=>{t.clients.forEach((function(t){t!==e&&t.readyState===En.OPEN&&t.send(r)}))})}),t}};const{Err:kn}=wn,{EvType:Mn}=bn;class On{constructor(e,t,r){this.id=r,this.transport=e,this.readInterval=t||1e3,this.readHandle=null,this.lastMsgID=-1,this.events=new b}on(e,t,r){return this.events.on(e,t,r)}once(e,t,r){return this.events.once(e,t,r)}off(e,t,r){return t?this.events.off(e,t,r):this.events.removeAllListeners(e)}trigger(){var e=Array.from(arguments);return this.events.emit.apply(this.events,e)}connect(){return clearInterval(this.readHandle),this.readHandle=setInterval(this.read.bind(this),this.readInterval),this.trigger(Mn.Connect),this}read(){const e=this.transport.read(this.id,this.lastMsgID);e.length&&(this.lastMsgID=e[e.length-1].id,e.map(e=>{this.trigger(Mn.Message,e.data)}))}send(e){return"object"==typeof e&&(e=JSON.stringify(e)),this.transport.publish(this.id,e),null}reconnect(){clearTimeout(this.reconnectHandle),this.trigger(Mn.Reconnect,this.reconnectTimeout),this.connect()}close(){clearInterval(this.readHandle),this.trigger(Mn.Disconnect),this.reconnectTimeout>0&&(this.trigger(Mn.Reconnecting,this.reconnectTimeout),clearTimeout(this.reconnectHandle),this.reconnectHandle=setTimeout(this.reconnect.bind(this),that.reconnectTimeout))}}var Ln={ArrayTransportProvider:class{constructor(e){this.readInterval=e||1e3,this.msgID=0,this.msgs=[],this.endpoints=[]}endPoint(){const e=this.endpoints.length,t=new On(this,this.readInterval,e);return this.endpoints.push(t),t}publish(e,t){const r=this.msgID++;this.msgs.push({id:r,from:e,data:t}),this.msgs.length>500&&this.msgs.slice(500,this.msgs.length-500)}read(e,t){return this.msgs.filter(t=>t.from!=e).filter(e=>e.id>t)}},ArrayTransport:On};const{Nacl:Un}=gt,{TcpTransport:Pn}=Sn,{WsTransport:In}=Tn,{ArrayTransport:jn}=Ln;var xn=xn||{};xn.Announce="announce",xn.Login="login",xn.LoginResponse="login-res",xn.Message="message";var Nn=Nn||{};Nn.Error="error",Nn.Message="message",Nn.Accept="accept",Nn.PeerConnect="peer.connect",Nn.PeerAccept="peer.accept",Nn.PeerLeave="peer.leave",Nn.PeerRenewHandle="renew.peerhandle",Nn.RenewMyHandle="renew.myhandle",Nn.Negotiating="negotiating";var Cn=Cn||{};Cn.PeerNotFound="peer-not-found",Cn.InProgress="in-progress",Cn.InvalidHash="invalid-hash",Cn.DuplicateHandle="duplicate.handle",Cn.InvalidSealedAuth="invalid.sealedauth",Cn.OK="ok"}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2stZmxhdC9fcHJlbHVkZSIsIm5vZGVfbW9kdWxlcy9ldmVudHMvZXZlbnRzLmpzIiwibm9kZV9tb2R1bGVzL3NwbGl0Mi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3JlYWRhYmxlLmpzIiwibm9kZV9tb2R1bGVzL3NwbGl0Mi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL2Zyb20tYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9zcGxpdDIvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9hc3luY19pdGVyYXRvci5qcyIsIm5vZGVfbW9kdWxlcy9zcGxpdDIvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9lbmQtb2Ytc3RyZWFtLmpzIiwibm9kZV9tb2R1bGVzL3NwbGl0Mi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX2R1cGxleC5qcyIsIm5vZGVfbW9kdWxlcy9zcGxpdDIvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV93cml0YWJsZS5qcyIsIm5vZGVfbW9kdWxlcy9uZGpzb24vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9yZWFkYWJsZS5qcyIsIm5vZGVfbW9kdWxlcy9uZGpzb24vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9mcm9tLWJyb3dzZXIuanMiLCJub2RlX21vZHVsZXMvbmRqc29uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvYXN5bmNfaXRlcmF0b3IuanMiLCJub2RlX21vZHVsZXMvbmRqc29uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZW5kLW9mLXN0cmVhbS5qcyIsIm5vZGVfbW9kdWxlcy9zdHJpbmdfZGVjb2Rlci9saWIvc3RyaW5nX2RlY29kZXIuanMiLCJub2RlX21vZHVsZXMvbmRqc29uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fZHVwbGV4LmpzIiwibm9kZV9tb2R1bGVzL25kanNvbi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3dyaXRhYmxlLmpzIiwibm9kZV9tb2R1bGVzL2J1ZmZlci9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9icm93c2VyLXJlc29sdmUvZW1wdHkuanMiLCJub2RlX21vZHVsZXMvanNzaGEvZGlzdC9zaGEuanMiLCJub2RlX21vZHVsZXMvdHdlZXRuYWNsL25hY2wtZmFzdC5qcyIsIm5vZGVfbW9kdWxlcy90d2VldG5hY2wtdXRpbC9uYWNsLXV0aWwuanMiLCJub2RlX21vZHVsZXMvaXMtYXJndW1lbnRzL2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL2lzLWdlbmVyYXRvci1mdW5jdGlvbi9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9mb3JlYWNoL2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL2FycmF5LWZpbHRlci9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9hdmFpbGFibGUtdHlwZWQtYXJyYXlzL2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL2hhcy1zeW1ib2xzL3NoYW1zLmpzIiwibm9kZV9tb2R1bGVzL2hhcy1zeW1ib2xzL2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL2Z1bmN0aW9uLWJpbmQvaW1wbGVtZW50YXRpb24uanMiLCJub2RlX21vZHVsZXMvZnVuY3Rpb24tYmluZC9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy9lcy1hYnN0cmFjdC9HZXRJbnRyaW5zaWMuanMiLCJub2RlX21vZHVsZXMvZXMtYWJzdHJhY3QvaGVscGVycy9jYWxsQmluZC5qcyIsIm5vZGVfbW9kdWxlcy9lcy1hYnN0cmFjdC9oZWxwZXJzL2NhbGxCb3VuZC5qcyIsIm5vZGVfbW9kdWxlcy9lcy1hYnN0cmFjdC9oZWxwZXJzL2dldE93blByb3BlcnR5RGVzY3JpcHRvci5qcyIsIm5vZGVfbW9kdWxlcy9pcy10eXBlZC1hcnJheS9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy93aGljaC10eXBlZC1hcnJheS9pbmRleC5qcyIsIm5vZGVfbW9kdWxlcy91dGlsL3N1cHBvcnQvdHlwZXMuanMiLCJub2RlX21vZHVsZXMvdXRpbC9zdXBwb3J0L2lzQnVmZmVyQnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9pbmhlcml0cy9pbmhlcml0c19icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy91dGlsL3V0aWwuanMiLCJjcnlwdG8vbmFjbC5qcyIsIm5vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanMiLCJub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9saWIvX2VtcHR5LmpzIiwibm9kZV9tb2R1bGVzL25kanNvbi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbS1icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL2llZWU3NTQvaW5kZXguanMiLCJub2RlX21vZHVsZXMvbmRqc29uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvYnVmZmVyX2xpc3QuanMiLCJub2RlX21vZHVsZXMvbmRqc29uL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZGVzdHJveS5qcyIsIm5vZGVfbW9kdWxlcy9uZGpzb24vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9lcnJvcnMtYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9uZGpzb24vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9zdGF0ZS5qcyIsIm5vZGVfbW9kdWxlcy91dGlsLWRlcHJlY2F0ZS9icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL3NhZmUtYnVmZmVyL2luZGV4LmpzIiwibm9kZV9tb2R1bGVzL25kanNvbi9ub2RlX21vZHVsZXMvcmVhZGFibGUtc3RyZWFtL2xpYi9fc3RyZWFtX3RyYW5zZm9ybS5qcyIsIm5vZGVfbW9kdWxlcy9uZGpzb24vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV9wYXNzdGhyb3VnaC5qcyIsIm5vZGVfbW9kdWxlcy9uZGpzb24vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9waXBlbGluZS5qcyIsIm5vZGVfbW9kdWxlcy9uZGpzb24vbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9yZWFkYWJsZS1icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL25kanNvbi9ub2RlX21vZHVsZXMvdGhyb3VnaDIvdGhyb3VnaDIuanMiLCJub2RlX21vZHVsZXMvc3BsaXQyL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvc3RyZWFtLWJyb3dzZXIuanMiLCJub2RlX21vZHVsZXMvc3BsaXQyL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvYnVmZmVyX2xpc3QuanMiLCJub2RlX21vZHVsZXMvc3BsaXQyL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvZGVzdHJveS5qcyIsIm5vZGVfbW9kdWxlcy9zcGxpdDIvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9lcnJvcnMtYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9zcGxpdDIvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvaW50ZXJuYWwvc3RyZWFtcy9zdGF0ZS5qcyIsIm5vZGVfbW9kdWxlcy9zcGxpdDIvbm9kZV9tb2R1bGVzL3JlYWRhYmxlLXN0cmVhbS9saWIvX3N0cmVhbV90cmFuc2Zvcm0uanMiLCJub2RlX21vZHVsZXMvc3BsaXQyL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL19zdHJlYW1fcGFzc3Rocm91Z2guanMiLCJub2RlX21vZHVsZXMvc3BsaXQyL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vbGliL2ludGVybmFsL3N0cmVhbXMvcGlwZWxpbmUuanMiLCJub2RlX21vZHVsZXMvc3BsaXQyL25vZGVfbW9kdWxlcy9yZWFkYWJsZS1zdHJlYW0vcmVhZGFibGUtYnJvd3Nlci5qcyIsIm5vZGVfbW9kdWxlcy9zcGxpdDIvaW5kZXguanMiLCJub2RlX21vZHVsZXMvb3MtYnJvd3NlcmlmeS9icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL2pzb24tc3RyaW5naWZ5LXNhZmUvc3RyaW5naWZ5LmpzIiwibm9kZV9tb2R1bGVzL25kanNvbi9pbmRleC5qcyIsInRyYW5zcG9ydC9lcnJvcnMuanMiLCJ0cmFuc3BvcnQvZXZlbnRzLnR5cGUuanMiLCJ0cmFuc3BvcnQvdGNwLmpzIiwibm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtd3MvYnJvd3Nlci5qcyIsInRyYW5zcG9ydC93cy5qcyIsInRyYW5zcG9ydC9hcnJheS5qcyJdLCJuYW1lcyI6WyJSZWZsZWN0T3duS2V5cyIsImNyZWF0ZU1vZHVsZUZhY3RvcnkiLCJ0IiwiZSIsInIiLCJleHBvcnRzIiwicGFyZW50IiwiXyRfc3RyZWFtX3JlYWRhYmxlXzUxIiwibW9kdWxlIiwiRHVwbGV4IiwiUmVhZGFibGUiLCJSZWFkYWJsZVN0YXRlIiwiXyRldmVudHNfMTMiLCJFdmVudEVtaXR0ZXIiLCJkZWJ1ZyIsIkVFbGlzdGVuZXJDb3VudCIsImVtaXR0ZXIiLCJ0eXBlIiwibGlzdGVuZXJzIiwibGVuZ3RoIiwiQnVmZmVyIiwiXyRidWZmZXJfOCIsIk91clVpbnQ4QXJyYXkiLCJnbG9iYWwiLCJVaW50OEFycmF5IiwiZGVidWdVdGlsIiwiXyRlbXB0eV82IiwiZGVidWdsb2ciLCJTdHJpbmdEZWNvZGVyIiwiY3JlYXRlUmVhZGFibGVTdHJlYW1Bc3luY0l0ZXJhdG9yIiwiZnJvbSIsImdldEhpZ2hXYXRlck1hcmsiLCJfJHN0YXRlXzYwIiwiX3JlcXVpcmUkY29kZXMiLCJfJGVycm9yc0Jyb3dzZXJfNDgiLCJjb2RlcyIsIkVSUl9JTlZBTElEX0FSR19UWVBFIiwiRVJSX1NUUkVBTV9QVVNIX0FGVEVSX0VPRiIsIkVSUl9NRVRIT0RfTk9UX0lNUExFTUVOVEVEIiwiRVJSX1NUUkVBTV9VTlNISUZUX0FGVEVSX0VORF9FVkVOVCIsIl8kaW5oZXJpdHNfYnJvd3Nlcl8yMCIsIl8kc3RyZWFtQnJvd3Nlcl82MSIsImVycm9yT3JEZXN0cm95IiwiXyRkZXN0cm95XzU2Iiwia1Byb3h5RXZlbnRzIiwib3B0aW9ucyIsInN0cmVhbSIsImlzRHVwbGV4IiwiXyREdXBsZXhfNDkiLCJ0aGlzIiwib2JqZWN0TW9kZSIsInJlYWRhYmxlT2JqZWN0TW9kZSIsImhpZ2hXYXRlck1hcmsiLCJidWZmZXIiLCJfJGJ1ZmZlcl9saXN0XzU1IiwicGlwZXMiLCJwaXBlc0NvdW50IiwiZmxvd2luZyIsImVuZGVkIiwiZW5kRW1pdHRlZCIsInJlYWRpbmciLCJzeW5jIiwibmVlZFJlYWRhYmxlIiwiZW1pdHRlZFJlYWRhYmxlIiwicmVhZGFibGVMaXN0ZW5pbmciLCJyZXN1bWVTY2hlZHVsZWQiLCJwYXVzZWQiLCJlbWl0Q2xvc2UiLCJhdXRvRGVzdHJveSIsImRlc3Ryb3llZCIsImRlZmF1bHRFbmNvZGluZyIsImF3YWl0RHJhaW4iLCJyZWFkaW5nTW9yZSIsImRlY29kZXIiLCJlbmNvZGluZyIsIl8kc3RyaW5nX2RlY29kZXJfNjMiLCJfcmVhZGFibGVTdGF0ZSIsInJlYWRhYmxlIiwicmVhZCIsIl9yZWFkIiwiZGVzdHJveSIsIl9kZXN0cm95IiwiY2FsbCIsInJlYWRhYmxlQWRkQ2h1bmsiLCJjaHVuayIsImFkZFRvRnJvbnQiLCJza2lwQ2h1bmtDaGVjayIsImVyIiwic3RhdGUiLCJlbmQiLCJwdXNoIiwiZW1pdFJlYWRhYmxlIiwiZW1pdFJlYWRhYmxlXyIsIm9iaiIsImlzQnVmZmVyIiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJwcm90b3R5cGUiLCJhZGRDaHVuayIsIndyaXRlIiwibWF5YmVSZWFkTW9yZSIsImVtaXQiLCJ1bnNoaWZ0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwic2V0IiwidmFsdWUiLCJfdW5kZXN0cm95IiwidW5kZXN0cm95IiwiZXJyIiwiY2IiLCJpc1BhdXNlZCIsInNldEVuY29kaW5nIiwiZW5jIiwicCIsImhlYWQiLCJjb250ZW50IiwiZGF0YSIsIm5leHQiLCJjbGVhciIsImhvd011Y2hUb1JlYWQiLCJuIiwicHJvY2VzcyIsIm5leHRUaWNrIiwiZmxvdyIsIm1heWJlUmVhZE1vcmVfIiwibGVuIiwidXBkYXRlUmVhZGFibGVMaXN0ZW5pbmciLCJzZWxmIiwibGlzdGVuZXJDb3VudCIsInJlc3VtZSIsIm5SZWFkaW5nTmV4dFRpY2siLCJyZXN1bWVfIiwiZnJvbUxpc3QiLCJyZXQiLCJzaGlmdCIsImpvaW4iLCJmaXJzdCIsImNvbmNhdCIsImNvbnN1bWUiLCJlbmRSZWFkYWJsZSIsImVuZFJlYWRhYmxlTlQiLCJ3U3RhdGUiLCJfd3JpdGFibGVTdGF0ZSIsImZpbmlzaGVkIiwiaW5kZXhPZiIsInhzIiwieCIsImkiLCJsIiwicGFyc2VJbnQiLCJuT3JpZyIsImRvUmVhZCIsInBpcGUiLCJkZXN0IiwicGlwZU9wdHMiLCJzcmMiLCJlbmRGbiIsInN0ZG91dCIsInN0ZGVyciIsInVucGlwZSIsIm9uZW5kIiwib25jZSIsIm9uIiwib251bnBpcGUiLCJ1bnBpcGVJbmZvIiwiaGFzVW5waXBlZCIsInJlbW92ZUxpc3RlbmVyIiwib25jbG9zZSIsIm9uZmluaXNoIiwib25kcmFpbiIsIm9uZXJyb3IiLCJvbmRhdGEiLCJjbGVhbmVkVXAiLCJuZWVkRHJhaW4iLCJwYXVzZSIsImV2ZW50IiwiZm4iLCJwcmVwZW5kTGlzdGVuZXIiLCJfZXZlbnRzIiwiQXJyYXkiLCJpc0FycmF5IiwiZGVzdHMiLCJpbmRleCIsInNwbGljZSIsImV2IiwicmVzIiwiYWRkTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJhcHBseSIsImFyZ3VtZW50cyIsIndyYXAiLCJfdGhpcyIsIm1ldGhvZCIsImJpbmQiLCJTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIiwiXyRhc3luY19pdGVyYXRvcl81NCIsIl9mcm9tTGlzdCIsIml0ZXJhYmxlIiwib3B0cyIsIl8kZnJvbUJyb3dzZXJfNTgiLCJfJGJyb3dzZXJfNDUiLCJ3aW5kb3ciLCJFcnJvciIsIl9PYmplY3Qkc2V0UHJvdG90eXBlTyIsIl9kZWZpbmVQcm9wZXJ0eSIsImtleSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiXyRlb3NfNTciLCJrTGFzdFJlc29sdmUiLCJrTGFzdFJlamVjdCIsImtFcnJvciIsImtFbmRlZCIsImtMYXN0UHJvbWlzZSIsImtIYW5kbGVQcm9taXNlIiwia1N0cmVhbSIsImNyZWF0ZUl0ZXJSZXN1bHQiLCJkb25lIiwicmVhZEFuZFJlc29sdmUiLCJpdGVyIiwicmVzb2x2ZSIsIkFzeW5jSXRlcmF0b3JQcm90b3R5cGUiLCJSZWFkYWJsZVN0cmVhbUFzeW5jSXRlcmF0b3JQcm90b3R5cGUiLCJzZXRQcm90b3R5cGVPZiIsImVycm9yIiwiUHJvbWlzZSIsInJlamVjdCIsInByb21pc2UiLCJsYXN0UHJvbWlzZSIsInRoZW4iLCJfdGhpczIiLCJfT2JqZWN0JGNyZWF0ZSIsIml0ZXJhdG9yIiwiY3JlYXRlIiwiY29kZSIsIkVSUl9TVFJFQU1fUFJFTUFUVVJFX0NMT1NFIiwibm9vcCIsImVvcyIsImNhbGxiYWNrIiwiY2FsbGVkIiwiX2xlbiIsImFyZ3MiLCJfa2V5Iiwib25sZWdhY3lmaW5pc2giLCJ3cml0YWJsZUVuZGVkIiwicmVhZGFibGVFbmRlZCIsIm9ucmVxdWVzdCIsInJlcSIsInNldEhlYWRlciIsImFib3J0Iiwib2JqZWN0S2V5cyIsImtleXMiLCJXcml0YWJsZSIsIl8kX3N0cmVhbV93cml0YWJsZV81MyIsInYiLCJhbGxvd0hhbGZPcGVuIiwib25FbmROVCIsImdldEJ1ZmZlciIsIkNvcmtlZFJlcXVlc3QiLCJlbnRyeSIsImZpbmlzaCIsImNvcmtSZXEiLCJwZW5kaW5nY2IiLCJjb3JrZWRSZXF1ZXN0c0ZyZWUiLCJXcml0YWJsZVN0YXRlIiwicmVhbEhhc0luc3RhbmNlIiwiaW50ZXJuYWxVdGlsIiwiZGVwcmVjYXRlIiwiXyRicm93c2VyXzY2IiwiRVJSX01VTFRJUExFX0NBTExCQUNLIiwiRVJSX1NUUkVBTV9DQU5OT1RfUElQRSIsIkVSUl9TVFJFQU1fREVTVFJPWUVEIiwiRVJSX1NUUkVBTV9OVUxMX1ZBTFVFUyIsIkVSUl9TVFJFQU1fV1JJVEVfQUZURVJfRU5EIiwiRVJSX1VOS05PV05fRU5DT0RJTkciLCJub3AiLCJ3cml0YWJsZU9iamVjdE1vZGUiLCJmaW5hbENhbGxlZCIsImVuZGluZyIsIm5vRGVjb2RlIiwiZGVjb2RlU3RyaW5ncyIsIndyaXRpbmciLCJjb3JrZWQiLCJidWZmZXJQcm9jZXNzaW5nIiwib253cml0ZSIsIndyaXRlY2IiLCJ3cml0ZWxlbiIsImZpbmlzaE1heWJlIiwiZXJyb3JFbWl0dGVkIiwibmVlZEZpbmlzaCIsImJ1ZmZlcmVkUmVxdWVzdCIsImNsZWFyQnVmZmVyIiwiYWZ0ZXJXcml0ZSIsImxhc3RCdWZmZXJlZFJlcXVlc3QiLCJwcmVmaW5pc2hlZCIsImJ1ZmZlcmVkUmVxdWVzdENvdW50IiwiX3dyaXRlIiwid3JpdGV2IiwiX3dyaXRldiIsImZpbmFsIiwiX2ZpbmFsIiwiZG9Xcml0ZSIsImhvbGRlciIsImNvdW50IiwiYWxsQnVmZmVycyIsImlzQnVmIiwiY2FsbEZpbmFsIiwibmVlZCIsInJTdGF0ZSIsImN1cnJlbnQiLCJvdXQiLCJfIiwiaGFzSW5zdGFuY2UiLCJGdW5jdGlvbiIsIm9iamVjdCIsIm5ld0NodW5rIiwibGFzdCIsImNvcmsiLCJ1bmNvcmsiLCJzZXREZWZhdWx0RW5jb2RpbmciLCJ0b0xvd2VyQ2FzZSIsIl8kc3RhdGVfNDAiLCJfJGVycm9yc0Jyb3dzZXJfMjgiLCJfJHN0cmVhbUJyb3dzZXJfNDEiLCJfJGRlc3Ryb3lfMzYiLCJfJER1cGxleF8yOSIsIl8kYnVmZmVyX2xpc3RfMzUiLCJfJGFzeW5jX2l0ZXJhdG9yXzM0IiwiXyRmcm9tQnJvd3Nlcl8zOCIsIl8kZW9zXzM3IiwiXyRzYWZlQnVmZmVyXzQ2IiwiaXNFbmNvZGluZyIsIm5iIiwibmVuYyIsInJldHJpZWQiLCJ0ZXh0IiwidXRmMTZUZXh0IiwidXRmMTZFbmQiLCJmaWxsTGFzdCIsInV0ZjhGaWxsTGFzdCIsImJhc2U2NFRleHQiLCJiYXNlNjRFbmQiLCJzaW1wbGVXcml0ZSIsInNpbXBsZUVuZCIsImxhc3ROZWVkIiwibGFzdFRvdGFsIiwibGFzdENoYXIiLCJhbGxvY1Vuc2FmZSIsInV0ZjhDaGVja0J5dGUiLCJieXRlIiwiYnVmIiwiY29weSIsInRvU3RyaW5nIiwiYyIsImNoYXJDb2RlQXQiLCJzbGljZSIsInRvdGFsIiwiaiIsIl8kX3N0cmVhbV9yZWFkYWJsZV8zMSIsIl8kX3N0cmVhbV93cml0YWJsZV8zMyIsIlNsb3dCdWZmZXIiLCJhbGxvYyIsIklOU1BFQ1RfTUFYX0JZVEVTIiwiY3JlYXRlQnVmZmVyIiwiUmFuZ2VFcnJvciIsIl9fcHJvdG9fXyIsImFyZyIsImVuY29kaW5nT3JPZmZzZXQiLCJUeXBlRXJyb3IiLCJzdHJpbmciLCJieXRlTGVuZ3RoIiwiYWN0dWFsIiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJmcm9tQXJyYXlMaWtlIiwiaXNJbnN0YW5jZSIsImFycmF5IiwiYnl0ZU9mZnNldCIsInZhbHVlT2YiLCJiIiwiY2hlY2tlZCIsIm51bWJlcklzTmFOIiwidG9QcmltaXRpdmUiLCJhc3NlcnRTaXplIiwic2l6ZSIsIm11c3RNYXRjaCIsImxvd2VyZWRDYXNlIiwidXRmOFRvQnl0ZXMiLCJiYXNlNjRUb0J5dGVzIiwic3dhcCIsIm0iLCJiaWRpcmVjdGlvbmFsSW5kZXhPZiIsInZhbCIsImRpciIsImFycmF5SW5kZXhPZiIsImxhc3RJbmRleE9mIiwiYXJyIiwiaW5kZXhTaXplIiwiYXJyTGVuZ3RoIiwidmFsTGVuZ3RoIiwiU3RyaW5nIiwicmVhZFVJbnQxNkJFIiwiZm91bmRJbmRleCIsImZvdW5kIiwiaGV4V3JpdGUiLCJvZmZzZXQiLCJOdW1iZXIiLCJyZW1haW5pbmciLCJzdHJMZW4iLCJwYXJzZWQiLCJzdWJzdHIiLCJ1dGY4V3JpdGUiLCJibGl0QnVmZmVyIiwiYXNjaWlXcml0ZSIsInN0ciIsImJ5dGVBcnJheSIsImxhdGluMVdyaXRlIiwiYmFzZTY0V3JpdGUiLCJ1Y3MyV3JpdGUiLCJ1bml0cyIsImhpIiwibG8iLCJiYXNlNjRTbGljZSIsInN0YXJ0IiwiXyRiYXNlNjRKc181IiwiZnJvbUJ5dGVBcnJheSIsInV0ZjhTbGljZSIsIk1hdGgiLCJtaW4iLCJzZWNvbmRCeXRlIiwidGhpcmRCeXRlIiwiZm91cnRoQnl0ZSIsInRlbXBDb2RlUG9pbnQiLCJmaXJzdEJ5dGUiLCJjb2RlUG9pbnQiLCJieXRlc1BlclNlcXVlbmNlIiwiY29kZVBvaW50cyIsIk1BWF9BUkdVTUVOVFNfTEVOR1RIIiwiZnJvbUNoYXJDb2RlIiwia01heExlbmd0aCIsIlRZUEVEX0FSUkFZX1NVUFBPUlQiLCJmb28iLCJjb25zb2xlIiwic3BlY2llcyIsInBvb2xTaXplIiwiZmlsbCIsImFsbG9jVW5zYWZlU2xvdyIsIl9pc0J1ZmZlciIsImNvbXBhcmUiLCJhIiwieSIsImxpc3QiLCJwb3MiLCJzd2FwMTYiLCJzd2FwMzIiLCJzd2FwNjQiLCJoZXhTbGljZSIsImFzY2lpU2xpY2UiLCJsYXRpbjFTbGljZSIsInV0ZjE2bGVTbGljZSIsInRvTG9jYWxlU3RyaW5nIiwiZXF1YWxzIiwiaW5zcGVjdCIsIm1heCIsInJlcGxhY2UiLCJ0cmltIiwidGFyZ2V0IiwidGhpc1N0YXJ0IiwidGhpc0VuZCIsInRoaXNDb3B5IiwidGFyZ2V0Q29weSIsImluY2x1ZGVzIiwiaXNGaW5pdGUiLCJ0b0pTT04iLCJfYXJyIiwidG9IZXgiLCJieXRlcyIsImNoZWNrT2Zmc2V0IiwiZXh0IiwiY2hlY2tJbnQiLCJjaGVja0lFRUU3NTQiLCJ3cml0ZUZsb2F0IiwibGl0dGxlRW5kaWFuIiwibm9Bc3NlcnQiLCJfJGllZWU3NTRfMTkiLCJ3cml0ZURvdWJsZSIsIm5ld0J1ZiIsInN1YmFycmF5IiwicmVhZFVJbnRMRSIsIm11bCIsInJlYWRVSW50QkUiLCJyZWFkVUludDgiLCJyZWFkVUludDE2TEUiLCJyZWFkVUludDMyTEUiLCJyZWFkVUludDMyQkUiLCJyZWFkSW50TEUiLCJwb3ciLCJyZWFkSW50QkUiLCJyZWFkSW50OCIsInJlYWRJbnQxNkxFIiwicmVhZEludDE2QkUiLCJyZWFkSW50MzJMRSIsInJlYWRJbnQzMkJFIiwicmVhZEZsb2F0TEUiLCJyZWFkRmxvYXRCRSIsInJlYWREb3VibGVMRSIsInJlYWREb3VibGVCRSIsIndyaXRlVUludExFIiwid3JpdGVVSW50QkUiLCJ3cml0ZVVJbnQ4Iiwid3JpdGVVSW50MTZMRSIsIndyaXRlVUludDE2QkUiLCJ3cml0ZVVJbnQzMkxFIiwid3JpdGVVSW50MzJCRSIsIndyaXRlSW50TEUiLCJsaW1pdCIsInN1YiIsIndyaXRlSW50QkUiLCJ3cml0ZUludDgiLCJ3cml0ZUludDE2TEUiLCJ3cml0ZUludDE2QkUiLCJ3cml0ZUludDMyTEUiLCJ3cml0ZUludDMyQkUiLCJ3cml0ZUZsb2F0TEUiLCJ3cml0ZUZsb2F0QkUiLCJ3cml0ZURvdWJsZUxFIiwid3JpdGVEb3VibGVCRSIsInRhcmdldFN0YXJ0IiwiY29weVdpdGhpbiIsIklOVkFMSURfQkFTRTY0X1JFIiwibGVhZFN1cnJvZ2F0ZSIsInRvQnl0ZUFycmF5Iiwic3BsaXQiLCJkc3QiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJSIiwiUmVmbGVjdCIsIlJlZmxlY3RBcHBseSIsInJlY2VpdmVyIiwib3duS2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5TmFtZXMiLCJOdW1iZXJJc05hTiIsImlzTmFOIiwiaW5pdCIsImV2ZW50TGlzdGVuZXIiLCJlcnJvckxpc3RlbmVyIiwiX2V2ZW50c0NvdW50IiwiX21heExpc3RlbmVycyIsImRlZmF1bHRNYXhMaXN0ZW5lcnMiLCJjaGVja0xpc3RlbmVyIiwibGlzdGVuZXIiLCJfZ2V0TWF4TGlzdGVuZXJzIiwidGhhdCIsIl9hZGRMaXN0ZW5lciIsInByZXBlbmQiLCJldmVudHMiLCJleGlzdGluZyIsIndhcm5pbmciLCJuZXdMaXN0ZW5lciIsIndhcm5lZCIsInciLCJ3YXJuIiwiX29uY2VXcmFwIiwiZmlyZWQiLCJ3cmFwRm4iLCJ3cmFwcGVkIiwiX2xpc3RlbmVycyIsInVud3JhcCIsImV2bGlzdGVuZXIiLCJhcnJheUNsb25lIiwic2V0TWF4TGlzdGVuZXJzIiwiZ2V0TWF4TGlzdGVuZXJzIiwiZG9FcnJvciIsIm1lc3NhZ2UiLCJjb250ZXh0IiwiaGFuZGxlciIsInByZXBlbmRPbmNlTGlzdGVuZXIiLCJwb3NpdGlvbiIsIm9yaWdpbmFsTGlzdGVuZXIiLCJwb3AiLCJvZmYiLCJyYXdMaXN0ZW5lcnMiLCJldmVudE5hbWVzIiwiXyRzaGFfMjYiLCJvIiwidSIsImYiLCJzIiwiYmluTGVuIiwiaCIsIkEiLCJFIiwic2VhcmNoIiwiY2hhckF0Iiwib3V0cHV0VXBwZXIiLCJ0b1VwcGVyQ2FzZSIsImI2NFBhZCIsIm91dHB1dExlbiIsInNoYWtlTGVuIiwiZm9ybWF0IiwibnVtUm91bmRzIiwiSCIsInVwZGF0ZSIsIlMiLCJnZXRIYXNoIiwiVSIsIkMiLCJUIiwiRiIsIksiLCJCIiwiTCIsInNldEhNQUNLZXkiLCJnIiwiayIsImdldEhNQUMiLCJZIiwiaGFzT3duUHJvcGVydHkiLCJkIiwiaG1hY0tleSIsIk4iLCJJIiwiTSIsIlgiLCJ6IiwiTyIsIlAiLCJWIiwiWiIsInEiLCJEIiwiRyIsIkoiLCJRIiwiVyIsIiQiLCJubiIsInJuIiwidG4iLCJlbiIsImttYWNLZXkiLCJmdW5jTmFtZSIsImN1c3RvbWl6YXRpb24iLCJkZWZpbmUiLCJhbWQiLCJqc1NIQSIsIl8kbmFjbEZhc3RfNjUiLCJuYWNsIiwiZ2YiLCJGbG9hdDY0QXJyYXkiLCJyYW5kb21ieXRlcyIsIl8wIiwiXzkiLCJnZjAiLCJnZjEiLCJfMTIxNjY1IiwiRDIiLCJ0czY0Iiwidm4iLCJ4aSIsInlpIiwiY3J5cHRvX3ZlcmlmeV8xNiIsImNyeXB0b192ZXJpZnlfMzIiLCJjcnlwdG9fY29yZV9zYWxzYTIwIiwiaW5wIiwiajAiLCJqMSIsImoyIiwiajMiLCJqNCIsImo1IiwiajYiLCJqNyIsImo4IiwiajkiLCJqMTAiLCJqMTEiLCJqMTIiLCJqMTMiLCJqMTQiLCJqMTUiLCJ4MCIsIngxIiwieDIiLCJ4MyIsIng0IiwieDUiLCJ4NiIsIng3IiwieDgiLCJ4OSIsIngxMCIsIngxMSIsIngxMiIsIngxMyIsIngxNCIsIngxNSIsImNyeXB0b19jb3JlX2hzYWxzYTIwIiwic2lnbWEiLCJjcnlwdG9fc3RyZWFtX3NhbHNhMjBfeG9yIiwiY3BvcyIsIm1wb3MiLCJjcnlwdG9fc3RyZWFtX3NhbHNhMjAiLCJjcnlwdG9fc3RyZWFtIiwic24iLCJjcnlwdG9fc3RyZWFtX3hvciIsInBvbHkxMzA1IiwidDAiLCJ0MSIsInQyIiwidDMiLCJ0NCIsInQ1IiwidDYiLCJ0NyIsIlVpbnQxNkFycmF5IiwicGFkIiwibGVmdG92ZXIiLCJmaW4iLCJjcnlwdG9fb25ldGltZWF1dGgiLCJvdXRwb3MiLCJjcnlwdG9fb25ldGltZWF1dGhfdmVyaWZ5IiwiaHBvcyIsImNyeXB0b19zZWNyZXRib3giLCJjcnlwdG9fc2VjcmV0Ym94X29wZW4iLCJzZXQyNTUxOSIsImNhcjI1NTE5IiwiZmxvb3IiLCJzZWwyNTUxOSIsInBhY2syNTUxOSIsIm5lcTI1NTE5IiwicGFyMjU1MTkiLCJ1bnBhY2syNTUxOSIsInQ4IiwidDkiLCJ0MTAiLCJ0MTEiLCJ0MTIiLCJ0MTMiLCJ0MTQiLCJ0MTUiLCJ0MTYiLCJ0MTciLCJ0MTgiLCJ0MTkiLCJ0MjAiLCJ0MjEiLCJ0MjIiLCJ0MjMiLCJ0MjQiLCJ0MjUiLCJ0MjYiLCJ0MjciLCJ0MjgiLCJ0MjkiLCJ0MzAiLCJiMCIsImIxIiwiYjIiLCJiMyIsImI0IiwiYjUiLCJiNiIsImI3IiwiYjgiLCJiOSIsImIxMCIsImIxMSIsImIxMiIsImIxMyIsImIxNCIsImIxNSIsImludjI1NTE5IiwicG93MjUyMyIsImNyeXB0b19zY2FsYXJtdWx0IiwieDMyIiwieDE2IiwiY3J5cHRvX3NjYWxhcm11bHRfYmFzZSIsImNyeXB0b19ib3hfa2V5cGFpciIsImNyeXB0b19ib3hfYmVmb3Jlbm0iLCJibG9ja3MiLCJkMCIsImQxIiwiZDIiLCJkMyIsImQ0IiwiZDUiLCJkNiIsImQ3IiwiZDgiLCJkOSIsImhpYml0IiwiaDAiLCJoMSIsImgyIiwiaDMiLCJoNCIsImg1IiwiaDYiLCJoNyIsImg4IiwiaDkiLCJyMCIsInIxIiwicjIiLCJyMyIsInI0IiwicjUiLCJyNiIsInI3IiwicjgiLCJyOSIsIm1hYyIsIm1hY3BvcyIsIm1hc2siLCJ3YW50IiwiY3J5cHRvX2JveF9hZnRlcm5tIiwiY3J5cHRvX2JveF9vcGVuX2FmdGVybm0iLCJjcnlwdG9faGFzaGJsb2Nrc19obCIsImhoIiwiaGwiLCJiaDAiLCJiaDEiLCJiaDIiLCJiaDMiLCJiaDQiLCJiaDUiLCJiaDYiLCJiaDciLCJibDAiLCJibDEiLCJibDIiLCJibDMiLCJibDQiLCJibDUiLCJibDYiLCJibDciLCJ0aCIsInRsIiwid2giLCJJbnQzMkFycmF5Iiwid2wiLCJhaDAiLCJhaDEiLCJhaDIiLCJhaDMiLCJhaDQiLCJhaDUiLCJhaDYiLCJhaDciLCJhbDAiLCJhbDEiLCJhbDIiLCJhbDMiLCJhbDQiLCJhbDUiLCJhbDYiLCJhbDciLCJjcnlwdG9faGFzaCIsImFkZCIsImNzd2FwIiwicGFjayIsInR4IiwidHkiLCJ6aSIsInNjYWxhcm11bHQiLCJzY2FsYXJiYXNlIiwiY3J5cHRvX3NpZ25fa2V5cGFpciIsInBrIiwic2siLCJzZWVkZWQiLCJtb2RMIiwiY2FycnkiLCJyZWR1Y2UiLCJjcnlwdG9fc2lnbiIsInNtIiwic21sZW4iLCJjcnlwdG9fc2lnbl9vcGVuIiwiY2hrIiwibnVtIiwiZGVuIiwiZGVuMiIsImRlbjQiLCJkZW42IiwiY3J5cHRvIiwiY2hlY2tMZW5ndGhzIiwiY2hlY2tBcnJheVR5cGVzIiwiY2xlYW51cCIsImxvd2xldmVsIiwiY3J5cHRvX2JveCIsImNyeXB0b19ib3hfb3BlbiIsImNyeXB0b19zZWNyZXRib3hfS0VZQllURVMiLCJjcnlwdG9fc2VjcmV0Ym94X05PTkNFQllURVMiLCJjcnlwdG9fc2VjcmV0Ym94X1pFUk9CWVRFUyIsImNyeXB0b19zZWNyZXRib3hfQk9YWkVST0JZVEVTIiwiY3J5cHRvX3NjYWxhcm11bHRfQllURVMiLCJjcnlwdG9fc2NhbGFybXVsdF9TQ0FMQVJCWVRFUyIsImNyeXB0b19ib3hfUFVCTElDS0VZQllURVMiLCJjcnlwdG9fYm94X1NFQ1JFVEtFWUJZVEVTIiwiY3J5cHRvX2JveF9CRUZPUkVOTUJZVEVTIiwiY3J5cHRvX2JveF9OT05DRUJZVEVTIiwiY3J5cHRvX2JveF9aRVJPQllURVMiLCJjcnlwdG9fYm94X0JPWFpFUk9CWVRFUyIsImNyeXB0b19zaWduX0JZVEVTIiwiY3J5cHRvX3NpZ25fUFVCTElDS0VZQllURVMiLCJjcnlwdG9fc2lnbl9TRUNSRVRLRVlCWVRFUyIsImNyeXB0b19zaWduX1NFRURCWVRFUyIsImNyeXB0b19oYXNoX0JZVEVTIiwicmFuZG9tQnl0ZXMiLCJzZWNyZXRib3giLCJtc2ciLCJub25jZSIsIm9wZW4iLCJib3giLCJrZXlMZW5ndGgiLCJub25jZUxlbmd0aCIsIm92ZXJoZWFkTGVuZ3RoIiwic2NhbGFyTXVsdCIsImJhc2UiLCJzY2FsYXJMZW5ndGgiLCJncm91cEVsZW1lbnRMZW5ndGgiLCJwdWJsaWNLZXkiLCJzZWNyZXRLZXkiLCJiZWZvcmUiLCJhZnRlciIsImtleVBhaXIiLCJmcm9tU2VjcmV0S2V5IiwicHVibGljS2V5TGVuZ3RoIiwic2VjcmV0S2V5TGVuZ3RoIiwic2hhcmVkS2V5TGVuZ3RoIiwic2lnbiIsInNpZ25lZE1zZyIsInRtcCIsIm1sZW4iLCJkZXRhY2hlZCIsInNpZyIsInZlcmlmeSIsImZyb21TZWVkIiwic2VlZCIsInNlZWRMZW5ndGgiLCJzaWduYXR1cmVMZW5ndGgiLCJoYXNoIiwiaGFzaExlbmd0aCIsInNldFBSTkciLCJtc0NyeXB0byIsImdldFJhbmRvbVZhbHVlcyIsIl8kbmFjbFV0aWxfNjQiLCJyb290IiwidXRpbCIsInZhbGlkYXRlQmFzZTY0IiwidGVzdCIsImRlY29kZVVURjgiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsImVuY29kZVVURjgiLCJkZWNvZGVVUklDb21wb25lbnQiLCJlc2NhcGUiLCJhdG9iIiwiZW5jb2RlQmFzZTY0IiwiZGVjb2RlQmFzZTY0IiwiYnRvYSIsIl8kaXNBcmd1bWVudHNfMjEiLCJoYXNUb1N0cmluZ1RhZyIsInRvU3RyaW5nVGFnIiwidG9TdHIiLCJpc1N0YW5kYXJkQXJndW1lbnRzIiwiaXNMZWdhY3lBcmd1bWVudHMiLCJjYWxsZWUiLCJzdXBwb3J0c1N0YW5kYXJkQXJndW1lbnRzIiwiX190b1N0cl8yMiIsImZuVG9TdHIiLCJpc0ZuUmVnZXgiLCJfX2hhc1RvU3RyaW5nVGFnXzIyIiwiZ2V0UHJvdG8iLCJnZW5lcmF0b3JGdW5jIiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJoYXNPd24iLCJfJGZvcmVhY2hfMTQiLCJjdHgiLCJfX2hhc093bl8zIiwiXyRhdmFpbGFibGVUeXBlZEFycmF5c180IiwiZmlsdGVyIiwiXyRhcnJheUZpbHRlcl8zIiwidHlwZWRBcnJheSIsIl8kaGFzU3ltYm9sc18xNyIsIm9yaWdTeW1ib2wiLCJzeW0iLCJzeW1PYmoiLCJzeW1zIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJkZXNjcmlwdG9yIiwiXyRzaGFtc18xOCIsIl9fdG9TdHJfMTUiLCJfJGZ1bmN0aW9uQmluZF8xNiIsImJvdW5kIiwiYm91bmRMZW5ndGgiLCJib3VuZEFyZ3MiLCJyZXN1bHQiLCJFbXB0eSIsIiRUeXBlRXJyb3IiLCIkZ09QRCIsIl8kY2FsbEJpbmRfMTAiLCJ0aHJvd1R5cGVFcnJvciIsIlRocm93VHlwZUVycm9yIiwiY2FsbGVlVGhyb3dzIiwiZ09QRHRocm93cyIsImhhc1N5bWJvbHMiLCJfX2dldFByb3RvXzkiLCJUeXBlZEFycmF5IiwiSU5UUklOU0lDUyIsIiVBcnJheSUiLCIlQXJyYXlCdWZmZXIlIiwiJUFycmF5QnVmZmVyUHJvdG90eXBlJSIsIiVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJSIsIiVBcnJheVByb3RvdHlwZSUiLCIlQXJyYXlQcm90b19lbnRyaWVzJSIsImVudHJpZXMiLCIlQXJyYXlQcm90b19mb3JFYWNoJSIsImZvckVhY2giLCIlQXJyYXlQcm90b19rZXlzJSIsIiVBcnJheVByb3RvX3ZhbHVlcyUiLCJ2YWx1ZXMiLCIlQXN5bmNGcm9tU3luY0l0ZXJhdG9yUHJvdG90eXBlJSIsIiVBc3luY0Z1bmN0aW9uJSIsIiVBc3luY0Z1bmN0aW9uUHJvdG90eXBlJSIsIiVBc3luY0dlbmVyYXRvciUiLCIlQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiUiLCIlQXN5bmNHZW5lcmF0b3JQcm90b3R5cGUlIiwiJUFzeW5jSXRlcmF0b3JQcm90b3R5cGUlIiwiJUF0b21pY3MlIiwiQXRvbWljcyIsIiVCb29sZWFuJSIsIkJvb2xlYW4iLCIlQm9vbGVhblByb3RvdHlwZSUiLCIlRGF0YVZpZXclIiwiRGF0YVZpZXciLCIlRGF0YVZpZXdQcm90b3R5cGUlIiwiJURhdGUlIiwiRGF0ZSIsIiVEYXRlUHJvdG90eXBlJSIsIiVkZWNvZGVVUkklIiwiZGVjb2RlVVJJIiwiJWRlY29kZVVSSUNvbXBvbmVudCUiLCIlZW5jb2RlVVJJJSIsImVuY29kZVVSSSIsIiVlbmNvZGVVUklDb21wb25lbnQlIiwiJUVycm9yJSIsIiVFcnJvclByb3RvdHlwZSUiLCIlZXZhbCUiLCJldmFsIiwiJUV2YWxFcnJvciUiLCJFdmFsRXJyb3IiLCIlRXZhbEVycm9yUHJvdG90eXBlJSIsIiVGbG9hdDMyQXJyYXklIiwiRmxvYXQzMkFycmF5IiwiJUZsb2F0MzJBcnJheVByb3RvdHlwZSUiLCIlRmxvYXQ2NEFycmF5JSIsIiVGbG9hdDY0QXJyYXlQcm90b3R5cGUlIiwiJUZ1bmN0aW9uJSIsIiVGdW5jdGlvblByb3RvdHlwZSUiLCIlR2VuZXJhdG9yJSIsIiVHZW5lcmF0b3JGdW5jdGlvbiUiLCIlR2VuZXJhdG9yUHJvdG90eXBlJSIsIiVJbnQ4QXJyYXklIiwiSW50OEFycmF5IiwiJUludDhBcnJheVByb3RvdHlwZSUiLCIlSW50MTZBcnJheSUiLCJJbnQxNkFycmF5IiwiJUludDE2QXJyYXlQcm90b3R5cGUlIiwiJUludDMyQXJyYXklIiwiJUludDMyQXJyYXlQcm90b3R5cGUlIiwiJWlzRmluaXRlJSIsIiVpc05hTiUiLCIlSXRlcmF0b3JQcm90b3R5cGUlIiwiJUpTT04lIiwiSlNPTiIsIiVKU09OUGFyc2UlIiwicGFyc2UiLCIlTWFwJSIsIk1hcCIsIiVNYXBJdGVyYXRvclByb3RvdHlwZSUiLCIlTWFwUHJvdG90eXBlJSIsIiVNYXRoJSIsIiVOdW1iZXIlIiwiJU51bWJlclByb3RvdHlwZSUiLCIlT2JqZWN0JSIsIiVPYmplY3RQcm90b3R5cGUlIiwiJU9ialByb3RvX3RvU3RyaW5nJSIsIiVPYmpQcm90b192YWx1ZU9mJSIsIiVwYXJzZUZsb2F0JSIsInBhcnNlRmxvYXQiLCIlcGFyc2VJbnQlIiwiJVByb21pc2UlIiwiJVByb21pc2VQcm90b3R5cGUlIiwiJVByb21pc2VQcm90b190aGVuJSIsIiVQcm9taXNlX2FsbCUiLCJhbGwiLCIlUHJvbWlzZV9yZWplY3QlIiwiJVByb21pc2VfcmVzb2x2ZSUiLCIlUHJveHklIiwiUHJveHkiLCIlUmFuZ2VFcnJvciUiLCIlUmFuZ2VFcnJvclByb3RvdHlwZSUiLCIlUmVmZXJlbmNlRXJyb3IlIiwiUmVmZXJlbmNlRXJyb3IiLCIlUmVmZXJlbmNlRXJyb3JQcm90b3R5cGUlIiwiJVJlZmxlY3QlIiwiJVJlZ0V4cCUiLCJSZWdFeHAiLCIlUmVnRXhwUHJvdG90eXBlJSIsIiVTZXQlIiwiU2V0IiwiJVNldEl0ZXJhdG9yUHJvdG90eXBlJSIsIiVTZXRQcm90b3R5cGUlIiwiJVNoYXJlZEFycmF5QnVmZmVyJSIsIlNoYXJlZEFycmF5QnVmZmVyIiwiJVNoYXJlZEFycmF5QnVmZmVyUHJvdG90eXBlJSIsIiVTdHJpbmclIiwiJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJSIsIiVTdHJpbmdQcm90b3R5cGUlIiwiJVN5bWJvbCUiLCIlU3ltYm9sUHJvdG90eXBlJSIsIiVTeW50YXhFcnJvciUiLCJTeW50YXhFcnJvciIsIiVTeW50YXhFcnJvclByb3RvdHlwZSUiLCIlVGhyb3dUeXBlRXJyb3IlIiwiJVR5cGVkQXJyYXklIiwiJVR5cGVkQXJyYXlQcm90b3R5cGUlIiwiJVR5cGVFcnJvciUiLCIlVHlwZUVycm9yUHJvdG90eXBlJSIsIiVVaW50OEFycmF5JSIsIiVVaW50OEFycmF5UHJvdG90eXBlJSIsIiVVaW50OENsYW1wZWRBcnJheSUiLCJVaW50OENsYW1wZWRBcnJheSIsIiVVaW50OENsYW1wZWRBcnJheVByb3RvdHlwZSUiLCIlVWludDE2QXJyYXklIiwiJVVpbnQxNkFycmF5UHJvdG90eXBlJSIsIiVVaW50MzJBcnJheSUiLCJVaW50MzJBcnJheSIsIiVVaW50MzJBcnJheVByb3RvdHlwZSUiLCIlVVJJRXJyb3IlIiwiVVJJRXJyb3IiLCIlVVJJRXJyb3JQcm90b3R5cGUlIiwiJVdlYWtNYXAlIiwiV2Vha01hcCIsIiVXZWFrTWFwUHJvdG90eXBlJSIsIiVXZWFrU2V0JSIsIldlYWtTZXQiLCIlV2Vha1NldFByb3RvdHlwZSUiLCIkcmVwbGFjZSIsInJlUHJvcE5hbWUiLCJyZUVzY2FwZUNoYXIiLCJfJEdldEludHJpbnNpY185IiwiYWxsb3dNaXNzaW5nIiwicGFydHMiLCJtYXRjaCIsIm51bWJlciIsInF1b3RlIiwic3ViU3RyaW5nIiwiZGVzYyIsIiRhcHBseSIsIiRjYWxsIiwiJHJlZmxlY3RBcHBseSIsIiRkZWZpbmVQcm9wZXJ0eSIsImFwcGx5QmluZCIsIiRpbmRleE9mIiwiXyRjYWxsQm91bmRfMTEiLCJpbnRyaW5zaWMiLCJfXyRnT1BEXzEyIiwiXyQkZ09QRF8xMiIsIl8kaXNUeXBlZEFycmF5XzIzIiwiJHRvU3RyaW5nIiwidHlwZWRBcnJheXMiLCIkc2xpY2UiLCJ0b1N0clRhZ3MiLCJwcm90byIsInN1cGVyUHJvdG8iLCJ0YWciLCJhbnlUcnVlIiwiZ2V0dGVyIiwiXyR3aGljaFR5cGVkQXJyYXlfNzAiLCJmb3VuZE5hbWUiLCJfJHR5cGVzXzY4IiwidW5jdXJyeVRoaXMiLCJCaWdJbnRTdXBwb3J0ZWQiLCJCaWdJbnQiLCJTeW1ib2xTdXBwb3J0ZWQiLCJPYmplY3RUb1N0cmluZyIsIm51bWJlclZhbHVlIiwic3RyaW5nVmFsdWUiLCJib29sZWFuVmFsdWUiLCJiaWdJbnRWYWx1ZSIsInN5bWJvbFZhbHVlIiwiY2hlY2tCb3hlZFByaW1pdGl2ZSIsInByb3RvdHlwZVZhbHVlT2YiLCJpc01hcFRvU3RyaW5nIiwiaXNTZXRUb1N0cmluZyIsImlzV2Vha01hcFRvU3RyaW5nIiwiaXNXZWFrU2V0VG9TdHJpbmciLCJpc0FycmF5QnVmZmVyVG9TdHJpbmciLCJpc0FycmF5QnVmZmVyIiwid29ya2luZyIsImlzRGF0YVZpZXdUb1N0cmluZyIsImlzRGF0YVZpZXciLCJpc1NoYXJlZEFycmF5QnVmZmVyVG9TdHJpbmciLCJpc1NoYXJlZEFycmF5QnVmZmVyIiwiaXNOdW1iZXJPYmplY3QiLCJpc1N0cmluZ09iamVjdCIsImlzQm9vbGVhbk9iamVjdCIsImlzQmlnSW50T2JqZWN0IiwiaXNTeW1ib2xPYmplY3QiLCJpc0FyZ3VtZW50c09iamVjdCIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJpc1R5cGVkQXJyYXkiLCJpc1Byb21pc2UiLCJpbnB1dCIsImNhdGNoIiwiaXNBcnJheUJ1ZmZlclZpZXciLCJpc1VpbnQ4QXJyYXkiLCJpc1VpbnQ4Q2xhbXBlZEFycmF5IiwiaXNVaW50MTZBcnJheSIsImlzVWludDMyQXJyYXkiLCJpc0ludDhBcnJheSIsImlzSW50MTZBcnJheSIsImlzSW50MzJBcnJheSIsImlzRmxvYXQzMkFycmF5IiwiaXNGbG9hdDY0QXJyYXkiLCJpc0JpZ0ludDY0QXJyYXkiLCJpc0JpZ1VpbnQ2NEFycmF5IiwiaXNNYXAiLCJpc1NldCIsImlzV2Vha01hcCIsImlzV2Vha1NldCIsImlzQXN5bmNGdW5jdGlvbiIsImlzTWFwSXRlcmF0b3IiLCJpc1NldEl0ZXJhdG9yIiwiaXNHZW5lcmF0b3JPYmplY3QiLCJpc1dlYkFzc2VtYmx5Q29tcGlsZWRNb2R1bGUiLCJpc0JveGVkUHJpbWl0aXZlIiwiaXNBbnlBcnJheUJ1ZmZlciIsImN0b3IiLCJzdXBlckN0b3IiLCJzdXBlcl8iLCJUZW1wQ3RvciIsImNhY2hlZFNldFRpbWVvdXQiLCJjYWNoZWRDbGVhclRpbWVvdXQiLCJkZWZhdWx0U2V0VGltb3V0IiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJzZXRUaW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwiY3VycmVudFF1ZXVlIiwicXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJkcmFpblF1ZXVlIiwidGltZW91dCIsInJ1biIsIm1hcmtlciIsIkl0ZW0iLCJ0aXRsZSIsImJyb3dzZXIiLCJlbnYiLCJhcmd2IiwidmVyc2lvbiIsInZlcnNpb25zIiwiYmluZGluZyIsImN3ZCIsImNoZGlyIiwidW1hc2siLCJfJHV0aWxfNjkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVzY3JpcHRvcnMiLCJOT0RFX0RFQlVHIiwiZGVidWdFbnYiLCJzZWVuIiwic3R5bGl6ZSIsInN0eWxpemVOb0NvbG9yIiwiZGVwdGgiLCJjb2xvcnMiLCJpc0Jvb2xlYW4iLCJzaG93SGlkZGVuIiwiX2V4dGVuZCIsImlzVW5kZWZpbmVkIiwiY3VzdG9tSW5zcGVjdCIsInN0eWxpemVXaXRoQ29sb3IiLCJmb3JtYXRWYWx1ZSIsInN0eWxlVHlwZSIsInN0eWxlIiwic3R5bGVzIiwicmVjdXJzZVRpbWVzIiwiaXNGdW5jdGlvbiIsImlzU3RyaW5nIiwicHJpbWl0aXZlIiwic2ltcGxlIiwic3RyaW5naWZ5IiwiaXNOdW1iZXIiLCJpc051bGwiLCJ2aXNpYmxlS2V5cyIsImlkeCIsImlzRXJyb3IiLCJmb3JtYXRFcnJvciIsImlzUmVnRXhwIiwiaXNEYXRlIiwib3V0cHV0IiwiYnJhY2VzIiwidG9VVENTdHJpbmciLCJmb3JtYXRQcm9wZXJ0eSIsIm1hcCIsInByZXYiLCJjdXIiLCJsaW5lIiwiYXIiLCJyZSIsImlzT2JqZWN0Iiwib2JqZWN0VG9TdHJpbmciLCJib2xkIiwiaXRhbGljIiwidW5kZXJsaW5lIiwiaW52ZXJzZSIsIndoaXRlIiwiZ3JleSIsImJsYWNrIiwiYmx1ZSIsImN5YW4iLCJncmVlbiIsIm1hZ2VudGEiLCJyZWQiLCJ5ZWxsb3ciLCJzcGVjaWFsIiwiYm9vbGVhbiIsInVuZGVmaW5lZCIsIm51bGwiLCJkYXRlIiwicmVnZXhwIiwidHlwZXMiLCJpc05hdGl2ZUVycm9yIiwicHJvcCIsIm9yaWdpbiIsImtDdXN0b21Qcm9taXNpZmllZFN5bWJvbCIsInByb21pc2lmeSIsIm9yaWdpbmFsIiwicHJvbWlzZVJlc29sdmUiLCJwcm9taXNlUmVqZWN0IiwiZGVmaW5lUHJvcGVydGllcyIsImN1c3RvbSIsIl8kbmFjbF8xIiwiTmFjbCIsIltvYmplY3QgT2JqZWN0XSIsIm5vbmNlcyIsInVpbnQ4a2V5cyIsImJub25jZSIsInJvb21JRCIsInJvb21Qd2QiLCJtZVB1YktleUI2NCIsIlRleHRFbmNvZGVyIiwic2hhT2JqIiwibm9uY2ViNjQiLCJyZW1vdGVQdWJLZXlCNjQiLCJiZGF0YSIsInJlbW90ZVB1YktleSIsImNyeXB0ZWQiLCJkYXRhYjY0IiwiXyRfZW1wdHlfNyIsImI2NCIsImxlbnMiLCJnZXRMZW5zIiwidmFsaWRMZW4iLCJwbGFjZUhvbGRlcnNMZW4iLCJBcnIiLCJjdXJCeXRlIiwicmV2TG9va3VwIiwidWludDgiLCJleHRyYUJ5dGVzIiwibGVuMiIsImVuY29kZUNodW5rIiwibG9va3VwIiwiZW51bWVyYWJsZU9ubHkiLCJzeW1ib2xzIiwiX2RlZmluZVByb3BlcnRpZXMiLCJwcm9wcyIsImlzTEUiLCJtTGVuIiwibkJ5dGVzIiwiZUxlbiIsImVNYXgiLCJlQmlhcyIsIm5CaXRzIiwiTmFOIiwicnQiLCJhYnMiLCJsb2ciLCJMTjIiLCJCdWZmZXJMaXN0IiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsInRhaWwiLCJwcm90b1Byb3BzIiwiaGFzU3RyaW5ncyIsIl9nZXRTdHJpbmciLCJfZ2V0QnVmZmVyIiwic291cmNlIiwiZW1pdEVycm9yQW5kQ2xvc2VOVCIsImVtaXRFcnJvck5UIiwiZW1pdENsb3NlTlQiLCJyZWFkYWJsZURlc3Ryb3llZCIsIndyaXRhYmxlRGVzdHJveWVkIiwiY3JlYXRlRXJyb3JUeXBlIiwiQmFzZSIsIk5vZGVFcnJvciIsIl9CYXNlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiYXJnMSIsImFyZzIiLCJhcmczIiwib25lT2YiLCJleHBlY3RlZCIsInRoaW5nIiwiZGV0ZXJtaW5lciIsInRoaXNfbGVuIiwic3Vic3RyaW5nIiwiRVJSX0lOVkFMSURfT1BUX1ZBTFVFIiwiZHVwbGV4S2V5IiwiaHdtIiwiY29uZmlnIiwibG9jYWxTdG9yYWdlIiwidHJhY2UiLCJfX0J1ZmZlcl80NiIsImNvcHlQcm9wcyIsIlNhZmVCdWZmZXIiLCJfJFRyYW5zZm9ybV8zMiIsIlRyYW5zZm9ybSIsIkVSUl9UUkFOU0ZPUk1fQUxSRUFEWV9UUkFOU0ZPUk1JTkciLCJFUlJfVFJBTlNGT1JNX1dJVEhfTEVOR1RIXzAiLCJhZnRlclRyYW5zZm9ybSIsInRzIiwiX3RyYW5zZm9ybVN0YXRlIiwidHJhbnNmb3JtaW5nIiwid3JpdGVjaHVuayIsInJzIiwibmVlZFRyYW5zZm9ybSIsIndyaXRlZW5jb2RpbmciLCJ0cmFuc2Zvcm0iLCJfdHJhbnNmb3JtIiwiZmx1c2giLCJfZmx1c2giLCJwcmVmaW5pc2giLCJlcnIyIiwiXyRQYXNzVGhyb3VnaF8zMCIsIlBhc3NUaHJvdWdoIiwiX19fcmVxdWlyZSRjb2Rlc18zOSIsIkVSUl9NSVNTSU5HX0FSR1MiLCJfX25vb3BfMzkiLCJ0byIsIl8kcmVhZGFibGVCcm93c2VyXzQyIiwiU3RyZWFtIiwicGlwZWxpbmUiLCJzdHJlYW1zIiwiZGVzdHJveXMiLCJjbG9zZWQiLCJfJHRocm91Z2gyXzQzIiwiX19UcmFuc2Zvcm1fNDMiLCJ0aHJvdWdoMiIsImNvbnN0cnVjdCIsIm1ha2UiLCJUaHJvdWdoMiIsIm92ZXJyaWRlIiwiYXNzaWduIiwic3VwIiwiX19vd25LZXlzXzU1IiwiX19fZGVmaW5lUHJvcGVydHlfNTUiLCJfX19kZWZpbmVQcm9wZXJ0aWVzXzU1IiwiX19CdWZmZXJfNTUiLCJfX2luc3BlY3RfNTUiLCJfX2N1c3RvbV81NSIsIl9fY29kZXNfNDgiLCJfX2NyZWF0ZUVycm9yVHlwZV80OCIsIl9fb25lT2ZfNDgiLCJfX0VSUl9JTlZBTElEX09QVF9WQUxVRV82MCIsIl8kVHJhbnNmb3JtXzUyIiwiX19UcmFuc2Zvcm1fNTIiLCJfX19yZXF1aXJlJGNvZGVzXzUyIiwiX19FUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRF81MiIsIl9fRVJSX01VTFRJUExFX0NBTExCQUNLXzUyIiwiX19FUlJfVFJBTlNGT1JNX0FMUkVBRFlfVFJBTlNGT1JNSU5HXzUyIiwiX19FUlJfVFJBTlNGT1JNX1dJVEhfTEVOR1RIXzBfNTIiLCJfX0R1cGxleF81MiIsIl9fYWZ0ZXJUcmFuc2Zvcm1fNTIiLCJfX3ByZWZpbmlzaF81MiIsIl9fZG9uZV81MiIsIl9fZW9zXzU5IiwiXyRQYXNzVGhyb3VnaF81MCIsIl9fUGFzc1Rocm91Z2hfNTAiLCJfX19yZXF1aXJlJGNvZGVzXzU5IiwiX19FUlJfTUlTU0lOR19BUkdTXzU5IiwiX19FUlJfU1RSRUFNX0RFU1RST1lFRF81OSIsIl9fbm9vcF81OSIsIl9fY2FsbF81OSIsIl9fcGlwZV81OSIsIl8kcmVhZGFibGVCcm93c2VyXzYyIiwiX19UcmFuc2Zvcm1fNDciLCJfX1N0cmluZ0RlY29kZXJfNDciLCJrTGFzdCIsImtEZWNvZGVyIiwib3ZlcmZsb3ciLCJtYXRjaGVyIiwibWFwcGVyIiwibWF4TGVuZ3RoIiwic2tpcE92ZXJmbG93IiwiX19ub29wXzQ3IiwiaW5jb21pbmciLCJfJGJyb3dzZXJfNDQiLCJFT0wiLCJzZXJpYWxpemVyIiwicmVwbGFjZXIiLCJjeWNsZVJlcGxhY2VyIiwic3RhY2siLCJ0aGlzUG9zIiwiXyRuZGpzb25fMjciLCJzdHJpY3QiLCJfJHNwbGl0Ml80NyIsInJvdyIsIl8kZXZlbnRzVHlwZV83MyIsIl8kZXJyb3JzXzcyIiwiRXJyIiwiU29ja2V0Q2xvc2VkIiwiRXZUeXBlIiwiQ29ubmVjdCIsIkRpc2Nvbm5lY3QiLCJNZXNzYWdlIiwiUmVjb25uZWN0aW5nIiwiUmVjb25uZWN0IiwiX19FcnJfNzQiLCJfX0V2VHlwZV83NCIsIl8kdGNwXzc0IiwiVGNwVHJhbnNwb3J0IiwicG9ydCIsImFkZHIiLCJyZWNvbm5lY3RUaW1lb3V0IiwicmVjb25uZWN0SGFuZGxlIiwic29ja2V0IiwiaGFuZGxlIiwiY2xvc2UiLCJTb2NrZXQiLCJ0cmlnZ2VyIiwicmVjb25uZWN0IiwiY29ubmVjdCIsIlRjcFRlc3RTZXJ2ZXIiLCJjb25ucyIsInNlcnZlciIsImNyZWF0ZVNlcnZlciIsImNvbm4iLCJsaXN0ZW4iLCJfJGJyb3dzZXJfMjQiLCJ3cyIsIldlYlNvY2tldCIsIk1veldlYlNvY2tldCIsIl9fRXJyXzc1IiwiX19FdlR5cGVfNzUiLCJfJHdzXzc1IiwiV3NUcmFuc3BvcnQiLCJ1cmwiLCJvbm9wZW4iLCJvbm1lc3NhZ2UiLCJyZWFzb24iLCJNc2dUeXBlIiwicmVhZHlTdGF0ZSIsIkNMT1NFRCIsIkNMT1NJTkciLCJzZW5kIiwiV3NUZXN0U2VydmVyIiwiU2VydmVyIiwibm9TZXJ2ZXIiLCJjbGllbnRzIiwiY2xpZW50IiwiT1BFTiIsIl9fRXJyXzcxIiwiX19FdlR5cGVfNzEiLCJBcnJheVRyYW5zcG9ydCIsImFycmF5VHJhbnNwb3J0IiwicmVhZEludGVydmFsIiwiaWQiLCJ0cmFuc3BvcnQiLCJyZWFkSGFuZGxlIiwibGFzdE1zZ0lEIiwiY2xlYXJJbnRlcnZhbCIsInNldEludGVydmFsIiwibXNncyIsInB1Ymxpc2giLCJfJGFycmF5XzcxIiwiQXJyYXlUcmFuc3BvcnRQcm92aWRlciIsIm1zZ0lEIiwiZW5kcG9pbnRzIiwiZXAiLCJzaW5jZSIsIl9fQXJyYXlUcmFuc3BvcnRfNzYiLCJfX01zZ1R5cGVfNzYiLCJBbm5vdW5jZSIsIkxvZ2luIiwiTG9naW5SZXNwb25zZSIsIl9fRXZUeXBlXzc2IiwiQWNjZXB0IiwiUGVlckNvbm5lY3QiLCJQZWVyQWNjZXB0IiwiUGVlckxlYXZlIiwiUGVlclJlbmV3SGFuZGxlIiwiUmVuZXdNeUhhbmRsZSIsIk5lZ290aWF0aW5nIiwiQ2hSZXN1bHRzIiwiUGVlck5vdEZvdW5kIiwiSW5Qcm9ncmVzcyIsIkludmFsaWRIYXNoIiwiRHVwbGljYXRlSGFuZGxlIiwiSW52YWxpZFNlYWxlZEF1dGgiLCJPSyJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDQSxJQ0FBQSxFREFBQyxFQUFBLFNBQUFDLEdBQUEsSUFBQUMsRUFBQSxPQUFBLFNBQUFDLEdBQUEsT0FBQUQsR0FBQUQsRUFBQUMsRUFBQSxDQUFBRSxRQUFBLEdBQUFDLE9BQUFGLEdBQUFELEVBQUFFLFNBQUFGLEVBQUFFLFVBQ0FFLEVBQUFOLEdBQUEsU0FBQU8sRUFBQUgsOEJFRkEsYUFBQSxJQUFBSSxFQUFBRCxFQUFBSCxRQUFBSyxFQUFBQSxFQUFBQyxjQUFBQSxFQUFBQyxFQUFBQyxhQUFBLElBQUFDLEVBQUFDLEVBQUEsU0FBQUMsRUFBQUMsR0FBQSxPQUFBRCxFQUFBRSxVQUFBRCxHQUFBRSxRQUFBQyxFQUFBQyxFQUFBLElBQUFELE9BQUFFLEVBQUFDLEVBQUFDLFlBQUEsYUFBQUMsRUFBQUMsRUFBQSxJQUFBWixFQUFBVyxHQUFBQSxFQUFBRSxTQUFBRixFQUFBRSxTQUFBLFVBQUEsYUFBQSxJQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxHQUFBRCxpQkFBQUUsRUFBQUMsR0FBQUMsTUFBQUMsRUFBQUgsRUFBQUcscUJBQUFDLEVBQUFKLEVBQUFJLDBCQUFB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QUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsV0FBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxZQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsWUFBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxZQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsV0FBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxZQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsWUFBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxZQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsWUFBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxZQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFdBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsWUFBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxZQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsV0FBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxZQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsWUFBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxXQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsWUFBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxZQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsWUFBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxZQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsWUFBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxZQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsWUFBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxXQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFdBQUEsSUFBQXNkLEVBQUF0ZCxFQUFBLElBQUEsWUFBQSxJQUFBc2QsRUFBQXRkLEVBQUEsSUFBQSxZQUFBLElBQUFzZCxFQUFBdGQsRUFBQSxJQUFBLFlBQUEsSUFBQXNkLEVBQUEsV0FBQSxZQUFBLElBQUFBLEVBQUEsV0FBQSxXQUFBLElBQUFBLEVBQUEsV0FBQSxZQUFBLElBQUFBLEVBQUEsV0FBQSxZQUFBLElBQUFBLEVBQUEsVUFBQSxZQUFBLElBQUFBLEVBQUEsVUFBQSxZQUFBLElBQUFBLEVBQUEsVUFBQSxZQUFBLElBQUFBLEVBQUEsVUFBQSxXQUFBLElBQUFBLEVBQUEsVUFBQSxXQUFBLElBQUFBLEVBQUEsVUFBQSxZQUFBLElBQUFBLEVBQUEsV0FBQSxXQUFBLElBQUFBLEVBQUEsV0FBQSxZQUFBLElBQUFBLEVBQUEsV0FBQSxZQUFBLElBQUFBLEVBQUEsV0FBQSxZQUFBLElBQUFBLEVBQUEsV0FBQSxXQUFBLElBQUFBLEVBQUEsV0FBQSxhQUFBLFNBQUFlLEVBQUFoZ0IsR0FBQSxNQUFBLFlBQUFBLEVBQUEsQ0FBQSxJQUFBaWYsRUFBQSxXQUFBOUIsRUFBQSxJQUFBLElBQUE4QixFQUFBLFdBQUE5QixFQUFBLElBQUEsSUFBQThCLEVBQUEsV0FBQTlCLEVBQUEsSUFBQSxJQUFBOEIsRUFBQSxVQUFBOUIsRUFBQSxJQUFBLElBQUE4QixFQUFBLFdBQUE5QixFQUFBLElBQUEsSUFBQThCLEVBQUEsWUFBQTlCLEVBQUEsSUFBQSxJQUFBOEIsRUFBQSxXQUFBOUIsRUFBQSxJQUFBLElBQUE4QixFQUFBLFdBQUE5QixFQUFBLEtBQUEsQ0FBQSxJQUFBOEIsRUFBQTdCLEVBQUEsR0FBQSxZQUFB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QSxJQUFBQSxFQUFBLE1BQUEsR0FBQW9qQixFQUFBLElBQUFwakIsRUFBQSxLQUFBLElBQUFBLEVBQUEsTUFBQSxHQUFBLElBQUFBLEVBQUEsTUFBQSxJQUFBLElBQUFBLEVBQUEsTUFBQSxHQUFBcWpCLEVBQUEsSUFBQXBVLEVBQUEsSUFBQSxJQUFBQSxFQUFBLEtBQUEsR0FBQSxJQUFBQSxFQUFBLE1BQUEsSUFBQSxJQUFBQSxFQUFBLE1BQUEsR0FBQXFVLEVBQUEsSUFBQTlELEVBQUEsS0FBQSxJQUFBQSxFQUFBLE1BQUEsR0FBQSxJQUFBQSxFQUFBLE1BQUEsSUFBQSxJQUFBQSxFQUFBLE1BQUEsR0FBQStELEVBQUEsSUFBQS9ELEVBQUEsS0FBQSxJQUFBQSxFQUFBLE1BQUEsR0FBQSxJQUFBQSxFQUFBLE1BQUEsSUFBQSxJQUFBQSxFQUFBLE1BQUEsR0FBQWdFLEVBQUEsSUFBQWhFLEVBQUEsS0FBQSxJQUFBQSxFQUFBLE1BQUEsR0FBQSxJQUFBQSxFQUFBLE1BQUEsSUFBQSxJQUFBQSxFQUFBLE1BQUEsR0FBQWlFLEVBQUEsSUFBQWpFLEVBQUEsS0FBQSxJQUFBQSxFQUFBLE1BQUEsR0FBQSxJQUFBQSxFQUFBLE1BQUEsSUFBQSxJQUFBQSxFQUFBLE1BQUEsR0FBQWtFLEVBQUEsSUFBQXpVLEVBQUEsS0FBQSxJQUFBQSxFQUFBLE1BQUEsR0FBQSxJQUFBQSxFQUFBLE1BQUEsSUFBQSxJQUFBQSxFQUFBLE1BQUEsR0FBQTBVLEVBQUFoQixFQUFBaUIsRUFBQWhCLEVBQUFpQixFQUFBaEIsRUFBQWlCLEVBQUFoQixFQUFBaUIsRUFBQWhCLEVBQUFpQixFQUFBaEIsRUFBQWlCLEVBQUFoQixFQUFBaUIsRUFBQWhCLEVBQUFpQixFQUFBaEIsRUFBQWlCLEVBQUFoQixFQUFBaUIsRUFBQWhCLEVBQUFpQixFQUFBaEIsRUFBQWlCLEVBQUFoQixFQUFBaUIsRUFBQWhCLEVBQUFpQixFQUFBaEIsRUFBQWlCLEVBQUFoQixFQUFBeGhCLEVBQUEsRUFBQUEsRUFBQSxHQUFBQSxHQUFBLEVBQUF5aEIsSUFB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QUFBLFdBQUEsV0FBQSxXQUFBLFVBQUEsV0FBQSxVQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFVBQUEsV0FBQSxVQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxVQUFBLFVBQUEsV0FBQSxVQUFBLFdBQUEsVUFBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFVBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFVBQUEsV0FBQSxVQUFBLFVBQUEsVUFBQSxXQUFBLFVBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsVUFBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFVBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsVUFBQSxVQUFBLFVBQUEsV0FBQSxVQUFBLFdBQUEsVUFBQSxXQUFBLFVBQUEsV0FBQSxVQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxVQUFBLFdBQUEsVUFBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxVQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsVUFBQSxXQUFBLFVBQUEsV0FBQSxVQUFBLFdBQUEsVUFBQSxVQUFBLFVBQUEsVUFBQSxVQUFBLFdBQUEsV0FBQSxVQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsV0FBQSxXQUFBLFdBQUEsVUFBQSxXQUFBLFlBQUEsU0FBQWlOLEVBQUFDLEVBQUFDLEVBQUFoYixFQUFBL1EsR0FBQSxJQUFBLElBQUFnc0IsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQXRyQixFQUFBbU4sRUFB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QUFBLFFBQUE0M0MsR0FBQXZFLFFBQUEsVUFBQXVFLEdBQUFDLE9BQUEsU0FBQUQsR0FBQUUsWUFBQSxlQUFBRixHQUFBRyxXQUFBLGNBQUFILEdBQUFJLFVBQUEsYUFBQUosR0FBQUssZ0JBQUEsbUJBQUFMLEdBQUFNLGNBQUEsaUJBQUFOLEdBQUFPLFlBQUEsY0FBQSxJQUFBQyxHQUFBQSxJQUFBLEdBQUFBLEdBQUFDLGFBQUEsaUJBQUFELEdBQUFFLFdBQUEsY0FBQUYsR0FBQUcsWUFBQSxlQUFBSCxHQUFBSSxnQkFBQSxtQkFBQUosR0FBQUssa0JBQUEscUJBQUFMLEdBQUFNLEdBQUEsSzFFRkEiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtcbnZhciBjcmVhdGVNb2R1bGVGYWN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlTW9kdWxlRmFjdG9yeSh0KXt2YXIgZTtyZXR1cm4gZnVuY3Rpb24ocil7cmV0dXJuIGV8fHQoZT17ZXhwb3J0czp7fSxwYXJlbnQ6cn0sZS5leHBvcnRzKSxlLmV4cG9ydHN9fTtcbiIsInZhciBfJGV2ZW50c18xMyA9IHt9O1xuXCJ1c2Ugc3RyaWN0XCI7dmFyIFJlZmxlY3RPd25LZXlzLFI9XCJvYmplY3RcIj09dHlwZW9mIFJlZmxlY3Q/UmVmbGVjdDpudWxsLFJlZmxlY3RBcHBseT1SJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBSLmFwcGx5P1IuYXBwbHk6ZnVuY3Rpb24odGFyZ2V0LHJlY2VpdmVyLGFyZ3Mpe3JldHVybiBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbCh0YXJnZXQscmVjZWl2ZXIsYXJncyl9O1JlZmxlY3RPd25LZXlzPVImJlwiZnVuY3Rpb25cIj09dHlwZW9mIFIub3duS2V5cz9SLm93bktleXM6T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scz9mdW5jdGlvbih0YXJnZXQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0YXJnZXQpLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHRhcmdldCkpfTpmdW5jdGlvbih0YXJnZXQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0YXJnZXQpfTt2YXIgTnVtYmVySXNOYU49TnVtYmVyLmlzTmFOfHxmdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHZhbHVlIT12YWx1ZX07ZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCl7RXZlbnRFbWl0dGVyLmluaXQuY2FsbCh0aGlzKX1fJGV2ZW50c18xMz1FdmVudEVtaXR0ZXIsXyRldmVudHNfMTMub25jZT1mdW5jdGlvbihlbWl0dGVyLG5hbWUpe3JldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7ZnVuY3Rpb24gZXZlbnRMaXN0ZW5lcigpe3ZvaWQgMCE9PWVycm9yTGlzdGVuZXImJmVtaXR0ZXIucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLGVycm9yTGlzdGVuZXIpLHJlc29sdmUoW10uc2xpY2UuY2FsbChhcmd1bWVudHMpKX12YXIgZXJyb3JMaXN0ZW5lcjtcImVycm9yXCIhPT1uYW1lJiYoZXJyb3JMaXN0ZW5lcj1mdW5jdGlvbihlcnIpe2VtaXR0ZXIucmVtb3ZlTGlzdGVuZXIobmFtZSxldmVudExpc3RlbmVyKSxyZWplY3QoZXJyKX0sZW1pdHRlci5vbmNlKFwiZXJyb3JcIixlcnJvckxpc3RlbmVyKSksZW1pdHRlci5vbmNlKG5hbWUsZXZlbnRMaXN0ZW5lcil9KX0sRXZlbnRFbWl0dGVyLkV2ZW50RW1pdHRlcj1FdmVudEVtaXR0ZXIsRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5fZXZlbnRzPXZvaWQgMCxFdmVudEVtaXR0ZXIucHJvdG90eXBlLl9ldmVudHNDb3VudD0wLEV2ZW50RW1pdHRlci5wcm90b3R5cGUuX21heExpc3RlbmVycz12b2lkIDA7dmFyIGRlZmF1bHRNYXhMaXN0ZW5lcnM9MTA7ZnVuY3Rpb24gY2hlY2tMaXN0ZW5lcihsaXN0ZW5lcil7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgbGlzdGVuZXIpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwibGlzdGVuZXJcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgRnVuY3Rpb24uIFJlY2VpdmVkIHR5cGUgJyt0eXBlb2YgbGlzdGVuZXIpfWZ1bmN0aW9uIF9nZXRNYXhMaXN0ZW5lcnModGhhdCl7cmV0dXJuIHZvaWQgMD09PXRoYXQuX21heExpc3RlbmVycz9FdmVudEVtaXR0ZXIuZGVmYXVsdE1heExpc3RlbmVyczp0aGF0Ll9tYXhMaXN0ZW5lcnN9ZnVuY3Rpb24gX2FkZExpc3RlbmVyKHRhcmdldCx0eXBlLGxpc3RlbmVyLHByZXBlbmQpe3ZhciBtLGV2ZW50cyxleGlzdGluZyx3YXJuaW5nO2lmKGNoZWNrTGlzdGVuZXIobGlzdGVuZXIpLHZvaWQgMD09PShldmVudHM9dGFyZ2V0Ll9ldmVudHMpPyhldmVudHM9dGFyZ2V0Ll9ldmVudHM9T2JqZWN0LmNyZWF0ZShudWxsKSx0YXJnZXQuX2V2ZW50c0NvdW50PTApOih2b2lkIDAhPT1ldmVudHMubmV3TGlzdGVuZXImJih0YXJnZXQuZW1pdChcIm5ld0xpc3RlbmVyXCIsdHlwZSxsaXN0ZW5lci5saXN0ZW5lcj9saXN0ZW5lci5saXN0ZW5lcjpsaXN0ZW5lciksZXZlbnRzPXRhcmdldC5fZXZlbnRzKSxleGlzdGluZz1ldmVudHNbdHlwZV0pLHZvaWQgMD09PWV4aXN0aW5nKWV4aXN0aW5nPWV2ZW50c1t0eXBlXT1saXN0ZW5lciwrK3RhcmdldC5fZXZlbnRzQ291bnQ7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBleGlzdGluZz9leGlzdGluZz1ldmVudHNbdHlwZV09cHJlcGVuZD9bbGlzdGVuZXIsZXhpc3RpbmddOltleGlzdGluZyxsaXN0ZW5lcl06cHJlcGVuZD9leGlzdGluZy51bnNoaWZ0KGxpc3RlbmVyKTpleGlzdGluZy5wdXNoKGxpc3RlbmVyKSwobT1fZ2V0TWF4TGlzdGVuZXJzKHRhcmdldCkpPjAmJmV4aXN0aW5nLmxlbmd0aD5tJiYhZXhpc3Rpbmcud2FybmVkKXtleGlzdGluZy53YXJuZWQ9ITA7dmFyIHc9bmV3IEVycm9yKFwiUG9zc2libGUgRXZlbnRFbWl0dGVyIG1lbW9yeSBsZWFrIGRldGVjdGVkLiBcIitleGlzdGluZy5sZW5ndGgrXCIgXCIrU3RyaW5nKHR5cGUpK1wiIGxpc3RlbmVycyBhZGRlZC4gVXNlIGVtaXR0ZXIuc2V0TWF4TGlzdGVuZXJzKCkgdG8gaW5jcmVhc2UgbGltaXRcIik7dy5uYW1lPVwiTWF4TGlzdGVuZXJzRXhjZWVkZWRXYXJuaW5nXCIsdy5lbWl0dGVyPXRhcmdldCx3LnR5cGU9dHlwZSx3LmNvdW50PWV4aXN0aW5nLmxlbmd0aCx3YXJuaW5nPXcsY29uc29sZSYmY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4od2FybmluZyl9cmV0dXJuIHRhcmdldH1mdW5jdGlvbiBfb25jZVdyYXAodGFyZ2V0LHR5cGUsbGlzdGVuZXIpe3ZhciBzdGF0ZT17ZmlyZWQ6ITEsd3JhcEZuOnZvaWQgMCx0YXJnZXQ6dGFyZ2V0LHR5cGU6dHlwZSxsaXN0ZW5lcjpsaXN0ZW5lcn0sd3JhcHBlZD1mdW5jdGlvbigpe2lmKCF0aGlzLmZpcmVkKXJldHVybiB0aGlzLnRhcmdldC5yZW1vdmVMaXN0ZW5lcih0aGlzLnR5cGUsdGhpcy53cmFwRm4pLHRoaXMuZmlyZWQ9ITAsMD09PWFyZ3VtZW50cy5sZW5ndGg/dGhpcy5saXN0ZW5lci5jYWxsKHRoaXMudGFyZ2V0KTp0aGlzLmxpc3RlbmVyLmFwcGx5KHRoaXMudGFyZ2V0LGFyZ3VtZW50cyl9LmJpbmQoc3RhdGUpO3JldHVybiB3cmFwcGVkLmxpc3RlbmVyPWxpc3RlbmVyLHN0YXRlLndyYXBGbj13cmFwcGVkLHdyYXBwZWR9ZnVuY3Rpb24gX2xpc3RlbmVycyh0YXJnZXQsdHlwZSx1bndyYXApe3ZhciBldmVudHM9dGFyZ2V0Ll9ldmVudHM7aWYodm9pZCAwPT09ZXZlbnRzKXJldHVybltdO3ZhciBldmxpc3RlbmVyPWV2ZW50c1t0eXBlXTtyZXR1cm4gdm9pZCAwPT09ZXZsaXN0ZW5lcj9bXTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBldmxpc3RlbmVyP3Vud3JhcD9bZXZsaXN0ZW5lci5saXN0ZW5lcnx8ZXZsaXN0ZW5lcl06W2V2bGlzdGVuZXJdOnVud3JhcD9mdW5jdGlvbihhcnIpe2Zvcih2YXIgcmV0PW5ldyBBcnJheShhcnIubGVuZ3RoKSxpPTA7aTxyZXQubGVuZ3RoOysraSlyZXRbaV09YXJyW2ldLmxpc3RlbmVyfHxhcnJbaV07cmV0dXJuIHJldH0oZXZsaXN0ZW5lcik6YXJyYXlDbG9uZShldmxpc3RlbmVyLGV2bGlzdGVuZXIubGVuZ3RoKX1mdW5jdGlvbiBsaXN0ZW5lckNvdW50KHR5cGUpe3ZhciBldmVudHM9dGhpcy5fZXZlbnRzO2lmKHZvaWQgMCE9PWV2ZW50cyl7dmFyIGV2bGlzdGVuZXI9ZXZlbnRzW3R5cGVdO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGV2bGlzdGVuZXIpcmV0dXJuIDE7aWYodm9pZCAwIT09ZXZsaXN0ZW5lcilyZXR1cm4gZXZsaXN0ZW5lci5sZW5ndGh9cmV0dXJuIDB9ZnVuY3Rpb24gYXJyYXlDbG9uZShhcnIsbil7Zm9yKHZhciBjb3B5PW5ldyBBcnJheShuKSxpPTA7aTxuOysraSljb3B5W2ldPWFycltpXTtyZXR1cm4gY29weX1PYmplY3QuZGVmaW5lUHJvcGVydHkoRXZlbnRFbWl0dGVyLFwiZGVmYXVsdE1heExpc3RlbmVyc1wiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBkZWZhdWx0TWF4TGlzdGVuZXJzfSxzZXQ6ZnVuY3Rpb24oYXJnKXtpZihcIm51bWJlclwiIT10eXBlb2YgYXJnfHxhcmc8MHx8TnVtYmVySXNOYU4oYXJnKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIHZhbHVlIG9mIFwiZGVmYXVsdE1heExpc3RlbmVyc1wiIGlzIG91dCBvZiByYW5nZS4gSXQgbXVzdCBiZSBhIG5vbi1uZWdhdGl2ZSBudW1iZXIuIFJlY2VpdmVkICcrYXJnK1wiLlwiKTtkZWZhdWx0TWF4TGlzdGVuZXJzPWFyZ319KSxFdmVudEVtaXR0ZXIuaW5pdD1mdW5jdGlvbigpe3ZvaWQgMCE9PXRoaXMuX2V2ZW50cyYmdGhpcy5fZXZlbnRzIT09T2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpLl9ldmVudHN8fCh0aGlzLl9ldmVudHM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9ldmVudHNDb3VudD0wKSx0aGlzLl9tYXhMaXN0ZW5lcnM9dGhpcy5fbWF4TGlzdGVuZXJzfHx2b2lkIDB9LEV2ZW50RW1pdHRlci5wcm90b3R5cGUuc2V0TWF4TGlzdGVuZXJzPWZ1bmN0aW9uKG4pe2lmKFwibnVtYmVyXCIhPXR5cGVvZiBufHxuPDB8fE51bWJlcklzTmFOKG4pKXRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgb2YgXCJuXCIgaXMgb3V0IG9mIHJhbmdlLiBJdCBtdXN0IGJlIGEgbm9uLW5lZ2F0aXZlIG51bWJlci4gUmVjZWl2ZWQgJytuK1wiLlwiKTtyZXR1cm4gdGhpcy5fbWF4TGlzdGVuZXJzPW4sdGhpc30sRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5nZXRNYXhMaXN0ZW5lcnM9ZnVuY3Rpb24oKXtyZXR1cm4gX2dldE1heExpc3RlbmVycyh0aGlzKX0sRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5lbWl0PWZ1bmN0aW9uKHR5cGUpe2Zvcih2YXIgYXJncz1bXSxpPTE7aTxhcmd1bWVudHMubGVuZ3RoO2krKylhcmdzLnB1c2goYXJndW1lbnRzW2ldKTt2YXIgZG9FcnJvcj1cImVycm9yXCI9PT10eXBlLGV2ZW50cz10aGlzLl9ldmVudHM7aWYodm9pZCAwIT09ZXZlbnRzKWRvRXJyb3I9ZG9FcnJvciYmdm9pZCAwPT09ZXZlbnRzLmVycm9yO2Vsc2UgaWYoIWRvRXJyb3IpcmV0dXJuITE7aWYoZG9FcnJvcil7dmFyIGVyO2lmKGFyZ3MubGVuZ3RoPjAmJihlcj1hcmdzWzBdKSxlciBpbnN0YW5jZW9mIEVycm9yKXRocm93IGVyO3ZhciBlcnI9bmV3IEVycm9yKFwiVW5oYW5kbGVkIGVycm9yLlwiKyhlcj9cIiAoXCIrZXIubWVzc2FnZStcIilcIjpcIlwiKSk7dGhyb3cgZXJyLmNvbnRleHQ9ZXIsZXJyfXZhciBoYW5kbGVyPWV2ZW50c1t0eXBlXTtpZih2b2lkIDA9PT1oYW5kbGVyKXJldHVybiExO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGhhbmRsZXIpUmVmbGVjdEFwcGx5KGhhbmRsZXIsdGhpcyxhcmdzKTtlbHNle3ZhciBsZW49aGFuZGxlci5sZW5ndGgsbGlzdGVuZXJzPWFycmF5Q2xvbmUoaGFuZGxlcixsZW4pO2ZvcihpPTA7aTxsZW47KytpKVJlZmxlY3RBcHBseShsaXN0ZW5lcnNbaV0sdGhpcyxhcmdzKX1yZXR1cm4hMH0sRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lcj1mdW5jdGlvbih0eXBlLGxpc3RlbmVyKXtyZXR1cm4gX2FkZExpc3RlbmVyKHRoaXMsdHlwZSxsaXN0ZW5lciwhMSl9LEV2ZW50RW1pdHRlci5wcm90b3R5cGUub249RXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lcixFdmVudEVtaXR0ZXIucHJvdG90eXBlLnByZXBlbmRMaXN0ZW5lcj1mdW5jdGlvbih0eXBlLGxpc3RlbmVyKXtyZXR1cm4gX2FkZExpc3RlbmVyKHRoaXMsdHlwZSxsaXN0ZW5lciwhMCl9LEV2ZW50RW1pdHRlci5wcm90b3R5cGUub25jZT1mdW5jdGlvbih0eXBlLGxpc3RlbmVyKXtyZXR1cm4gY2hlY2tMaXN0ZW5lcihsaXN0ZW5lciksdGhpcy5vbih0eXBlLF9vbmNlV3JhcCh0aGlzLHR5cGUsbGlzdGVuZXIpKSx0aGlzfSxFdmVudEVtaXR0ZXIucHJvdG90eXBlLnByZXBlbmRPbmNlTGlzdGVuZXI9ZnVuY3Rpb24odHlwZSxsaXN0ZW5lcil7cmV0dXJuIGNoZWNrTGlzdGVuZXIobGlzdGVuZXIpLHRoaXMucHJlcGVuZExpc3RlbmVyKHR5cGUsX29uY2VXcmFwKHRoaXMsdHlwZSxsaXN0ZW5lcikpLHRoaXN9LEV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXI9ZnVuY3Rpb24odHlwZSxsaXN0ZW5lcil7dmFyIGxpc3QsZXZlbnRzLHBvc2l0aW9uLGksb3JpZ2luYWxMaXN0ZW5lcjtpZihjaGVja0xpc3RlbmVyKGxpc3RlbmVyKSx2b2lkIDA9PT0oZXZlbnRzPXRoaXMuX2V2ZW50cykpcmV0dXJuIHRoaXM7aWYodm9pZCAwPT09KGxpc3Q9ZXZlbnRzW3R5cGVdKSlyZXR1cm4gdGhpcztpZihsaXN0PT09bGlzdGVuZXJ8fGxpc3QubGlzdGVuZXI9PT1saXN0ZW5lcikwPT0tLXRoaXMuX2V2ZW50c0NvdW50P3RoaXMuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpOihkZWxldGUgZXZlbnRzW3R5cGVdLGV2ZW50cy5yZW1vdmVMaXN0ZW5lciYmdGhpcy5lbWl0KFwicmVtb3ZlTGlzdGVuZXJcIix0eXBlLGxpc3QubGlzdGVuZXJ8fGxpc3RlbmVyKSk7ZWxzZSBpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBsaXN0KXtmb3IocG9zaXRpb249LTEsaT1saXN0Lmxlbmd0aC0xO2k+PTA7aS0tKWlmKGxpc3RbaV09PT1saXN0ZW5lcnx8bGlzdFtpXS5saXN0ZW5lcj09PWxpc3RlbmVyKXtvcmlnaW5hbExpc3RlbmVyPWxpc3RbaV0ubGlzdGVuZXIscG9zaXRpb249aTticmVha31pZihwb3NpdGlvbjwwKXJldHVybiB0aGlzOzA9PT1wb3NpdGlvbj9saXN0LnNoaWZ0KCk6ZnVuY3Rpb24obGlzdCxpbmRleCl7Zm9yKDtpbmRleCsxPGxpc3QubGVuZ3RoO2luZGV4KyspbGlzdFtpbmRleF09bGlzdFtpbmRleCsxXTtsaXN0LnBvcCgpfShsaXN0LHBvc2l0aW9uKSwxPT09bGlzdC5sZW5ndGgmJihldmVudHNbdHlwZV09bGlzdFswXSksdm9pZCAwIT09ZXZlbnRzLnJlbW92ZUxpc3RlbmVyJiZ0aGlzLmVtaXQoXCJyZW1vdmVMaXN0ZW5lclwiLHR5cGUsb3JpZ2luYWxMaXN0ZW5lcnx8bGlzdGVuZXIpfXJldHVybiB0aGlzfSxFdmVudEVtaXR0ZXIucHJvdG90eXBlLm9mZj1FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyLEV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlQWxsTGlzdGVuZXJzPWZ1bmN0aW9uKHR5cGUpe3ZhciBsaXN0ZW5lcnMsZXZlbnRzLGk7aWYodm9pZCAwPT09KGV2ZW50cz10aGlzLl9ldmVudHMpKXJldHVybiB0aGlzO2lmKHZvaWQgMD09PWV2ZW50cy5yZW1vdmVMaXN0ZW5lcilyZXR1cm4gMD09PWFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2V2ZW50c0NvdW50PTApOnZvaWQgMCE9PWV2ZW50c1t0eXBlXSYmKDA9PS0tdGhpcy5fZXZlbnRzQ291bnQ/dGhpcy5fZXZlbnRzPU9iamVjdC5jcmVhdGUobnVsbCk6ZGVsZXRlIGV2ZW50c1t0eXBlXSksdGhpcztpZigwPT09YXJndW1lbnRzLmxlbmd0aCl7dmFyIGtleSxrZXlzPU9iamVjdC5rZXlzKGV2ZW50cyk7Zm9yKGk9MDtpPGtleXMubGVuZ3RoOysraSlcInJlbW92ZUxpc3RlbmVyXCIhPT0oa2V5PWtleXNbaV0pJiZ0aGlzLnJlbW92ZUFsbExpc3RlbmVycyhrZXkpO3JldHVybiB0aGlzLnJlbW92ZUFsbExpc3RlbmVycyhcInJlbW92ZUxpc3RlbmVyXCIpLHRoaXMuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2V2ZW50c0NvdW50PTAsdGhpc31pZihcImZ1bmN0aW9uXCI9PXR5cGVvZihsaXN0ZW5lcnM9ZXZlbnRzW3R5cGVdKSl0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsbGlzdGVuZXJzKTtlbHNlIGlmKHZvaWQgMCE9PWxpc3RlbmVycylmb3IoaT1saXN0ZW5lcnMubGVuZ3RoLTE7aT49MDtpLS0pdGhpcy5yZW1vdmVMaXN0ZW5lcih0eXBlLGxpc3RlbmVyc1tpXSk7cmV0dXJuIHRoaXN9LEV2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJzPWZ1bmN0aW9uKHR5cGUpe3JldHVybiBfbGlzdGVuZXJzKHRoaXMsdHlwZSwhMCl9LEV2ZW50RW1pdHRlci5wcm90b3R5cGUucmF3TGlzdGVuZXJzPWZ1bmN0aW9uKHR5cGUpe3JldHVybiBfbGlzdGVuZXJzKHRoaXMsdHlwZSwhMSl9LEV2ZW50RW1pdHRlci5saXN0ZW5lckNvdW50PWZ1bmN0aW9uKGVtaXR0ZXIsdHlwZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZW1pdHRlci5saXN0ZW5lckNvdW50P2VtaXR0ZXIubGlzdGVuZXJDb3VudCh0eXBlKTpsaXN0ZW5lckNvdW50LmNhbGwoZW1pdHRlcix0eXBlKX0sRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5saXN0ZW5lckNvdW50PWxpc3RlbmVyQ291bnQsRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5ldmVudE5hbWVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2V2ZW50c0NvdW50PjA/UmVmbGVjdE93bktleXModGhpcy5fZXZlbnRzKTpbXX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltVjJaVzUwY3k1cWN5SmRMQ0p1WVcxbGN5STZXeUpTWldac1pXTjBUM2R1UzJWNWN5SXNJbElpTENKU1pXWnNaV04wSWl3aVVtVm1iR1ZqZEVGd2NHeDVJaXdpWVhCd2JIa2lMQ0owWVhKblpYUWlMQ0p5WldObGFYWmxjaUlzSW1GeVozTWlMQ0pHZFc1amRHbHZiaUlzSW5CeWIzUnZkSGx3WlNJc0ltTmhiR3dpTENKdmQyNUxaWGx6SWl3aVQySnFaV04wSWl3aVoyVjBUM2R1VUhKdmNHVnlkSGxUZVcxaWIyeHpJaXdpWjJWMFQzZHVVSEp2Y0dWeWRIbE9ZVzFsY3lJc0ltTnZibU5oZENJc0lrNTFiV0psY2tselRtRk9JaXdpVG5WdFltVnlJaXdpYVhOT1lVNGlMQ0oyWVd4MVpTSXNJa1YyWlc1MFJXMXBkSFJsY2lJc0ltbHVhWFFpTENKMGFHbHpJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW05dVkyVWlMQ0psYldsMGRHVnlJaXdpYm1GdFpTSXNJbEJ5YjIxcGMyVWlMQ0p5WlhOdmJIWmxJaXdpY21WcVpXTjBJaXdpWlhabGJuUk1hWE4wWlc1bGNpSXNJblZ1WkdWbWFXNWxaQ0lzSW1WeWNtOXlUR2x6ZEdWdVpYSWlMQ0p5WlcxdmRtVk1hWE4wWlc1bGNpSXNJbk5zYVdObElpd2lZWEpuZFcxbGJuUnpJaXdpWlhKeUlpd2lYMlYyWlc1MGN5SXNJbDlsZG1WdWRITkRiM1Z1ZENJc0lsOXRZWGhNYVhOMFpXNWxjbk1pTENKa1pXWmhkV3gwVFdGNFRHbHpkR1Z1WlhKeklpd2lZMmhsWTJ0TWFYTjBaVzVsY2lJc0lteHBjM1JsYm1WeUlpd2lWSGx3WlVWeWNtOXlJaXdpWDJkbGRFMWhlRXhwYzNSbGJtVnljeUlzSW5Sb1lYUWlMQ0pmWVdSa1RHbHpkR1Z1WlhJaUxDSjBlWEJsSWl3aWNISmxjR1Z1WkNJc0ltMGlMQ0psZG1WdWRITWlMQ0psZUdsemRHbHVaeUlzSW5kaGNtNXBibWNpTENKamNtVmhkR1VpTENKdVpYZE1hWE4wWlc1bGNpSXNJbVZ0YVhRaUxDSjFibk5vYVdaMElpd2ljSFZ6YUNJc0lteGxibWQwYUNJc0luZGhjbTVsWkNJc0luY2lMQ0pGY25KdmNpSXNJbE4wY21sdVp5SXNJbU52ZFc1MElpd2lZMjl1YzI5c1pTSXNJbmRoY200aUxDSmZiMjVqWlZkeVlYQWlMQ0p6ZEdGMFpTSXNJbVpwY21Wa0lpd2lkM0poY0VadUlpd2lkM0poY0hCbFpDSXNJbUpwYm1RaUxDSmZiR2x6ZEdWdVpYSnpJaXdpZFc1M2NtRndJaXdpWlhac2FYTjBaVzVsY2lJc0ltRnljaUlzSW5KbGRDSXNJa0Z5Y21GNUlpd2lhU0lzSW5WdWQzSmhjRXhwYzNSbGJtVnljeUlzSW1GeWNtRjVRMnh2Ym1VaUxDSnNhWE4wWlc1bGNrTnZkVzUwSWl3aWJpSXNJbU52Y0hraUxDSmtaV1pwYm1WUWNtOXdaWEowZVNJc0ltVnVkVzFsY21GaWJHVWlMQ0puWlhRaUxDSnpaWFFpTENKaGNtY2lMQ0pTWVc1blpVVnljbTl5SWl3aVoyVjBVSEp2ZEc5MGVYQmxUMllpTENKelpYUk5ZWGhNYVhOMFpXNWxjbk1pTENKblpYUk5ZWGhNYVhOMFpXNWxjbk1pTENKa2IwVnljbTl5SWl3aVpYSnliM0lpTENKbGNpSXNJbTFsYzNOaFoyVWlMQ0pqYjI1MFpYaDBJaXdpYUdGdVpHeGxjaUlzSW14bGJpSXNJbXhwYzNSbGJtVnljeUlzSW1Ga1pFeHBjM1JsYm1WeUlpd2liMjRpTENKd2NtVndaVzVrVEdsemRHVnVaWElpTENKd2NtVndaVzVrVDI1alpVeHBjM1JsYm1WeUlpd2liR2x6ZENJc0luQnZjMmwwYVc5dUlpd2liM0pwWjJsdVlXeE1hWE4wWlc1bGNpSXNJbk5vYVdaMElpd2lhVzVrWlhnaUxDSndiM0FpTENKemNHeHBZMlZQYm1VaUxDSnZabVlpTENKeVpXMXZkbVZCYkd4TWFYTjBaVzVsY25NaUxDSnJaWGtpTENKclpYbHpJaXdpY21GM1RHbHpkR1Z1WlhKeklpd2laWFpsYm5ST1lXMWxjeUpkTENKdFlYQndhVzVuY3lJNklqdEJRWEZDUVN4WlFVRkJMRU5CUlVFc1NVRlBTVUVzWTBGQlFVRXNRMEZRUVVNc1EwRkJRVUVzUTBGQmRVSXNVVUZCUVN4RlFVRkJMRTlCUVZwRExFOUJRVUZCTEVOQlFYVkNRU3hQUVVGQlFTeERRVUZWTEVsQlFVRXNRMEZETlVORExGbEJRVUZCTEVOQlFXVkdMRU5CUVVGQkxFVkJRWGRDTEZWQlFVRXNSVUZCUVN4UFFVRmFRU3hEUVVGQlFTeERRVUZGUnl4TFFVRkJRU3hEUVVNM1FrZ3NRMEZCUVVFc1EwRkJSVWNzUzBGQlFVRXNRMEZEUml4VFFVRnpRa01zVFVGQlFVRXNRMEZCVVVNc1VVRkJRVUVzUTBGQlZVTXNTVUZCUVVFc1EwRkJRVUVzUTBGRGVFTXNUMEZCVDBNc1VVRkJRVUVzUTBGQlUwTXNVMEZCUVVFc1EwRkJWVXdzUzBGQlFVRXNRMEZCVFUwc1NVRkJRVUVzUTBGQlMwd3NUVUZCUVVFc1EwRkJVVU1zVVVGQlFVRXNRMEZCVlVNc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkxla1JRTEdOQlFVRkJMRU5CUkVWRExFTkJRVUZCTEVWQlFUQkNMRlZCUVVFc1JVRkJRU3hQUVVGa1FTeERRVUZCUVN4RFFVRkZWU3hQUVVGQlFTeERRVU5EVml4RFFVRkJRU3hEUVVGRlZTeFBRVUZCUVN4RFFVTldReXhOUVVGQlFTeERRVUZQUXl4eFFrRkJRVUVzUTBGRFF5eFRRVUYzUWxJc1RVRkJRVUVzUTBGQlFVRXNRMEZEZGtNc1QwRkJUMDhzVFVGQlFVRXNRMEZCVDBVc2JVSkJRVUZCTEVOQlFXOUNWQ3hOUVVGQlFTeERRVUZCUVN4RFFVTXZRbFVzVFVGQlFVRXNRMEZCVDBnc1RVRkJRVUVzUTBGQlQwTXNjVUpCUVVGQkxFTkJRWE5DVWl4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkNFFpeFRRVUYzUWtFc1RVRkJRVUVzUTBGQlFVRXNRMEZEZGtNc1QwRkJUMDhzVFVGQlFVRXNRMEZCVDBVc2JVSkJRVUZCTEVOQlFXOUNWQ3hOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVZGMFF5eEpRVUZKVnl4WFFVRkJRU3hEUVVGalF5eE5RVUZCUVN4RFFVRlBReXhMUVVGQlFTeEZRVUZUTEZOQlFYRkNReXhMUVVGQlFTeERRVUZCUVN4RFFVTnlSQ3hQUVVGUFFTeExRVUZCUVN4RlFVRlZRU3hMUVVGQlFTeERRVUZCUVN4RFFVZHVRaXhUUVVGVFF5eFpRVUZCUVN4RlFVRkJRU3hEUVVOUVFTeFpRVUZCUVN4RFFVRmhReXhKUVVGQlFTeERRVUZMV0N4SlFVRkJRU3hEUVVGTFdTeEpRVUZCUVN4RFFVRkJRU3hEUVVWNlFrTXNWMEZCVDBNc1EwRkJWVW9zV1VGQlFVRXNRMEZEYWtKSExGZEJRVTlETEVOQlFWRkRMRWxCUVVGQkxFTkJkMWxtTEZOQlFXTkRMRTlCUVVGQkxFTkJRVk5ETEVsQlFVRkJMRU5CUVVGQkxFTkJRM0pDTEU5QlFVOHNTVUZCU1VNc1QwRkJRVUVzUTBGQlVTeFRRVUZWUXl4UFFVRkJRU3hEUVVGVFF5eE5RVUZCUVN4RFFVRkJRU3hEUVVOd1F5eFRRVUZUUXl4aFFVRkJRU3hGUVVGQlFTeERRVUZCUVN4TFFVTmxReXhEUVVGQlFTeEhRVUZzUWtNc1lVRkJRVUVzUlVGRFJsQXNUMEZCUVVFc1EwRkJVVkVzWTBGQlFVRXNRMEZCWlN4UFFVRkJMRU5CUVZORUxHRkJRVUZCTEVOQlFVRkJMRU5CUld4RFNpeFBRVUZCUVN4RFFVRlJMRVZCUVVFc1EwRkJSMDBzUzBGQlFVRXNRMEZCVFhwQ0xFbEJRVUZCTEVOQlFVc3dRaXhUUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVWNFFpeEpRVUZKU0N4aFFVRkJRU3hEUVZGVExFOUJRVUVzUjBGQlZFNHNTVUZCUVVFc1IwRkRSazBzWVVGQlFVRXNRMEZCWjBJc1UwRkJkVUpKTEVkQlFVRkJMRU5CUVVGQkxFTkJRM0pEV0N4UFFVRkJRU3hEUVVGUlVTeGpRVUZCUVN4RFFVRmxVQ3hKUVVGQlFTeERRVUZOU1N4aFFVRkJRU3hEUVVGQlFTeERRVU0zUWtRc1RVRkJRVUVzUTBGQlQwOHNSMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIVkZnc1QwRkJRVUVzUTBGQlVVUXNTVUZCUVVFc1EwRkJTeXhQUVVGQkxFTkJRVk5STEdGQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzaENVQ3hQUVVGQlFTeERRVUZSUkN4SlFVRkJRU3hEUVVGTFJTeEpRVUZCUVN4RFFVRk5TU3hoUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFUbGFka0pZTEZsQlFVRkJMRU5CUVdGQkxGbEJRVUZCTEVOQlFXVkJMRmxCUVVGQkxFTkJSVFZDUVN4WlFVRkJRU3hEUVVGaFdDeFRRVUZCUVN4RFFVRlZOa0lzVDBGQlFVRXNRMEZCUVVFc1MwRkJWVTRzUTBGQlFVRXNRMEZEYWtOYUxGbEJRVUZCTEVOQlFXRllMRk5CUVVGQkxFTkJRVlU0UWl4WlFVRkJRU3hEUVVGbExFTkJRVUVzUTBGRGRFTnVRaXhaUVVGQlFTeERRVUZoV0N4VFFVRkJRU3hEUVVGVkswSXNZVUZCUVVFc1EwRkJRVUVzUzBGQlowSlNMRU5CUVVGQkxFTkJTWFpETEVsQlFVbFRMRzFDUVVGQlFTeERRVUZ6UWl4RlFVRkJMRU5CUlRGQ0xGTkJRVk5ETEdGQlFVRkJMRU5CUVdORExGRkJRVUZCTEVOQlFVRkJMRU5CUTNKQ0xFZEJRWGRDTEZWQlFVRXNSVUZCUVN4UFFVRmlRU3hSUVVGQlFTeERRVU5VTEUxQlFVMHNTVUZCU1VNc1UwRkJRVUVzUTBGQlZTeHJSVUZCUVN4RFFVRkJMRTlCUVRSRlJDeFJRVUZCUVN4RFFVRkJRU3hEUVhORGNFY3NVMEZCVTBVc1owSkJRVUZCTEVOQlFXbENReXhKUVVGQlFTeERRVUZCUVN4RFFVTjRRaXhQUVVGQkxFdEJRVEpDWkN4RFFVRkJRU3hIUVVGMlFtTXNTVUZCUVVFc1EwRkJTMDRzWVVGQlFVRXNRMEZEUVhCQ0xGbEJRVUZCTEVOQlFXRnhRaXh0UWtGQlFVRXNRMEZEWmtzc1NVRkJRVUVzUTBGQlMwNHNZVUZCUVVFc1EwRnRSR1FzVTBGQlUwOHNXVUZCUVVFc1EwRkJZVEZETEUxQlFVRkJMRU5CUVZFeVF5eEpRVUZCUVN4RFFVRk5UQ3hSUVVGQlFTeERRVUZWVFN4UFFVRkJRU3hEUVVGQlFTeERRVU0xUXl4SlFVRkpReXhEUVVGQlFTeERRVU5CUXl4TlFVRkJRU3hEUVVOQlF5eFJRVUZCUVN4RFFURkljMEpETEU5QlFVRkJMRU5CWjBveFFpeEhRWEJDUVZnc1lVRkJRVUVzUTBGQlkwTXNVVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNTMEZIUTFnc1EwRkJRVUVzU1VGRVptMUNMRTFCUVVGQkxFTkJRVk01UXl4TlFVRkJRU3hEUVVGUGFVTXNUMEZCUVVFc1EwRkJRVUVzUlVGRlpHRXNUVUZCUVVFc1EwRkJVemxETEUxQlFVRkJMRU5CUVU5cFF5eFBRVUZCUVN4RFFVRlZNVUlzVFVGQlFVRXNRMEZCVHpCRExFMUJRVUZCTEVOQlFVOHNTVUZCUVN4RFFVRkJMRU5CUTNoRGFrUXNUVUZCUVVFc1EwRkJUMnRETEZsQlFVRkJMRU5CUVdVc1EwRkJRU3hIUVVGQkxFdEJTVXRRTEVOQlFVRkJMRWRCUVhaQ2JVSXNUVUZCUVVFc1EwRkJUMGtzVjBGQlFVRXNSMEZEVkd4RUxFMUJRVUZCTEVOQlFVOXRSQ3hKUVVGQlFTeERRVUZMTEdGQlFVRXNRMEZCWlZJc1NVRkJRVUVzUTBGRFprd3NVVUZCUVVFc1EwRkJVMEVzVVVGQlFVRXNRMEZCVjBFc1VVRkJRVUVzUTBGQlUwRXNVVUZCUVVFc1EwRkJWMEVzVVVGQlFVRXNRMEZCUVVFc1EwRkpjRVJSTEUxQlFVRkJMRU5CUVZNNVF5eE5RVUZCUVN4RFFVRlBhVU1zVDBGQlFVRXNRMEZCUVVFc1EwRkZiRUpqTEZGQlFVRkJMRU5CUVZkRUxFMUJRVUZCTEVOQlFVOUlMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJSMGhvUWl4RFFVRkJRU3hIUVVGaWIwSXNVVUZCUVVFc1EwRkZSa0VzVVVGQlFVRXNRMEZCVjBRc1RVRkJRVUVzUTBGQlQwZ3NTVUZCUVVFc1EwRkJRVUVzUTBGQlVVd3NVVUZCUVVFc1EwRkJRVUVzUlVGRGVFSjBReXhOUVVGQlFTeERRVUZQYTBNc1dVRkJRVUVzUTBGQlFVRXNTMEZsVkN4SFFXSjNRaXhWUVVGQkxFVkJRVUVzVDBGQlltRXNVVUZCUVVFc1EwRkZWRUVzVVVGQlFVRXNRMEZCVjBRc1RVRkJRVUVzUTBGQlQwZ3NTVUZCUVVFc1EwRkJRVUVzUTBGRGFFSkRMRTlCUVVGQkxFTkJRVlVzUTBGQlEwNHNVVUZCUVVFc1EwRkJWVk1zVVVGQlFVRXNRMEZCUVVFc1EwRkJXU3hEUVVGRFFTeFJRVUZCUVN4RFFVRlZWQ3hSUVVGQlFTeERRVUZCUVN4RFFVVnlRMDBzVDBGQlFVRXNRMEZEVkVjc1VVRkJRVUVzUTBGQlUwc3NUMEZCUVVFc1EwRkJVV1FzVVVGQlFVRXNRMEZCUVVFc1EwRkZha0pUTEZGQlFVRkJMRU5CUVZOTkxFbEJRVUZCTEVOQlFVdG1MRkZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1doQ1R5eERRVUZCUVN4RFFVRkpUQ3huUWtGQlFVRXNRMEZCYVVKNFF5eE5RVUZCUVN4RFFVRkJRU3hGUVVOaUxFTkJRVUVzUlVGQlN5dERMRkZCUVVGQkxFTkJRVk5QTEUxQlFVRkJMRU5CUVZOVUxFTkJRVUZCTEVWQlFVRkJMRU5CUVUxRkxGRkJRVUZCTEVOQlFWTlJMRTFCUVVGQkxFTkJRVkVzUTBGRGNFUlNMRkZCUVVGQkxFTkJRVk5STEUxQlFVRkJMRU5CUVVGQkxFTkJRVk1zUTBGQlFTeERRVWRzUWl4SlFVRkpReXhEUVVGQlFTeERRVUZKTEVsQlFVbERMRXRCUVVGQkxFTkJRVTBzT0VOQlFVRXNRMEZEUlZZc1VVRkJRVUVzUTBGQlUwOHNUVUZCUVVFc1EwRkJVeXhIUVVGQkxFTkJRVTFKTEUxQlFVRkJMRU5CUVU5bUxFbEJRVUZCTEVOQlFVRkJMRU5CUVZFc2JVVkJRVUVzUTBGQlFTeERRVWN6UkdFc1EwRkJRVUVzUTBGQlJXeERMRWxCUVVGQkxFTkJRVThzTmtKQlFVRXNRMEZEVkd0RExFTkJRVUZCTEVOQlFVVnVReXhQUVVGQlFTeERRVUZWY2tJc1RVRkJRVUVzUTBGRFduZEVMRU5CUVVGQkxFTkJRVVZpTEVsQlFVRkJMRU5CUVU5QkxFbEJRVUZCTEVOQlExUmhMRU5CUVVGQkxFTkJRVVZITEV0QlFVRkJMRU5CUVZGYUxGRkJRVUZCTEVOQlFWTlBMRTFCUVVGQkxFTkJOMHRIVGl4UFFVRkJRU3hEUVRoTFNGRXNRMEZCUVVFc1EwRTNTMjVDU1N4UFFVRkJRU3hGUVVGWFFTeFBRVUZCUVN4RFFVRlJReXhKUVVGQlFTeEZRVUZOUkN4UFFVRkJRU3hEUVVGUlF5eEpRVUZCUVN4RFFVRkxZaXhQUVVGQlFTeERRVUZCUVN4RFFXbE1NVU1zVDBGQlQyaEVMRTFCUVVGQkxFTkJkMEpVTEZOQlFWTTRSQ3hUUVVGQlFTeERRVUZWT1VRc1RVRkJRVUVzUTBGQlVUSkRMRWxCUVVGQkxFTkJRVTFNTEZGQlFVRkJMRU5CUVVGQkxFTkJReTlDTEVsQlFVbDVRaXhMUVVGQlFTeERRVUZSTEVOQlFVVkRMRXRCUVVGQkxFTkJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVRlBReXhOUVVGQlFTeERRVUZCUVN4TFFVRlJkRU1zUTBGQlFVRXNRMEZCVnpOQ0xFMUJRVUZCTEVOQlFWRkJMRTFCUVVGQkxFTkJRVkV5UXl4SlFVRkJRU3hEUVVGTlFTeEpRVUZCUVN4RFFVRk5UQ3hSUVVGQlFTeERRVUZWUVN4UlFVRkJRU3hEUVVGQlFTeERRVU5xUmpSQ0xFOUJRVUZCTEVOQldrNHNWVUZCUVN4RFFVTkZMRWRCUVVFc1EwRkJTMnBFTEVsQlFVRkJMRU5CUVVzclF5eExRVUZCUVN4RFFVZFNMRTlCUmtFdlF5eEpRVUZCUVN4RFFVRkxha0lzVFVGQlFVRXNRMEZCVHpaQ0xHTkJRVUZCTEVOQlFXVmFMRWxCUVVGQkxFTkJRVXN3UWl4SlFVRkJRU3hEUVVGTk1VSXNTVUZCUVVFc1EwRkJTMmRFTEUxQlFVRkJMRU5CUVVGQkxFTkJRek5EYUVRc1NVRkJRVUVzUTBGQlN5dERMRXRCUVVGQkxFTkJRVUZCTEVOQlFWRXNRMEZCUVN4RFFVTlpMRU5CUVVFc1IwRkJja0pxUXl4VFFVRkJRU3hEUVVGVmRVSXNUVUZCUVVFc1EwRkRUSEpETEVsQlFVRkJMRU5CUVV0eFFpeFJRVUZCUVN4RFFVRlRha01zU1VGQlFVRXNRMEZCUzFrc1NVRkJRVUVzUTBGQlMycENMRTFCUVVGQkxFTkJRVUZCTEVOQlF6RkNhVUlzU1VGQlFVRXNRMEZCUzNGQ0xGRkJRVUZCTEVOQlFWTjJReXhMUVVGQlFTeERRVUZOYTBJc1NVRkJRVUVzUTBGQlMycENMRTFCUVVGQkxFTkJRVkVyUWl4VFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVMW9RbTlETEVsQlFVRkJMRU5CUVV0S0xFdEJRVUZCTEVOQlFVRkJMRU5CUnk5Q0xFOUJSa0ZITEU5QlFVRkJMRU5CUVZFMVFpeFJRVUZCUVN4RFFVRlhRU3hSUVVGQlFTeERRVU51UW5sQ0xFdEJRVUZCTEVOQlFVMUZMRTFCUVVGQkxFTkJRVk5ETEU5QlFVRkJMRU5CUTFKQkxFOUJRVUZCTEVOQk1FaFVMRk5CUVZORkxGVkJRVUZCTEVOQlFWZHdSU3hOUVVGQlFTeERRVUZSTWtNc1NVRkJRVUVzUTBGQlRUQkNMRTFCUVVGQkxFTkJRVUZCTEVOQlEyaERMRWxCUVVsMlFpeE5RVUZCUVN4RFFVRlRPVU1zVFVGQlFVRXNRMEZCVDJsRExFOUJRVUZCTEVOQlJYQkNMRWRCUVVFc1MwRkJaVTRzUTBGQlFVRXNSMEZCV0cxQ0xFMUJRVUZCTEVOQlEwWXNUVUZCVHl4RlFVRkJMRU5CUlZRc1NVRkJTWGRDTEZWQlFVRkJMRU5CUVdGNFFpeE5RVUZCUVN4RFFVRlBTQ3hKUVVGQlFTeERRVUZCUVN4RFFVTjRRaXhQUVVGQkxFdEJRVzFDYUVJc1EwRkJRVUVzUjBGQlpqSkRMRlZCUVVGQkxFTkJRMHNzUlVGQlFTeERRVVZwUWl4VlFVRkJMRVZCUVVFc1QwRkJaa0VzVlVGQlFVRXNRMEZEUmtRc1RVRkJRVUVzUTBGQlV5eERRVUZEUXl4VlFVRkJRU3hEUVVGWGFFTXNVVUZCUVVFc1JVRkJXV2RETEZWQlFVRkJMRU5CUVVGQkxFTkJRV01zUTBGQlEwRXNWVUZCUVVFc1EwRkJRVUVzUTBGRmJFUkVMRTFCUVVGQkxFTkJjMFJVTEZOQlFYbENSU3hIUVVGQlFTeERRVUZCUVN4RFFVVjJRaXhKUVVSQkxFbEJRVWxETEVkQlFVRkJMRU5CUVUwc1NVRkJTVU1zUzBGQlFVRXNRMEZCVFVZc1IwRkJRVUVzUTBGQlNXcENMRTFCUVVGQkxFTkJRVUZCTEVOQlEyWnZRaXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVWXNSMEZCUVVFc1EwRkJTV3hDTEUxQlFVRkJMRU5CUVVGQkxFVkJRVlZ2UWl4RFFVRkJRU3hEUVVOb1EwWXNSMEZCUVVFc1EwRkJTVVVzUTBGQlFVRXNRMEZCUVVFc1EwRkJTMGdzUjBGQlFVRXNRMEZCU1Vjc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjNCRExGRkJRVUZCTEVWQlFWbHBReXhIUVVGQlFTeERRVUZKUnl4RFFVRkJRU3hEUVVGQlFTeERRVVZzUXl4UFFVRlBSaXhIUVVGQlFTeERRVEZFVEVjc1EwRkJaMEpNTEZWQlFVRkJMRU5CUVVGQkxFTkJRV05OTEZWQlFVRkJMRU5CUVZkT0xGVkJRVUZCTEVOQlFWbEJMRlZCUVVGQkxFTkJRVmRvUWl4TlFVRkJRU3hEUVVGQlFTeERRVzlDY0VVc1UwRkJVM1ZDTEdGQlFVRkJMRU5CUVdOc1F5eEpRVUZCUVN4RFFVRkJRU3hEUVVOeVFpeEpRVUZKUnl4TlFVRkJRU3hEUVVGVE4wSXNTVUZCUVVFc1EwRkJTMmRDTEU5QlFVRkJMRU5CUld4Q0xFZEJRVUVzUzBGQlpVNHNRMEZCUVVFc1IwRkJXRzFDTEUxQlFVRkJMRU5CUVhOQ0xFTkJRM2hDTEVsQlFVbDNRaXhWUVVGQlFTeERRVUZoZUVJc1RVRkJRVUVzUTBGQlQwZ3NTVUZCUVVFc1EwRkJRVUVzUTBGRmVFSXNSMEZCTUVJc1ZVRkJRU3hGUVVGQkxFOUJRV1l5UWl4VlFVRkJRU3hEUVVOVUxFOUJRVThzUTBGQlFTeERRVU5HTEVkQlFVRXNTMEZCYlVJelF5eERRVUZCUVN4SFFVRm1Na01zVlVGQlFVRXNRMEZEVkN4UFFVRlBRU3hWUVVGQlFTeERRVUZYYUVJc1RVRkJRVUVzUTBGSmRFSXNUMEZCVHl4RFFVRkJMRU5CVDFRc1UwRkJVM05DTEZWQlFVRkJMRU5CUVZkTUxFZEJRVUZCTEVOQlFVdFBMRU5CUVVGQkxFTkJRVUZCTEVOQlJYWkNMRWxCUkVFc1NVRkJTVU1zU1VGQlFVRXNRMEZCVHl4SlFVRkpUaXhMUVVGQlFTeERRVUZOU3l4RFFVRkJRU3hEUVVGQlFTeERRVU5hU2l4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVWtzUTBGQlFVRXNRMEZCUVVFc1JVRkJTMG9zUTBGQlFVRXNRMEZEZGtKTExFbEJRVUZCTEVOQlFVdE1MRU5CUVVGQkxFTkJRVUZCTEVOQlFVdElMRWRCUVVGQkxFTkJRVWxITEVOQlFVRkJMRU5CUVVGQkxFTkJRMmhDTEU5QlFVOUxMRWxCUVVGQkxFTkJjRmRVZUVVc1RVRkJRVUVzUTBGQlQzbEZMR05CUVVGQkxFTkJRV1ZxUlN4WlFVRkJRU3hEUVVGakxIRkNRVUZCTEVOQlFYVkNMRU5CUTNwRWEwVXNWVUZCUVVFc1EwRkJRVUVzUTBGQldTeERRVUZCTEVOQlExcERMRWRCUVVGQkxFTkJRVXNzVlVGQlFTeERRVU5JTEU5QlFVODVReXh0UWtGQlFVRXNRMEZCUVVFc1EwRkZWQ3RETEVkQlFVRkJMRU5CUVVzc1UwRkJVME1zUjBGQlFVRXNRMEZCUVVFc1EwRkRXaXhIUVVGdFFpeFJRVUZCTEVWQlFVRXNUMEZCVWtFc1IwRkJRVUVzUlVGQmIwSkJMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeEZRVUZMZWtVc1YwRkJRVUVzUTBGQldYbEZMRWRCUVVGQkxFTkJRVUZCTEVOQlEzQkVMRTFCUVUwc1NVRkJTVU1zVlVGQlFVRXNRMEZCVnl4cFIwRkJRU3hEUVVGdlIwUXNSMEZCUVVFc1EwRkJUU3hIUVVGQkxFTkJRVUVzUTBGRmFrbG9SQ3h0UWtGQlFVRXNRMEZCYzBKblJDeEhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVa3hRbkpGTEZsQlFVRkJMRU5CUVdGRExFbEJRVUZCTEVOQlFVOHNWVUZCUVN4RFFVRkJMRXRCUlVkWExFTkJRVUZCTEVkQlFXcENWaXhKUVVGQlFTeERRVUZMWjBJc1QwRkJRVUVzUlVGRFRHaENMRWxCUVVGQkxFTkJRVXRuUWl4UFFVRkJRU3hIUVVGWk1VSXNUVUZCUVVFc1EwRkJUeXRGTEdOQlFVRkJMRU5CUVdWeVJTeEpRVUZCUVN4RFFVRkJRU3hEUVVGTlowSXNUMEZCUVVFc1IwRkRMME5vUWl4SlFVRkJRU3hEUVVGTFowSXNUMEZCUVVFc1EwRkJWVEZDTEUxQlFVRkJMRU5CUVU4d1F5eE5RVUZCUVN4RFFVRlBMRWxCUVVFc1EwRkJRU3hEUVVNM1FtaERMRWxCUVVGQkxFTkJRVXRwUWl4WlFVRkJRU3hEUVVGbExFTkJRVUVzUTBGQlFTeERRVWQwUW1wQ0xFbEJRVUZCTEVOQlFVdHJRaXhoUVVGQlFTeERRVUZuUW14Q0xFbEJRVUZCTEVOQlFVdHJRaXhoUVVGQlFTeEZRVUZCUVN4TFFVRnBRbElzUTBGQlFVRXNRMEZCUVVFc1EwRkxOME5hTEZsQlFVRkJMRU5CUVdGWUxGTkJRVUZCTEVOQlFWVnRSaXhsUVVGQlFTeERRVUZyUWl4VFFVRjVRbFFzUTBGQlFVRXNRMEZCUVVFc1EwRkRhRVVzUjBGQmFVSXNVVUZCUVN4RlFVRkJMRTlCUVU1QkxFTkJRVUZCTEVWQlFXdENRU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNSVUZCUzI1RkxGZEJRVUZCTEVOQlFWbHRSU3hEUVVGQlFTeERRVUZCUVN4RFFVTm9SQ3hOUVVGTkxFbEJRVWxQTEZWQlFVRkJMRU5CUVZjc0swVkJRVUVzUTBGQmEwWlFMRU5CUVVGQkxFTkJRVWtzUjBGQlFTeERRVUZCTEVOQlJ6ZEhMRTlCUkVFM1JDeEpRVUZCUVN4RFFVRkxhMElzWVVGQlFVRXNRMEZCWjBJeVF5eERRVUZCUVN4RFFVTmtOMFFzU1VGQlFVRXNRMEZCUVVFc1EwRlRWRVlzV1VGQlFVRXNRMEZCWVZnc1UwRkJRVUVzUTBGQlZXOUdMR1ZCUVVGQkxFTkJRV3RDTEZWQlFVRXNRMEZEZGtNc1QwRkJUMmhFTEdkQ1FVRkJRU3hEUVVGcFFuWkNMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUnpGQ1JpeFpRVUZCUVN4RFFVRmhXQ3hUUVVGQlFTeERRVUZWSzBNc1NVRkJRVUVzUTBGQlR5eFRRVUZqVWl4SlFVRkJRU3hEUVVGQlFTeERRVVV4UXl4SlFVUkJMRWxCUVVsNlF5eEpRVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkRSbmRGTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpNME1zVTBGQlFVRXNRMEZCVlhWQ0xFMUJRVUZCTEVOQlFWRnZRaXhEUVVGQlFTeEZRVUZCUVN4RFFVRkxlRVVzU1VGQlFVRXNRMEZCUzIxRUxFbEJRVUZCTEVOQlFVdDBRaXhUUVVGQlFTeERRVUZWTWtNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRMMFFzU1VGQlNXVXNUMEZCUVVFc1EwRkJiMElzVDBGQlFTeEhRVUZVT1VNc1NVRkJRVUVzUTBGRldFY3NUVUZCUVVFc1EwRkJVemRDTEVsQlFVRkJMRU5CUVV0blFpeFBRVUZCUVN4RFFVTnNRaXhIUVVGQkxFdEJRV1ZPTEVOQlFVRkJMRWRCUVZodFFpeE5RVUZCUVN4RFFVTkdNa01zVDBGQlFVRXNRMEZCVjBFc1QwRkJRVUVzUlVGQlFVRXNTMEZCTkVJNVJDeERRVUZCUVN4SFFVRnFRbTFDTEUxQlFVRkJMRU5CUVU4MFF5eExRVUZCUVN4RFFVRkJRU3hMUVVNeFFpeEhRVUZCTEVOQlFVdEVMRTlCUVVGQkxFTkJRMUlzVFVGQlFTeERRVUZQTEVOQlFVRXNRMEZIVkN4SFFVRkpRU3hQUVVGQlFTeERRVUZUTEVOQlExZ3NTVUZCU1VVc1JVRkJRVUVzUTBGSFNpeEhRVVpKZWtZc1NVRkJRVUVzUTBGQlMyOUVMRTFCUVVGQkxFTkJRVk1zUTBGQlFTeEhRVU5vUW5GRExFVkJRVUZCTEVOQlFVdDZSaXhKUVVGQlFTeERRVUZMTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTFKNVJpeEZRVUZCUVN4WlFVRmpiRU1zUzBGQlFVRXNRMEZIYUVJc1RVRkJUV3RETEVWQlFVRkJMRU5CUjFJc1NVRkJTVE5FTEVkQlFVRkJMRU5CUVUwc1NVRkJTWGxDTEV0QlFVRkJMRU5CUVUwc2EwSkJRVUVzUlVGQmMwSnJReXhGUVVGQlFTeERRVUZMTEVsQlFVRXNRMEZCVDBFc1JVRkJRVUVzUTBGQlIwTXNUMEZCUVVFc1EwRkJWU3hIUVVGQkxFTkJRVTBzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZGZWtVc1RVRkVRVFZFTEVkQlFVRkJMRU5CUVVrMlJDeFBRVUZCUVN4RFFVRlZSaXhGUVVGQlFTeERRVU5TTTBRc1IwRkJRVUVzUTBGSFVpeEpRVUZKT0VRc1QwRkJRVUVzUTBGQlZXaEVMRTFCUVVGQkxFTkJRVTlJTEVsQlFVRkJMRU5CUVVGQkxFTkJSWEpDTEVkQlFVRXNTMEZCWjBKb1FpeERRVUZCUVN4SFFVRmFiVVVzVDBGQlFVRXNRMEZEUml4TlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVWVUxFZEJRWFZDTEZWQlFVRXNSVUZCUVN4UFFVRmFRU3hQUVVGQlFTeERRVU5VYUVjc1dVRkJRVUVzUTBGQllXZEhMRTlCUVVGQkxFTkJRVk0zUlN4SlFVRkJRU3hEUVVGTlppeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEpRVVUxUWl4RFFVRkJMRWxCUVVrMlJpeEhRVUZCUVN4RFFVRk5SQ3hQUVVGQlFTeERRVUZSZUVNc1RVRkJRVUVzUTBGRFpEQkRMRk5CUVVGQkxFTkJRVmx3UWl4VlFVRkJRU3hEUVVGWGEwSXNUMEZCUVVFc1EwRkJVME1zUjBGQlFVRXNRMEZCUVVFc1EwRkRjRU1zU1VGQlUzSkNMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmNVSXNSMEZCUVVFc1EwRkJRVUVzUlVGQlQzSkNMRU5CUVVGQkxFTkJRM3BDTlVVc1dVRkJRVUVzUTBGQllXdEhMRk5CUVVGQkxFTkJRVlYwUWl4RFFVRkJRU3hEUVVGQlFTeERRVUZKZWtRc1NVRkJRVUVzUTBGQlRXWXNTVUZCUVVFc1EwRkJRVUVzUTBGSGNrTXNUVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkJRU3hEUVdsRlZHRXNXVUZCUVVFc1EwRkJZVmdzVTBGQlFVRXNRMEZCVlRaR0xGZEJRVUZCTEVOQlFXTXNVMEZCY1VKMFJDeEpRVUZCUVN4RFFVRk5UQ3hSUVVGQlFTeERRVUZCUVN4RFFVTTVSQ3hQUVVGUFNTeFpRVUZCUVN4RFFVRmhla0lzU1VGQlFVRXNRMEZCVFRCQ0xFbEJRVUZCTEVOQlFVMU1MRkZCUVVGQkxFTkJRVUZCTEVOQlFWVXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkhOVU4yUWl4WlFVRkJRU3hEUVVGaFdDeFRRVUZCUVN4RFFVRlZPRVlzUlVGQlFVRXNRMEZCUzI1R0xGbEJRVUZCTEVOQlFXRllMRk5CUVVGQkxFTkJRVlUyUml4WFFVRkJRU3hEUVVWdVJHeEdMRmxCUVVGQkxFTkJRV0ZZTEZOQlFVRkJMRU5CUVZVclJpeGxRVUZCUVN4RFFVTnVRaXhUUVVGNVFuaEVMRWxCUVVGQkxFTkJRVTFNTEZGQlFVRkJMRU5CUVVGQkxFTkJRemRDTEU5QlFVOUpMRmxCUVVGQkxFTkJRV0Y2UWl4SlFVRkJRU3hEUVVGTk1FSXNTVUZCUVVFc1EwRkJUVXdzVVVGQlFVRXNRMEZCUVVFc1EwRkJWU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRWEZDYUVSMlFpeFpRVUZCUVN4RFFVRmhXQ3hUUVVGQlFTeERRVUZWWjBJc1NVRkJRVUVzUTBGQlR5eFRRVUZqZFVJc1NVRkJRVUVzUTBGQlRVd3NVVUZCUVVFc1EwRkJRVUVzUTBGSGFFUXNUMEZHUVVRc1lVRkJRVUVzUTBGQlkwTXNVVUZCUVVFc1EwRkJRVUVzUTBGRFpISkNMRWxCUVVGQkxFTkJRVXRwUml4RlFVRkJRU3hEUVVGSGRrUXNTVUZCUVVFc1EwRkJUVzFDTEZOQlFVRkJMRU5CUVZVM1F5eEpRVUZCUVN4RFFVRk5NRUlzU1VGQlFVRXNRMEZCVFV3c1VVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkROMEp5UWl4SlFVRkJRU3hEUVVGQlFTeERRVWRVUml4WlFVRkJRU3hEUVVGaFdDeFRRVUZCUVN4RFFVRlZaMGNzYlVKQlFVRkJMRU5CUTI1Q0xGTkJRVFpDZWtRc1NVRkJRVUVzUTBGQlRVd3NVVUZCUVVFc1EwRkJRVUVzUTBGSGFrTXNUMEZHUVVRc1lVRkJRVUVzUTBGQlkwTXNVVUZCUVVFc1EwRkJRVUVzUTBGRFpISkNMRWxCUVVGQkxFTkJRVXRyUml4bFFVRkJRU3hEUVVGblFuaEVMRWxCUVVGQkxFTkJRVTF0UWl4VFFVRkJRU3hEUVVGVk4wTXNTVUZCUVVFc1EwRkJUVEJDTEVsQlFVRkJMRU5CUVUxTUxGRkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRekZEY2tJc1NVRkJRVUVzUTBGQlFVRXNRMEZKWWtZc1dVRkJRVUVzUTBGQllWZ3NVMEZCUVVFc1EwRkJWWGxDTEdOQlFVRkJMRU5CUTI1Q0xGTkJRWGRDWXl4SlFVRkJRU3hEUVVGTlRDeFJRVUZCUVN4RFFVRkJRU3hEUVVNMVFpeEpRVUZKSzBRc1NVRkJRVUVzUTBGQlRYWkVMRTFCUVVGQkxFTkJRVkYzUkN4UlFVRkJRU3hEUVVGVk5VSXNRMEZCUVVFc1EwRkJSelpDTEdkQ1FVRkJRU3hEUVVzdlFpeEhRVWhCYkVVc1lVRkJRVUVzUTBGQlkwTXNVVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNTMEZIUTFnc1EwRkJRVUVzU1VGRVptMUNMRTFCUVVGQkxFTkJRVk0zUWl4SlFVRkJRU3hEUVVGTFowSXNUMEZCUVVFc1EwRkJRVUVzUTBGRldpeFBRVUZQYUVJc1NVRkJRVUVzUTBGSFZDeEhRVUZCTEV0QlFXRlZMRU5CUVVGQkxFbEJSR0l3UlN4SlFVRkJRU3hEUVVGUGRrUXNUVUZCUVVFc1EwRkJUMGdzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRldpeFBRVUZQTVVJc1NVRkJRVUVzUTBGRlZDeEhRVUZKYjBZc1NVRkJRVUVzUjBGQlV5OUVMRkZCUVVGQkxFVkJRVmtyUkN4SlFVRkJRU3hEUVVGTEwwUXNVVUZCUVVFc1IwRkJZVUVzVVVGQlFVRXNRMEZEWWl4RFFVRkJMRVZCUVVFc1JVRkJkRUp5UWl4SlFVRkJRU3hEUVVGTGFVSXNXVUZCUVVFc1EwRkRWR3BDTEVsQlFVRkJMRU5CUVV0blFpeFBRVUZCUVN4RFFVRlZNVUlzVFVGQlFVRXNRMEZCVHpCRExFMUJRVUZCTEVOQlFVOHNTVUZCUVN4RFFVRkJMRVZCUVVFc1QwRkZkRUpJTEUxQlFVRkJMRU5CUVU5SUxFbEJRVUZCTEVOQlFVRkJMRU5CUTFaSExFMUJRVUZCTEVOQlFVOXFRaXhqUVVGQlFTeEZRVU5VV2l4SlFVRkJRU3hEUVVGTGEwTXNTVUZCUVVFc1EwRkJTeXhuUWtGQlFTeERRVUZyUWxJc1NVRkJRVUVzUTBGQlRUQkVMRWxCUVVGQkxFTkJRVXN2UkN4UlFVRkJRU3hGUVVGWlFTeFJRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4TFFVVnNSQ3hIUVVGdlFpeFZRVUZCTEVWQlFVRXNUMEZCVkN0RUxFbEJRVUZCTEVOQlFYRkNMRU5CUjNKRExFbEJSa0ZETEZGQlFVRkJMRU5CUVVGQkxFTkJRVmtzUTBGQlFTeERRVVZRTlVJc1EwRkJRVUVzUTBGQlNUSkNMRWxCUVVGQkxFTkJRVXN2UXl4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlIyOUNMRU5CUVVGQkxFVkJRVXNzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hGUVVGQlFTeERRVU5vUXl4SFFVRkpNa0lzU1VGQlFVRXNRMEZCU3pOQ0xFTkJRVUZCTEVOQlFVRkJMRWRCUVU5d1F5eFJRVUZCUVN4RlFVRlpLMFFzU1VGQlFVRXNRMEZCU3pOQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVkd1F5eFJRVUZCUVN4SFFVRmhRU3hSUVVGQlFTeERRVUZWTEVOQlEzcEVhVVVzWjBKQlFVRkJMRU5CUVcxQ1JpeEpRVUZCUVN4RFFVRkxNMElzUTBGQlFVRXNRMEZCUVVFc1EwRkJSM0JETEZGQlFVRkJMRU5CUXpOQ1owVXNVVUZCUVVFc1EwRkJWelZDTEVOQlFVRkJMRU5CUTFnc1MwRkJRU3hEUVVsS0xFZEJRVWswUWl4UlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGRFlpeFBRVUZQY2tZc1NVRkJRVUVzUTBGRlVTeERRVUZCTEVkQlFXSnhSaXhSUVVGQlFTeERRVU5HUkN4SlFVRkJRU3hEUVVGTFJ5eExRVUZCUVN4RlFVRkJRU3hEUVdsSlppeFRRVUZ0UWtnc1NVRkJRVUVzUTBGQlRVa3NTMEZCUVVFc1EwRkJRVUVzUTBGRGRrSXNTMEZCVDBFc1MwRkJRVUVzUTBGQlVTeERRVUZCTEVOQlFVbEtMRWxCUVVGQkxFTkJRVXN2UXl4TlFVRkJRU3hEUVVGUmJVUXNTMEZCUVVFc1JVRkJRVUVzUTBGRE9VSktMRWxCUVVGQkxFTkJRVXRKTEV0QlFVRkJMRU5CUVVGQkxFTkJRVk5LTEVsQlFVRkJMRU5CUVV0SkxFdEJRVUZCTEVOQlFWRXNRMEZCUVN4RFFVRkJMRU5CUXpkQ1NpeEpRVUZCUVN4RFFVRkxTeXhIUVVGQlFTeEZRVUZCUVN4RFFXeEpSME1zUTBGQlZVNHNTVUZCUVVFc1EwRkJUVU1zVVVGQlFVRXNRMEZCUVVFc1EwRkhSU3hEUVVGQkxFZEJRV2hDUkN4SlFVRkJRU3hEUVVGTEwwTXNUVUZCUVVFc1IwRkRVRklzVFVGQlFVRXNRMEZCVDBnc1NVRkJRVUVzUTBGQlFVRXNRMEZCVVRCRUxFbEJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hMUVVWUk1VVXNRMEZCUVVFc1IwRkJNVUp0UWl4TlFVRkJRU3hEUVVGUGFrSXNZMEZCUVVFc1JVRkRWRm9zU1VGQlFVRXNRMEZCUzJ0RExFbEJRVUZCTEVOQlFVc3NaMEpCUVVFc1EwRkJhMEpTTEVsQlFVRkJMRU5CUVUwMFJDeG5Ra0ZCUVVFc1JVRkJiMEpxUlN4UlFVRkJRU3hEUVVGQlFTeERRVWN4UkN4UFFVRlBja0lzU1VGQlFVRXNRMEZCUVVFc1EwRkhZa1lzV1VGQlFVRXNRMEZCWVZnc1UwRkJRVUVzUTBGQlZYZEhMRWRCUVVGQkxFTkJRVTAzUml4WlFVRkJRU3hEUVVGaFdDeFRRVUZCUVN4RFFVRlZlVUlzWTBGQlFVRXNRMEZGY0VSa0xGbEJRVUZCTEVOQlFXRllMRk5CUVVGQkxFTkJRVlY1Unl4clFrRkJRVUVzUTBGRGJrSXNVMEZCTkVKc1JTeEpRVUZCUVN4RFFVRkJRU3hEUVVNeFFpeEpRVUZKY1VRc1UwRkJRVUVzUTBGQlYyeEVMRTFCUVVGQkxFTkJRVkUwUWl4RFFVRkJRU3hEUVVkMlFpeEhRVUZCTEV0QlFXVXZReXhEUVVGQlFTeEpRVVJtYlVJc1RVRkJRVUVzUTBGQlV6ZENMRWxCUVVGQkxFTkJRVXRuUWl4UFFVRkJRU3hEUVVGQlFTeERRVVZhTEU5QlFVOW9RaXhKUVVGQlFTeERRVWRVTEVkQlFVRXNTMEZCT0VKVkxFTkJRVUZCTEVkQlFURkNiVUlzVFVGQlFVRXNRMEZCVDJwQ0xHTkJRVUZCTEVOQlZWUXNUMEZVZVVJc1EwRkJRU3hIUVVGeVFrVXNVMEZCUVVFc1EwRkJWWFZDTEUxQlFVRkJMRVZCUTFweVF5eEpRVUZCUVN4RFFVRkxaMElzVDBGQlFVRXNRMEZCVlRGQ0xFMUJRVUZCTEVOQlFVOHdReXhOUVVGQlFTeERRVUZQTEVsQlFVRXNRMEZCUVN4RFFVTTNRbWhETEVsQlFVRkJMRU5CUVV0cFFpeFpRVUZCUVN4RFFVRmxMRU5CUVVFc1JVRkJRU3hMUVVOTlVDeERRVUZCUVN4SFFVRnFRbTFDTEUxQlFVRkJMRU5CUVU5SUxFbEJRVUZCTEVOQlFVRkJMRWRCUTFrc1EwRkJRU3hGUVVGQkxFVkJRWFJDTVVJc1NVRkJRVUVzUTBGQlMybENMRmxCUVVGQkxFTkJRMVJxUWl4SlFVRkJRU3hEUVVGTFowSXNUMEZCUVVFc1EwRkJWVEZDTEUxQlFVRkJMRU5CUVU4d1F5eE5RVUZCUVN4RFFVRlBMRWxCUVVFc1EwRkJRU3hEUVVGQkxFOUJSWFJDU0N4TlFVRkJRU3hEUVVGUFNDeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVZZTVVJc1NVRkJRVUVzUTBGSlZDeEhRVUY1UWl4RFFVRkJMRWRCUVhKQ1l5eFRRVUZCUVN4RFFVRlZkVUlzVFVGQlFVRXNRMEZCWXl4RFFVTXhRaXhKUVVOSmQwUXNSMEZCUVVFc1EwRkVRVU1zU1VGQlFVRXNRMEZCVDNoSExFMUJRVUZCTEVOQlFVOTNSeXhKUVVGQlFTeERRVUZMYWtVc1RVRkJRVUVzUTBGQlFVRXNRMEZGZGtJc1NVRkJTelJDTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpjVU1zU1VGQlFVRXNRMEZCUzNwRUxFMUJRVUZCTEVOQlFVRkJMRVZCUVZWdlFpeERRVUZCUVN4RFFVVnFRaXhuUWtGQlFTeEpRVVJhYjBNc1IwRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJTM0pETEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlJWaDZSQ3hKUVVGQlFTeERRVUZMTkVZc2EwSkJRVUZCTEVOQlFXMUNReXhIUVVGQlFTeERRVUZCUVN4RFFVc3hRaXhQUVVoQk4wWXNTVUZCUVVFc1EwRkJTelJHTEd0Q1FVRkJRU3hEUVVGdFFpeG5Ra0ZCUVN4RFFVRkJMRU5CUTNoQ05VWXNTVUZCUVVFc1EwRkJTMmRDTEU5QlFVRkJMRU5CUVZVeFFpeE5RVUZCUVN4RFFVRlBNRU1zVFVGQlFVRXNRMEZCVHl4SlFVRkJMRU5CUVVFc1EwRkROMEpvUXl4SlFVRkJRU3hEUVVGTGFVSXNXVUZCUVVFc1EwRkJaU3hEUVVGQkxFTkJRMkpxUWl4SlFVRkJRU3hEUVV0VUxFZEJRWGxDTEZWQlFVRXNSVUZCUVN4UFFVWjZRaXRGTEZOQlFVRkJMRU5CUVZsc1JDeE5RVUZCUVN4RFFVRlBTQ3hKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkcVFqRkNMRWxCUVVGQkxFTkJRVXRaTEdOQlFVRkJMRU5CUVdWakxFbEJRVUZCTEVOQlFVMXhSQ3hUUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hMUVVOeVFpeEhRVUZCTEV0QlFXdENja1VzUTBGQlFVRXNSMEZCWkhGRkxGTkJRVUZCTEVOQlJWUXNTVUZCUzNSQ0xFTkJRVUZCTEVOQlFVbHpRaXhUUVVGQlFTeERRVUZWTVVNc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVZHZRaXhEUVVGQlFTeEZRVUZMTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUlVGQlFVRXNRMEZEY2tONlJDeEpRVUZCUVN4RFFVRkxXU3hqUVVGQlFTeERRVUZsWXl4SlFVRkJRU3hEUVVGTmNVUXNVMEZCUVVFc1EwRkJWWFJDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlNYaERMRTlCUVU5NlJDeEpRVUZCUVN4RFFVRkJRU3hEUVc5Q1lrWXNXVUZCUVVFc1EwRkJZVmdzVTBGQlFVRXNRMEZCVlRSR0xGTkJRVUZCTEVOQlFWa3NVMEZCYlVKeVJDeEpRVUZCUVN4RFFVRkJRU3hEUVVOd1JDeFBRVUZQZVVJc1ZVRkJRVUVzUTBGQlYyNUVMRWxCUVVGQkxFTkJRVTB3UWl4SlFVRkJRU3hEUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUjJoRE5VSXNXVUZCUVVFc1EwRkJZVmdzVTBGQlFVRXNRMEZCVlRSSExGbEJRVUZCTEVOQlFXVXNVMEZCYzBKeVJTeEpRVUZCUVN4RFFVRkJRU3hEUVVNeFJDeFBRVUZQZVVJc1ZVRkJRVUVzUTBGQlYyNUVMRWxCUVVGQkxFTkJRVTB3UWl4SlFVRkJRU3hEUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUjJoRE5VSXNXVUZCUVVFc1EwRkJZVGhFTEdGQlFVRkJMRU5CUVdkQ0xGTkJRVk40UkN4UFFVRkJRU3hEUVVGVGMwSXNTVUZCUVVFc1EwRkJRVUVzUTBGRE4wTXNUVUZCY1VNc1ZVRkJRU3hGUVVGQkxFOUJRVEZDZEVJc1QwRkJRVUVzUTBGQlVYZEVMR0ZCUVVGQkxFTkJRMVo0UkN4UFFVRkJRU3hEUVVGUmQwUXNZVUZCUVVFc1EwRkJZMnhETEVsQlFVRkJMRU5CUVVGQkxFTkJSWFJDYTBNc1lVRkJRVUVzUTBGQlkzaEZMRWxCUVVGQkxFTkJRVXRuUWl4UFFVRkJRU3hEUVVGVGMwSXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKZGtNMVFpeFpRVUZCUVN4RFFVRmhXQ3hUUVVGQlFTeERRVUZWZVVVc1lVRkJRVUVzUTBGQlowSkJMR0ZCUVVGQkxFTkJhVUoyUXpsRUxGbEJRVUZCTEVOQlFXRllMRk5CUVVGQkxFTkJRVlUyUnl4VlFVRkJRU3hEUVVGaExGVkJRVUVzUTBGRGJFTXNUMEZCVDJoSExFbEJRVUZCTEVOQlFVdHBRaXhaUVVGQlFTeERRVUZsTEVOQlFVRXNRMEZCU1haRExHTkJRVUZCTEVOQlFXVnpRaXhKUVVGQlFTeERRVUZMWjBJc1QwRkJRVUVzUTBGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVFc1EwRkJRU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiYm5Wc2JGMTkiLCJcInVzZSBzdHJpY3RcIjt2YXIgRHVwbGV4O21vZHVsZS5leHBvcnRzPVJlYWRhYmxlLFJlYWRhYmxlLlJlYWRhYmxlU3RhdGU9UmVhZGFibGVTdGF0ZTtyZXF1aXJlKFwiZXZlbnRzXCIpLkV2ZW50RW1pdHRlcjt2YXIgRUVsaXN0ZW5lckNvdW50PWZ1bmN0aW9uKGVtaXR0ZXIsdHlwZSl7cmV0dXJuIGVtaXR0ZXIubGlzdGVuZXJzKHR5cGUpLmxlbmd0aH0sU3RyZWFtPXJlcXVpcmUoXCIuL2ludGVybmFsL3N0cmVhbXMvc3RyZWFtXCIpLEJ1ZmZlcj1yZXF1aXJlKFwiYnVmZmVyXCIpLkJ1ZmZlcixPdXJVaW50OEFycmF5PWdsb2JhbC5VaW50OEFycmF5fHxmdW5jdGlvbigpe307dmFyIGRlYnVnLGRlYnVnVXRpbD1yZXF1aXJlKFwidXRpbFwiKTtkZWJ1Zz1kZWJ1Z1V0aWwmJmRlYnVnVXRpbC5kZWJ1Z2xvZz9kZWJ1Z1V0aWwuZGVidWdsb2coXCJzdHJlYW1cIik6ZnVuY3Rpb24oKXt9O3ZhciBTdHJpbmdEZWNvZGVyLGNyZWF0ZVJlYWRhYmxlU3RyZWFtQXN5bmNJdGVyYXRvcixmcm9tLEJ1ZmZlckxpc3Q9cmVxdWlyZShcIi4vaW50ZXJuYWwvc3RyZWFtcy9idWZmZXJfbGlzdFwiKSxkZXN0cm95SW1wbD1yZXF1aXJlKFwiLi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3lcIiksZ2V0SGlnaFdhdGVyTWFyaz1yZXF1aXJlKFwiLi9pbnRlcm5hbC9zdHJlYW1zL3N0YXRlXCIpLmdldEhpZ2hXYXRlck1hcmssX3JlcXVpcmUkY29kZXM9cmVxdWlyZShcIi4uL2Vycm9yc1wiKS5jb2RlcyxFUlJfSU5WQUxJRF9BUkdfVFlQRT1fcmVxdWlyZSRjb2Rlcy5FUlJfSU5WQUxJRF9BUkdfVFlQRSxFUlJfU1RSRUFNX1BVU0hfQUZURVJfRU9GPV9yZXF1aXJlJGNvZGVzLkVSUl9TVFJFQU1fUFVTSF9BRlRFUl9FT0YsRVJSX01FVEhPRF9OT1RfSU1QTEVNRU5URUQ9X3JlcXVpcmUkY29kZXMuRVJSX01FVEhPRF9OT1RfSU1QTEVNRU5URUQsRVJSX1NUUkVBTV9VTlNISUZUX0FGVEVSX0VORF9FVkVOVD1fcmVxdWlyZSRjb2Rlcy5FUlJfU1RSRUFNX1VOU0hJRlRfQUZURVJfRU5EX0VWRU5UO3JlcXVpcmUoXCJpbmhlcml0c1wiKShSZWFkYWJsZSxTdHJlYW0pO3ZhciBlcnJvck9yRGVzdHJveT1kZXN0cm95SW1wbC5lcnJvck9yRGVzdHJveSxrUHJveHlFdmVudHM9W1wiZXJyb3JcIixcImNsb3NlXCIsXCJkZXN0cm95XCIsXCJwYXVzZVwiLFwicmVzdW1lXCJdO2Z1bmN0aW9uIFJlYWRhYmxlU3RhdGUob3B0aW9ucyxzdHJlYW0saXNEdXBsZXgpe0R1cGxleD1EdXBsZXh8fHJlcXVpcmUoXCIuL19zdHJlYW1fZHVwbGV4XCIpLG9wdGlvbnM9b3B0aW9uc3x8e30sXCJib29sZWFuXCIhPXR5cGVvZiBpc0R1cGxleCYmKGlzRHVwbGV4PXN0cmVhbSBpbnN0YW5jZW9mIER1cGxleCksdGhpcy5vYmplY3RNb2RlPSEhb3B0aW9ucy5vYmplY3RNb2RlLGlzRHVwbGV4JiYodGhpcy5vYmplY3RNb2RlPXRoaXMub2JqZWN0TW9kZXx8ISFvcHRpb25zLnJlYWRhYmxlT2JqZWN0TW9kZSksdGhpcy5oaWdoV2F0ZXJNYXJrPWdldEhpZ2hXYXRlck1hcmsodGhpcyxvcHRpb25zLFwicmVhZGFibGVIaWdoV2F0ZXJNYXJrXCIsaXNEdXBsZXgpLHRoaXMuYnVmZmVyPW5ldyBCdWZmZXJMaXN0LHRoaXMubGVuZ3RoPTAsdGhpcy5waXBlcz1udWxsLHRoaXMucGlwZXNDb3VudD0wLHRoaXMuZmxvd2luZz1udWxsLHRoaXMuZW5kZWQ9ITEsdGhpcy5lbmRFbWl0dGVkPSExLHRoaXMucmVhZGluZz0hMSx0aGlzLnN5bmM9ITAsdGhpcy5uZWVkUmVhZGFibGU9ITEsdGhpcy5lbWl0dGVkUmVhZGFibGU9ITEsdGhpcy5yZWFkYWJsZUxpc3RlbmluZz0hMSx0aGlzLnJlc3VtZVNjaGVkdWxlZD0hMSx0aGlzLnBhdXNlZD0hMCx0aGlzLmVtaXRDbG9zZT0hMSE9PW9wdGlvbnMuZW1pdENsb3NlLHRoaXMuYXV0b0Rlc3Ryb3k9ISFvcHRpb25zLmF1dG9EZXN0cm95LHRoaXMuZGVzdHJveWVkPSExLHRoaXMuZGVmYXVsdEVuY29kaW5nPW9wdGlvbnMuZGVmYXVsdEVuY29kaW5nfHxcInV0ZjhcIix0aGlzLmF3YWl0RHJhaW49MCx0aGlzLnJlYWRpbmdNb3JlPSExLHRoaXMuZGVjb2Rlcj1udWxsLHRoaXMuZW5jb2Rpbmc9bnVsbCxvcHRpb25zLmVuY29kaW5nJiYoU3RyaW5nRGVjb2Rlcnx8KFN0cmluZ0RlY29kZXI9cmVxdWlyZShcInN0cmluZ19kZWNvZGVyL1wiKS5TdHJpbmdEZWNvZGVyKSx0aGlzLmRlY29kZXI9bmV3IFN0cmluZ0RlY29kZXIob3B0aW9ucy5lbmNvZGluZyksdGhpcy5lbmNvZGluZz1vcHRpb25zLmVuY29kaW5nKX1mdW5jdGlvbiBSZWFkYWJsZShvcHRpb25zKXtpZihEdXBsZXg9RHVwbGV4fHxyZXF1aXJlKFwiLi9fc3RyZWFtX2R1cGxleFwiKSwhKHRoaXMgaW5zdGFuY2VvZiBSZWFkYWJsZSkpcmV0dXJuIG5ldyBSZWFkYWJsZShvcHRpb25zKTt2YXIgaXNEdXBsZXg9dGhpcyBpbnN0YW5jZW9mIER1cGxleDt0aGlzLl9yZWFkYWJsZVN0YXRlPW5ldyBSZWFkYWJsZVN0YXRlKG9wdGlvbnMsdGhpcyxpc0R1cGxleCksdGhpcy5yZWFkYWJsZT0hMCxvcHRpb25zJiYoXCJmdW5jdGlvblwiPT10eXBlb2Ygb3B0aW9ucy5yZWFkJiYodGhpcy5fcmVhZD1vcHRpb25zLnJlYWQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIG9wdGlvbnMuZGVzdHJveSYmKHRoaXMuX2Rlc3Ryb3k9b3B0aW9ucy5kZXN0cm95KSksU3RyZWFtLmNhbGwodGhpcyl9ZnVuY3Rpb24gcmVhZGFibGVBZGRDaHVuayhzdHJlYW0sY2h1bmssZW5jb2RpbmcsYWRkVG9Gcm9udCxza2lwQ2h1bmtDaGVjayl7ZGVidWcoXCJyZWFkYWJsZUFkZENodW5rXCIsY2h1bmspO3ZhciBlcixzdGF0ZT1zdHJlYW0uX3JlYWRhYmxlU3RhdGU7aWYobnVsbD09PWNodW5rKXN0YXRlLnJlYWRpbmc9ITEsZnVuY3Rpb24oc3RyZWFtLHN0YXRlKXtpZihkZWJ1ZyhcIm9uRW9mQ2h1bmtcIiksc3RhdGUuZW5kZWQpcmV0dXJuO2lmKHN0YXRlLmRlY29kZXIpe3ZhciBjaHVuaz1zdGF0ZS5kZWNvZGVyLmVuZCgpO2NodW5rJiZjaHVuay5sZW5ndGgmJihzdGF0ZS5idWZmZXIucHVzaChjaHVuayksc3RhdGUubGVuZ3RoKz1zdGF0ZS5vYmplY3RNb2RlPzE6Y2h1bmsubGVuZ3RoKX1zdGF0ZS5lbmRlZD0hMCxzdGF0ZS5zeW5jP2VtaXRSZWFkYWJsZShzdHJlYW0pOihzdGF0ZS5uZWVkUmVhZGFibGU9ITEsc3RhdGUuZW1pdHRlZFJlYWRhYmxlfHwoc3RhdGUuZW1pdHRlZFJlYWRhYmxlPSEwLGVtaXRSZWFkYWJsZV8oc3RyZWFtKSkpfShzdHJlYW0sc3RhdGUpO2Vsc2UgaWYoc2tpcENodW5rQ2hlY2t8fChlcj1mdW5jdGlvbihzdGF0ZSxjaHVuayl7dmFyIGVyO29iaj1jaHVuayxCdWZmZXIuaXNCdWZmZXIob2JqKXx8b2JqIGluc3RhbmNlb2YgT3VyVWludDhBcnJheXx8XCJzdHJpbmdcIj09dHlwZW9mIGNodW5rfHx2b2lkIDA9PT1jaHVua3x8c3RhdGUub2JqZWN0TW9kZXx8KGVyPW5ldyBFUlJfSU5WQUxJRF9BUkdfVFlQRShcImNodW5rXCIsW1wic3RyaW5nXCIsXCJCdWZmZXJcIixcIlVpbnQ4QXJyYXlcIl0sY2h1bmspKTt2YXIgb2JqO3JldHVybiBlcn0oc3RhdGUsY2h1bmspKSxlcillcnJvck9yRGVzdHJveShzdHJlYW0sZXIpO2Vsc2UgaWYoc3RhdGUub2JqZWN0TW9kZXx8Y2h1bmsmJmNodW5rLmxlbmd0aD4wKWlmKFwic3RyaW5nXCI9PXR5cGVvZiBjaHVua3x8c3RhdGUub2JqZWN0TW9kZXx8T2JqZWN0LmdldFByb3RvdHlwZU9mKGNodW5rKT09PUJ1ZmZlci5wcm90b3R5cGV8fChjaHVuaz1mdW5jdGlvbihjaHVuayl7cmV0dXJuIEJ1ZmZlci5mcm9tKGNodW5rKX0oY2h1bmspKSxhZGRUb0Zyb250KXN0YXRlLmVuZEVtaXR0ZWQ/ZXJyb3JPckRlc3Ryb3koc3RyZWFtLG5ldyBFUlJfU1RSRUFNX1VOU0hJRlRfQUZURVJfRU5EX0VWRU5UKTphZGRDaHVuayhzdHJlYW0sc3RhdGUsY2h1bmssITApO2Vsc2UgaWYoc3RhdGUuZW5kZWQpZXJyb3JPckRlc3Ryb3koc3RyZWFtLG5ldyBFUlJfU1RSRUFNX1BVU0hfQUZURVJfRU9GKTtlbHNle2lmKHN0YXRlLmRlc3Ryb3llZClyZXR1cm4hMTtzdGF0ZS5yZWFkaW5nPSExLHN0YXRlLmRlY29kZXImJiFlbmNvZGluZz8oY2h1bms9c3RhdGUuZGVjb2Rlci53cml0ZShjaHVuayksc3RhdGUub2JqZWN0TW9kZXx8MCE9PWNodW5rLmxlbmd0aD9hZGRDaHVuayhzdHJlYW0sc3RhdGUsY2h1bmssITEpOm1heWJlUmVhZE1vcmUoc3RyZWFtLHN0YXRlKSk6YWRkQ2h1bmsoc3RyZWFtLHN0YXRlLGNodW5rLCExKX1lbHNlIGFkZFRvRnJvbnR8fChzdGF0ZS5yZWFkaW5nPSExLG1heWJlUmVhZE1vcmUoc3RyZWFtLHN0YXRlKSk7cmV0dXJuIXN0YXRlLmVuZGVkJiYoc3RhdGUubGVuZ3RoPHN0YXRlLmhpZ2hXYXRlck1hcmt8fDA9PT1zdGF0ZS5sZW5ndGgpfWZ1bmN0aW9uIGFkZENodW5rKHN0cmVhbSxzdGF0ZSxjaHVuayxhZGRUb0Zyb250KXtzdGF0ZS5mbG93aW5nJiYwPT09c3RhdGUubGVuZ3RoJiYhc3RhdGUuc3luYz8oc3RhdGUuYXdhaXREcmFpbj0wLHN0cmVhbS5lbWl0KFwiZGF0YVwiLGNodW5rKSk6KHN0YXRlLmxlbmd0aCs9c3RhdGUub2JqZWN0TW9kZT8xOmNodW5rLmxlbmd0aCxhZGRUb0Zyb250P3N0YXRlLmJ1ZmZlci51bnNoaWZ0KGNodW5rKTpzdGF0ZS5idWZmZXIucHVzaChjaHVuayksc3RhdGUubmVlZFJlYWRhYmxlJiZlbWl0UmVhZGFibGUoc3RyZWFtKSksbWF5YmVSZWFkTW9yZShzdHJlYW0sc3RhdGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZWFkYWJsZS5wcm90b3R5cGUsXCJkZXN0cm95ZWRcIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5fcmVhZGFibGVTdGF0ZSYmdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWR9LHNldDpmdW5jdGlvbih2YWx1ZSl7dGhpcy5fcmVhZGFibGVTdGF0ZSYmKHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkPXZhbHVlKX19KSxSZWFkYWJsZS5wcm90b3R5cGUuZGVzdHJveT1kZXN0cm95SW1wbC5kZXN0cm95LFJlYWRhYmxlLnByb3RvdHlwZS5fdW5kZXN0cm95PWRlc3Ryb3lJbXBsLnVuZGVzdHJveSxSZWFkYWJsZS5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24oZXJyLGNiKXtjYihlcnIpfSxSZWFkYWJsZS5wcm90b3R5cGUucHVzaD1mdW5jdGlvbihjaHVuayxlbmNvZGluZyl7dmFyIHNraXBDaHVua0NoZWNrLHN0YXRlPXRoaXMuX3JlYWRhYmxlU3RhdGU7cmV0dXJuIHN0YXRlLm9iamVjdE1vZGU/c2tpcENodW5rQ2hlY2s9ITA6XCJzdHJpbmdcIj09dHlwZW9mIGNodW5rJiYoKGVuY29kaW5nPWVuY29kaW5nfHxzdGF0ZS5kZWZhdWx0RW5jb2RpbmcpIT09c3RhdGUuZW5jb2RpbmcmJihjaHVuaz1CdWZmZXIuZnJvbShjaHVuayxlbmNvZGluZyksZW5jb2Rpbmc9XCJcIiksc2tpcENodW5rQ2hlY2s9ITApLHJlYWRhYmxlQWRkQ2h1bmsodGhpcyxjaHVuayxlbmNvZGluZywhMSxza2lwQ2h1bmtDaGVjayl9LFJlYWRhYmxlLnByb3RvdHlwZS51bnNoaWZ0PWZ1bmN0aW9uKGNodW5rKXtyZXR1cm4gcmVhZGFibGVBZGRDaHVuayh0aGlzLGNodW5rLG51bGwsITAsITEpfSxSZWFkYWJsZS5wcm90b3R5cGUuaXNQYXVzZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMT09PXRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZ30sUmVhZGFibGUucHJvdG90eXBlLnNldEVuY29kaW5nPWZ1bmN0aW9uKGVuYyl7U3RyaW5nRGVjb2Rlcnx8KFN0cmluZ0RlY29kZXI9cmVxdWlyZShcInN0cmluZ19kZWNvZGVyL1wiKS5TdHJpbmdEZWNvZGVyKTt2YXIgZGVjb2Rlcj1uZXcgU3RyaW5nRGVjb2RlcihlbmMpO3RoaXMuX3JlYWRhYmxlU3RhdGUuZGVjb2Rlcj1kZWNvZGVyLHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5jb2Rpbmc9dGhpcy5fcmVhZGFibGVTdGF0ZS5kZWNvZGVyLmVuY29kaW5nO2Zvcih2YXIgcD10aGlzLl9yZWFkYWJsZVN0YXRlLmJ1ZmZlci5oZWFkLGNvbnRlbnQ9XCJcIjtudWxsIT09cDspY29udGVudCs9ZGVjb2Rlci53cml0ZShwLmRhdGEpLHA9cC5uZXh0O3JldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlLmJ1ZmZlci5jbGVhcigpLFwiXCIhPT1jb250ZW50JiZ0aGlzLl9yZWFkYWJsZVN0YXRlLmJ1ZmZlci5wdXNoKGNvbnRlbnQpLHRoaXMuX3JlYWRhYmxlU3RhdGUubGVuZ3RoPWNvbnRlbnQubGVuZ3RoLHRoaXN9O3ZhciBNQVhfSFdNPTEwNzM3NDE4MjQ7ZnVuY3Rpb24gaG93TXVjaFRvUmVhZChuLHN0YXRlKXtyZXR1cm4gbjw9MHx8MD09PXN0YXRlLmxlbmd0aCYmc3RhdGUuZW5kZWQ/MDpzdGF0ZS5vYmplY3RNb2RlPzE6biE9bj9zdGF0ZS5mbG93aW5nJiZzdGF0ZS5sZW5ndGg/c3RhdGUuYnVmZmVyLmhlYWQuZGF0YS5sZW5ndGg6c3RhdGUubGVuZ3RoOihuPnN0YXRlLmhpZ2hXYXRlck1hcmsmJihzdGF0ZS5oaWdoV2F0ZXJNYXJrPWZ1bmN0aW9uKG4pe3JldHVybiBuPj1NQVhfSFdNP249TUFYX0hXTToobi0tLG58PW4+Pj4xLG58PW4+Pj4yLG58PW4+Pj40LG58PW4+Pj44LG58PW4+Pj4xNixuKyspLG59KG4pKSxuPD1zdGF0ZS5sZW5ndGg/bjpzdGF0ZS5lbmRlZD9zdGF0ZS5sZW5ndGg6KHN0YXRlLm5lZWRSZWFkYWJsZT0hMCwwKSl9ZnVuY3Rpb24gZW1pdFJlYWRhYmxlKHN0cmVhbSl7dmFyIHN0YXRlPXN0cmVhbS5fcmVhZGFibGVTdGF0ZTtkZWJ1ZyhcImVtaXRSZWFkYWJsZVwiLHN0YXRlLm5lZWRSZWFkYWJsZSxzdGF0ZS5lbWl0dGVkUmVhZGFibGUpLHN0YXRlLm5lZWRSZWFkYWJsZT0hMSxzdGF0ZS5lbWl0dGVkUmVhZGFibGV8fChkZWJ1ZyhcImVtaXRSZWFkYWJsZVwiLHN0YXRlLmZsb3dpbmcpLHN0YXRlLmVtaXR0ZWRSZWFkYWJsZT0hMCxwcm9jZXNzLm5leHRUaWNrKGVtaXRSZWFkYWJsZV8sc3RyZWFtKSl9ZnVuY3Rpb24gZW1pdFJlYWRhYmxlXyhzdHJlYW0pe3ZhciBzdGF0ZT1zdHJlYW0uX3JlYWRhYmxlU3RhdGU7ZGVidWcoXCJlbWl0UmVhZGFibGVfXCIsc3RhdGUuZGVzdHJveWVkLHN0YXRlLmxlbmd0aCxzdGF0ZS5lbmRlZCksc3RhdGUuZGVzdHJveWVkfHwhc3RhdGUubGVuZ3RoJiYhc3RhdGUuZW5kZWR8fChzdHJlYW0uZW1pdChcInJlYWRhYmxlXCIpLHN0YXRlLmVtaXR0ZWRSZWFkYWJsZT0hMSksc3RhdGUubmVlZFJlYWRhYmxlPSFzdGF0ZS5mbG93aW5nJiYhc3RhdGUuZW5kZWQmJnN0YXRlLmxlbmd0aDw9c3RhdGUuaGlnaFdhdGVyTWFyayxmbG93KHN0cmVhbSl9ZnVuY3Rpb24gbWF5YmVSZWFkTW9yZShzdHJlYW0sc3RhdGUpe3N0YXRlLnJlYWRpbmdNb3JlfHwoc3RhdGUucmVhZGluZ01vcmU9ITAscHJvY2Vzcy5uZXh0VGljayhtYXliZVJlYWRNb3JlXyxzdHJlYW0sc3RhdGUpKX1mdW5jdGlvbiBtYXliZVJlYWRNb3JlXyhzdHJlYW0sc3RhdGUpe2Zvcig7IXN0YXRlLnJlYWRpbmcmJiFzdGF0ZS5lbmRlZCYmKHN0YXRlLmxlbmd0aDxzdGF0ZS5oaWdoV2F0ZXJNYXJrfHxzdGF0ZS5mbG93aW5nJiYwPT09c3RhdGUubGVuZ3RoKTspe3ZhciBsZW49c3RhdGUubGVuZ3RoO2lmKGRlYnVnKFwibWF5YmVSZWFkTW9yZSByZWFkIDBcIiksc3RyZWFtLnJlYWQoMCksbGVuPT09c3RhdGUubGVuZ3RoKWJyZWFrfXN0YXRlLnJlYWRpbmdNb3JlPSExfWZ1bmN0aW9uIHVwZGF0ZVJlYWRhYmxlTGlzdGVuaW5nKHNlbGYpe3ZhciBzdGF0ZT1zZWxmLl9yZWFkYWJsZVN0YXRlO3N0YXRlLnJlYWRhYmxlTGlzdGVuaW5nPXNlbGYubGlzdGVuZXJDb3VudChcInJlYWRhYmxlXCIpPjAsc3RhdGUucmVzdW1lU2NoZWR1bGVkJiYhc3RhdGUucGF1c2VkP3N0YXRlLmZsb3dpbmc9ITA6c2VsZi5saXN0ZW5lckNvdW50KFwiZGF0YVwiKT4wJiZzZWxmLnJlc3VtZSgpfWZ1bmN0aW9uIG5SZWFkaW5nTmV4dFRpY2soc2VsZil7ZGVidWcoXCJyZWFkYWJsZSBuZXh0dGljayByZWFkIDBcIiksc2VsZi5yZWFkKDApfWZ1bmN0aW9uIHJlc3VtZV8oc3RyZWFtLHN0YXRlKXtkZWJ1ZyhcInJlc3VtZVwiLHN0YXRlLnJlYWRpbmcpLHN0YXRlLnJlYWRpbmd8fHN0cmVhbS5yZWFkKDApLHN0YXRlLnJlc3VtZVNjaGVkdWxlZD0hMSxzdHJlYW0uZW1pdChcInJlc3VtZVwiKSxmbG93KHN0cmVhbSksc3RhdGUuZmxvd2luZyYmIXN0YXRlLnJlYWRpbmcmJnN0cmVhbS5yZWFkKDApfWZ1bmN0aW9uIGZsb3coc3RyZWFtKXt2YXIgc3RhdGU9c3RyZWFtLl9yZWFkYWJsZVN0YXRlO2ZvcihkZWJ1ZyhcImZsb3dcIixzdGF0ZS5mbG93aW5nKTtzdGF0ZS5mbG93aW5nJiZudWxsIT09c3RyZWFtLnJlYWQoKTspO31mdW5jdGlvbiBmcm9tTGlzdChuLHN0YXRlKXtyZXR1cm4gMD09PXN0YXRlLmxlbmd0aD9udWxsOihzdGF0ZS5vYmplY3RNb2RlP3JldD1zdGF0ZS5idWZmZXIuc2hpZnQoKTohbnx8bj49c3RhdGUubGVuZ3RoPyhyZXQ9c3RhdGUuZGVjb2Rlcj9zdGF0ZS5idWZmZXIuam9pbihcIlwiKToxPT09c3RhdGUuYnVmZmVyLmxlbmd0aD9zdGF0ZS5idWZmZXIuZmlyc3QoKTpzdGF0ZS5idWZmZXIuY29uY2F0KHN0YXRlLmxlbmd0aCksc3RhdGUuYnVmZmVyLmNsZWFyKCkpOnJldD1zdGF0ZS5idWZmZXIuY29uc3VtZShuLHN0YXRlLmRlY29kZXIpLHJldCk7dmFyIHJldH1mdW5jdGlvbiBlbmRSZWFkYWJsZShzdHJlYW0pe3ZhciBzdGF0ZT1zdHJlYW0uX3JlYWRhYmxlU3RhdGU7ZGVidWcoXCJlbmRSZWFkYWJsZVwiLHN0YXRlLmVuZEVtaXR0ZWQpLHN0YXRlLmVuZEVtaXR0ZWR8fChzdGF0ZS5lbmRlZD0hMCxwcm9jZXNzLm5leHRUaWNrKGVuZFJlYWRhYmxlTlQsc3RhdGUsc3RyZWFtKSl9ZnVuY3Rpb24gZW5kUmVhZGFibGVOVChzdGF0ZSxzdHJlYW0pe2lmKGRlYnVnKFwiZW5kUmVhZGFibGVOVFwiLHN0YXRlLmVuZEVtaXR0ZWQsc3RhdGUubGVuZ3RoKSwhc3RhdGUuZW5kRW1pdHRlZCYmMD09PXN0YXRlLmxlbmd0aCYmKHN0YXRlLmVuZEVtaXR0ZWQ9ITAsc3RyZWFtLnJlYWRhYmxlPSExLHN0cmVhbS5lbWl0KFwiZW5kXCIpLHN0YXRlLmF1dG9EZXN0cm95KSl7dmFyIHdTdGF0ZT1zdHJlYW0uX3dyaXRhYmxlU3RhdGU7KCF3U3RhdGV8fHdTdGF0ZS5hdXRvRGVzdHJveSYmd1N0YXRlLmZpbmlzaGVkKSYmc3RyZWFtLmRlc3Ryb3koKX19ZnVuY3Rpb24gaW5kZXhPZih4cyx4KXtmb3IodmFyIGk9MCxsPXhzLmxlbmd0aDtpPGw7aSsrKWlmKHhzW2ldPT09eClyZXR1cm4gaTtyZXR1cm4tMX1SZWFkYWJsZS5wcm90b3R5cGUucmVhZD1mdW5jdGlvbihuKXtkZWJ1ZyhcInJlYWRcIixuKSxuPXBhcnNlSW50KG4sMTApO3ZhciBzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlLG5PcmlnPW47aWYoMCE9PW4mJihzdGF0ZS5lbWl0dGVkUmVhZGFibGU9ITEpLDA9PT1uJiZzdGF0ZS5uZWVkUmVhZGFibGUmJigoMCE9PXN0YXRlLmhpZ2hXYXRlck1hcms/c3RhdGUubGVuZ3RoPj1zdGF0ZS5oaWdoV2F0ZXJNYXJrOnN0YXRlLmxlbmd0aD4wKXx8c3RhdGUuZW5kZWQpKXJldHVybiBkZWJ1ZyhcInJlYWQ6IGVtaXRSZWFkYWJsZVwiLHN0YXRlLmxlbmd0aCxzdGF0ZS5lbmRlZCksMD09PXN0YXRlLmxlbmd0aCYmc3RhdGUuZW5kZWQ/ZW5kUmVhZGFibGUodGhpcyk6ZW1pdFJlYWRhYmxlKHRoaXMpLG51bGw7aWYoMD09PShuPWhvd011Y2hUb1JlYWQobixzdGF0ZSkpJiZzdGF0ZS5lbmRlZClyZXR1cm4gMD09PXN0YXRlLmxlbmd0aCYmZW5kUmVhZGFibGUodGhpcyksbnVsbDt2YXIgcmV0LGRvUmVhZD1zdGF0ZS5uZWVkUmVhZGFibGU7cmV0dXJuIGRlYnVnKFwibmVlZCByZWFkYWJsZVwiLGRvUmVhZCksKDA9PT1zdGF0ZS5sZW5ndGh8fHN0YXRlLmxlbmd0aC1uPHN0YXRlLmhpZ2hXYXRlck1hcmspJiZkZWJ1ZyhcImxlbmd0aCBsZXNzIHRoYW4gd2F0ZXJtYXJrXCIsZG9SZWFkPSEwKSxzdGF0ZS5lbmRlZHx8c3RhdGUucmVhZGluZz9kZWJ1ZyhcInJlYWRpbmcgb3IgZW5kZWRcIixkb1JlYWQ9ITEpOmRvUmVhZCYmKGRlYnVnKFwiZG8gcmVhZFwiKSxzdGF0ZS5yZWFkaW5nPSEwLHN0YXRlLnN5bmM9ITAsMD09PXN0YXRlLmxlbmd0aCYmKHN0YXRlLm5lZWRSZWFkYWJsZT0hMCksdGhpcy5fcmVhZChzdGF0ZS5oaWdoV2F0ZXJNYXJrKSxzdGF0ZS5zeW5jPSExLHN0YXRlLnJlYWRpbmd8fChuPWhvd011Y2hUb1JlYWQobk9yaWcsc3RhdGUpKSksbnVsbD09PShyZXQ9bj4wP2Zyb21MaXN0KG4sc3RhdGUpOm51bGwpPyhzdGF0ZS5uZWVkUmVhZGFibGU9c3RhdGUubGVuZ3RoPD1zdGF0ZS5oaWdoV2F0ZXJNYXJrLG49MCk6KHN0YXRlLmxlbmd0aC09bixzdGF0ZS5hd2FpdERyYWluPTApLDA9PT1zdGF0ZS5sZW5ndGgmJihzdGF0ZS5lbmRlZHx8KHN0YXRlLm5lZWRSZWFkYWJsZT0hMCksbk9yaWchPT1uJiZzdGF0ZS5lbmRlZCYmZW5kUmVhZGFibGUodGhpcykpLG51bGwhPT1yZXQmJnRoaXMuZW1pdChcImRhdGFcIixyZXQpLHJldH0sUmVhZGFibGUucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKG4pe2Vycm9yT3JEZXN0cm95KHRoaXMsbmV3IEVSUl9NRVRIT0RfTk9UX0lNUExFTUVOVEVEKFwiX3JlYWQoKVwiKSl9LFJlYWRhYmxlLnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKGRlc3QscGlwZU9wdHMpe3ZhciBzcmM9dGhpcyxzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlO3N3aXRjaChzdGF0ZS5waXBlc0NvdW50KXtjYXNlIDA6c3RhdGUucGlwZXM9ZGVzdDticmVhaztjYXNlIDE6c3RhdGUucGlwZXM9W3N0YXRlLnBpcGVzLGRlc3RdO2JyZWFrO2RlZmF1bHQ6c3RhdGUucGlwZXMucHVzaChkZXN0KX1zdGF0ZS5waXBlc0NvdW50Kz0xLGRlYnVnKFwicGlwZSBjb3VudD0lZCBvcHRzPSVqXCIsc3RhdGUucGlwZXNDb3VudCxwaXBlT3B0cyk7dmFyIGVuZEZuPSghcGlwZU9wdHN8fCExIT09cGlwZU9wdHMuZW5kKSYmZGVzdCE9PXByb2Nlc3Muc3Rkb3V0JiZkZXN0IT09cHJvY2Vzcy5zdGRlcnI/b25lbmQ6dW5waXBlO2Z1bmN0aW9uIG9udW5waXBlKHJlYWRhYmxlLHVucGlwZUluZm8pe2RlYnVnKFwib251bnBpcGVcIikscmVhZGFibGU9PT1zcmMmJnVucGlwZUluZm8mJiExPT09dW5waXBlSW5mby5oYXNVbnBpcGVkJiYodW5waXBlSW5mby5oYXNVbnBpcGVkPSEwLGRlYnVnKFwiY2xlYW51cFwiKSxkZXN0LnJlbW92ZUxpc3RlbmVyKFwiY2xvc2VcIixvbmNsb3NlKSxkZXN0LnJlbW92ZUxpc3RlbmVyKFwiZmluaXNoXCIsb25maW5pc2gpLGRlc3QucmVtb3ZlTGlzdGVuZXIoXCJkcmFpblwiLG9uZHJhaW4pLGRlc3QucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLG9uZXJyb3IpLGRlc3QucmVtb3ZlTGlzdGVuZXIoXCJ1bnBpcGVcIixvbnVucGlwZSksc3JjLnJlbW92ZUxpc3RlbmVyKFwiZW5kXCIsb25lbmQpLHNyYy5yZW1vdmVMaXN0ZW5lcihcImVuZFwiLHVucGlwZSksc3JjLnJlbW92ZUxpc3RlbmVyKFwiZGF0YVwiLG9uZGF0YSksY2xlYW5lZFVwPSEwLCFzdGF0ZS5hd2FpdERyYWlufHxkZXN0Ll93cml0YWJsZVN0YXRlJiYhZGVzdC5fd3JpdGFibGVTdGF0ZS5uZWVkRHJhaW58fG9uZHJhaW4oKSl9ZnVuY3Rpb24gb25lbmQoKXtkZWJ1ZyhcIm9uZW5kXCIpLGRlc3QuZW5kKCl9c3RhdGUuZW5kRW1pdHRlZD9wcm9jZXNzLm5leHRUaWNrKGVuZEZuKTpzcmMub25jZShcImVuZFwiLGVuZEZuKSxkZXN0Lm9uKFwidW5waXBlXCIsb251bnBpcGUpO3ZhciBvbmRyYWluPWZ1bmN0aW9uKHNyYyl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHN0YXRlPXNyYy5fcmVhZGFibGVTdGF0ZTtkZWJ1ZyhcInBpcGVPbkRyYWluXCIsc3RhdGUuYXdhaXREcmFpbiksc3RhdGUuYXdhaXREcmFpbiYmc3RhdGUuYXdhaXREcmFpbi0tLDA9PT1zdGF0ZS5hd2FpdERyYWluJiZFRWxpc3RlbmVyQ291bnQoc3JjLFwiZGF0YVwiKSYmKHN0YXRlLmZsb3dpbmc9ITAsZmxvdyhzcmMpKX19KHNyYyk7ZGVzdC5vbihcImRyYWluXCIsb25kcmFpbik7dmFyIGNsZWFuZWRVcD0hMTtmdW5jdGlvbiBvbmRhdGEoY2h1bmspe2RlYnVnKFwib25kYXRhXCIpO3ZhciByZXQ9ZGVzdC53cml0ZShjaHVuayk7ZGVidWcoXCJkZXN0LndyaXRlXCIscmV0KSwhMT09PXJldCYmKCgxPT09c3RhdGUucGlwZXNDb3VudCYmc3RhdGUucGlwZXM9PT1kZXN0fHxzdGF0ZS5waXBlc0NvdW50PjEmJi0xIT09aW5kZXhPZihzdGF0ZS5waXBlcyxkZXN0KSkmJiFjbGVhbmVkVXAmJihkZWJ1ZyhcImZhbHNlIHdyaXRlIHJlc3BvbnNlLCBwYXVzZVwiLHN0YXRlLmF3YWl0RHJhaW4pLHN0YXRlLmF3YWl0RHJhaW4rKyksc3JjLnBhdXNlKCkpfWZ1bmN0aW9uIG9uZXJyb3IoZXIpe2RlYnVnKFwib25lcnJvclwiLGVyKSx1bnBpcGUoKSxkZXN0LnJlbW92ZUxpc3RlbmVyKFwiZXJyb3JcIixvbmVycm9yKSwwPT09RUVsaXN0ZW5lckNvdW50KGRlc3QsXCJlcnJvclwiKSYmZXJyb3JPckRlc3Ryb3koZGVzdCxlcil9ZnVuY3Rpb24gb25jbG9zZSgpe2Rlc3QucmVtb3ZlTGlzdGVuZXIoXCJmaW5pc2hcIixvbmZpbmlzaCksdW5waXBlKCl9ZnVuY3Rpb24gb25maW5pc2goKXtkZWJ1ZyhcIm9uZmluaXNoXCIpLGRlc3QucmVtb3ZlTGlzdGVuZXIoXCJjbG9zZVwiLG9uY2xvc2UpLHVucGlwZSgpfWZ1bmN0aW9uIHVucGlwZSgpe2RlYnVnKFwidW5waXBlXCIpLHNyYy51bnBpcGUoZGVzdCl9cmV0dXJuIHNyYy5vbihcImRhdGFcIixvbmRhdGEpLGZ1bmN0aW9uKGVtaXR0ZXIsZXZlbnQsZm4pe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGVtaXR0ZXIucHJlcGVuZExpc3RlbmVyKXJldHVybiBlbWl0dGVyLnByZXBlbmRMaXN0ZW5lcihldmVudCxmbik7ZW1pdHRlci5fZXZlbnRzJiZlbWl0dGVyLl9ldmVudHNbZXZlbnRdP0FycmF5LmlzQXJyYXkoZW1pdHRlci5fZXZlbnRzW2V2ZW50XSk/ZW1pdHRlci5fZXZlbnRzW2V2ZW50XS51bnNoaWZ0KGZuKTplbWl0dGVyLl9ldmVudHNbZXZlbnRdPVtmbixlbWl0dGVyLl9ldmVudHNbZXZlbnRdXTplbWl0dGVyLm9uKGV2ZW50LGZuKX0oZGVzdCxcImVycm9yXCIsb25lcnJvciksZGVzdC5vbmNlKFwiY2xvc2VcIixvbmNsb3NlKSxkZXN0Lm9uY2UoXCJmaW5pc2hcIixvbmZpbmlzaCksZGVzdC5lbWl0KFwicGlwZVwiLHNyYyksc3RhdGUuZmxvd2luZ3x8KGRlYnVnKFwicGlwZSByZXN1bWVcIiksc3JjLnJlc3VtZSgpKSxkZXN0fSxSZWFkYWJsZS5wcm90b3R5cGUudW5waXBlPWZ1bmN0aW9uKGRlc3Qpe3ZhciBzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlLHVucGlwZUluZm89e2hhc1VucGlwZWQ6ITF9O2lmKDA9PT1zdGF0ZS5waXBlc0NvdW50KXJldHVybiB0aGlzO2lmKDE9PT1zdGF0ZS5waXBlc0NvdW50KXJldHVybiBkZXN0JiZkZXN0IT09c3RhdGUucGlwZXM/dGhpczooZGVzdHx8KGRlc3Q9c3RhdGUucGlwZXMpLHN0YXRlLnBpcGVzPW51bGwsc3RhdGUucGlwZXNDb3VudD0wLHN0YXRlLmZsb3dpbmc9ITEsZGVzdCYmZGVzdC5lbWl0KFwidW5waXBlXCIsdGhpcyx1bnBpcGVJbmZvKSx0aGlzKTtpZighZGVzdCl7dmFyIGRlc3RzPXN0YXRlLnBpcGVzLGxlbj1zdGF0ZS5waXBlc0NvdW50O3N0YXRlLnBpcGVzPW51bGwsc3RhdGUucGlwZXNDb3VudD0wLHN0YXRlLmZsb3dpbmc9ITE7Zm9yKHZhciBpPTA7aTxsZW47aSsrKWRlc3RzW2ldLmVtaXQoXCJ1bnBpcGVcIix0aGlzLHtoYXNVbnBpcGVkOiExfSk7cmV0dXJuIHRoaXN9dmFyIGluZGV4PWluZGV4T2Yoc3RhdGUucGlwZXMsZGVzdCk7cmV0dXJuLTE9PT1pbmRleD90aGlzOihzdGF0ZS5waXBlcy5zcGxpY2UoaW5kZXgsMSksc3RhdGUucGlwZXNDb3VudC09MSwxPT09c3RhdGUucGlwZXNDb3VudCYmKHN0YXRlLnBpcGVzPXN0YXRlLnBpcGVzWzBdKSxkZXN0LmVtaXQoXCJ1bnBpcGVcIix0aGlzLHVucGlwZUluZm8pLHRoaXMpfSxSZWFkYWJsZS5wcm90b3R5cGUub249ZnVuY3Rpb24oZXYsZm4pe3ZhciByZXM9U3RyZWFtLnByb3RvdHlwZS5vbi5jYWxsKHRoaXMsZXYsZm4pLHN0YXRlPXRoaXMuX3JlYWRhYmxlU3RhdGU7cmV0dXJuXCJkYXRhXCI9PT1ldj8oc3RhdGUucmVhZGFibGVMaXN0ZW5pbmc9dGhpcy5saXN0ZW5lckNvdW50KFwicmVhZGFibGVcIik+MCwhMSE9PXN0YXRlLmZsb3dpbmcmJnRoaXMucmVzdW1lKCkpOlwicmVhZGFibGVcIj09PWV2JiYoc3RhdGUuZW5kRW1pdHRlZHx8c3RhdGUucmVhZGFibGVMaXN0ZW5pbmd8fChzdGF0ZS5yZWFkYWJsZUxpc3RlbmluZz1zdGF0ZS5uZWVkUmVhZGFibGU9ITAsc3RhdGUuZmxvd2luZz0hMSxzdGF0ZS5lbWl0dGVkUmVhZGFibGU9ITEsZGVidWcoXCJvbiByZWFkYWJsZVwiLHN0YXRlLmxlbmd0aCxzdGF0ZS5yZWFkaW5nKSxzdGF0ZS5sZW5ndGg/ZW1pdFJlYWRhYmxlKHRoaXMpOnN0YXRlLnJlYWRpbmd8fHByb2Nlc3MubmV4dFRpY2soblJlYWRpbmdOZXh0VGljayx0aGlzKSkpLHJlc30sUmVhZGFibGUucHJvdG90eXBlLmFkZExpc3RlbmVyPVJlYWRhYmxlLnByb3RvdHlwZS5vbixSZWFkYWJsZS5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXI9ZnVuY3Rpb24oZXYsZm4pe3ZhciByZXM9U3RyZWFtLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lci5jYWxsKHRoaXMsZXYsZm4pO3JldHVyblwicmVhZGFibGVcIj09PWV2JiZwcm9jZXNzLm5leHRUaWNrKHVwZGF0ZVJlYWRhYmxlTGlzdGVuaW5nLHRoaXMpLHJlc30sUmVhZGFibGUucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycz1mdW5jdGlvbihldil7dmFyIHJlcz1TdHJlYW0ucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycy5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuXCJyZWFkYWJsZVwiIT09ZXYmJnZvaWQgMCE9PWV2fHxwcm9jZXNzLm5leHRUaWNrKHVwZGF0ZVJlYWRhYmxlTGlzdGVuaW5nLHRoaXMpLHJlc30sUmVhZGFibGUucHJvdG90eXBlLnJlc3VtZT1mdW5jdGlvbigpe3ZhciBzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlO3JldHVybiBzdGF0ZS5mbG93aW5nfHwoZGVidWcoXCJyZXN1bWVcIiksc3RhdGUuZmxvd2luZz0hc3RhdGUucmVhZGFibGVMaXN0ZW5pbmcsZnVuY3Rpb24oc3RyZWFtLHN0YXRlKXtzdGF0ZS5yZXN1bWVTY2hlZHVsZWR8fChzdGF0ZS5yZXN1bWVTY2hlZHVsZWQ9ITAscHJvY2Vzcy5uZXh0VGljayhyZXN1bWVfLHN0cmVhbSxzdGF0ZSkpfSh0aGlzLHN0YXRlKSksc3RhdGUucGF1c2VkPSExLHRoaXN9LFJlYWRhYmxlLnByb3RvdHlwZS5wYXVzZT1mdW5jdGlvbigpe3JldHVybiBkZWJ1ZyhcImNhbGwgcGF1c2UgZmxvd2luZz0lalwiLHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyksITEhPT10aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcmJihkZWJ1ZyhcInBhdXNlXCIpLHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZz0hMSx0aGlzLmVtaXQoXCJwYXVzZVwiKSksdGhpcy5fcmVhZGFibGVTdGF0ZS5wYXVzZWQ9ITAsdGhpc30sUmVhZGFibGUucHJvdG90eXBlLndyYXA9ZnVuY3Rpb24oc3RyZWFtKXt2YXIgX3RoaXM9dGhpcyxzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlLHBhdXNlZD0hMTtmb3IodmFyIGkgaW4gc3RyZWFtLm9uKFwiZW5kXCIsZnVuY3Rpb24oKXtpZihkZWJ1ZyhcIndyYXBwZWQgZW5kXCIpLHN0YXRlLmRlY29kZXImJiFzdGF0ZS5lbmRlZCl7dmFyIGNodW5rPXN0YXRlLmRlY29kZXIuZW5kKCk7Y2h1bmsmJmNodW5rLmxlbmd0aCYmX3RoaXMucHVzaChjaHVuayl9X3RoaXMucHVzaChudWxsKX0pLHN0cmVhbS5vbihcImRhdGFcIixmdW5jdGlvbihjaHVuayl7KGRlYnVnKFwid3JhcHBlZCBkYXRhXCIpLHN0YXRlLmRlY29kZXImJihjaHVuaz1zdGF0ZS5kZWNvZGVyLndyaXRlKGNodW5rKSksc3RhdGUub2JqZWN0TW9kZSYmbnVsbD09Y2h1bmspfHwoc3RhdGUub2JqZWN0TW9kZXx8Y2h1bmsmJmNodW5rLmxlbmd0aCkmJihfdGhpcy5wdXNoKGNodW5rKXx8KHBhdXNlZD0hMCxzdHJlYW0ucGF1c2UoKSkpfSksc3RyZWFtKXZvaWQgMD09PXRoaXNbaV0mJlwiZnVuY3Rpb25cIj09dHlwZW9mIHN0cmVhbVtpXSYmKHRoaXNbaV09ZnVuY3Rpb24obWV0aG9kKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gc3RyZWFtW21ldGhvZF0uYXBwbHkoc3RyZWFtLGFyZ3VtZW50cyl9fShpKSk7Zm9yKHZhciBuPTA7bjxrUHJveHlFdmVudHMubGVuZ3RoO24rKylzdHJlYW0ub24oa1Byb3h5RXZlbnRzW25dLHRoaXMuZW1pdC5iaW5kKHRoaXMsa1Byb3h5RXZlbnRzW25dKSk7cmV0dXJuIHRoaXMuX3JlYWQ9ZnVuY3Rpb24obil7ZGVidWcoXCJ3cmFwcGVkIF9yZWFkXCIsbikscGF1c2VkJiYocGF1c2VkPSExLHN0cmVhbS5yZXN1bWUoKSl9LHRoaXN9LFwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmKFJlYWRhYmxlLnByb3RvdHlwZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09Y3JlYXRlUmVhZGFibGVTdHJlYW1Bc3luY0l0ZXJhdG9yJiYoY3JlYXRlUmVhZGFibGVTdHJlYW1Bc3luY0l0ZXJhdG9yPXJlcXVpcmUoXCIuL2ludGVybmFsL3N0cmVhbXMvYXN5bmNfaXRlcmF0b3JcIikpLGNyZWF0ZVJlYWRhYmxlU3RyZWFtQXN5bmNJdGVyYXRvcih0aGlzKX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZWFkYWJsZS5wcm90b3R5cGUsXCJyZWFkYWJsZUhpZ2hXYXRlck1hcmtcIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZWFkYWJsZS5wcm90b3R5cGUsXCJyZWFkYWJsZUJ1ZmZlclwiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlJiZ0aGlzLl9yZWFkYWJsZVN0YXRlLmJ1ZmZlcn19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoUmVhZGFibGUucHJvdG90eXBlLFwicmVhZGFibGVGbG93aW5nXCIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZ30sc2V0OmZ1bmN0aW9uKHN0YXRlKXt0aGlzLl9yZWFkYWJsZVN0YXRlJiYodGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nPXN0YXRlKX19KSxSZWFkYWJsZS5fZnJvbUxpc3Q9ZnJvbUxpc3QsT2JqZWN0LmRlZmluZVByb3BlcnR5KFJlYWRhYmxlLnByb3RvdHlwZSxcInJlYWRhYmxlTGVuZ3RoXCIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUubGVuZ3RofX0pLFwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmKFJlYWRhYmxlLmZyb209ZnVuY3Rpb24oaXRlcmFibGUsb3B0cyl7cmV0dXJuIHZvaWQgMD09PWZyb20mJihmcm9tPXJlcXVpcmUoXCIuL2ludGVybmFsL3N0cmVhbXMvZnJvbVwiKSksZnJvbShSZWFkYWJsZSxpdGVyYWJsZSxvcHRzKX0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWw5emRISmxZVzFmY21WaFpHRmliR1V1YW5NaVhTd2libUZ0WlhNaU9sc2lSSFZ3YkdWNElpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SXNJbEpsWVdSaFlteGxJaXdpVW1WaFpHRmliR1ZUZEdGMFpTSXNJbkpsY1hWcGNtVWlMQ0pGZG1WdWRFVnRhWFIwWlhJaUxDSkZSV3hwYzNSbGJtVnlRMjkxYm5RaUxDSmxiV2wwZEdWeUlpd2lkSGx3WlNJc0lteHBjM1JsYm1WeWN5SXNJbXhsYm1kMGFDSXNJbE4wY21WaGJTSXNJa0oxWm1abGNpSXNJazkxY2xWcGJuUTRRWEp5WVhraUxDSm5iRzlpWVd3aUxDSlZhVzUwT0VGeWNtRjVJaXdpWkdWaWRXY2lMQ0prWldKMVoxVjBhV3dpTENKa1pXSjFaMnh2WnlJc0lsTjBjbWx1WjBSbFkyOWtaWElpTENKamNtVmhkR1ZTWldGa1lXSnNaVk4wY21WaGJVRnplVzVqU1hSbGNtRjBiM0lpTENKbWNtOXRJaXdpUW5WbVptVnlUR2x6ZENJc0ltUmxjM1J5YjNsSmJYQnNJaXdpWjJWMFNHbG5hRmRoZEdWeVRXRnlheUlzSWw5eVpYRjFhWEpsSkdOdlpHVnpJaXdpWTI5a1pYTWlMQ0pGVWxKZlNVNVdRVXhKUkY5QlVrZGZWRmxRUlNJc0lrVlNVbDlUVkZKRlFVMWZVRlZUU0Y5QlJsUkZVbDlGVDBZaUxDSkZVbEpmVFVWVVNFOUVYMDVQVkY5SlRWQk1SVTFGVGxSRlJDSXNJa1ZTVWw5VFZGSkZRVTFmVlU1VFNFbEdWRjlCUmxSRlVsOUZUa1JmUlZaRlRsUWlMQ0psY25KdmNrOXlSR1Z6ZEhKdmVTSXNJbXRRY205NGVVVjJaVzUwY3lJc0ltOXdkR2x2Ym5NaUxDSnpkSEpsWVcwaUxDSnBjMFIxY0d4bGVDSXNJblJvYVhNaUxDSnZZbXBsWTNSTmIyUmxJaXdpY21WaFpHRmliR1ZQWW1wbFkzUk5iMlJsSWl3aWFHbG5hRmRoZEdWeVRXRnlheUlzSW1KMVptWmxjaUlzSW5CcGNHVnpJaXdpY0dsd1pYTkRiM1Z1ZENJc0ltWnNiM2RwYm1jaUxDSmxibVJsWkNJc0ltVnVaRVZ0YVhSMFpXUWlMQ0p5WldGa2FXNW5JaXdpYzNsdVl5SXNJbTVsWldSU1pXRmtZV0pzWlNJc0ltVnRhWFIwWldSU1pXRmtZV0pzWlNJc0luSmxZV1JoWW14bFRHbHpkR1Z1YVc1bklpd2ljbVZ6ZFcxbFUyTm9aV1IxYkdWa0lpd2ljR0YxYzJWa0lpd2laVzFwZEVOc2IzTmxJaXdpWVhWMGIwUmxjM1J5YjNraUxDSmtaWE4wY205NVpXUWlMQ0prWldaaGRXeDBSVzVqYjJScGJtY2lMQ0poZDJGcGRFUnlZV2x1SWl3aWNtVmhaR2x1WjAxdmNtVWlMQ0prWldOdlpHVnlJaXdpWlc1amIyUnBibWNpTENKZmNtVmhaR0ZpYkdWVGRHRjBaU0lzSW5KbFlXUmhZbXhsSWl3aWNtVmhaQ0lzSWw5eVpXRmtJaXdpWkdWemRISnZlU0lzSWw5a1pYTjBjbTk1SWl3aVkyRnNiQ0lzSW5KbFlXUmhZbXhsUVdSa1EyaDFibXNpTENKamFIVnVheUlzSW1Ga1pGUnZSbkp2Ym5RaUxDSnphMmx3UTJoMWJtdERhR1ZqYXlJc0ltVnlJaXdpYzNSaGRHVWlMQ0psYm1RaUxDSndkWE5vSWl3aVpXMXBkRkpsWVdSaFlteGxJaXdpWlcxcGRGSmxZV1JoWW14bFh5SXNJbTl1Ulc5bVEyaDFibXNpTENKdlltb2lMQ0pwYzBKMVptWmxjaUlzSW5WdVpHVm1hVzVsWkNJc0ltTm9kVzVyU1c1MllXeHBaQ0lzSWs5aWFtVmpkQ0lzSW1kbGRGQnliM1J2ZEhsd1pVOW1JaXdpY0hKdmRHOTBlWEJsSWl3aVgzVnBiblE0UVhKeVlYbFViMEoxWm1abGNpSXNJbUZrWkVOb2RXNXJJaXdpZDNKcGRHVWlMQ0p0WVhsaVpWSmxZV1JOYjNKbElpd2laVzFwZENJc0luVnVjMmhwWm5RaUxDSmtaV1pwYm1WUWNtOXdaWEowZVNJc0ltVnVkVzFsY21GaWJHVWlMQ0puWlhRaUxDSnpaWFFpTENKMllXeDFaU0lzSWw5MWJtUmxjM1J5YjNraUxDSjFibVJsYzNSeWIza2lMQ0psY25JaUxDSmpZaUlzSW1selVHRjFjMlZrSWl3aWMyVjBSVzVqYjJScGJtY2lMQ0psYm1NaUxDSndJaXdpYUdWaFpDSXNJbU52Ym5SbGJuUWlMQ0prWVhSaElpd2libVY0ZENJc0ltTnNaV0Z5SWl3aVRVRllYMGhYVFNJc0ltaHZkMDExWTJoVWIxSmxZV1FpTENKdUlpd2lZMjl0Y0hWMFpVNWxkMGhwWjJoWFlYUmxjazFoY21zaUxDSndjbTlqWlhOeklpd2libVY0ZEZScFkyc2lMQ0ptYkc5M0lpd2liV0Y1WW1WU1pXRmtUVzl5WlY4aUxDSnNaVzRpTENKMWNHUmhkR1ZTWldGa1lXSnNaVXhwYzNSbGJtbHVaeUlzSW5ObGJHWWlMQ0pzYVhOMFpXNWxja052ZFc1MElpd2ljbVZ6ZFcxbElpd2libEpsWVdScGJtZE9aWGgwVkdsamF5SXNJbkpsYzNWdFpWOGlMQ0ptY205dFRHbHpkQ0lzSW5KbGRDSXNJbk5vYVdaMElpd2lhbTlwYmlJc0ltWnBjbk4wSWl3aVkyOXVZMkYwSWl3aVkyOXVjM1Z0WlNJc0ltVnVaRkpsWVdSaFlteGxJaXdpWlc1a1VtVmhaR0ZpYkdWT1ZDSXNJbmRUZEdGMFpTSXNJbDkzY21sMFlXSnNaVk4wWVhSbElpd2labWx1YVhOb1pXUWlMQ0pwYm1SbGVFOW1JaXdpZUhNaUxDSjRJaXdpYVNJc0ltd2lMQ0p3WVhKelpVbHVkQ0lzSW01UGNtbG5JaXdpWkc5U1pXRmtJaXdpY0dsd1pTSXNJbVJsYzNRaUxDSndhWEJsVDNCMGN5SXNJbk55WXlJc0ltVnVaRVp1SWl3aWMzUmtiM1YwSWl3aWMzUmtaWEp5SWl3aWIyNWxibVFpTENKMWJuQnBjR1VpTENKdmJuVnVjR2x3WlNJc0luVnVjR2x3WlVsdVptOGlMQ0pvWVhOVmJuQnBjR1ZrSWl3aWNtVnRiM1psVEdsemRHVnVaWElpTENKdmJtTnNiM05sSWl3aWIyNW1hVzVwYzJnaUxDSnZibVJ5WVdsdUlpd2liMjVsY25KdmNpSXNJbTl1WkdGMFlTSXNJbU5zWldGdVpXUlZjQ0lzSW01bFpXUkVjbUZwYmlJc0ltOXVZMlVpTENKdmJpSXNJbkJwY0dWUGJrUnlZV2x1SWl3aWNHRjFjMlVpTENKbGRtVnVkQ0lzSW1adUlpd2ljSEpsY0dWdVpFeHBjM1JsYm1WeUlpd2lYMlYyWlc1MGN5SXNJa0Z5Y21GNUlpd2lhWE5CY25KaGVTSXNJbVJsYzNSeklpd2lhVzVrWlhnaUxDSnpjR3hwWTJVaUxDSmxkaUlzSW5KbGN5SXNJbUZrWkV4cGMzUmxibVZ5SWl3aWNtVnRiM1psUVd4c1RHbHpkR1Z1WlhKeklpd2lZWEJ3YkhraUxDSmhjbWQxYldWdWRITWlMQ0ozY21Gd0lpd2lYM1JvYVhNaUxDSnRaWFJvYjJRaUxDSmlhVzVrSWl3aVUzbHRZbTlzSWl3aVlYTjVibU5KZEdWeVlYUnZjaUlzSWw5bWNtOXRUR2x6ZENJc0ltbDBaWEpoWW14bElpd2liM0IwY3lKZExDSnRZWEJ3YVc1bmN5STZJa0ZCYjBKQkxHRkJTMEVzU1VGQlNVRXNUMEZJU2tNc1QwRkJUME1zVVVGQlZVTXNVMEZOYWtKQkxGTkJRVk5ETEdOQlFXZENRU3hqUVVkb1FrTXNVVUZCVVN4VlFVRlZReXhoUVVFelFpeEpRVVZKUXl4blFrRkJhMElzVTBGQmVVSkRMRkZCUVZORExFMUJRM1JFTEU5QlFVOUVMRkZCUVZGRkxGVkJRVlZFTEUxQlFVMUZMRkZCVHpkQ1F5eFBRVUZUVUN4UlFVRlJMRFpDUVVscVFsRXNUMEZCVTFJc1VVRkJVU3hWUVVGVlVTeFBRVVV6UWtNc1kwRkJaMEpETEU5QlFVOURMRmxCUVdNc1lVRlpla01zU1VGRlNVTXNUVUZHUVVNc1ZVRkJXV0lzVVVGQlVTeFJRVXQwUWxrc1RVRkVSVU1zVjBGQllVRXNWVUZCVlVNc1UwRkRha0pFTEZWQlFWVkRMRk5CUVZNc1ZVRkZia0lzWVVGTFZpeEpRV05KUXl4alFVTkJReXhyUTBGRFFVTXNTMEZvUWtGRExGZEJRV0ZzUWl4UlFVRlJMR3REUVVWeVFtMUNMRmxCUVdOdVFpeFJRVUZSTERoQ1FVZDBRbTlDTEdsQ1FVUlhjRUlzVVVGQlVTdzBRa0ZEVTI5Q0xHbENRVVUxUWtNc1pVRkJhVUp5UWl4UlFVRlJMR0ZCUVdGelFpeE5RVU4wUTBNc2NVSkJRWFZDUml4bFFVRmxSU3h4UWtGRGRFTkRMREJDUVVFMFFrZ3NaVUZCWlVjc01FSkJRek5EUXl3eVFrRkJOa0pLTEdWQlFXVkpMREpDUVVNMVEwTXNiVU5CUVhGRFRDeGxRVUZsU3l4dFEwRlBlRVF4UWl4UlFVRlJMRmRCUVZKQkxFTkJRVzlDUml4VFFVRlZVeXhSUVVVNVFpeEpRVUZKYjBJc1pVRkJhVUpTTEZsQlFWbFJMR1ZCUXpkQ1F5eGhRVUZsTEVOQlFVTXNVVUZCVXl4UlFVRlRMRlZCUVZjc1VVRkJVeXhWUVdFeFJDeFRRVUZUTjBJc1kwRkJZemhDTEZGQlFWTkRMRTlCUVZGRExGVkJRM1JEY0VNc1QwRkJVMEVzVVVGQlZVc3NVVUZCVVN4dlFrRkRNMEkyUWl4UlFVRlZRU3hUUVVGWExFZEJUVWNzYTBKQlFXSkZMRmRCUVhkQ1FTeFRRVUZYUkN4clFrRkJhMEp1UXl4UlFVZG9SWEZETEV0QlFVdERMR0ZCUVdWS0xGRkJRVkZKTEZkQlEzaENSaXhYUVVGVlF5eExRVUZMUXl4WFFVRmhSQ3hMUVVGTFF5eGpRVUZuUWtvc1VVRkJVVXNzYjBKQlJ6ZEVSaXhMUVVGTFJ5eGpRVUZuUW1Zc2FVSkJRV2xDV1N4TFFVRk5TQ3hSUVVGVExIZENRVUY1UWtVc1ZVRkpPVVZETEV0QlFVdEpMRTlCUVZNc1NVRkJTV3hDTEZkQlEyeENZeXhMUVVGTE1VSXNUMEZCVXl4RlFVTmtNRUlzUzBGQlMwc3NUVUZCVVN4TFFVTmlUQ3hMUVVGTFRTeFhRVUZoTEVWQlEyeENUaXhMUVVGTFR5eFJRVUZWTEV0QlEyWlFMRXRCUVV0UkxFOUJRVkVzUlVGRFlsSXNTMEZCUzFNc1dVRkJZU3hGUVVOc1FsUXNTMEZCUzFVc1UwRkJWU3hGUVV0bVZpeExRVUZMVnl4TlFVRlBMRVZCUjFwWUxFdEJRVXRaTEdOQlFXVXNSVUZEY0VKYUxFdEJRVXRoTEdsQ1FVRnJRaXhGUVVOMlFtSXNTMEZCUzJNc2JVSkJRVzlDTEVWQlEzcENaQ3hMUVVGTFpTeHBRa0ZCYTBJc1JVRkRka0ptTEV0QlFVdG5RaXhSUVVGVExFVkJSV1JvUWl4TFFVRkxhVUlzVjBGQmEwTXNTVUZCZEVKd1FpeFJRVUZSYjBJc1ZVRkZla0pxUWl4TFFVRkxhMElzWTBGQlowSnlRaXhSUVVGUmNVSXNXVUZGTjBKc1FpeExRVUZMYlVJc1YwRkJXU3hGUVVscVFtNUNMRXRCUVV0dlFpeG5Ra0ZCYTBKMlFpeFJRVUZSZFVJc2FVSkJRVzFDTEU5QlJXeEVjRUlzUzBGQlMzRkNMRmRCUVdFc1JVRkZiRUp5UWl4TFFVRkxjMElzWVVGQll5eEZRVU51UW5SQ0xFdEJRVXQxUWl4UlFVRlZMRXRCUTJaMlFpeExRVUZMZDBJc1UwRkJWeXhMUVVWYU0wSXNVVUZCVVRKQ0xGZEJRMHg2UXl4blFrRkJaVUVzWTBGQlowSm1MRkZCUVZFc2JVSkJRVzFDWlN4bFFVTXZSR2xDTEV0QlFVdDFRaXhSUVVGVkxFbEJRVWw0UXl4alFVRmpZeXhSUVVGUk1rSXNWVUZEZWtONFFpeExRVUZMZDBJc1UwRkJWek5DTEZGQlFWRXlRaXhWUVVrMVFpeFRRVUZUTVVRc1UwRkJVeXRDTEZOQlJXaENMRWRCUkVGc1F5eFBRVUZUUVN4UlFVRlZTeXhSUVVGUkxITkNRVU55UW1kRExHZENRVUZuUW14RExGVkJRVmNzVDBGQlR5eEpRVUZKUVN4VFFVRlRLMElzVTBGSGNrUXNTVUZCU1VVc1UwRkJWME1zWjBKQlFXZENja01zVDBGREwwSnhReXhMUVVGTGVVSXNaVUZCYVVJc1NVRkJTVEZFTEdOQlFXTTRRaXhSUVVGVFJ5eExRVUZOUkN4VlFVVjJSRU1zUzBGQlN6QkNMRlZCUVZjc1JVRkZXamRDTEZWQlF6QkNMRzFDUVVGcVFrRXNVVUZCVVRoQ0xFOUJRWEZDTTBJc1MwRkJTelJDTEUxQlFWRXZRaXhSUVVGUk9FSXNUVUZET1VJc2JVSkJRWEJDT1VJc1VVRkJVV2RETEZWQlFYZENOMElzUzBGQlN6aENMRk5CUVZkcVF5eFJRVUZSWjBNc1ZVRkhja1YwUkN4UFFVRlBkMFFzUzBGQlN5OUNMRTFCYVVWa0xGTkJRVk5uUXl4cFFrRkJhVUpzUXl4UFFVRlJiVU1zVFVGQlQxUXNVMEZCVlZVc1YwRkJXVU1zWjBKQlF6ZEVka1FzVFVGQlRTeHRRa0ZCYjBKeFJDeFBRVU14UWl4SlFVMU5SeXhIUVU1R1F5eE5RVUZSZGtNc1QwRkJUekpDTEdWQlJXNUNMRWRCUVdNc1QwRkJWbEVzVFVGRFJra3NUVUZCVFROQ0xGTkJRVlVzUlVGNVQzQkNMRk5CUVc5Q1dpeFBRVUZSZFVNc1QwRkZNVUlzUjBGRVFYcEVMRTFCUVUwc1kwRkRSbmxFTEUxQlFVMDNRaXhOUVVGUExFOUJSV3BDTEVkQlFVazJRaXhOUVVGTlpDeFJRVUZUTEVOQlEycENMRWxCUVVsVkxFMUJRVkZKTEUxQlFVMWtMRkZCUVZGbExFMUJSWFJDVEN4UFFVRlRRU3hOUVVGTk0wUXNVMEZEYWtJclJDeE5RVUZOYWtNc1QwRkJUMjFETEV0QlFVdE9MRTlCUTJ4Q1NTeE5RVUZOTDBRc1VVRkJWU3RFTEUxQlFVMXdReXhYUVVGaExFVkJRVWxuUXl4TlFVRk5NMFFzVVVGSmFrUXJSQ3hOUVVGTk4wSXNUMEZCVVN4RlFVVldOa0lzVFVGQlRURkNMRXRCU1ZJMlFpeGhRVUZoTVVNc1UwRkhZblZETEUxQlFVMTZRaXhqUVVGbExFVkJSV2hDZVVJc1RVRkJUWGhDTEd0Q1FVTlVkMElzVFVGQlRYaENMR2xDUVVGclFpeEZRVU40UWpSQ0xHTkJRV016UXl4VlFXeFJhRUkwUXl4RFFVRlhOVU1zVDBGQlVYVkRMRmxCUzI1Q0xFZEJSa3RHTEdsQ1FVRm5Ra01zUjBGdFJIcENMRk5CUVhOQ1F5eE5RVUZQU2l4UFFVTXpRaXhKUVVGSlJ5eEhRV2hSYVVKUExFbEJhMUZHVml4TlFXcFJXbnBFTEU5QlFVOXZSU3hUUVVGVFJDeE5RVUZSUVN4bFFVRmxiRVVzWlVGcFVVRXNhVUpCUVZaM1JDeFpRVUZuUTFrc1NVRkJWbG9zVDBGQmQwSkpMRTFCUVUxd1F5eGhRVU4wUm0xRExFZEJRVXNzU1VGQlNUZERMSEZDUVVGeFFpeFJRVUZUTEVOQlFVTXNVMEZCVlN4VFFVRlZMR05CUVdVd1F5eFJRVzVSTDBVc1NVRkJkVUpWTEVsQmMxRnlRaXhQUVVGUFVDeEhRVEZFY1VKVkxFTkJRV0ZVTEUxQlFVOUtMRkZCUlRGRFJ5eEhRVU5HZWtNc1pVRkJaVWNzVDBGQlVYTkRMRk5CUTJ4Q0xFZEJRVWxETEUxQlFVMXdReXhaUVVGalowTXNUMEZCVTBFc1RVRkJUVE5FTEU5QlFWTXNSVUZMY2tRc1IwRktjVUlzYVVKQlFWWXlSQ3hQUVVGMVFra3NUVUZCVFhCRExGbEJRV000UXl4UFFVRlBReXhsUVVGbFppeFRRVUZYZWtRc1QwRkJUM2xGTEZsQlF6VkdhRUlzVFVGMFRsSXNVMEZCTmtKQkxFOUJRek5DTEU5QlFVOTZSQ3hQUVVGUFV5eExRVUZMWjBRc1QwRnhUa3hwUWl4RFFVRnZRbXBDTEZGQlJ6RkNReXhYUVVORlJ5eE5RVUZOTlVJc1YwRkJXV1FzWlVGQlpVY3NUMEZCVVN4SlFVRkpTaXh2UTBGQk1rTjVSQ3hUUVVGVGNrUXNUMEZCVVhWRExFMUJRVTlLTEU5QlFVOHNVVUZEZEVnc1IwRkJTVWtzVFVGQlRUZENMRTFCUTJaaUxHVkJRV1ZITEU5QlFWRXNTVUZCU1U0c0swSkJRM1JDTEVOQlFVRXNSMEZCU1RaRExFMUJRVTFzUWl4VlFVTm1MRTlCUVU4c1JVRkZVR3RDTEUxQlFVMHpRaXhUUVVGVkxFVkJSVm95UWl4TlFVRk5aQ3hWUVVGWlF5eFZRVU53UWxNc1RVRkJVVWtzVFVGQlRXUXNVVUZCVVRaQ0xFMUJRVTF1UWl4UFFVTjRRa2tzVFVGQlRYQkRMRmxCUVN0Q0xFbEJRV3BDWjBNc1RVRkJUVE5FTEU5QlFXTTJSU3hUUVVGVGNrUXNUMEZCVVhWRExFMUJRVTlLTEU5QlFVOHNSMEZCV1c5Q0xHTkJRV04yUkN4UFFVRlJkVU1zVVVGRk4wZGpMRk5CUVZOeVJDeFBRVUZSZFVNc1RVRkJUMG9zVDBGQlR5eFJRVWQ2UWtNc1lVRkRWa2NzVFVGQlRUTkNMRk5CUVZVc1JVRkRhRUl5UXl4alFVRmpka1FzVDBGQlVYVkRMRkZCVHpGQ0xFOUJRVkZCTEUxQlFVMDNRaXhSUVVGVk5rSXNUVUZCVFM5RUxFOUJRVk1yUkN4TlFVRk5iRU1zWlVGQmEwTXNTVUZCYWtKclF5eE5RVUZOTDBRc1VVRkhkRVVzVTBGQlV6WkZMRk5CUVZOeVJDeFBRVUZSZFVNc1RVRkJUMG9zVFVGQlQwTXNXVUZEYkVOSExFMUJRVTA1UWl4VFFVRTBRaXhKUVVGcVFqaENMRTFCUVUwdlJDeFRRVUZwUWl0RUxFMUJRVTB4UWl4TlFVTm9SREJDTEUxQlFVMW9RaXhYUVVGaExFVkJRMjVDZGtJc1QwRkJUM2RFTEV0QlFVc3NUMEZCVVhKQ0xGTkJSM0JDU1N4TlFVRk5MMFFzVVVGQlZTdEVMRTFCUVUxd1F5eFhRVUZoTEVWQlFVbG5ReXhOUVVGTk0wUXNUMEZEZWtNMFJDeFhRVUZaUnl4TlFVRk5ha01zVDBGQlQyMUVMRkZCUVZGMFFpeFBRVUZaU1N4TlFVRk5ha01zVDBGQlQyMURMRXRCUVV0T0xFOUJReTlFU1N4TlFVRk5la0lzWTBGQll6UkNMR0ZCUVdFeFF5eFRRVWQyUTNWRUxHTkJRV04yUkN4UFFVRlJkVU1zVDBGMlNIaENWU3hQUVVGUFV5eGxRVUZsTVVZc1UwRkJVMjFHTEZWQlFWY3NXVUZCWVN4RFFVbHlSRkVzV1VGQldTeEZRVU5hUXl4SlFVRkxMRmRCUTBnc1dVRkJORUppTEVsQlFYaENOME1zUzBGQlMzbENMR2RDUVVsR2VrSXNTMEZCUzNsQ0xHVkJRV1ZPTEZkQlJUZENkME1zU1VGQlN5eFRRVUZoUXl4UFFVZFlOVVFzUzBGQlMzbENMR2xDUVUxV2VrSXNTMEZCUzNsQ0xHVkJRV1ZPTEZWQlFWbDVReXhWUVVkd1F6bEdMRk5CUVZOdFJpeFZRVUZWY0VJc1VVRkJWVEZETEZsQlFWa3dReXhSUVVONlF5OUVMRk5CUVZOdFJpeFZRVUZWV1N4WFFVRmhNVVVzV1VGQldUSkZMRlZCUlRWRGFFY3NVMEZCVTIxR0xGVkJRVlZ1UWl4VFFVRlhMRk5CUVZWcFF5eEpRVUZMUXl4SlFVTXpRMEVzUjBGQlIwUXNUVUZQVEdwSExGTkJRVk50Uml4VlFVRlZWaXhMUVVGUExGTkJRVlZPTEUxQlFVOVVMRlZCUTNwRExFbEJRMGxYTEdWQlJFRkZMRTFCUVZGeVF5eExRVUZMZVVJc1pVRnJRbXBDTEU5QlprdFpMRTFCUVUxd1F5eFhRVmxVYTBNc1owSkJRV2xDTEVWQldFa3NhVUpCUVZaR0xGTkJRMVJVTEZOQlFWZEJMRlZCUVZsaExFMUJRVTFxUWl4dFFrRkZXbWxDTEUxQlFVMWlMRmRCUTNKQ1V5eE5RVUZSZWtRc1QwRkJUMU1zUzBGQlMyZEVMRTFCUVU5VUxGVkJRek5DUVN4VFFVRlhMRWxCUjJKWExHZENRVUZwUWl4SFFVMWtTQ3hwUWtGQmFVSm9ReXhMUVVGTmFVTXNUVUZCVDFRc1ZVRkJWU3hGUVVGUFZ5eHBRa0ZKZUVSeVJTeFRRVUZUYlVZc1ZVRkJWVTBzVVVGQlZTeFRRVUZWZEVJc1QwRkRja01zVDBGQlQwUXNhVUpCUVdsQ2FFTXNTMEZCVFdsRExFMUJRVThzVFVGQlRTeEhRVUZOTEVsQmVVVnVSRzVGTEZOQlFWTnRSaXhWUVVGVlowSXNVMEZCVnl4WFFVTTFRaXhQUVVGMVF5eEpRVUZvUTJwRkxFdEJRVXQ1UWl4bFFVRmxiRUlzVTBGSk4wSjZReXhUUVVGVGJVWXNWVUZCVldsQ0xGbEJRV01zVTBGQlZVTXNTMEZEY0VOd1JpeG5Ra0ZCWlVFc1kwRkJaMEptTEZGQlFWRXNiVUpCUVcxQ1pTeGxRVU12UkN4SlFVRkpkME1zVVVGQlZTeEpRVUZKZUVNc1kwRkJZMjlHTEV0QlEyaERia1VzUzBGQlMzbENMR1ZCUVdWR0xGRkJRVlZCTEZGQlJUbENka0lzUzBGQlMzbENMR1ZCUVdWRUxGTkJRVmQ0UWl4TFFVRkxlVUlzWlVGQlpVWXNVVUZCVVVNc1UwRkxNMFFzU1VGSVFTeEpRVUZKTkVNc1JVRkJTWEJGTEV0QlFVdDVRaXhsUVVGbGNrSXNUMEZCVDJsRkxFdEJReTlDUXl4UlFVRlZMRWRCUlVRc1QwRkJUa1lzUjBGRFRFVXNVMEZCVnk5RExGRkJRVkUyUWl4TlFVRk5aMElzUlVGQlJVY3NUVUZETTBKSUxFVkJRVWxCTEVWQlFVVkpMRXRCVDFJc1QwRktRWGhGTEV0QlFVdDVRaXhsUVVGbGNrSXNUMEZCVDNGRkxGRkJSVmdzUzBGQldrZ3NVMEZCWjBKMFJTeExRVUZMZVVJc1pVRkJaWEpDTEU5QlFVOXRReXhMUVVGTEswSXNVMEZEY0VSMFJTeExRVUZMZVVJc1pVRkJaVzVFTEU5QlFWTm5SeXhSUVVGUmFFY3NUMEZET1VJd1FpeE5RVWxVTEVsQlFVa3dSU3hSUVVGVkxGZEJkVUprTEZOQlFWTkRMR05CUVdORExFVkJRVWQyUXl4UFFVTjRRaXhQUVVGSmRVTXNSMEZCU3l4SFFVRnpRaXhKUVVGcVFuWkRMRTFCUVUwdlJDeFJRVUZuUWl0RUxFMUJRVTAzUWl4TlFVRmpMRVZCUTNCRU5rSXNUVUZCVFhCRExGZEJRVzFDTEVWQlJYcENNa1VzUjBGQlRVRXNSVUZGU25aRExFMUJRVTA1UWl4VFFVRlhPRUlzVFVGQlRTOUVMRTlCUVdVclJDeE5RVUZOYWtNc1QwRkJUMmxGTEV0QlFVdEZMRXRCUVV0cVJ5eFBRVUZ0UWl0RUxFMUJRVTB2UkN4UlFVbDRSbk5ITEVWQlFVbDJReXhOUVVGTmJFTXNaMEpCUVdWclF5eE5RVUZOYkVNc1kwRXZRbkpETEZOQlFXbERlVVVzUjBGblFpOUNMRTlCWmtsQkxFZEJRVXRHTEZGQlJWQkZMRVZCUVVsR0xGTkJTVXBGTEVsQlEwRkJMRWRCUVV0QkxFbEJRVTBzUlVGRFdFRXNSMEZCUzBFc1NVRkJUU3hGUVVOWVFTeEhRVUZMUVN4SlFVRk5MRVZCUTFoQkxFZEJRVXRCTEVsQlFVMHNSVUZEV0VFc1IwRkJTMEVzU1VGQlRTeEhRVU5ZUVN4TFFVZExRU3hGUVdVMFEwTXNRMEZCZDBKRUxFbEJRM1pGUVN4SFFVRkxka01zVFVGQlRTOUVMRTlCUVdWelJ5eEZRVVY2UW5aRExFMUJRVTAzUWl4TlFVdEtOa0lzVFVGQlRTOUVMRkZCU2xnclJDeE5RVUZOZWtJc1kwRkJaU3hGUVVOa0xFbEJkMGxZTEZOQlFWTTBRaXhoUVVGaE1VTXNVVUZEY0VJc1NVRkJTWFZETEUxQlFWRjJReXhQUVVGUE1rSXNaVUZEYmtJM1F5eE5RVUZOTEdWQlFXZENlVVFzVFVGQlRYcENMR0ZCUVdONVFpeE5RVUZOZUVJc2FVSkJRMmhFZDBJc1RVRkJUWHBDTEdOQlFXVXNSVUZGYUVKNVFpeE5RVUZOZUVJc2EwSkJRMVJxUXl4TlFVRk5MR1ZCUVdkQ2VVUXNUVUZCVFRsQ0xGTkJRelZDT0VJc1RVRkJUWGhDTEdsQ1FVRnJRaXhGUVVONFFtbEZMRkZCUVZGRExGTkJRVk4wUXl4alFVRmxNME1zVTBGSmNFTXNVMEZCVXpKRExHTkJRV016UXl4UlFVTnlRaXhKUVVGSmRVTXNUVUZCVVhaRExFOUJRVTh5UWl4bFFVTnVRamRETEUxQlFVMHNaMEpCUVdsQ2VVUXNUVUZCVFd4Q0xGVkJRVmRyUWl4TlFVRk5MMFFzVDBGQlVTdEVMRTFCUVUwM1FpeFBRVVYyUkRaQ0xFMUJRVTFzUWl4WlFVRmphMElzVFVGQlRTOUVMRk5CUVZVclJDeE5RVUZOTjBJc1VVRkROME5XTEU5QlFVOTNSQ3hMUVVGTExGbEJRMXBxUWl4TlFVRk5lRUlzYVVKQlFXdENMRWRCVXpGQ2QwSXNUVUZCVFhwQ0xHTkJRV2RDZVVJc1RVRkJUVGxDTEZWQlFWazRRaXhOUVVGTk4wSXNUMEZCVXpaQ0xFMUJRVTB2UkN4UlFVRlZLMFFzVFVGQlRXeERMR05CUXpkRk5rVXNTMEZCUzJ4R0xGRkJVMUFzVTBGQlUzVkVMR05CUVdOMlJDeFBRVUZSZFVNc1QwRkRlRUpCTEUxQlFVMW1MR05CUTFSbExFMUJRVTFtTEdGQlFXTXNSVUZEY0VKM1JDeFJRVUZSUXl4VFFVRlRSU3hsUVVGblFtNUdMRTlCUVZGMVF5eFJRVWszUXl4VFFVRlRORU1zWlVGQlpXNUdMRTlCUVZGMVF5eFBRWGRDT1VJc1RVRkJVVUVzVFVGQlRUTkNMRlZCUVZreVFpeE5RVUZOTjBJc1VVRkJWVFpDTEUxQlFVMHZSQ3hQUVVGVEswUXNUVUZCVFd4RExHVkJRV2xDYTBNc1RVRkJUVGxDTEZOQlFUUkNMRWxCUVdwQ09FSXNUVUZCVFM5RUxGTkJRV1VzUTBGRGNFZ3NTVUZCU1RSSExFbEJRVTAzUXl4TlFVRk5MMFFzVDBGSGFFSXNSMEZHUVUwc1RVRkJUU3gzUWtGRFRtdENMRTlCUVU4MlFpeExRVUZMTEVkQlExSjFSQ3hOUVVGUk4wTXNUVUZCVFM5RUxFOUJRMmhDTEUxQlIwb3JSQ3hOUVVGTlppeGhRVUZqTEVWQk5sRjBRaXhUUVVGVE5rUXNkMEpCUVhkQ1F5eE5RVU12UWl4SlFVRkpMME1zVFVGQlVTdERMRXRCUVVzelJDeGxRVU5xUWxrc1RVRkJUWFpDTEd0Q1FVRnZRbk5GTEV0QlFVdERMR05CUVdNc1dVRkJZeXhGUVVWMlJHaEVMRTFCUVUxMFFpeHJRa0ZCYjBKelFpeE5RVUZOY2tJc1QwRkhiRU54UWl4TlFVRk5PVUlzVTBGQlZTeEZRVU5RTmtVc1MwRkJTME1zWTBGQll5eFJRVUZWTEVkQlEzUkRSQ3hMUVVGTFJTeFRRVWxVTEZOQlFWTkRMR2xDUVVGcFFrZ3NUVUZEZUVKNFJ5eE5RVUZOTERSQ1FVTk9kMGNzUzBGQlMzcEVMRXRCUVVzc1IwRTBRbG9zVTBGQlV6WkVMRkZCUVZFeFJpeFBRVUZSZFVNc1QwRkRka0o2UkN4TlFVRk5MRk5CUVZWNVJDeE5RVUZOTTBJc1UwRkZha0l5UWl4TlFVRk5NMElzVTBGRFZGb3NUMEZCVHpaQ0xFdEJRVXNzUjBGSFpGVXNUVUZCVFhSQ0xHbENRVUZyUWl4RlFVTjRRbXBDTEU5QlFVOTNSQ3hMUVVGTExGVkJRMW93UWl4TFFVRkxiRVlzVVVGRFJIVkRMRTFCUVUwNVFpeFZRVUZaT0VJc1RVRkJUVE5DTEZOQlFWTmFMRTlCUVU4MlFpeExRVUZMTEVkQlowSnVSQ3hUUVVGVGNVUXNTMEZCUzJ4R0xGRkJRMW9zU1VGQlNYVkRMRTFCUVZGMlF5eFBRVUZQTWtJc1pVRkhia0lzU1VGR1FUZERMRTFCUVUwc1QwRkJVWGxFTEUxQlFVMDVRaXhUUVVWaU9FSXNUVUZCVFRsQ0xGTkJRVFpDTEU5QlFXeENWQ3hQUVVGUE5rSXNWVUUwU0dwRExGTkJRVk00UkN4VFFVRlRZaXhGUVVGSGRrTXNUMEZGYmtJc1QwRkJjVUlzU1VGQmFrSkJMRTFCUVUwdlJDeFBRVUZ4UWl4TlFVVXpRaXRFTEUxQlFVMXdReXhYUVVGWmVVWXNTVUZCVFhKRUxFMUJRVTFxUXl4UFFVRlBkVVlzVTBGQmEwSm1MRWRCUVV0QkxFZEJRVXQyUXl4TlFVRk5MMFFzVVVGRmRFUnZTQ3hKUVVGbWNrUXNUVUZCVFdRc1VVRkJaV01zVFVGQlRXcERMRTlCUVU5M1JpeExRVUZMTEVsQlFYRkRMRWxCUVhoQ2RrUXNUVUZCVFdwRExFOUJRVTg1UWl4UFFVRnZRaXRFTEUxQlFVMXFReXhQUVVGUGVVWXNVVUZCYlVKNFJDeE5RVUZOYWtNc1QwRkJUekJHTEU5QlFVOTZSQ3hOUVVGTkwwUXNVVUZEYmtvclJDeE5RVUZOYWtNc1QwRkJUM0ZGTEZOQlIySnBRaXhKUVVGTmNrUXNUVUZCVFdwRExFOUJRVTh5Uml4UlFVRlJia0lzUlVGQlIzWkRMRTFCUVUxa0xGTkJSUzlDYlVVc1MwRlVVQ3hKUVVGSlFTeEpRVmxPTEZOQlFWTk5MRmxCUVZsc1J5eFJRVU51UWl4SlFVRkpkVU1zVFVGQlVYWkRMRTlCUVU4eVFpeGxRVU51UWpkRExFMUJRVTBzWTBGQlpYbEVMRTFCUVUwMVFpeFpRVVYwUWpSQ0xFMUJRVTAxUWl4aFFVTlVORUlzVFVGQlRUZENMRTlCUVZFc1JVRkRaSE5GTEZGQlFWRkRMRk5CUVZOclFpeGpRVUZsTlVRc1RVRkJUM1pETEZOQlNUTkRMRk5CUVZOdFJ5eGpRVUZqTlVRc1RVRkJUM1pETEZGQlJ6VkNMRWRCUmtGc1FpeE5RVUZOTEdkQ1FVRnBRbmxFTEUxQlFVMDFRaXhYUVVGWk5FSXNUVUZCVFM5RUxGTkJSVEZESzBRc1RVRkJUVFZDTEZsQlFTdENMRWxCUVdwQ05FSXNUVUZCVFM5RUxGTkJRemRDSzBRc1RVRkJUVFZDTEZsQlFXRXNSVUZEYmtKWUxFOUJRVTgwUWl4VlFVRlhMRVZCUTJ4Q05VSXNUMEZCVDNkRUxFdEJRVXNzVDBGRlVtcENMRTFCUVUxdVFpeGhRVUZoTEVOQlIzSkNMRWxCUVVsblJpeFBRVUZUY0Vjc1QwRkJUM0ZITEdsQ1FVVm1SQ3hSUVVGVlFTeFBRVUZQYUVZc1lVRkJaV2RHTEU5QlFVOUZMRmRCUXpGRGRFY3NUMEZCVHl0Q0xGZEJaMEptTEZOQlFWTjNSU3hSUVVGUlF5eEhRVUZKUXl4SFFVTnVRaXhKUVVGTExFbEJRVWxETEVWQlFVa3NSVUZCUjBNc1JVRkJTVWdzUjBGQlIyaEpMRTlCUVZGclNTeEZRVUZKUXl4RlFVRkhSQ3hKUVVOd1F5eEhRVUZKUml4SFFVRkhSU3hMUVVGUFJDeEZRVUZITEU5QlFVOURMRVZCUnpGQ0xFOUJRVkVzUlVFemRFSldNVWtzVTBGQlUyMUdMRlZCUVZWMFFpeExRVUZQTEZOQlFWVnBSQ3hIUVVOc1EyaEhMRTFCUVUwc1QwRkJVV2RITEVkQlEyUkJMRVZCUVVrNFFpeFRRVUZUT1VJc1JVRkJSeXhKUVVOb1FpeEpRVUZKZGtNc1RVRkJVWEpETEV0QlFVdDVRaXhsUVVOaWEwWXNUVUZCVVM5Q0xFVkJTMW9zUjBGS1ZTeEpRVUZPUVN4SlFVRlRka01zVFVGQlRYaENMR2xDUVVGclFpeEhRVWt6UWl4SlFVRk9LMFFzUjBGQlYzWkRMRTFCUVUxNlFpeG5Ra0ZCTUVNc1NVRkJlRUo1UWl4TlFVRk5iRU1zWTBGQmMwSnJReXhOUVVGTkwwUXNVVUZCVlN0RUxFMUJRVTFzUXl4alFVRm5RbXRETEUxQlFVMHZSQ3hQUVVGVExFbEJRVTByUkN4TlFVRk5OMElzVDBGSGJFa3NUMEZHUVRWQ0xFMUJRVTBzY1VKQlFYTkNlVVFzVFVGQlRTOUVMRTlCUVZFclJDeE5RVUZOTjBJc1QwRkRNMElzU1VGQmFrSTJRaXhOUVVGTkwwUXNVVUZCWjBJclJDeE5RVUZOTjBJc1RVRkJUM2RHTEZsQlFWbG9SeXhOUVVGWGQwTXNZVUZCWVhoRExFMUJRM0JGTEV0QlMxUXNSMEZCVlN4TFFVWldORVVzUlVGQlNVUXNZMEZCWTBNc1JVRkJSM1pETEZOQlJVNUJMRTFCUVUwM1FpeE5RVVZ1UWl4UFFVUnhRaXhKUVVGcVFqWkNMRTFCUVUwdlJDeFJRVUZqTUVnc1dVRkJXV2hITEUxQlF6ZENMRXRCZVVKVUxFbEJORUpKTUVZc1NVRTFRa0ZyUWl4UFFVRlRka1VzVFVGQlRYcENMR0ZCWjBSdVFpeFBRUzlEUVdoRExFMUJRVTBzWjBKQlFXbENaMGtzVTBGRlJpeEpRVUZxUW5aRkxFMUJRVTB2UkN4UlFVRm5RaXRFTEUxQlFVMHZSQ3hQUVVGVGMwY3NSVUZCU1haRExFMUJRVTFzUXl4blFrRkZha1IyUWl4TlFVRk5MRFpDUVVST1owa3NVVUZCVXl4SFFVMVFka1VzVFVGQlRUZENMRTlCUVZNMlFpeE5RVUZOTTBJc1VVRkZka0k1UWl4TlFVRk5MRzFDUVVST1owa3NVVUZCVXl4SFFVVkJRU3hUUVVOVWFFa3NUVUZCVFN4WFFVTk9lVVFzVFVGQlRUTkNMRk5CUVZVc1JVRkRhRUl5UWl4TlFVRk5NVUlzVFVGQlR5eEZRVVZSTEVsQlFXcENNRUlzVFVGQlRTOUVMRk5CUVdNclJDeE5RVUZOZWtJc1kwRkJaU3hIUVVVM1Exb3NTMEZCU3pSQ0xFMUJRVTFUTEUxQlFVMXNReXhsUVVWcVFtdERMRTFCUVUweFFpeE5RVUZQTEVWQlIxSXdRaXhOUVVGTk0wSXNWVUZCVTJ0RkxFVkJRVWxFTEdOQlFXTm5ReXhOUVVGUGRFVXNVMEZOYmtNc1VVRkdSSEZFTEVsQlFWQmtMRVZCUVVrc1JVRkJVMkVzVTBGQlUySXNSVUZCUjNaRExFOUJRV3RDTEU5QlJ6ZERRU3hOUVVGTmVrSXNZVUZCWlhsQ0xFMUJRVTB2UkN4UlFVRlZLMFFzVFVGQlRXeERMR05CUXpORGVVVXNSVUZCU1N4SlFVVktka01zVFVGQlRTOUVMRkZCUVZWelJ5eEZRVU5vUW5aRExFMUJRVTFvUWl4WFFVRmhMRWRCUjBFc1NVRkJha0puUWl4TlFVRk5MMFFzVTBGSFNDdEVMRTFCUVUwM1FpeFJRVUZQTmtJc1RVRkJUWHBDTEdOQlFXVXNSMEZGYmtNclJpeFJRVUZWTDBJc1IwRkJTM1pETEUxQlFVMDNRaXhQUVVGUGQwWXNXVUZCV1doSExFOUJSMnhETEU5QlFWSXdSaXhMUVVGak1VWXNTMEZCUzNORUxFdEJRVXNzVDBGQlVXOURMRXRCUXpkQ1FTeExRWGRJVkRWSUxGTkJRVk50Uml4VlFVRlZja0lzVFVGQlVTeFRRVUZWWjBRc1IwRkRia05xUml4bFFVRmxTeXhMUVVGTkxFbEJRVWxRTERKQ1FVRXlRaXhoUVVkMFJETkNMRk5CUVZOdFJpeFZRVUZWTkVRc1MwRkJUeXhUUVVGVlF5eExRVUZOUXl4VlFVTjRReXhKUVVGSlF5eEpRVUZOYUVnc1MwRkRUbkZETEUxQlFWRnlReXhMUVVGTGVVSXNaVUZGYWtJc1QwRkJVVmtzVFVGQlRTOUNMRmxCUTFvc1MwRkJTeXhGUVVOSUswSXNUVUZCVFdoRExFMUJRVkY1Unl4TFFVTmtMRTFCUlVZc1MwRkJTeXhGUVVOSWVrVXNUVUZCVFdoRExFMUJRVkVzUTBGQlEyZERMRTFCUVUxb1F5eE5RVUZQZVVjc1RVRkROVUlzVFVGRlJpeFJRVU5GZWtVc1RVRkJUV2hETEUxQlFVMXJReXhMUVVGTGRVVXNUVUZKY2tKNlJTeE5RVUZOTDBJc1dVRkJZeXhGUVVOd1FqRkNMRTFCUVUwc2QwSkJRWGxDZVVRc1RVRkJUUzlDTEZkQlFWbDVSeXhWUVVOcVJDeEpRVU5KUlN4UlFVUlZSaXhYUVVFMlFpeEpRVUZxUWtFc1UwRkJVM3BGTEUxQlFXdENkMFVzVDBGQlUyaERMRkZCUVZGdlF5eFJRVUZWU2l4UFFVRlRhRU1zVVVGQlVYRkRMRTlCUXpkRlF5eE5RVUZSUXl4UFFVazFRaXhUUVVGVFF5eFRRVUZUTlVZc1UwRkJWVFpHTEZsQlF6RkNNMGtzVFVGQlRTeFpRVVZHT0VNc1YwRkJZWE5HTEV0QlExaFBMR0ZCUVhkRExFbEJRVEZDUVN4WFFVRlhReXhoUVVNelFrUXNWMEZCVjBNc1dVRkJZU3hGUVc5Q05VSTFTU3hOUVVGTkxGZEJSVTVyU1N4TFFVRkxWeXhsUVVGbExGRkJRVk5ETEZOQlF6ZENXaXhMUVVGTFZ5eGxRVUZsTEZOQlFWVkZMRlZCUXpsQ1lpeExRVUZMVnl4bFFVRmxMRkZCUVZOSExGTkJRemRDWkN4TFFVRkxWeXhsUVVGbExGRkJRVk5KTEZOQlF6ZENaaXhMUVVGTFZ5eGxRVUZsTEZOQlFWVklMRlZCUXpsQ1RpeEpRVUZKVXl4bFFVRmxMRTFCUVU5TUxFOUJRekZDU2l4SlFVRkpVeXhsUVVGbExFMUJRVTlLTEZGQlF6RkNUQ3hKUVVGSlV5eGxRVUZsTEU5QlFWRkxMRkZCUXpOQ1F5eFhRVUZaTEVkQlRWSXhSaXhOUVVGTmFFSXNXVUZCWjBKNVJpeExRVUZMV0N4cFFrRkJhMEpYTEV0QlFVdFlMR1ZCUVdVMlFpeFhRVUZaU2l4WFFUbENia1lzVTBGQlUxSXNVVUZEVUhoSkxFMUJRVTBzVTBGRFRtdEpMRXRCUVV0NFJTeE5RV2hDU0VRc1RVRkJUVFZDTEZkQlFWbHhSU3hSUVVGUlF5eFRRVUZUYTBNc1QwRkJXVVFzU1VGQlNXbENMRXRCUVVzc1RVRkJUMmhDTEU5QlEyNUZTQ3hMUVVGTGIwSXNSMEZCUnl4VFFVRlZXaXhWUVhOQ2JFSXNTVUZCU1Uwc1VVRjNSazRzVTBGQmNVSmFMRXRCUTI1Q0xFOUJRVThzVjBGRFRDeEpRVUZKTTBVc1RVRkJVVEpGTEVsQlFVbDJSaXhsUVVOb1FqZERMRTFCUVUwc1kwRkJaWGxFTEUxQlFVMW9RaXhaUVVOMlFtZENMRTFCUVUxb1FpeFpRVUZaWjBJc1RVRkJUV2hDTEdGQlJVZ3NTVUZCY2tKblFpeE5RVUZOYUVJc1dVRkJiMEp1UkN4blFrRkJaMEk0U1N4SlFVRkxMRlZCUTJwRU0wVXNUVUZCVFRsQ0xGTkJRVlVzUlVGRGFFSjVSU3hMUVVGTFowTXNUMEZvUjB0dFFpeERRVUZaYmtJc1MwRkRNVUpHTEV0QlFVdHZRaXhIUVVGSExGRkJRVk5PTEZOQlEycENMRWxCUVVsSExGZEJRVmtzUlVGM1FtaENMRk5CUVZORUxFOUJRVTgzUml4UFFVTmtja1FzVFVGQlRTeFZRVU5PTEVsQlFVazRSeXhKUVVGTmIwSXNTMEZCU3pGRUxFMUJRVTF1UWl4UFFVTnlRbkpFTEUxQlFVMHNZVUZCWXpoSExFMUJSVklzU1VGQlVrRXNUMEZMZDBJc1NVRkJja0p5UkN4TlFVRk5MMElzV1VGQmIwSXJRaXhOUVVGTmFFTXNVVUZCVlhsSExFMUJRVkY2UlN4TlFVRk5MMElzVjBGQllTeEpRVUZ4UXl4SlFVRm9ReXRHTEZGQlFWRm9SU3hOUVVGTmFFTXNUVUZCVDNsSExGTkJRV3RDYVVJc1dVRkRjRWh1U2l4TlFVRk5MRGhDUVVFclFubEVMRTFCUVUxb1FpeFpRVU16UTJkQ0xFMUJRVTFvUWl4alFVZFNNa1lzU1VGQlNXOUNMRk5CVFZJc1UwRkJVMUFzVVVGQlVYcEdMRWxCUTJaNFJDeE5RVUZOTEZWQlFWZDNSQ3hKUVVOcVFtbEdMRk5CUTBGUUxFdEJRVXRYTEdWQlFXVXNVVUZCVTBrc1UwRkRWU3hKUVVGdVF6TktMR2RDUVVGblFqUkpMRXRCUVUwc1ZVRkJaMEp1U0N4bFFVRmxiVWdzUzBGQlRURkZMRWxCVFdwRkxGTkJRVk56Uml4VlFVTlFXaXhMUVVGTFZ5eGxRVUZsTEZOQlFWVkZMRlZCUXpsQ1RpeFRRVXRHTEZOQlFWTk5MRmRCUTFBdlNTeE5RVUZOTEZsQlEwNXJTU3hMUVVGTFZ5eGxRVUZsTEZGQlFWTkRMRk5CUXpkQ1RDeFRRVXRHTEZOQlFWTkJMRk5CUTFCNlNTeE5RVUZOTEZWQlEwNXZTU3hKUVVGSlN5eFBRVUZQVUN4TlFWZGlMRTlCTjBSQlJTeEpRVUZKYTBJc1IwRkJSeXhQUVVGUlNpeFJRWFJyUW1wQ0xGTkJRWGxDTTBvc1VVRkJVMnRMTEUxQlFVOURMRWxCUjNaRExFZEJRWFZETEcxQ1FVRTFRbTVMTEZGQlFWRnZTeXhuUWtGQlowTXNUMEZCVDNCTExGRkJRVkZ2U3l4blFrRkJaMEpHTEUxQlFVOURMRWxCUzNCR2Jrc3NVVUZCVVhGTExGTkJRVmx5U3l4UlFVRlJjVXNzVVVGQlVVZ3NUMEZCZFVOSkxFMUJRVTFETEZGQlFWRjJTeXhSUVVGUmNVc3NVVUZCVVVnc1VVRkJVMnhMTEZGQlFWRnhTeXhSUVVGUlNDeFBRVUZQT1VVc1VVRkJVU3RGTEVsQlFWTnVTeXhSUVVGUmNVc3NVVUZCVVVnc1QwRkJVeXhEUVVGRFF5eEhRVUZKYmtzc1VVRkJVWEZMTEZGQlFWRklMRkZCUVRWS2JFc3NVVUZCVVN0S0xFZEJRVWRITEUxQlFVOURMRWxCTm14Q2JrVkRMRU5CUVdkQ2VrSXNTMEZCVFN4UlFVRlRaU3hUUVU4dlFtWXNTMEZCUzIxQ0xFdEJRVXNzVVVGQlUxQXNVMEZSYmtKYUxFdEJRVXR0UWl4TFFVRkxMRk5CUVZWT0xGVkJVWEJDWWl4TFFVRkxlRVFzUzBGQlN5eFBRVUZSTUVRc1MwRkZZak5GTEUxQlFVMDVRaXhWUVVOVU0wSXNUVUZCVFN4bFFVTk9iMGtzU1VGQlNURkNMRlZCUjBOM1FpeE5RV2RDVkdoS0xGTkJRVk50Uml4VlFVRlZiMFVzVDBGQlV5eFRRVUZWVUN4TlFVTndReXhKUVVGSmVrVXNUVUZCVVhKRExFdEJRVXQ1UWl4bFFVTmlPRVlzVjBGQllTeERRVU5tUXl4WlFVRlpMRWRCUjJRc1IwRkJlVUlzU1VGQmNrSnVSaXhOUVVGTkwwSXNWMEZCYTBJc1QwRkJUMDRzUzBGRmJrTXNSMEZCZVVJc1NVRkJja0p4UXl4TlFVRk5MMElzVjBGRlVpeFBRVUZKZDBjc1RVRkJVVUVzVDBGQlUzcEZMRTFCUVUxb1F5eE5RVUZqVEN4TlFVTndRemhITEU5QlFVMUJMRXRCUVU5NlJTeE5RVUZOYUVNc1QwRkZlRUpuUXl4TlFVRk5hRU1zVFVGQlVTeExRVU5rWjBNc1RVRkJUUzlDTEZkQlFXRXNSVUZEYmtJclFpeE5RVUZOT1VJc1UwRkJWU3hGUVVOYWRVY3NUVUZCVFVFc1MwRkJTM2hFTEV0QlFVc3NVMEZCVlhSRUxFdEJRVTExU0N4WlFVTTNRblpJTEUxQlNWUXNTVUZCU3poSExFdEJRVTBzUTBGRlZDeEpRVUZKTmtJc1RVRkJVWFJITEUxQlFVMW9ReXhOUVVOa05rVXNTVUZCVFRkRExFMUJRVTB2UWl4WFFVTm9RaXRDTEUxQlFVMW9ReXhOUVVGUkxFdEJRMlJuUXl4TlFVRk5MMElzVjBGQllTeEZRVU51UWl0Q0xFMUJRVTA1UWl4VFFVRlZMRVZCUldoQ0xFbEJRVXNzU1VGQlNXbEhMRVZCUVVrc1JVRkJSMEVzUlVGQlNYUkNMRWxCUVV0elFpeEpRVU4yUW0xRExFMUJRVTF1UXl4SFFVRkhiRVFzUzBGQlN5eFRRVUZWZEVRc1MwRkJUU3hEUVVNMVFuZElMRmxCUVZrc1NVRkphRUlzVDBGQlQzaElMRXRCU1ZRc1NVRkJTVFJKTEUxQlFWRjJReXhSUVVGUmFFVXNUVUZCVFdoRExFMUJRVTk1Unl4TlFVTnFReXhQUVVGbExFbEJRVmc0UWl4TlFVRnhRalZKTEUxQlEzcENjVU1zVFVGQlRXaERMRTFCUVUxM1NTeFBRVUZQUkN4TlFVRlBMRWRCUXpGQ2RrY3NUVUZCVFM5Q0xGbEJRV01zUlVGRFN5eEpRVUZ5UWl0Q0xFMUJRVTB2UWl4aFFVRnJRaXRDTEUxQlFVMW9ReXhOUVVGUlowTXNUVUZCVFdoRExFMUJRVTBzU1VGRGRFUjVSeXhMUVVGTGVFUXNTMEZCU3l4VFFVRlZkRVFzUzBGQlRYVklMRmxCUTI1Q2RrZ3NUMEZMVkd4RExGTkJRVk50Uml4VlFVRlZhVVlzUjBGQlN5eFRRVUZWV1N4SFFVRkpVaXhKUVVOd1F5eEpRVUZKVXl4SlFVRk5lRXNzVDBGQlR6QkZMRlZCUVZWcFJpeEhRVUZIYmtjc1MwRkJTeTlDTEV0QlFVMDRTU3hIUVVGSlVpeEpRVU42UTJwSExFMUJRVkZ5UXl4TFFVRkxlVUlzWlVGMVFtcENMRTFCY2tKWExGTkJRVkJ4U0N4SlFVZEdla2NzVFVGQlRYWkNMR3RDUVVGdlFtUXNTMEZCUzNGR0xHTkJRV01zV1VGQll5eEhRVVZ5UXl4SlFVRnNRbWhFTEUxQlFVMDVRaXhUUVVGdFFsQXNTMEZCUzNOR0xGVkJRMnhDTEdGQlFWQjNSQ3hMUVVOS2VrY3NUVUZCVFRWQ0xGbEJRV1UwUWl4TlFVRk5ka0lzYjBKQlF6bENkVUlzVFVGQlRYWkNMR3RDUVVGdlFuVkNMRTFCUVUxNlFpeGpRVUZsTEVWQlF5OURlVUlzVFVGQlRUbENMRk5CUVZVc1JVRkRhRUk0UWl4TlFVRk5lRUlzYVVKQlFXdENMRVZCUTNoQ2FrTXNUVUZCVFN4alFVRmxlVVFzVFVGQlRTOUVMRTlCUVZFclJDeE5RVUZOTTBJc1UwRkZja015UWl4TlFVRk5MMFFzVDBGRFVtdEZMR0ZCUVdGNFF5eE5RVU5JY1VNc1RVRkJUVE5DTEZOQlEyaENiMFVzVVVGQlVVTXNVMEZCVTFFc2FVSkJRV3RDZGtZc1VVRkxiRU1yU1N4TFFVZFVha3dzVTBGQlUyMUdMRlZCUVZVclJpeFpRVUZqYkV3c1UwRkJVMjFHTEZWQlFWVnBSaXhIUVVWd1JIQkxMRk5CUVZOdFJpeFZRVUZWZDBVc1pVRkJhVUlzVTBGQlZYRkNMRWRCUVVsU0xFbEJRMmhFTEVsQlFVbFRMRWxCUVUxNFN5eFBRVUZQTUVVc1ZVRkJWWGRGTEdWQlFXVXhSaXhMUVVGTEwwSXNTMEZCVFRoSkxFZEJRVWxTTEVsQldYcEVMRTFCVmxjc1lVRkJVRkVzU1VGUFJtaEZMRkZCUVZGRExGTkJRVk5KTEhkQ1FVRjVRbTVHTEUxQlIzSkRLMGtzUzBGSFZHcE1MRk5CUVZOdFJpeFZRVUZWWjBjc2JVSkJRWEZDTEZOQlFWVklMRWxCUTJoRUxFbEJRVWxETEVsQlFVMTRTeXhQUVVGUE1FVXNWVUZCVldkSExHMUNRVUZ0UWtNc1RVRkJUV3hLTEV0QlFVMXRTaXhYUVZreFJDeE5RVlpYTEdGQlFWQk1MRk5CUVRSQ2FrY3NTVUZCVUdsSExFbEJUM1pDYUVVc1VVRkJVVU1zVTBGQlUwa3NkMEpCUVhsQ2JrWXNUVUZIY2tNclNTeExRWFZDVkdwTUxGTkJRVk50Uml4VlFVRlZjVU1zVDBGQlV5eFhRVU14UWl4SlFVRkpha1FzVFVGQlVYSkRMRXRCUVV0NVFpeGxRVmxxUWl4UFFWWkxXU3hOUVVGTk9VSXNWVUZEVkROQ0xFMUJRVTBzVlVGSlRubEVMRTFCUVUwNVFpeFRRVUZYT0VJc1RVRkJUWFpDTEd0Q1FWRXpRaXhUUVVGblFtaENMRTlCUVZGMVF5eFBRVU5xUWtFc1RVRkJUWFJDTEd0Q1FVTlVjMElzVFVGQlRYUkNMR2xDUVVGclFpeEZRVU40UWl0RUxGRkJRVkZETEZOQlFWTlRMRkZCUVZNeFJpeFBRVUZSZFVNc1VVRldiRU5wUkN4RFFVRlBkRVlzUzBGQlRYRkRMRkZCUjJaQkxFMUJRVTF5UWl4UlFVRlRMRVZCUTFKb1FpeE5RWFZDVkd4RExGTkJRVk50Uml4VlFVRlZiVVlzVFVGQlVTeFhRVlY2UWl4UFFWUkJlRW9zVFVGQlRTeDNRa0ZCZVVKdlFpeExRVUZMZVVJc1pVRkJaV3hDTEZWQlJXWXNTVUZCYUVOUUxFdEJRVXQ1UWl4bFFVRmxiRUlzVlVGRGRFSXpRaXhOUVVGTkxGTkJRMDV2UWl4TFFVRkxlVUlzWlVGQlpXeENMRk5CUVZVc1JVRkRPVUpRTEV0QlFVdHpSQ3hMUVVGTExGVkJSMXAwUkN4TFFVRkxlVUlzWlVGQlpWUXNVVUZCVXl4RlFVTjBRbWhDTEUxQlpWUnNReXhUUVVGVGJVWXNWVUZCVlcxSExFdEJRVThzVTBGQlZYUktMRkZCUTJ4RExFbEJRVWwxU2l4TlFVRlJja29zUzBGRlVuRkRMRTFCUVZGeVF5eExRVUZMZVVJc1pVRkRZbFFzVVVGQlV5eEZRVEJDWWl4SlFVRkxMRWxCUVVsM1JpeExRWHBDVkRGSExFOUJRVTl2U1N4SFFVRkhMRTFCUVU4c1YwRkhaaXhIUVVaQmRFb3NUVUZCVFN4bFFVVkdlVVFzVFVGQlRXUXNWVUZCV1dNc1RVRkJUVGRDTEUxQlFVOHNRMEZEYWtNc1NVRkJTWGxDTEUxQlFWRkpMRTFCUVUxa0xGRkJRVkZsTEUxQlEzUkNUQ3hQUVVGVFFTeE5RVUZOTTBRc1VVRkJVU3RMTEUxQlFVMDVSeXhMUVVGTFRpeFBRVWQ0UTI5SUxFMUJRVTA1Unl4TFFVRkxMRkZCUldKNlF5eFBRVUZQYjBrc1IwRkJSeXhQUVVGUkxGTkJRVlZxUnl4UlFVTXhRbkpFTEUxQlFVMHNaMEpCUTBaNVJDeE5RVUZOWkN4VlFVRlRWU3hOUVVGUlNTeE5RVUZOWkN4UlFVRlJOa0lzVFVGQlRXNUNMRkZCUlRORFNTeE5RVUZOY0VNc1dVRkJZeXhOUVVGRFowTXNVMEZCZVVSSkxFMUJRVTF3UXl4WlFVRm5RbWRETEU5QlFWVkJMRTFCUVUwelJDeFZRVVU1Unl0TExFMUJRVTA1Unl4TFFVRkxUaXhUUVVkdVFtcENMRkZCUVZNc1JVRkRWR3hDTEU5QlFVOXpTU3haUVV0SGRFa3NXVUZEU1N0RExFbEJRVm8zUXl4TFFVRkxkMGNzU1VGQmVVTXNiVUpCUVdReFJ5eFBRVUZQTUVjc1MwRkRla040Unl4TFFVRkxkMGNzUjBGQlN5eFRRVUZ2UWpoRExGRkJRelZDTEU5QlFVOHNWMEZEVEN4UFFVRlBlRW9zVDBGQlQzZEtMRkZCUVZGS0xFMUJRVTF3U2l4UFFVRlJjVW9zV1VGR09VSXNRMEZKVWpORExFbEJTMDRzU1VGQlN5eEpRVUZKTlVJc1JVRkJTU3hGUVVGSFFTeEZRVUZKYUVZc1lVRkJZWFJDTEU5QlFWRnpSeXhKUVVOMlF6bEZMRTlCUVU5dlNTeEhRVUZIZEVrc1lVRkJZV2RHTEVkQlFVazFSU3hMUVVGTGMwUXNTMEZCUzJsSExFdEJRVXQyU2l4TFFVRk5TaXhoUVVGaFowWXNTMEZqTDBRc1QwRlVRVFZGTEV0QlFVczBRaXhOUVVGUkxGTkJRVlZuUkN4SFFVTnlRbWhITEUxQlFVMHNaMEpCUVdsQ1owY3NSMEZGYmtJMVJDeFRRVU5HUVN4UlFVRlRMRVZCUTFSc1FpeFBRVUZQZDBZc1YwRkpTblJHTEUxQlIyRXNiVUpCUVZoM1NpeFRRVU5VTVV3c1UwRkJVMjFHTEZWQlFWVjFSeXhQUVVGUFF5eGxRVUZwUWl4WFFVdDZReXhaUVVvd1F6VkhMRWxCUVhSRE4wUXNiME5CUTBaQkxHdERRVUZ2UTJoQ0xGRkJRVkVzYzBOQlIzWkRaMElzYTBOQlFXdERaMElzVVVGSk4wTXJReXhQUVVGUFV5eGxRVUZsTVVZc1UwRkJVMjFHTEZWQlFWY3NkMEpCUVhsQ0xFTkJTV3BGVVN4WlFVRlpMRVZCUTFwRExFbEJRVXNzVjBGRFNDeFBRVUZQTVVRc1MwRkJTM2xDTEdWQlFXVjBRaXhwUWtGSEwwSTBReXhQUVVGUFV5eGxRVUZsTVVZc1UwRkJVMjFHTEZWQlFWY3NhVUpCUVd0Q0xFTkJTVEZFVVN4WlFVRlpMRVZCUTFwRExFbEJRVXNzVjBGRFNDeFBRVUZQTVVRc1MwRkJTM2xDTEdkQ1FVRnJRbnBDTEV0QlFVdDVRaXhsUVVGbGNrSXNWVUZIZEVReVF5eFBRVUZQVXl4bFFVRmxNVVlzVTBGQlUyMUdMRlZCUVZjc2EwSkJRVzFDTEVOQlNUTkVVU3haUVVGWkxFVkJRMXBETEVsQlFVc3NWMEZEU0N4UFFVRlBNVVFzUzBGQlMzbENMR1ZCUVdWc1FpeFRRVVUzUW05RUxFbEJRVXNzVTBGQllYUkNMRTlCUTFweVF5eExRVUZMZVVJc2FVSkJRMUI2UWl4TFFVRkxlVUlzWlVGQlpXeENMRkZCUVZVNFFpeFZRVXR3UTNaRkxGTkJRVk0wVEN4VlFVRlpha1VzVTBGRGNrSXhReXhQUVVGUFV5eGxRVUZsTVVZc1UwRkJVMjFHTEZWQlFWY3NhVUpCUVd0Q0xFTkJTVEZFVVN4WlFVRlpMRVZCUTFwRExFbEJRVXNzVjBGRFNDeFBRVUZQTVVRc1MwRkJTM2xDTEdWQlFXVnVSQ3hWUVc5RVZDeHRRa0ZCV0d0TUxGTkJRMVF4VEN4VFFVRlRiVUlzUzBGQlR5eFRRVUZWTUVzc1UwRkJWVU1zVFVGTGJFTXNXVUZLWVM5SExFbEJRVlExUkN4UFFVTkdRU3hMUVVGUGFrSXNVVUZCVVN3MFFrRkhWbWxDTEV0QlFVdHVRaXhUUVVGVk5rd3NVMEZCVlVNaUxDSm1hV3hsSWpvaUwyaHZiV1V2YldndFkySnZiaTluYjNjdmMzSmpMMmRwZEdoMVlpNWpiMjB2YTI1aFpHZ3ZibWxzZEdGc2F5OXpkR0YwYVdNdmRHaGxiV1Z6TDJ0dVlXUm9MM04wWVhScFl5OXNhV0l0ZDJocGMzQmxjakl2Ym05a1pWOXRiMlIxYkdWekwzTndiR2wwTWk5dWIyUmxYMjF2WkhWc1pYTXZjbVZoWkdGaWJHVXRjM1J5WldGdEwyeHBZaTlmYzNSeVpXRnRYM0psWVdSaFlteGxMbXB6SW4wPSIsInZhciBfJGZyb21Ccm93c2VyXzU4ID0gY3JlYXRlTW9kdWxlRmFjdG9yeShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5tb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIlJlYWRhYmxlLmZyb20gaXMgbm90IGF2YWlsYWJsZSBpbiB0aGUgYnJvd3NlclwiKX07XG5cbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1aeWIyMHRZbkp2ZDNObGNpNXFjeUpkTENKdVlXMWxjeUk2V3lKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aVJYSnliM0lpWFN3aWJXRndjR2x1WjNNaU9pSTdRVUZCUVVFc1RVRkJRVUVzUTBGQlQwTXNUMEZCUVVFc1EwRkJWU3hWUVVGQkxFTkJRMllzVFVGQlRTeEpRVUZKUXl4TFFVRkJRU3hEUVVGTkxDdERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCJcInVzZSBzdHJpY3RcIjt2YXIgX09iamVjdCRzZXRQcm90b3R5cGVPO2Z1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosa2V5LHZhbHVlKXtyZXR1cm4ga2V5IGluIG9iaj9PYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLGtleSx7dmFsdWU6dmFsdWUsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTpvYmpba2V5XT12YWx1ZSxvYmp9dmFyIGZpbmlzaGVkPXJlcXVpcmUoXCIuL2VuZC1vZi1zdHJlYW1cIiksa0xhc3RSZXNvbHZlPVN5bWJvbChcImxhc3RSZXNvbHZlXCIpLGtMYXN0UmVqZWN0PVN5bWJvbChcImxhc3RSZWplY3RcIiksa0Vycm9yPVN5bWJvbChcImVycm9yXCIpLGtFbmRlZD1TeW1ib2woXCJlbmRlZFwiKSxrTGFzdFByb21pc2U9U3ltYm9sKFwibGFzdFByb21pc2VcIiksa0hhbmRsZVByb21pc2U9U3ltYm9sKFwiaGFuZGxlUHJvbWlzZVwiKSxrU3RyZWFtPVN5bWJvbChcInN0cmVhbVwiKTtmdW5jdGlvbiBjcmVhdGVJdGVyUmVzdWx0KHZhbHVlLGRvbmUpe3JldHVybnt2YWx1ZTp2YWx1ZSxkb25lOmRvbmV9fWZ1bmN0aW9uIHJlYWRBbmRSZXNvbHZlKGl0ZXIpe3ZhciByZXNvbHZlPWl0ZXJba0xhc3RSZXNvbHZlXTtpZihudWxsIT09cmVzb2x2ZSl7dmFyIGRhdGE9aXRlcltrU3RyZWFtXS5yZWFkKCk7bnVsbCE9PWRhdGEmJihpdGVyW2tMYXN0UHJvbWlzZV09bnVsbCxpdGVyW2tMYXN0UmVzb2x2ZV09bnVsbCxpdGVyW2tMYXN0UmVqZWN0XT1udWxsLHJlc29sdmUoY3JlYXRlSXRlclJlc3VsdChkYXRhLCExKSkpfX12YXIgQXN5bmNJdGVyYXRvclByb3RvdHlwZT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoZnVuY3Rpb24oKXt9KSxSZWFkYWJsZVN0cmVhbUFzeW5jSXRlcmF0b3JQcm90b3R5cGU9T2JqZWN0LnNldFByb3RvdHlwZU9mKChfZGVmaW5lUHJvcGVydHkoX09iamVjdCRzZXRQcm90b3R5cGVPPXtnZXQgc3RyZWFtKCl7cmV0dXJuIHRoaXNba1N0cmVhbV19LG5leHQ6ZnVuY3Rpb24oKXt2YXIgX3RoaXM9dGhpcyxlcnJvcj10aGlzW2tFcnJvcl07aWYobnVsbCE9PWVycm9yKXJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7aWYodGhpc1trRW5kZWRdKXJldHVybiBQcm9taXNlLnJlc29sdmUoY3JlYXRlSXRlclJlc3VsdCh2b2lkIDAsITApKTtpZih0aGlzW2tTdHJlYW1dLmRlc3Ryb3llZClyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe3Byb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24oKXtfdGhpc1trRXJyb3JdP3JlamVjdChfdGhpc1trRXJyb3JdKTpyZXNvbHZlKGNyZWF0ZUl0ZXJSZXN1bHQodm9pZCAwLCEwKSl9KX0pO3ZhciBwcm9taXNlLGxhc3RQcm9taXNlPXRoaXNba0xhc3RQcm9taXNlXTtpZihsYXN0UHJvbWlzZSlwcm9taXNlPW5ldyBQcm9taXNlKGZ1bmN0aW9uKGxhc3RQcm9taXNlLGl0ZXIpe3JldHVybiBmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7bGFzdFByb21pc2UudGhlbihmdW5jdGlvbigpe2l0ZXJba0VuZGVkXT9yZXNvbHZlKGNyZWF0ZUl0ZXJSZXN1bHQodm9pZCAwLCEwKSk6aXRlcltrSGFuZGxlUHJvbWlzZV0ocmVzb2x2ZSxyZWplY3QpfSxyZWplY3QpfX0obGFzdFByb21pc2UsdGhpcykpO2Vsc2V7dmFyIGRhdGE9dGhpc1trU3RyZWFtXS5yZWFkKCk7aWYobnVsbCE9PWRhdGEpcmV0dXJuIFByb21pc2UucmVzb2x2ZShjcmVhdGVJdGVyUmVzdWx0KGRhdGEsITEpKTtwcm9taXNlPW5ldyBQcm9taXNlKHRoaXNba0hhbmRsZVByb21pc2VdKX1yZXR1cm4gdGhpc1trTGFzdFByb21pc2VdPXByb21pc2UscHJvbWlzZX19LFN5bWJvbC5hc3luY0l0ZXJhdG9yLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxfZGVmaW5lUHJvcGVydHkoX09iamVjdCRzZXRQcm90b3R5cGVPLFwicmV0dXJuXCIsZnVuY3Rpb24oKXt2YXIgX3RoaXMyPXRoaXM7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXtfdGhpczJba1N0cmVhbV0uZGVzdHJveShudWxsLGZ1bmN0aW9uKGVycil7ZXJyP3JlamVjdChlcnIpOnJlc29sdmUoY3JlYXRlSXRlclJlc3VsdCh2b2lkIDAsITApKX0pfSl9KSxfT2JqZWN0JHNldFByb3RvdHlwZU8pLEFzeW5jSXRlcmF0b3JQcm90b3R5cGUpO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHN0cmVhbSl7dmFyIF9PYmplY3QkY3JlYXRlLGl0ZXJhdG9yPU9iamVjdC5jcmVhdGUoUmVhZGFibGVTdHJlYW1Bc3luY0l0ZXJhdG9yUHJvdG90eXBlLChfZGVmaW5lUHJvcGVydHkoX09iamVjdCRjcmVhdGU9e30sa1N0cmVhbSx7dmFsdWU6c3RyZWFtLHdyaXRhYmxlOiEwfSksX2RlZmluZVByb3BlcnR5KF9PYmplY3QkY3JlYXRlLGtMYXN0UmVzb2x2ZSx7dmFsdWU6bnVsbCx3cml0YWJsZTohMH0pLF9kZWZpbmVQcm9wZXJ0eShfT2JqZWN0JGNyZWF0ZSxrTGFzdFJlamVjdCx7dmFsdWU6bnVsbCx3cml0YWJsZTohMH0pLF9kZWZpbmVQcm9wZXJ0eShfT2JqZWN0JGNyZWF0ZSxrRXJyb3Ise3ZhbHVlOm51bGwsd3JpdGFibGU6ITB9KSxfZGVmaW5lUHJvcGVydHkoX09iamVjdCRjcmVhdGUsa0VuZGVkLHt2YWx1ZTpzdHJlYW0uX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZCx3cml0YWJsZTohMH0pLF9kZWZpbmVQcm9wZXJ0eShfT2JqZWN0JGNyZWF0ZSxrSGFuZGxlUHJvbWlzZSx7dmFsdWU6ZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe3ZhciBkYXRhPWl0ZXJhdG9yW2tTdHJlYW1dLnJlYWQoKTtkYXRhPyhpdGVyYXRvcltrTGFzdFByb21pc2VdPW51bGwsaXRlcmF0b3Jba0xhc3RSZXNvbHZlXT1udWxsLGl0ZXJhdG9yW2tMYXN0UmVqZWN0XT1udWxsLHJlc29sdmUoY3JlYXRlSXRlclJlc3VsdChkYXRhLCExKSkpOihpdGVyYXRvcltrTGFzdFJlc29sdmVdPXJlc29sdmUsaXRlcmF0b3Jba0xhc3RSZWplY3RdPXJlamVjdCl9LHdyaXRhYmxlOiEwfSksX09iamVjdCRjcmVhdGUpKTtyZXR1cm4gaXRlcmF0b3Jba0xhc3RQcm9taXNlXT1udWxsLGZpbmlzaGVkKHN0cmVhbSxmdW5jdGlvbihlcnIpe2lmKGVyciYmXCJFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRVwiIT09ZXJyLmNvZGUpe3ZhciByZWplY3Q9aXRlcmF0b3Jba0xhc3RSZWplY3RdO3JldHVybiBudWxsIT09cmVqZWN0JiYoaXRlcmF0b3Jba0xhc3RQcm9taXNlXT1udWxsLGl0ZXJhdG9yW2tMYXN0UmVzb2x2ZV09bnVsbCxpdGVyYXRvcltrTGFzdFJlamVjdF09bnVsbCxyZWplY3QoZXJyKSksdm9pZChpdGVyYXRvcltrRXJyb3JdPWVycil9dmFyIHJlc29sdmU9aXRlcmF0b3Jba0xhc3RSZXNvbHZlXTtudWxsIT09cmVzb2x2ZSYmKGl0ZXJhdG9yW2tMYXN0UHJvbWlzZV09bnVsbCxpdGVyYXRvcltrTGFzdFJlc29sdmVdPW51bGwsaXRlcmF0b3Jba0xhc3RSZWplY3RdPW51bGwscmVzb2x2ZShjcmVhdGVJdGVyUmVzdWx0KHZvaWQgMCwhMCkpKSxpdGVyYXRvcltrRW5kZWRdPSEwfSksc3RyZWFtLm9uKFwicmVhZGFibGVcIixmdW5jdGlvbihpdGVyKXtwcm9jZXNzLm5leHRUaWNrKHJlYWRBbmRSZXNvbHZlLGl0ZXIpfS5iaW5kKG51bGwsaXRlcmF0b3IpKSxpdGVyYXRvcn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUZ6ZVc1algybDBaWEpoZEc5eUxtcHpJbDBzSW01aGJXVnpJanBiSWw5UFltcGxZM1FrYzJWMFVISnZkRzkwZVhCbFR5SXNJbDlrWldacGJtVlFjbTl3WlhKMGVTSXNJbTlpYWlJc0ltdGxlU0lzSW5aaGJIVmxJaXdpVDJKcVpXTjBJaXdpWkdWbWFXNWxVSEp2Y0dWeWRIa2lMQ0psYm5WdFpYSmhZbXhsSWl3aVkyOXVabWxuZFhKaFlteGxJaXdpZDNKcGRHRmliR1VpTENKbWFXNXBjMmhsWkNJc0luSmxjWFZwY21VaUxDSnJUR0Z6ZEZKbGMyOXNkbVVpTENKVGVXMWliMndpTENKclRHRnpkRkpsYW1WamRDSXNJbXRGY25KdmNpSXNJbXRGYm1SbFpDSXNJbXRNWVhOMFVISnZiV2x6WlNJc0ltdElZVzVrYkdWUWNtOXRhWE5sSWl3aWExTjBjbVZoYlNJc0ltTnlaV0YwWlVsMFpYSlNaWE4xYkhRaUxDSmtiMjVsSWl3aWNtVmhaRUZ1WkZKbGMyOXNkbVVpTENKcGRHVnlJaXdpY21WemIyeDJaU0lzSW1SaGRHRWlMQ0p5WldGa0lpd2lRWE41Ym1OSmRHVnlZWFJ2Y2xCeWIzUnZkSGx3WlNJc0ltZGxkRkJ5YjNSdmRIbHdaVTltSWl3aVVtVmhaR0ZpYkdWVGRISmxZVzFCYzNsdVkwbDBaWEpoZEc5eVVISnZkRzkwZVhCbElpd2ljMlYwVUhKdmRHOTBlWEJsVDJZaUxDSnpkSEpsWVcwaUxDSjBhR2x6SWl3aWJtVjRkQ0lzSWw5MGFHbHpJaXdpWlhKeWIzSWlMQ0pRY205dGFYTmxJaXdpY21WcVpXTjBJaXdpZFc1a1pXWnBibVZrSWl3aVpHVnpkSEp2ZVdWa0lpd2ljSEp2WTJWemN5SXNJbTVsZUhSVWFXTnJJaXdpY0hKdmJXbHpaU0lzSW14aGMzUlFjbTl0YVhObElpd2lkR2hsYmlJc0luZHlZWEJHYjNKT1pYaDBJaXdpWVhONWJtTkpkR1Z5WVhSdmNpSXNJbDkwYUdsek1pSXNJbVJsYzNSeWIza2lMQ0psY25JaUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2lYMDlpYW1WamRDUmpjbVZoZEdVaUxDSnBkR1Z5WVhSdmNpSXNJbU55WldGMFpTSXNJbDl5WldGa1lXSnNaVk4wWVhSbElpd2laVzVrUlcxcGRIUmxaQ0lzSW1OdlpHVWlMQ0p2YmlJc0ltSnBibVFpWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEdGQlJVRXNTVUZCU1VFc2MwSkJSVW9zVTBGQlUwTXNaMEpCUVdkQ1F5eEpRVUZMUXl4SlFVRkxReXhQUVVGcFN5eFBRVUZ3U2tRc1QwRkJUMFFzU1VGQlQwY3NUMEZCVDBNc1pVRkJaVW9zU1VGQlMwTXNTVUZCU3l4RFFVRkZReXhOUVVGUFFTeE5RVUZQUnl4WlFVRlpMRVZCUVUxRExHTkJRV01zUlVGQlRVTXNWVUZCVlN4SlFVRnJRbEFzU1VGQlNVTXNTMEZCVDBNc1RVRkJaMEpHTEVsQlJUTk5MRWxCUVVsUkxGTkJRVmRETEZGQlFWRXNiVUpCUlc1Q1F5eGhRVUZsUXl4UFFVRlBMR1ZCUTNSQ1F5eFpRVUZqUkN4UFFVRlBMR05CUTNKQ1JTeFBRVUZUUml4UFFVRlBMRk5CUTJoQ1J5eFBRVUZUU0N4UFFVRlBMRk5CUTJoQ1NTeGhRVUZsU2l4UFFVRlBMR1ZCUTNSQ1N5eGxRVUZwUWt3c1QwRkJUeXhwUWtGRGVFSk5MRkZCUVZWT0xFOUJRVThzVlVGRmNrSXNVMEZCVTA4c2FVSkJRV2xDYUVJc1RVRkJUMmxDTEUxQlF5OUNMRTFCUVU4c1EwRkRUR3BDTEUxQlFVOUJMRTFCUTFCcFFpeExRVUZOUVN4TlFVbFdMRk5CUVZORExHVkJRV1ZETEUxQlEzUkNMRWxCUVVsRExGRkJRVlZFTEV0QlFVdFlMR05CUlc1Q0xFZEJRV2RDTEU5QlFWcFpMRkZCUVd0Q0xFTkJRM0JDTEVsQlFVbERMRXRCUVU5R0xFdEJRVXRLTEZOQlFWTlBMRTlCU1Zvc1QwRkJWRVFzVDBGRFJrWXNTMEZCUzA0c1kwRkJaMElzUzBGRGNrSk5MRXRCUVV0WUxHTkJRV2RDTEV0QlEzSkNWeXhMUVVGTFZDeGhRVUZsTEV0QlEzQkNWU3hSUVVGUlNpeHBRa0ZCYVVKTExFMUJRVTBzVFVGM1FuSkRMRWxCUVVsRkxIVkNRVUY1UW5SQ0xFOUJRVTkxUWl4bFFVRmxMR05CUXk5RFF5eHhRMEZCZFVONFFpeFBRVUZQZVVJc1owSkJORVF2UXpkQ0xHZENRVFZFSzBSRUxITkNRVUYzUWl4RFFVTjRSaXRDTEdGQlEwVXNUMEZCVDBNc1MwRkJTMklzVlVGSFpHTXNTMEZCVFN4WFFVTktMRWxCUVVsRExFMUJRVkZHTEV0QlNWSkhMRTFCUVZGSUxFdEJRVXRxUWl4UlFVVnFRaXhIUVVGakxFOUJRVlp2UWl4TlFVTkdMRTlCUVU5RExGRkJRVkZETEU5QlFVOUdMRTlCUjNoQ0xFZEJRVWxJTEV0QlFVdG9RaXhSUVVOUUxFOUJRVTl2UWl4UlFVRlJXaXhSUVVGUlNpeHpRa0ZCYVVKclFpeEhRVUZYTEVsQlIzSkVMRWRCUVVsT0xFdEJRVXRpTEZOQlFWTnZRaXhWUVV0b1FpeFBRVUZQTEVsQlFVbElMRkZCUVZFc1UwRkJWVm9zVVVGQlUyRXNVVUZEY0VOSExGRkJRVkZETEZOQlFWTXNWMEZEV0ZBc1RVRkJUVzVDTEZGQlExSnpRaXhQUVVGUFNDeE5RVUZOYmtJc1UwRkZZbE1zVVVGQlVVb3NjMEpCUVdsQ2EwSXNSMEZCVnl4UlFWVTFReXhKUVVOSlNTeFJRVVJCUXl4WlFVRmpXQ3hMUVVGTFppeGpRVWQyUWl4SFFVRkpNRUlzV1VGRFJrUXNVVUZCVlN4SlFVRkpUaXhSUVRGRWNFSXNVMEZCY1VKUExGbEJRV0Z3UWl4TlFVTm9ReXhQUVVGUExGTkJRVlZETEZGQlFWTmhMRkZCUTNoQ1RTeFpRVUZaUXl4TFFVRkxMRmRCUTFoeVFpeExRVUZMVUN4UlFVTlFVU3hSUVVGUlNpeHpRa0ZCYVVKclFpeEhRVUZYTEVsQlNYUkRaaXhMUVVGTFRDeG5Ra0ZCWjBKTkxGRkJRVk5oTEZOQlF6ZENRU3hUUVdsRWNVSlJMRU5CUVZsR0xGbEJRV0ZZTEZkQlF6RkRMRU5CUjB3c1NVRkJTVkFzUzBGQlQwOHNTMEZCUzJJc1UwRkJVMDhzVDBGRmVrSXNSMEZCWVN4UFFVRlVSQ3hMUVVOR0xFOUJRVTlYTEZGQlFWRmFMRkZCUVZGS0xHbENRVUZwUWtzc1RVRkJUU3hKUVVkb1JHbENMRkZCUVZVc1NVRkJTVTRzVVVGQlVVb3NTMEZCUzJRc2FVSkJTVGRDTEU5QlJFRmpMRXRCUVV0bUxHTkJRV2RDZVVJc1VVRkRaRUVzVlVGRkswSTNRaXhQUVVGUGFVTXNZMEZCWlN4WFFVTTVSQ3hQUVVGUFpDeFBRVU5NTDBJc1owSkJRV2RDUkN4elFrRkJkVUlzVTBGQlZTeFhRVU51UkN4SlFVRkpLME1zVDBGQlUyWXNTMEZMWWl4UFFVRlBMRWxCUVVsSkxGRkJRVkVzVTBGQlZWb3NVVUZCVTJFc1VVRkRjRU5WTEU5QlFVODFRaXhUUVVGVE5rSXNVVUZCVVN4TFFVRk5MRk5CUVZWRExFdEJRMnhEUVN4SlFVTkdXaXhQUVVGUFdTeExRVWxVZWtJc1VVRkJVVW9zYzBKQlFXbENhMElzUjBGQlZ5eFZRVWQwUTNSRExIVkNRVUYzUWpKQ0xIZENRVzlGTlVKMVFpeFBRVUZQUXl4UlFXeEZhVU1zVTBGQk1rTndRaXhSUVVOcVJpeEpRVUZKY1VJc1pVRkZRVU1zVTBGQlYyaEVMRTlCUVU5cFJDeFBRVUZQZWtJc2MwTkJRVFJFTlVJc1owSkJRWEpDYlVRc1pVRkJhVUlzUjBGQmIwTnFReXhSUVVGVExFTkJRMmhKWml4TlFVRlBNa0lzVDBGRFVIUkNMRlZCUVZVc1NVRkRVbElzWjBKQlFXZENiVVFzWlVGQlowSjRReXhoUVVGakxFTkJRMmhFVWl4TlFVRlBMRXRCUTFCTExGVkJRVlVzU1VGRFVsSXNaMEpCUVdkQ2JVUXNaVUZCWjBKMFF5eFpRVUZoTEVOQlF5OURWaXhOUVVGUExFdEJRMUJMTEZWQlFWVXNTVUZEVWxJc1owSkJRV2RDYlVRc1pVRkJaMEp5UXl4UFFVRlJMRU5CUXpGRFdDeE5RVUZQTEV0QlExQkxMRlZCUVZVc1NVRkRVbElzWjBKQlFXZENiVVFzWlVGQlowSndReXhQUVVGUkxFTkJRekZEV2l4TlFVRlBNa0lzVDBGQlQzZENMR1ZCUVdWRExGZEJRemRDTDBNc1ZVRkJWU3hKUVVOU1VpeG5Ra0ZCWjBKdFJDeGxRVUZuUW14RExHVkJRV2RDTEVOQlEyeEVaQ3hOUVVGUExGTkJRV1Z2UWl4UlFVRlRZU3hSUVVNM1FpeEpRVUZKV2l4TFFVRlBORUlzVTBGQlUyeERMRk5CUVZOUExFOUJSWHBDUkN4TlFVTkdORUlzVTBGQlUzQkRMR05CUVdkQ0xFdEJRM3BDYjBNc1UwRkJVM3BETEdOQlFXZENMRXRCUTNwQ2VVTXNVMEZCVTNaRExHRkJRV1VzUzBGRGVFSlZMRkZCUVZGS0xHbENRVUZwUWtzc1RVRkJUU3hOUVVVdlFqUkNMRk5CUVZONlF5eGpRVUZuUWxrc1VVRkRla0kyUWl4VFFVRlRka01zWVVGQlpYVkNMRk5CUnpWQ05VSXNWVUZCVlN4SlFVTlNNa01zYVVKQk9FSktMRTlCTjBKQlF5eFRRVUZUY0VNc1kwRkJaMElzUzBGRGVrSlFMRk5CUVZOeFFpeFBRVUZSTEZOQlFWVnJRaXhMUVVONlFpeEhRVUZKUVN4TFFVRnZRaXdyUWtGQllrRXNTVUZCU1ZFc1MwRkJkVU1zUTBGRGNFUXNTVUZCU1hCQ0xFOUJRVk5uUWl4VFFVRlRka01zWVVGWGRFSXNUMEZTWlN4UFFVRllkVUlzVTBGRFJtZENMRk5CUVZOd1F5eGpRVUZuUWl4TFFVTjZRbTlETEZOQlFWTjZReXhqUVVGblFpeExRVU42UW5sRExGTkJRVk4yUXl4aFFVRmxMRXRCUTNoQ2RVSXNUMEZCVDFrc1YwRkhWRWtzVTBGQlUzUkRMRkZCUVZWclF5eExRVWx5UWl4SlFVRkpla0lzVVVGQlZUWkNMRk5CUVZONlF5eGpRVVZRTEU5QlFWcFpMRlZCUTBZMlFpeFRRVUZUY0VNc1kwRkJaMElzUzBGRGVrSnZReXhUUVVGVGVrTXNZMEZCWjBJc1MwRkRla0o1UXl4VFFVRlRka01zWVVGQlpTeExRVU40UWxVc1VVRkJVVW9zYzBKQlFXbENhMElzUjBGQlZ5eExRVWQwUTJVc1UwRkJVM0pETEZOQlFWVXNTVUZGY2tKbExFOUJRVTh5UWl4SFFVRkhMRmRCYkV0YUxGTkJRVzlDYmtNc1RVRkhiRUpwUWl4UlFVRlJReXhUUVVGVGJrSXNaVUZCWjBKRExFOUJLMHBCYjBNc1MwRkJTeXhMUVVGTlRpeFhRVU55UTBFaUxDSm1hV3hsSWpvaUwyaHZiV1V2YldndFkySnZiaTluYjNjdmMzSmpMMmRwZEdoMVlpNWpiMjB2YTI1aFpHZ3ZibWxzZEdGc2F5OXpkR0YwYVdNdmRHaGxiV1Z6TDJ0dVlXUm9MM04wWVhScFl5OXNhV0l0ZDJocGMzQmxjakl2Ym05a1pWOXRiMlIxYkdWekwzTndiR2wwTWk5dWIyUmxYMjF2WkhWc1pYTXZjbVZoWkdGaWJHVXRjM1J5WldGdEwyeHBZaTlwYm5SbGNtNWhiQzl6ZEhKbFlXMXpMMkZ6ZVc1algybDBaWEpoZEc5eUxtcHpJbjA9IiwidmFyIF8kZW9zXzU3ID0gY3JlYXRlTW9kdWxlRmFjdG9yeShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cInVzZSBzdHJpY3RcIjt2YXIgRVJSX1NUUkVBTV9QUkVNQVRVUkVfQ0xPU0U9XyRlcnJvcnNCcm93c2VyXzQ4LmNvZGVzLkVSUl9TVFJFQU1fUFJFTUFUVVJFX0NMT1NFO2Z1bmN0aW9uIG5vb3AoKXt9bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24gZW9zKHN0cmVhbSxvcHRzLGNhbGxiYWNrKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBvcHRzKXJldHVybiBlb3Moc3RyZWFtLG51bGwsb3B0cyk7b3B0c3x8KG9wdHM9e30pLGNhbGxiYWNrPWZ1bmN0aW9uKGNhbGxiYWNrKXt2YXIgY2FsbGVkPSExO3JldHVybiBmdW5jdGlvbigpe2lmKCFjYWxsZWQpe2NhbGxlZD0hMDtmb3IodmFyIF9sZW49YXJndW1lbnRzLmxlbmd0aCxhcmdzPW5ldyBBcnJheShfbGVuKSxfa2V5PTA7X2tleTxfbGVuO19rZXkrKylhcmdzW19rZXldPWFyZ3VtZW50c1tfa2V5XTtjYWxsYmFjay5hcHBseSh0aGlzLGFyZ3MpfX19KGNhbGxiYWNrfHxub29wKTt2YXIgcmVhZGFibGU9b3B0cy5yZWFkYWJsZXx8ITEhPT1vcHRzLnJlYWRhYmxlJiZzdHJlYW0ucmVhZGFibGUsd3JpdGFibGU9b3B0cy53cml0YWJsZXx8ITEhPT1vcHRzLndyaXRhYmxlJiZzdHJlYW0ud3JpdGFibGUsb25sZWdhY3lmaW5pc2g9ZnVuY3Rpb24oKXtzdHJlYW0ud3JpdGFibGV8fG9uZmluaXNoKCl9LHdyaXRhYmxlRW5kZWQ9c3RyZWFtLl93cml0YWJsZVN0YXRlJiZzdHJlYW0uX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQsb25maW5pc2g9ZnVuY3Rpb24oKXt3cml0YWJsZT0hMSx3cml0YWJsZUVuZGVkPSEwLHJlYWRhYmxlfHxjYWxsYmFjay5jYWxsKHN0cmVhbSl9LHJlYWRhYmxlRW5kZWQ9c3RyZWFtLl9yZWFkYWJsZVN0YXRlJiZzdHJlYW0uX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZCxvbmVuZD1mdW5jdGlvbigpe3JlYWRhYmxlPSExLHJlYWRhYmxlRW5kZWQ9ITAsd3JpdGFibGV8fGNhbGxiYWNrLmNhbGwoc3RyZWFtKX0sb25lcnJvcj1mdW5jdGlvbihlcnIpe2NhbGxiYWNrLmNhbGwoc3RyZWFtLGVycil9LG9uY2xvc2U9ZnVuY3Rpb24oKXt2YXIgZXJyO3JldHVybiByZWFkYWJsZSYmIXJlYWRhYmxlRW5kZWQ/KHN0cmVhbS5fcmVhZGFibGVTdGF0ZSYmc3RyZWFtLl9yZWFkYWJsZVN0YXRlLmVuZGVkfHwoZXJyPW5ldyBFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRSksY2FsbGJhY2suY2FsbChzdHJlYW0sZXJyKSk6d3JpdGFibGUmJiF3cml0YWJsZUVuZGVkPyhzdHJlYW0uX3dyaXRhYmxlU3RhdGUmJnN0cmVhbS5fd3JpdGFibGVTdGF0ZS5lbmRlZHx8KGVycj1uZXcgRVJSX1NUUkVBTV9QUkVNQVRVUkVfQ0xPU0UpLGNhbGxiYWNrLmNhbGwoc3RyZWFtLGVycikpOnZvaWQgMH0sb25yZXF1ZXN0PWZ1bmN0aW9uKCl7c3RyZWFtLnJlcS5vbihcImZpbmlzaFwiLG9uZmluaXNoKX07cmV0dXJuIGZ1bmN0aW9uKHN0cmVhbSl7cmV0dXJuIHN0cmVhbS5zZXRIZWFkZXImJlwiZnVuY3Rpb25cIj09dHlwZW9mIHN0cmVhbS5hYm9ydH0oc3RyZWFtKT8oc3RyZWFtLm9uKFwiY29tcGxldGVcIixvbmZpbmlzaCksc3RyZWFtLm9uKFwiYWJvcnRcIixvbmNsb3NlKSxzdHJlYW0ucmVxP29ucmVxdWVzdCgpOnN0cmVhbS5vbihcInJlcXVlc3RcIixvbnJlcXVlc3QpKTp3cml0YWJsZSYmIXN0cmVhbS5fd3JpdGFibGVTdGF0ZSYmKHN0cmVhbS5vbihcImVuZFwiLG9ubGVnYWN5ZmluaXNoKSxzdHJlYW0ub24oXCJjbG9zZVwiLG9ubGVnYWN5ZmluaXNoKSksc3RyZWFtLm9uKFwiZW5kXCIsb25lbmQpLHN0cmVhbS5vbihcImZpbmlzaFwiLG9uZmluaXNoKSwhMSE9PW9wdHMuZXJyb3ImJnN0cmVhbS5vbihcImVycm9yXCIsb25lcnJvciksc3RyZWFtLm9uKFwiY2xvc2VcIixvbmNsb3NlKSxmdW5jdGlvbigpe3N0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImNvbXBsZXRlXCIsb25maW5pc2gpLHN0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImFib3J0XCIsb25jbG9zZSksc3RyZWFtLnJlbW92ZUxpc3RlbmVyKFwicmVxdWVzdFwiLG9ucmVxdWVzdCksc3RyZWFtLnJlcSYmc3RyZWFtLnJlcS5yZW1vdmVMaXN0ZW5lcihcImZpbmlzaFwiLG9uZmluaXNoKSxzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoXCJlbmRcIixvbmxlZ2FjeWZpbmlzaCksc3RyZWFtLnJlbW92ZUxpc3RlbmVyKFwiY2xvc2VcIixvbmxlZ2FjeWZpbmlzaCksc3RyZWFtLnJlbW92ZUxpc3RlbmVyKFwiZmluaXNoXCIsb25maW5pc2gpLHN0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImVuZFwiLG9uZW5kKSxzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLG9uZXJyb3IpLHN0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImNsb3NlXCIsb25jbG9zZSl9fTtcblxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbVZ1WkMxdlppMXpkSEpsWVcwdWFuTWlYU3dpYm1GdFpYTWlPbHNpUlZKU1gxTlVVa1ZCVFY5UVVrVk5RVlJWVWtWZlEweFBVMFVpTENKeVpYRjFhWEpsSWl3aVkyOWtaWE1pTENKdWIyOXdJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW1WdmN5SXNJbk4wY21WaGJTSXNJbTl3ZEhNaUxDSmpZV3hzWW1GamF5SXNJbU5oYkd4bFpDSXNJbDlzWlc0aUxDSmhjbWQxYldWdWRITWlMQ0pzWlc1bmRHZ2lMQ0poY21keklpd2lRWEp5WVhraUxDSmZhMlY1SWl3aVlYQndiSGtpTENKMGFHbHpJaXdpYjI1alpTSXNJbkpsWVdSaFlteGxJaXdpZDNKcGRHRmliR1VpTENKdmJteGxaMkZqZVdacGJtbHphQ0lzSW05dVptbHVhWE5vSWl3aWQzSnBkR0ZpYkdWRmJtUmxaQ0lzSWw5M2NtbDBZV0pzWlZOMFlYUmxJaXdpWm1sdWFYTm9aV1FpTENKallXeHNJaXdpY21WaFpHRmliR1ZGYm1SbFpDSXNJbDl5WldGa1lXSnNaVk4wWVhSbElpd2laVzVrUlcxcGRIUmxaQ0lzSW05dVpXNWtJaXdpYjI1bGNuSnZjaUlzSW1WeWNpSXNJbTl1WTJ4dmMyVWlMQ0psYm1SbFpDSXNJbTl1Y21WeGRXVnpkQ0lzSW5KbGNTSXNJbTl1SWl3aWMyVjBTR1ZoWkdWeUlpd2lZV0p2Y25RaUxDSnBjMUpsY1hWbGMzUWlMQ0psY25KdmNpSXNJbkpsYlc5MlpVeHBjM1JsYm1WeUlsMHNJbTFoY0hCcGJtZHpJam9pTzBGQlJVRXNXVUZCUVN4RFFVVkJMRWxCUVVsQkxEQkNRVUZCUVN4RFFVRTJRa01zYTBKQlFWRXNRMEZCYlVKRExFdEJRVUZCTEVOQlFVMUdMREJDUVVGQlFTeERRV2RDYkVVc1UwRkJVMGNzU1VGQlFVRXNSVUZCUVVFc1JVRnRSbFJETEUxQlFVRkJMRU5CUVU5RExFOUJRVUZCTEVOQk4wVlFMRk5CUVZORExFZEJRVUZCTEVOQlFVbERMRTFCUVVGQkxFTkJRVkZETEVsQlFVRkJMRU5CUVUxRExGRkJRVUZCTEVOQlFVRkJMRU5CUTNwQ0xFZEJRVzlDTEZWQlFVRXNSVUZCUVN4UFFVRlVSQ3hKUVVGQlFTeERRVUZ4UWl4UFFVRlBSaXhIUVVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGUkxFbEJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJRVUVzUTBGRGNFUkJMRWxCUVVGQkxFZEJRVTFCTEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGQkxFTkJRMnhDUXl4UlFVRkJRU3hEUVhaQ1JpeFRRVUZqUVN4UlFVRkJRU3hEUVVGQlFTeERRVU5hTEVsQlFVbERMRTFCUVVGQkxFTkJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVTmlMRTlCUVU4c1ZVRkJRU3hEUVVOTUxFZEJRVUVzUTBGQlNVRXNUVUZCUVVFc1EwRkJTaXhEUVVOQlFTeE5RVUZCUVN4RFFVRkJRU3hEUVVGVExFTkJRVUVzUTBGRlZDeEpRVUZMTEVsQlFVbERMRWxCUVVGQkxFTkJRVTlETEZOQlFVRkJMRU5CUVZWRExFMUJRVUZCTEVOQlFWRkRMRWxCUVVGQkxFTkJRVThzU1VGQlNVTXNTMEZCUVVFc1EwRkJUVW9zU1VGQlFVRXNRMEZCUVVFc1EwRkJUMHNzU1VGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVVkQkxFbEJRVUZCTEVOQlFVOU1MRWxCUVVGQkxFTkJRVTFMTEVsQlFVRkJMRVZCUVVGQkxFTkJReTlGUml4SlFVRkJRU3hEUVVGTFJTeEpRVUZCUVN4RFFVRkJRU3hEUVVGUlNpeFRRVUZCUVN4RFFVRlZTU3hKUVVGQlFTeERRVUZCUVN4RFFVZDZRbEFzVVVGQlFVRXNRMEZCVTFFc1MwRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJUVW9zU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZoV2tzc1EwRkJTMVlzVVVGQlFVRXNSVUZCV1U0c1NVRkJRVUVzUTBGQlFVRXNRMEZETlVJc1NVRkJTV2xDTEZGQlFVRkJMRU5CUVZkYUxFbEJRVUZCTEVOQlFVdFpMRkZCUVVGQkxFVkJRVUZCTEVOQlFUaENMRU5CUVVFc1IwRkJiRUphTEVsQlFVRkJMRU5CUVV0WkxGRkJRVUZCTEVWQlFYTkNZaXhOUVVGQlFTeERRVUZQWVN4UlFVRkJRU3hEUVVNNVJFTXNVVUZCUVVFc1EwRkJWMklzU1VGQlFVRXNRMEZCUzJFc1VVRkJRVUVzUlVGQlFVRXNRMEZCT0VJc1EwRkJRU3hIUVVGc1FtSXNTVUZCUVVFc1EwRkJTMkVzVVVGQlFVRXNSVUZCYzBKa0xFMUJRVUZCTEVOQlFVOWpMRkZCUVVGQkxFTkJSVGxFUXl4alFVRkJRU3hEUVVGcFFpeFZRVUZCTEVOQlEyUm1MRTFCUVVGQkxFTkJRVTlqTEZGQlFVRkJMRVZCUVZWRkxGRkJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJSM0JDUXl4aFFVRkJRU3hEUVVGblFtcENMRTFCUVVGQkxFTkJRVTlyUWl4alFVRkJRU3hGUVVGclFteENMRTFCUVVGQkxFTkJRVTlyUWl4alFVRkJRU3hEUVVGbFF5eFJRVUZCUVN4RFFVVXZSRWdzVVVGQlFVRXNRMEZCVnl4VlFVRkJMRU5CUTJKR0xGRkJRVUZCTEVOQlFVRkJMRU5CUVZjc1EwRkJRU3hEUVVOWVJ5eGhRVUZCUVN4RFFVRkJRU3hEUVVGblFpeERRVUZCTEVOQlExaEtMRkZCUVVGQkxFVkJRVlZZTEZGQlFVRkJMRU5CUVZOclFpeEpRVUZCUVN4RFFVRkxjRUlzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSE0wSnhRaXhoUVVGQlFTeERRVUZuUW5KQ0xFMUJRVUZCTEVOQlFVOXpRaXhqUVVGQlFTeEZRVUZyUW5SQ0xFMUJRVUZCTEVOQlFVOXpRaXhqUVVGQlFTeERRVUZsUXl4VlFVRkJRU3hEUVVVdlJFTXNTMEZCUVVFc1EwRkJVU3hWUVVGQkxFTkJRMVpZTEZGQlFVRkJMRU5CUVVGQkxFTkJRVmNzUTBGQlFTeERRVU5ZVVN4aFFVRkJRU3hEUVVGQlFTeERRVUZuUWl4RFFVRkJMRU5CUTFoUUxGRkJRVUZCTEVWQlFWVmFMRkZCUVVGQkxFTkJRVk5yUWl4SlFVRkJRU3hEUVVGTGNFSXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZITTBKNVFpeFBRVUZCUVN4RFFVRlZMRk5CUVdsQ1F5eEhRVUZCUVN4RFFVRkJRU3hEUVVNM1FuaENMRkZCUVVGQkxFTkJRVk5yUWl4SlFVRkJRU3hEUVVGTGNFSXNUVUZCUVVFc1EwRkJVVEJDTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzQkNReXhQUVVGQlFTeERRVUZWTEZWQlFVRXNRMEZEV2l4SlFVRkpSQ3hIUVVGQlFTeERRVVZLTEU5QlFVbGlMRkZCUVVGQkxFVkJRVUZCTEVOQlFXRlJMR0ZCUVVGQkxFVkJRMVp5UWl4TlFVRkJRU3hEUVVGUGMwSXNZMEZCUVVFc1JVRkJiVUowUWl4TlFVRkJRU3hEUVVGUGMwSXNZMEZCUVVFc1EwRkJaVTBzUzBGQlFVRXNSMEZCVDBZc1IwRkJRVUVzUTBGQlRTeEpRVUZKYWtNc01FSkJRVUZCTEVOQlFVRkJMRU5CUXk5RVV5eFJRVUZCUVN4RFFVRlRhMElzU1VGQlFVRXNRMEZCUzNCQ0xFMUJRVUZCTEVOQlFWRXdRaXhIUVVGQlFTeERRVUZCUVN4RlFVY3pRbG9zVVVGQlFVRXNSVUZCUVVFc1EwRkJZVWNzWVVGQlFVRXNSVUZEVm1wQ0xFMUJRVUZCTEVOQlFVOXJRaXhqUVVGQlFTeEZRVUZ0UW14Q0xFMUJRVUZCTEVOQlFVOXJRaXhqUVVGQlFTeERRVUZsVlN4TFFVRkJRU3hIUVVGUFJpeEhRVUZCUVN4RFFVRk5MRWxCUVVscVF5d3dRa0ZCUVVFc1EwRkJRVUVzUTBGREwwUlRMRkZCUVVGQkxFTkJRVk5yUWl4SlFVRkJRU3hEUVVGTGNFSXNUVUZCUVVFc1EwRkJVVEJDTEVkQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEV0QlJpOUNMRU5CUVVFc1EwRkJRU3hEUVUxRlJ5eFRRVUZCUVN4RFFVRlpMRlZCUVVFc1EwRkRaRGRDTEUxQlFVRkJMRU5CUVU4NFFpeEhRVUZCUVN4RFFVRkpReXhGUVVGQlFTeERRVUZITEZGQlFVRXNRMEZCVldZc1VVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRnBRakZDTEU5QmJrVkdMRk5CUVcxQ2FFSXNUVUZCUVVFc1EwRkJRVUVzUTBGRGFrSXNUMEZCVDBFc1RVRkJRVUVzUTBGQlQyZERMRk5CUVVGQkxFVkJRWEZETEZWQlFVRXNSVUZCUVN4UFFVRnFRbWhETEUxQlFVRkJMRU5CUVU5cFF5eExRVUZCUVN4RFFXOUVja05ETEVOQlFWVnNReXhOUVVGQlFTeERRVUZCUVN4RlFVTmFRU3hOUVVGQlFTeERRVUZQSzBJc1JVRkJRVUVzUTBGQlJ5eFZRVUZCTEVOQlFWbG1MRkZCUVVGQkxFTkJRVUZCTEVOQlEzUkNhRUlzVFVGQlFVRXNRMEZCVHl0Q0xFVkJRVUZCTEVOQlFVY3NUMEZCUVN4RFFVRlRTaXhQUVVGQlFTeERRVUZCUVN4RFFVTm1NMElzVFVGQlFVRXNRMEZCVHpoQ0xFZEJRVUZCTEVOQlFVdEVMRk5CUVVGQkxFVkJRVUZCTEVOQlFXbENOMElzVFVGQlFVRXNRMEZCVHl0Q0xFVkJRVUZCTEVOQlFVY3NVMEZCUVN4RFFVRlhSaXhUUVVGQlFTeERRVUZCUVN4RlFVTTNRMllzVVVGQlFVRXNSVUZCUVVFc1EwRkJZV1FzVFVGQlFVRXNRMEZCVDJ0Q0xHTkJRVUZCTEVkQlJUZENiRUlzVFVGQlFVRXNRMEZCVHl0Q0xFVkJRVUZCTEVOQlFVY3NTMEZCUVN4RFFVRlBhRUlzWTBGQlFVRXNRMEZCUVVFc1EwRkRha0ptTEUxQlFVRkJMRU5CUVU4clFpeEZRVUZCUVN4RFFVRkhMRTlCUVVFc1EwRkJVMmhDTEdOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzSkNaaXhOUVVGQlFTeERRVUZQSzBJc1JVRkJRVUVzUTBGQlJ5eExRVUZCTEVOQlFVOVFMRXRCUVVGQkxFTkJRVUZCTEVOQlEycENlRUlzVFVGQlFVRXNRMEZCVHl0Q0xFVkJRVUZCTEVOQlFVY3NVVUZCUVN4RFFVRlZaaXhSUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVORUxFTkJRVUVzUjBGQlptWXNTVUZCUVVFc1EwRkJTMnRETEV0QlFVRkJMRVZCUVdsQ2JrTXNUVUZCUVVFc1EwRkJUeXRDTEVWQlFVRkJMRU5CUVVjc1QwRkJRU3hEUVVGVFRpeFBRVUZCUVN4RFFVRkJRU3hEUVVNM1EzcENMRTFCUVVGQkxFTkJRVThyUWl4RlFVRkJRU3hEUVVGSExFOUJRVUVzUTBGQlUwb3NUMEZCUVVFc1EwRkJRVUVzUTBGRFdpeFZRVUZCTEVOQlEwd3pRaXhOUVVGQlFTeERRVUZQYjBNc1kwRkJRVUVzUTBGQlpTeFZRVUZCTEVOQlFWbHdRaXhSUVVGQlFTeERRVUZCUVN4RFFVTnNRMmhDTEUxQlFVRkJMRU5CUVU5dlF5eGpRVUZCUVN4RFFVRmxMRTlCUVVFc1EwRkJVMVFzVDBGQlFVRXNRMEZCUVVFc1EwRkRMMEl6UWl4TlFVRkJRU3hEUVVGUGIwTXNZMEZCUVVFc1EwRkJaU3hUUVVGQkxFTkJRVmRRTEZOQlFVRkJMRU5CUVVGQkxFTkJRemRDTjBJc1RVRkJRVUVzUTBGQlR6aENMRWRCUVVGQkxFVkJRVXM1UWl4TlFVRkJRU3hEUVVGUE9FSXNSMEZCUVVFc1EwRkJTVTBzWTBGQlFVRXNRMEZCWlN4UlFVRkJMRU5CUVZWd1FpeFJRVUZCUVN4RFFVRkJRU3hEUVVOd1JHaENMRTFCUVVGQkxFTkJRVTl2UXl4alFVRkJRU3hEUVVGbExFdEJRVUVzUTBGQlQzSkNMR05CUVVGQkxFTkJRVUZCTEVOQlF6ZENaaXhOUVVGQlFTeERRVUZQYjBNc1kwRkJRVUVzUTBGQlpTeFBRVUZCTEVOQlFWTnlRaXhqUVVGQlFTeERRVUZCUVN4RFFVTXZRbVlzVFVGQlFVRXNRMEZCVDI5RExHTkJRVUZCTEVOQlFXVXNVVUZCUVN4RFFVRlZjRUlzVVVGQlFVRXNRMEZCUVVFc1EwRkRhRU5vUWl4TlFVRkJRU3hEUVVGUGIwTXNZMEZCUVVFc1EwRkJaU3hMUVVGQkxFTkJRVTlhTEV0QlFVRkJMRU5CUVVGQkxFTkJRemRDZUVJc1RVRkJRVUVzUTBGQlQyOURMR05CUVVGQkxFTkJRV1VzVDBGQlFTeERRVUZUV0N4UFFVRkJRU3hEUVVGQlFTeERRVU12UW5wQ0xFMUJRVUZCTEVOQlFVOXZReXhqUVVGQlFTeERRVUZsTEU5QlFVRXNRMEZCVTFRc1QwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJcInVzZSBzdHJpY3RcIjt2YXIgb2JqZWN0S2V5cz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24ob2JqKXt2YXIga2V5cz1bXTtmb3IodmFyIGtleSBpbiBvYmopa2V5cy5wdXNoKGtleSk7cmV0dXJuIGtleXN9O21vZHVsZS5leHBvcnRzPUR1cGxleDt2YXIgUmVhZGFibGU9cmVxdWlyZShcIi4vX3N0cmVhbV9yZWFkYWJsZVwiKSxXcml0YWJsZT1yZXF1aXJlKFwiLi9fc3RyZWFtX3dyaXRhYmxlXCIpO3JlcXVpcmUoXCJpbmhlcml0c1wiKShEdXBsZXgsUmVhZGFibGUpO2Zvcih2YXIga2V5cz1vYmplY3RLZXlzKFdyaXRhYmxlLnByb3RvdHlwZSksdj0wO3Y8a2V5cy5sZW5ndGg7disrKXt2YXIgbWV0aG9kPWtleXNbdl07RHVwbGV4LnByb3RvdHlwZVttZXRob2RdfHwoRHVwbGV4LnByb3RvdHlwZVttZXRob2RdPVdyaXRhYmxlLnByb3RvdHlwZVttZXRob2RdKX1mdW5jdGlvbiBEdXBsZXgob3B0aW9ucyl7aWYoISh0aGlzIGluc3RhbmNlb2YgRHVwbGV4KSlyZXR1cm4gbmV3IER1cGxleChvcHRpb25zKTtSZWFkYWJsZS5jYWxsKHRoaXMsb3B0aW9ucyksV3JpdGFibGUuY2FsbCh0aGlzLG9wdGlvbnMpLHRoaXMuYWxsb3dIYWxmT3Blbj0hMCxvcHRpb25zJiYoITE9PT1vcHRpb25zLnJlYWRhYmxlJiYodGhpcy5yZWFkYWJsZT0hMSksITE9PT1vcHRpb25zLndyaXRhYmxlJiYodGhpcy53cml0YWJsZT0hMSksITE9PT1vcHRpb25zLmFsbG93SGFsZk9wZW4mJih0aGlzLmFsbG93SGFsZk9wZW49ITEsdGhpcy5vbmNlKFwiZW5kXCIsb25lbmQpKSl9ZnVuY3Rpb24gb25lbmQoKXt0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkfHxwcm9jZXNzLm5leHRUaWNrKG9uRW5kTlQsdGhpcyl9ZnVuY3Rpb24gb25FbmROVChzZWxmKXtzZWxmLmVuZCgpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLFwid3JpdGFibGVIaWdoV2F0ZXJNYXJrXCIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuaGlnaFdhdGVyTWFya319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSxcIndyaXRhYmxlQnVmZmVyXCIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZ2V0QnVmZmVyKCl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsXCJ3cml0YWJsZUxlbmd0aFwiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmxlbmd0aH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSxcImRlc3Ryb3llZFwiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLl9yZWFkYWJsZVN0YXRlJiZ2b2lkIDAhPT10aGlzLl93cml0YWJsZVN0YXRlJiYodGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkKX0sc2V0OmZ1bmN0aW9uKHZhbHVlKXt2b2lkIDAhPT10aGlzLl9yZWFkYWJsZVN0YXRlJiZ2b2lkIDAhPT10aGlzLl93cml0YWJsZVN0YXRlJiYodGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ9dmFsdWUsdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ9dmFsdWUpfX0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWw5emRISmxZVzFmWkhWd2JHVjRMbXB6SWwwc0ltNWhiV1Z6SWpwYkltOWlhbVZqZEV0bGVYTWlMQ0pQWW1wbFkzUWlMQ0pyWlhseklpd2liMkpxSWl3aWEyVjVJaXdpY0hWemFDSXNJbTF2WkhWc1pTSXNJbVY0Y0c5eWRITWlMQ0pFZFhCc1pYZ2lMQ0pTWldGa1lXSnNaU0lzSW5KbGNYVnBjbVVpTENKWGNtbDBZV0pzWlNJc0luQnliM1J2ZEhsd1pTSXNJbllpTENKc1pXNW5kR2dpTENKdFpYUm9iMlFpTENKdmNIUnBiMjV6SWl3aWRHaHBjeUlzSW1OaGJHd2lMQ0poYkd4dmQwaGhiR1pQY0dWdUlpd2ljbVZoWkdGaWJHVWlMQ0ozY21sMFlXSnNaU0lzSW05dVkyVWlMQ0p2Ym1WdVpDSXNJbDkzY21sMFlXSnNaVk4wWVhSbElpd2laVzVrWldRaUxDSndjbTlqWlhOeklpd2libVY0ZEZScFkyc2lMQ0p2YmtWdVpFNVVJaXdpYzJWc1ppSXNJbVZ1WkNJc0ltUmxabWx1WlZCeWIzQmxjblI1SWl3aVpXNTFiV1Z5WVdKc1pTSXNJbWRsZENJc0ltaHBaMmhYWVhSbGNrMWhjbXNpTENKblpYUkNkV1ptWlhJaUxDSjFibVJsWm1sdVpXUWlMQ0pmY21WaFpHRmliR1ZUZEdGMFpTSXNJbVJsYzNSeWIzbGxaQ0lzSW5ObGRDSXNJblpoYkhWbElsMHNJbTFoY0hCcGJtZHpJam9pUVVGM1FrRXNZVUZIUVN4SlFVRkpRU3hYUVVGaFF5eFBRVUZQUXl4TlFVRlJMRk5CUVZWRExFdEJRM2hETEVsQlFVbEVMRXRCUVU4c1IwRkZXQ3hKUVVGTExFbEJRVWxGTEU5QlFVOUVMRWxCUTJSRUxFdEJRVXRITEV0QlFVdEVMRXRCUjFvc1QwRkJUMFlzVFVGTFZFa3NUMEZCVDBNc1VVRkJWVU1zVDBGRmFrSXNTVUZCU1VNc1UwRkJWME1zVVVGQlVTeHpRa0ZGYmtKRExGTkJRVmRFTEZGQlFWRXNjMEpCUlhaQ1FTeFJRVUZSTEZkQlFWSkJMRU5CUVc5Q1JpeFBRVUZSUXl4VlFVMHhRaXhKUVVaQkxFbEJRVWxRTEV0QlFVOUdMRmRCUVZkWExGTkJRVk5ETEZkQlJYUkNReXhGUVVGSkxFVkJRVWRCTEVWQlFVbFlMRXRCUVV0WkxFOUJRVkZFTEVsQlFVc3NRMEZEY0VNc1NVRkJTVVVzVDBGQlUySXNTMEZCUzFjc1IwRkRZa3dzVDBGQlQwa3NWVUZCVlVjc1ZVRkJVMUFzVDBGQlQwa3NWVUZCVlVjc1VVRkJWVW9zVTBGQlUwTXNWVUZCVlVjc1UwRkpha1lzVTBGQlUxQXNUMEZCVDFFc1UwRkRaQ3hMUVVGTlF5eG5Ra0ZCWjBKVUxGRkJRVk1zVDBGQlR5eEpRVUZKUVN4UFFVRlBVU3hUUVVOcVJGQXNVMEZCVTFNc1MwRkJTMFFzUzBGQlRVUXNVMEZEY0VKTUxGTkJRVk5QTEV0QlFVdEVMRXRCUVUxRUxGTkJRM0JDUXl4TFFVRkxSU3hsUVVGblFpeEZRVVZxUWtnc1YwRkRkVUlzU1VGQmNrSkJMRkZCUVZGSkxGZEJRVzlDU0N4TFFVRkxSeXhWUVVGWExFbEJRM1pDTEVsQlFYSkNTaXhSUVVGUlN5eFhRVUZ2UWtvc1MwRkJTMGtzVlVGQlZ5eEpRVVZzUWl4SlFVRXhRa3dzVVVGQlVVY3NaMEpCUTFaR0xFdEJRVXRGTEdWQlFXZENMRVZCUTNKQ1JpeExRVUZMU3l4TFFVRkxMRTFCUVU5RExGTkJhVU4yUWl4VFFVRlRRU3hSUVVWSVRpeExRVUZMVHl4bFFVRmxReXhQUVVkNFFrTXNVVUZCVVVNc1UwRkJVME1zVVVGQlUxZ3NUVUZITlVJc1UwRkJVMWNzVVVGQlVVTXNUVUZEWmtFc1MwRkJTME1zVFVGeVExQTNRaXhQUVVGUE9FSXNaVUZCWlhaQ0xFOUJRVTlKTEZWQlFWY3NkMEpCUVhsQ0xFTkJTUzlFYjBJc1dVRkJXU3hGUVVOYVF5eEpRVUZMTEZkQlEwZ3NUMEZCVDJoQ0xFdEJRVXRQTEdWQlFXVlZMR2xDUVVjdlFtcERMRTlCUVU4NFFpeGxRVUZsZGtJc1QwRkJUMGtzVlVGQlZ5eHBRa0ZCYTBJc1EwRkplRVJ2UWl4WlFVRlpMRVZCUTFwRExFbEJRVXNzVjBGRFNDeFBRVUZQYUVJc1MwRkJTMDhzWjBKQlFXdENVQ3hMUVVGTFR5eGxRVUZsVnl4bFFVZDBSR3hETEU5QlFVODRRaXhsUVVGbGRrSXNUMEZCVDBrc1ZVRkJWeXhwUWtGQmEwSXNRMEZKZUVSdlFpeFpRVUZaTEVWQlExcERMRWxCUVVzc1YwRkRTQ3hQUVVGUGFFSXNTMEZCUzA4c1pVRkJaVllzVlVGblFpOUNZaXhQUVVGUE9FSXNaVUZCWlhaQ0xFOUJRVTlKTEZWQlFWY3NXVUZCWVN4RFFVbHVSRzlDTEZsQlFWa3NSVUZEV2tNc1NVRkJTeXhYUVVOSUxGbEJRVFJDUnl4SlFVRjRRbTVDTEV0QlFVdHZRaXh4UWtGQmQwUkVMRWxCUVhoQ2JrSXNTMEZCUzA4c2FVSkJTWFpEVUN4TFFVRkxiMElzWlVGQlpVTXNWMEZCWVhKQ0xFdEJRVXRQTEdWQlFXVmpMRmxCUlRsRVF5eEpRVUZMTEZOQlFXRkRMRmxCUjFsS0xFbEJRWGhDYmtJc1MwRkJTMjlDTEhGQ1FVRjNSRVFzU1VGQmVFSnVRaXhMUVVGTFR5eHBRa0ZOT1VOUUxFdEJRVXR2UWl4bFFVRmxReXhWUVVGWlJTeE5RVU5vUTNaQ0xFdEJRVXRQTEdWQlFXVmpMRlZCUVZsRklpd2labWxzWlNJNklpOW9iMjFsTDIxb0xXTmliMjR2WjI5M0wzTnlZeTluYVhSb2RXSXVZMjl0TDJ0dVlXUm9MMjVwYkhSaGJHc3ZjM1JoZEdsakwzUm9aVzFsY3k5cmJtRmthQzl6ZEdGMGFXTXZiR2xpTFhkb2FYTndaWEl5TDI1dlpHVmZiVzlrZFd4bGN5OXpjR3hwZERJdmJtOWtaVjl0YjJSMWJHVnpMM0psWVdSaFlteGxMWE4wY21WaGJTOXNhV0l2WDNOMGNtVmhiVjlrZFhCc1pYZ3Vhbk1pZlE9PSIsIlwidXNlIHN0cmljdFwiO2Z1bmN0aW9uIENvcmtlZFJlcXVlc3Qoc3RhdGUpe3ZhciBfdGhpcz10aGlzO3RoaXMubmV4dD1udWxsLHRoaXMuZW50cnk9bnVsbCx0aGlzLmZpbmlzaD1mdW5jdGlvbigpeyFmdW5jdGlvbihjb3JrUmVxLHN0YXRlLGVycil7dmFyIGVudHJ5PWNvcmtSZXEuZW50cnk7Y29ya1JlcS5lbnRyeT1udWxsO2Zvcig7ZW50cnk7KXt2YXIgY2I9ZW50cnkuY2FsbGJhY2s7c3RhdGUucGVuZGluZ2NiLS0sY2IoZXJyKSxlbnRyeT1lbnRyeS5uZXh0fXN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZS5uZXh0PWNvcmtSZXF9KF90aGlzLHN0YXRlKX19dmFyIER1cGxleDttb2R1bGUuZXhwb3J0cz1Xcml0YWJsZSxXcml0YWJsZS5Xcml0YWJsZVN0YXRlPVdyaXRhYmxlU3RhdGU7dmFyIGludGVybmFsVXRpbD17ZGVwcmVjYXRlOnJlcXVpcmUoXCJ1dGlsLWRlcHJlY2F0ZVwiKX0sU3RyZWFtPXJlcXVpcmUoXCIuL2ludGVybmFsL3N0cmVhbXMvc3RyZWFtXCIpLEJ1ZmZlcj1yZXF1aXJlKFwiYnVmZmVyXCIpLkJ1ZmZlcixPdXJVaW50OEFycmF5PWdsb2JhbC5VaW50OEFycmF5fHxmdW5jdGlvbigpe307dmFyIHJlYWxIYXNJbnN0YW5jZSxkZXN0cm95SW1wbD1yZXF1aXJlKFwiLi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3lcIiksZ2V0SGlnaFdhdGVyTWFyaz1yZXF1aXJlKFwiLi9pbnRlcm5hbC9zdHJlYW1zL3N0YXRlXCIpLmdldEhpZ2hXYXRlck1hcmssX3JlcXVpcmUkY29kZXM9cmVxdWlyZShcIi4uL2Vycm9yc1wiKS5jb2RlcyxFUlJfSU5WQUxJRF9BUkdfVFlQRT1fcmVxdWlyZSRjb2Rlcy5FUlJfSU5WQUxJRF9BUkdfVFlQRSxFUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRD1fcmVxdWlyZSRjb2Rlcy5FUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRCxFUlJfTVVMVElQTEVfQ0FMTEJBQ0s9X3JlcXVpcmUkY29kZXMuRVJSX01VTFRJUExFX0NBTExCQUNLLEVSUl9TVFJFQU1fQ0FOTk9UX1BJUEU9X3JlcXVpcmUkY29kZXMuRVJSX1NUUkVBTV9DQU5OT1RfUElQRSxFUlJfU1RSRUFNX0RFU1RST1lFRD1fcmVxdWlyZSRjb2Rlcy5FUlJfU1RSRUFNX0RFU1RST1lFRCxFUlJfU1RSRUFNX05VTExfVkFMVUVTPV9yZXF1aXJlJGNvZGVzLkVSUl9TVFJFQU1fTlVMTF9WQUxVRVMsRVJSX1NUUkVBTV9XUklURV9BRlRFUl9FTkQ9X3JlcXVpcmUkY29kZXMuRVJSX1NUUkVBTV9XUklURV9BRlRFUl9FTkQsRVJSX1VOS05PV05fRU5DT0RJTkc9X3JlcXVpcmUkY29kZXMuRVJSX1VOS05PV05fRU5DT0RJTkcsZXJyb3JPckRlc3Ryb3k9ZGVzdHJveUltcGwuZXJyb3JPckRlc3Ryb3k7ZnVuY3Rpb24gbm9wKCl7fWZ1bmN0aW9uIFdyaXRhYmxlU3RhdGUob3B0aW9ucyxzdHJlYW0saXNEdXBsZXgpe0R1cGxleD1EdXBsZXh8fHJlcXVpcmUoXCIuL19zdHJlYW1fZHVwbGV4XCIpLG9wdGlvbnM9b3B0aW9uc3x8e30sXCJib29sZWFuXCIhPXR5cGVvZiBpc0R1cGxleCYmKGlzRHVwbGV4PXN0cmVhbSBpbnN0YW5jZW9mIER1cGxleCksdGhpcy5vYmplY3RNb2RlPSEhb3B0aW9ucy5vYmplY3RNb2RlLGlzRHVwbGV4JiYodGhpcy5vYmplY3RNb2RlPXRoaXMub2JqZWN0TW9kZXx8ISFvcHRpb25zLndyaXRhYmxlT2JqZWN0TW9kZSksdGhpcy5oaWdoV2F0ZXJNYXJrPWdldEhpZ2hXYXRlck1hcmsodGhpcyxvcHRpb25zLFwid3JpdGFibGVIaWdoV2F0ZXJNYXJrXCIsaXNEdXBsZXgpLHRoaXMuZmluYWxDYWxsZWQ9ITEsdGhpcy5uZWVkRHJhaW49ITEsdGhpcy5lbmRpbmc9ITEsdGhpcy5lbmRlZD0hMSx0aGlzLmZpbmlzaGVkPSExLHRoaXMuZGVzdHJveWVkPSExO3ZhciBub0RlY29kZT0hMT09PW9wdGlvbnMuZGVjb2RlU3RyaW5nczt0aGlzLmRlY29kZVN0cmluZ3M9IW5vRGVjb2RlLHRoaXMuZGVmYXVsdEVuY29kaW5nPW9wdGlvbnMuZGVmYXVsdEVuY29kaW5nfHxcInV0ZjhcIix0aGlzLmxlbmd0aD0wLHRoaXMud3JpdGluZz0hMSx0aGlzLmNvcmtlZD0wLHRoaXMuc3luYz0hMCx0aGlzLmJ1ZmZlclByb2Nlc3Npbmc9ITEsdGhpcy5vbndyaXRlPWZ1bmN0aW9uKGVyKXshZnVuY3Rpb24oc3RyZWFtLGVyKXt2YXIgc3RhdGU9c3RyZWFtLl93cml0YWJsZVN0YXRlLHN5bmM9c3RhdGUuc3luYyxjYj1zdGF0ZS53cml0ZWNiO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGNiKXRocm93IG5ldyBFUlJfTVVMVElQTEVfQ0FMTEJBQ0s7aWYoZnVuY3Rpb24oc3RhdGUpe3N0YXRlLndyaXRpbmc9ITEsc3RhdGUud3JpdGVjYj1udWxsLHN0YXRlLmxlbmd0aC09c3RhdGUud3JpdGVsZW4sc3RhdGUud3JpdGVsZW49MH0oc3RhdGUpLGVyKSFmdW5jdGlvbihzdHJlYW0sc3RhdGUsc3luYyxlcixjYil7LS1zdGF0ZS5wZW5kaW5nY2Isc3luYz8ocHJvY2Vzcy5uZXh0VGljayhjYixlcikscHJvY2Vzcy5uZXh0VGljayhmaW5pc2hNYXliZSxzdHJlYW0sc3RhdGUpLHN0cmVhbS5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ9ITAsZXJyb3JPckRlc3Ryb3koc3RyZWFtLGVyKSk6KGNiKGVyKSxzdHJlYW0uX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPSEwLGVycm9yT3JEZXN0cm95KHN0cmVhbSxlciksZmluaXNoTWF5YmUoc3RyZWFtLHN0YXRlKSl9KHN0cmVhbSxzdGF0ZSxzeW5jLGVyLGNiKTtlbHNle3ZhciBmaW5pc2hlZD1uZWVkRmluaXNoKHN0YXRlKXx8c3RyZWFtLmRlc3Ryb3llZDtmaW5pc2hlZHx8c3RhdGUuY29ya2VkfHxzdGF0ZS5idWZmZXJQcm9jZXNzaW5nfHwhc3RhdGUuYnVmZmVyZWRSZXF1ZXN0fHxjbGVhckJ1ZmZlcihzdHJlYW0sc3RhdGUpLHN5bmM/cHJvY2Vzcy5uZXh0VGljayhhZnRlcldyaXRlLHN0cmVhbSxzdGF0ZSxmaW5pc2hlZCxjYik6YWZ0ZXJXcml0ZShzdHJlYW0sc3RhdGUsZmluaXNoZWQsY2IpfX0oc3RyZWFtLGVyKX0sdGhpcy53cml0ZWNiPW51bGwsdGhpcy53cml0ZWxlbj0wLHRoaXMuYnVmZmVyZWRSZXF1ZXN0PW51bGwsdGhpcy5sYXN0QnVmZmVyZWRSZXF1ZXN0PW51bGwsdGhpcy5wZW5kaW5nY2I9MCx0aGlzLnByZWZpbmlzaGVkPSExLHRoaXMuZXJyb3JFbWl0dGVkPSExLHRoaXMuZW1pdENsb3NlPSExIT09b3B0aW9ucy5lbWl0Q2xvc2UsdGhpcy5hdXRvRGVzdHJveT0hIW9wdGlvbnMuYXV0b0Rlc3Ryb3ksdGhpcy5idWZmZXJlZFJlcXVlc3RDb3VudD0wLHRoaXMuY29ya2VkUmVxdWVzdHNGcmVlPW5ldyBDb3JrZWRSZXF1ZXN0KHRoaXMpfWZ1bmN0aW9uIFdyaXRhYmxlKG9wdGlvbnMpe3ZhciBpc0R1cGxleD10aGlzIGluc3RhbmNlb2YoRHVwbGV4PUR1cGxleHx8cmVxdWlyZShcIi4vX3N0cmVhbV9kdXBsZXhcIikpO2lmKCFpc0R1cGxleCYmIXJlYWxIYXNJbnN0YW5jZS5jYWxsKFdyaXRhYmxlLHRoaXMpKXJldHVybiBuZXcgV3JpdGFibGUob3B0aW9ucyk7dGhpcy5fd3JpdGFibGVTdGF0ZT1uZXcgV3JpdGFibGVTdGF0ZShvcHRpb25zLHRoaXMsaXNEdXBsZXgpLHRoaXMud3JpdGFibGU9ITAsb3B0aW9ucyYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG9wdGlvbnMud3JpdGUmJih0aGlzLl93cml0ZT1vcHRpb25zLndyaXRlKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBvcHRpb25zLndyaXRldiYmKHRoaXMuX3dyaXRldj1vcHRpb25zLndyaXRldiksXCJmdW5jdGlvblwiPT10eXBlb2Ygb3B0aW9ucy5kZXN0cm95JiYodGhpcy5fZGVzdHJveT1vcHRpb25zLmRlc3Ryb3kpLFwiZnVuY3Rpb25cIj09dHlwZW9mIG9wdGlvbnMuZmluYWwmJih0aGlzLl9maW5hbD1vcHRpb25zLmZpbmFsKSksU3RyZWFtLmNhbGwodGhpcyl9ZnVuY3Rpb24gZG9Xcml0ZShzdHJlYW0sc3RhdGUsd3JpdGV2LGxlbixjaHVuayxlbmNvZGluZyxjYil7c3RhdGUud3JpdGVsZW49bGVuLHN0YXRlLndyaXRlY2I9Y2Isc3RhdGUud3JpdGluZz0hMCxzdGF0ZS5zeW5jPSEwLHN0YXRlLmRlc3Ryb3llZD9zdGF0ZS5vbndyaXRlKG5ldyBFUlJfU1RSRUFNX0RFU1RST1lFRChcIndyaXRlXCIpKTp3cml0ZXY/c3RyZWFtLl93cml0ZXYoY2h1bmssc3RhdGUub253cml0ZSk6c3RyZWFtLl93cml0ZShjaHVuayxlbmNvZGluZyxzdGF0ZS5vbndyaXRlKSxzdGF0ZS5zeW5jPSExfWZ1bmN0aW9uIGFmdGVyV3JpdGUoc3RyZWFtLHN0YXRlLGZpbmlzaGVkLGNiKXtmaW5pc2hlZHx8ZnVuY3Rpb24oc3RyZWFtLHN0YXRlKXswPT09c3RhdGUubGVuZ3RoJiZzdGF0ZS5uZWVkRHJhaW4mJihzdGF0ZS5uZWVkRHJhaW49ITEsc3RyZWFtLmVtaXQoXCJkcmFpblwiKSl9KHN0cmVhbSxzdGF0ZSksc3RhdGUucGVuZGluZ2NiLS0sY2IoKSxmaW5pc2hNYXliZShzdHJlYW0sc3RhdGUpfWZ1bmN0aW9uIGNsZWFyQnVmZmVyKHN0cmVhbSxzdGF0ZSl7c3RhdGUuYnVmZmVyUHJvY2Vzc2luZz0hMDt2YXIgZW50cnk9c3RhdGUuYnVmZmVyZWRSZXF1ZXN0O2lmKHN0cmVhbS5fd3JpdGV2JiZlbnRyeSYmZW50cnkubmV4dCl7dmFyIGw9c3RhdGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQsYnVmZmVyPW5ldyBBcnJheShsKSxob2xkZXI9c3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlO2hvbGRlci5lbnRyeT1lbnRyeTtmb3IodmFyIGNvdW50PTAsYWxsQnVmZmVycz0hMDtlbnRyeTspYnVmZmVyW2NvdW50XT1lbnRyeSxlbnRyeS5pc0J1Znx8KGFsbEJ1ZmZlcnM9ITEpLGVudHJ5PWVudHJ5Lm5leHQsY291bnQrPTE7YnVmZmVyLmFsbEJ1ZmZlcnM9YWxsQnVmZmVycyxkb1dyaXRlKHN0cmVhbSxzdGF0ZSwhMCxzdGF0ZS5sZW5ndGgsYnVmZmVyLFwiXCIsaG9sZGVyLmZpbmlzaCksc3RhdGUucGVuZGluZ2NiKyssc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdD1udWxsLGhvbGRlci5uZXh0PyhzdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU9aG9sZGVyLm5leHQsaG9sZGVyLm5leHQ9bnVsbCk6c3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlPW5ldyBDb3JrZWRSZXF1ZXN0KHN0YXRlKSxzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudD0wfWVsc2V7Zm9yKDtlbnRyeTspe3ZhciBjaHVuaz1lbnRyeS5jaHVuayxlbmNvZGluZz1lbnRyeS5lbmNvZGluZyxjYj1lbnRyeS5jYWxsYmFjaztpZihkb1dyaXRlKHN0cmVhbSxzdGF0ZSwhMSxzdGF0ZS5vYmplY3RNb2RlPzE6Y2h1bmsubGVuZ3RoLGNodW5rLGVuY29kaW5nLGNiKSxlbnRyeT1lbnRyeS5uZXh0LHN0YXRlLmJ1ZmZlcmVkUmVxdWVzdENvdW50LS0sc3RhdGUud3JpdGluZylicmVha31udWxsPT09ZW50cnkmJihzdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0PW51bGwpfXN0YXRlLmJ1ZmZlcmVkUmVxdWVzdD1lbnRyeSxzdGF0ZS5idWZmZXJQcm9jZXNzaW5nPSExfWZ1bmN0aW9uIG5lZWRGaW5pc2goc3RhdGUpe3JldHVybiBzdGF0ZS5lbmRpbmcmJjA9PT1zdGF0ZS5sZW5ndGgmJm51bGw9PT1zdGF0ZS5idWZmZXJlZFJlcXVlc3QmJiFzdGF0ZS5maW5pc2hlZCYmIXN0YXRlLndyaXRpbmd9ZnVuY3Rpb24gY2FsbEZpbmFsKHN0cmVhbSxzdGF0ZSl7c3RyZWFtLl9maW5hbChmdW5jdGlvbihlcnIpe3N0YXRlLnBlbmRpbmdjYi0tLGVyciYmZXJyb3JPckRlc3Ryb3koc3RyZWFtLGVyciksc3RhdGUucHJlZmluaXNoZWQ9ITAsc3RyZWFtLmVtaXQoXCJwcmVmaW5pc2hcIiksZmluaXNoTWF5YmUoc3RyZWFtLHN0YXRlKX0pfWZ1bmN0aW9uIGZpbmlzaE1heWJlKHN0cmVhbSxzdGF0ZSl7dmFyIG5lZWQ9bmVlZEZpbmlzaChzdGF0ZSk7aWYobmVlZCYmKGZ1bmN0aW9uKHN0cmVhbSxzdGF0ZSl7c3RhdGUucHJlZmluaXNoZWR8fHN0YXRlLmZpbmFsQ2FsbGVkfHwoXCJmdW5jdGlvblwiIT10eXBlb2Ygc3RyZWFtLl9maW5hbHx8c3RhdGUuZGVzdHJveWVkPyhzdGF0ZS5wcmVmaW5pc2hlZD0hMCxzdHJlYW0uZW1pdChcInByZWZpbmlzaFwiKSk6KHN0YXRlLnBlbmRpbmdjYisrLHN0YXRlLmZpbmFsQ2FsbGVkPSEwLHByb2Nlc3MubmV4dFRpY2soY2FsbEZpbmFsLHN0cmVhbSxzdGF0ZSkpKX0oc3RyZWFtLHN0YXRlKSwwPT09c3RhdGUucGVuZGluZ2NiJiYoc3RhdGUuZmluaXNoZWQ9ITAsc3RyZWFtLmVtaXQoXCJmaW5pc2hcIiksc3RhdGUuYXV0b0Rlc3Ryb3kpKSl7dmFyIHJTdGF0ZT1zdHJlYW0uX3JlYWRhYmxlU3RhdGU7KCFyU3RhdGV8fHJTdGF0ZS5hdXRvRGVzdHJveSYmclN0YXRlLmVuZEVtaXR0ZWQpJiZzdHJlYW0uZGVzdHJveSgpfXJldHVybiBuZWVkfXJlcXVpcmUoXCJpbmhlcml0c1wiKShXcml0YWJsZSxTdHJlYW0pLFdyaXRhYmxlU3RhdGUucHJvdG90eXBlLmdldEJ1ZmZlcj1mdW5jdGlvbigpe2Zvcih2YXIgY3VycmVudD10aGlzLmJ1ZmZlcmVkUmVxdWVzdCxvdXQ9W107Y3VycmVudDspb3V0LnB1c2goY3VycmVudCksY3VycmVudD1jdXJyZW50Lm5leHQ7cmV0dXJuIG91dH0sZnVuY3Rpb24oKXt0cnl7T2JqZWN0LmRlZmluZVByb3BlcnR5KFdyaXRhYmxlU3RhdGUucHJvdG90eXBlLFwiYnVmZmVyXCIse2dldDppbnRlcm5hbFV0aWwuZGVwcmVjYXRlKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0QnVmZmVyKCl9LFwiX3dyaXRhYmxlU3RhdGUuYnVmZmVyIGlzIGRlcHJlY2F0ZWQuIFVzZSBfd3JpdGFibGVTdGF0ZS5nZXRCdWZmZXIgaW5zdGVhZC5cIixcIkRFUDAwMDNcIil9KX1jYXRjaChfKXt9fSgpLFwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmhhc0luc3RhbmNlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBGdW5jdGlvbi5wcm90b3R5cGVbU3ltYm9sLmhhc0luc3RhbmNlXT8ocmVhbEhhc0luc3RhbmNlPUZ1bmN0aW9uLnByb3RvdHlwZVtTeW1ib2wuaGFzSW5zdGFuY2VdLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZSxTeW1ib2wuaGFzSW5zdGFuY2Use3ZhbHVlOmZ1bmN0aW9uKG9iamVjdCl7cmV0dXJuISFyZWFsSGFzSW5zdGFuY2UuY2FsbCh0aGlzLG9iamVjdCl8fHRoaXM9PT1Xcml0YWJsZSYmKG9iamVjdCYmb2JqZWN0Ll93cml0YWJsZVN0YXRlIGluc3RhbmNlb2YgV3JpdGFibGVTdGF0ZSl9fSkpOnJlYWxIYXNJbnN0YW5jZT1mdW5jdGlvbihvYmplY3Qpe3JldHVybiBvYmplY3QgaW5zdGFuY2VvZiB0aGlzfSxXcml0YWJsZS5wcm90b3R5cGUucGlwZT1mdW5jdGlvbigpe2Vycm9yT3JEZXN0cm95KHRoaXMsbmV3IEVSUl9TVFJFQU1fQ0FOTk9UX1BJUEUpfSxXcml0YWJsZS5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24oY2h1bmssZW5jb2RpbmcsY2Ipe3ZhciBvYmosc3RhdGU9dGhpcy5fd3JpdGFibGVTdGF0ZSxyZXQ9ITEsaXNCdWY9IXN0YXRlLm9iamVjdE1vZGUmJihvYmo9Y2h1bmssQnVmZmVyLmlzQnVmZmVyKG9iail8fG9iaiBpbnN0YW5jZW9mIE91clVpbnQ4QXJyYXkpO3JldHVybiBpc0J1ZiYmIUJ1ZmZlci5pc0J1ZmZlcihjaHVuaykmJihjaHVuaz1mdW5jdGlvbihjaHVuayl7cmV0dXJuIEJ1ZmZlci5mcm9tKGNodW5rKX0oY2h1bmspKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlbmNvZGluZyYmKGNiPWVuY29kaW5nLGVuY29kaW5nPW51bGwpLGlzQnVmP2VuY29kaW5nPVwiYnVmZmVyXCI6ZW5jb2Rpbmd8fChlbmNvZGluZz1zdGF0ZS5kZWZhdWx0RW5jb2RpbmcpLFwiZnVuY3Rpb25cIiE9dHlwZW9mIGNiJiYoY2I9bm9wKSxzdGF0ZS5lbmRpbmc/ZnVuY3Rpb24oc3RyZWFtLGNiKXt2YXIgZXI9bmV3IEVSUl9TVFJFQU1fV1JJVEVfQUZURVJfRU5EO2Vycm9yT3JEZXN0cm95KHN0cmVhbSxlcikscHJvY2Vzcy5uZXh0VGljayhjYixlcil9KHRoaXMsY2IpOihpc0J1Znx8ZnVuY3Rpb24oc3RyZWFtLHN0YXRlLGNodW5rLGNiKXt2YXIgZXI7cmV0dXJuIG51bGw9PT1jaHVuaz9lcj1uZXcgRVJSX1NUUkVBTV9OVUxMX1ZBTFVFUzpcInN0cmluZ1wiPT10eXBlb2YgY2h1bmt8fHN0YXRlLm9iamVjdE1vZGV8fChlcj1uZXcgRVJSX0lOVkFMSURfQVJHX1RZUEUoXCJjaHVua1wiLFtcInN0cmluZ1wiLFwiQnVmZmVyXCJdLGNodW5rKSksIWVyfHwoZXJyb3JPckRlc3Ryb3koc3RyZWFtLGVyKSxwcm9jZXNzLm5leHRUaWNrKGNiLGVyKSwhMSl9KHRoaXMsc3RhdGUsY2h1bmssY2IpKSYmKHN0YXRlLnBlbmRpbmdjYisrLHJldD1mdW5jdGlvbihzdHJlYW0sc3RhdGUsaXNCdWYsY2h1bmssZW5jb2RpbmcsY2Ipe2lmKCFpc0J1Zil7dmFyIG5ld0NodW5rPWZ1bmN0aW9uKHN0YXRlLGNodW5rLGVuY29kaW5nKXtzdGF0ZS5vYmplY3RNb2RlfHwhMT09PXN0YXRlLmRlY29kZVN0cmluZ3N8fFwic3RyaW5nXCIhPXR5cGVvZiBjaHVua3x8KGNodW5rPUJ1ZmZlci5mcm9tKGNodW5rLGVuY29kaW5nKSk7cmV0dXJuIGNodW5rfShzdGF0ZSxjaHVuayxlbmNvZGluZyk7Y2h1bmshPT1uZXdDaHVuayYmKGlzQnVmPSEwLGVuY29kaW5nPVwiYnVmZmVyXCIsY2h1bms9bmV3Q2h1bmspfXZhciBsZW49c3RhdGUub2JqZWN0TW9kZT8xOmNodW5rLmxlbmd0aDtzdGF0ZS5sZW5ndGgrPWxlbjt2YXIgcmV0PXN0YXRlLmxlbmd0aDxzdGF0ZS5oaWdoV2F0ZXJNYXJrO3JldHx8KHN0YXRlLm5lZWREcmFpbj0hMCk7aWYoc3RhdGUud3JpdGluZ3x8c3RhdGUuY29ya2VkKXt2YXIgbGFzdD1zdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0O3N0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3Q9e2NodW5rOmNodW5rLGVuY29kaW5nOmVuY29kaW5nLGlzQnVmOmlzQnVmLGNhbGxiYWNrOmNiLG5leHQ6bnVsbH0sbGFzdD9sYXN0Lm5leHQ9c3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdDpzdGF0ZS5idWZmZXJlZFJlcXVlc3Q9c3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdCxzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudCs9MX1lbHNlIGRvV3JpdGUoc3RyZWFtLHN0YXRlLCExLGxlbixjaHVuayxlbmNvZGluZyxjYik7cmV0dXJuIHJldH0odGhpcyxzdGF0ZSxpc0J1ZixjaHVuayxlbmNvZGluZyxjYikpLHJldH0sV3JpdGFibGUucHJvdG90eXBlLmNvcms9ZnVuY3Rpb24oKXt0aGlzLl93cml0YWJsZVN0YXRlLmNvcmtlZCsrfSxXcml0YWJsZS5wcm90b3R5cGUudW5jb3JrPWZ1bmN0aW9uKCl7dmFyIHN0YXRlPXRoaXMuX3dyaXRhYmxlU3RhdGU7c3RhdGUuY29ya2VkJiYoc3RhdGUuY29ya2VkLS0sc3RhdGUud3JpdGluZ3x8c3RhdGUuY29ya2VkfHxzdGF0ZS5idWZmZXJQcm9jZXNzaW5nfHwhc3RhdGUuYnVmZmVyZWRSZXF1ZXN0fHxjbGVhckJ1ZmZlcih0aGlzLHN0YXRlKSl9LFdyaXRhYmxlLnByb3RvdHlwZS5zZXREZWZhdWx0RW5jb2Rpbmc9ZnVuY3Rpb24oZW5jb2Rpbmcpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlbmNvZGluZyYmKGVuY29kaW5nPWVuY29kaW5nLnRvTG93ZXJDYXNlKCkpLCEoW1wiaGV4XCIsXCJ1dGY4XCIsXCJ1dGYtOFwiLFwiYXNjaWlcIixcImJpbmFyeVwiLFwiYmFzZTY0XCIsXCJ1Y3MyXCIsXCJ1Y3MtMlwiLFwidXRmMTZsZVwiLFwidXRmLTE2bGVcIixcInJhd1wiXS5pbmRleE9mKChlbmNvZGluZytcIlwiKS50b0xvd2VyQ2FzZSgpKT4tMSkpdGhyb3cgbmV3IEVSUl9VTktOT1dOX0VOQ09ESU5HKGVuY29kaW5nKTtyZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5kZWZhdWx0RW5jb2Rpbmc9ZW5jb2RpbmcsdGhpc30sT2JqZWN0LmRlZmluZVByb3BlcnR5KFdyaXRhYmxlLnByb3RvdHlwZSxcIndyaXRhYmxlQnVmZmVyXCIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZ2V0QnVmZmVyKCl9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KFdyaXRhYmxlLnByb3RvdHlwZSxcIndyaXRhYmxlSGlnaFdhdGVyTWFya1wiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmhpZ2hXYXRlck1hcmt9fSksV3JpdGFibGUucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbihjaHVuayxlbmNvZGluZyxjYil7Y2IobmV3IEVSUl9NRVRIT0RfTk9UX0lNUExFTUVOVEVEKFwiX3dyaXRlKClcIikpfSxXcml0YWJsZS5wcm90b3R5cGUuX3dyaXRldj1udWxsLFdyaXRhYmxlLnByb3RvdHlwZS5lbmQ9ZnVuY3Rpb24oY2h1bmssZW5jb2RpbmcsY2Ipe3ZhciBzdGF0ZT10aGlzLl93cml0YWJsZVN0YXRlO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGNodW5rPyhjYj1jaHVuayxjaHVuaz1udWxsLGVuY29kaW5nPW51bGwpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGVuY29kaW5nJiYoY2I9ZW5jb2RpbmcsZW5jb2Rpbmc9bnVsbCksbnVsbCE9Y2h1bmsmJnRoaXMud3JpdGUoY2h1bmssZW5jb2RpbmcpLHN0YXRlLmNvcmtlZCYmKHN0YXRlLmNvcmtlZD0xLHRoaXMudW5jb3JrKCkpLHN0YXRlLmVuZGluZ3x8ZnVuY3Rpb24oc3RyZWFtLHN0YXRlLGNiKXtzdGF0ZS5lbmRpbmc9ITAsZmluaXNoTWF5YmUoc3RyZWFtLHN0YXRlKSxjYiYmKHN0YXRlLmZpbmlzaGVkP3Byb2Nlc3MubmV4dFRpY2soY2IpOnN0cmVhbS5vbmNlKFwiZmluaXNoXCIsY2IpKTtzdGF0ZS5lbmRlZD0hMCxzdHJlYW0ud3JpdGFibGU9ITF9KHRoaXMsc3RhdGUsY2IpLHRoaXN9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZS5wcm90b3R5cGUsXCJ3cml0YWJsZUxlbmd0aFwiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmxlbmd0aH19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoV3JpdGFibGUucHJvdG90eXBlLFwiZGVzdHJveWVkXCIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkfSxzZXQ6ZnVuY3Rpb24odmFsdWUpe3RoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD12YWx1ZSl9fSksV3JpdGFibGUucHJvdG90eXBlLmRlc3Ryb3k9ZGVzdHJveUltcGwuZGVzdHJveSxXcml0YWJsZS5wcm90b3R5cGUuX3VuZGVzdHJveT1kZXN0cm95SW1wbC51bmRlc3Ryb3ksV3JpdGFibGUucHJvdG90eXBlLl9kZXN0cm95PWZ1bmN0aW9uKGVycixjYil7Y2IoZXJyKX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbDl6ZEhKbFlXMWZkM0pwZEdGaWJHVXVhbk1pWFN3aWJtRnRaWE1pT2xzaVEyOXlhMlZrVW1WeGRXVnpkQ0lzSW5OMFlYUmxJaXdpWDNSb2FYTWlMQ0owYUdseklpd2libVY0ZENJc0ltVnVkSEo1SWl3aVptbHVhWE5vSWl3aVkyOXlhMUpsY1NJc0ltVnljaUlzSW1OaUlpd2lZMkZzYkdKaFkyc2lMQ0p3Wlc1a2FXNW5ZMklpTENKamIzSnJaV1JTWlhGMVpYTjBjMFp5WldVaUxDSnZia052Y210bFpFWnBibWx6YUNJc0lrUjFjR3hsZUNJc0ltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaUxDSlhjbWwwWVdKc1pTSXNJbGR5YVhSaFlteGxVM1JoZEdVaUxDSnBiblJsY201aGJGVjBhV3dpTENKa1pYQnlaV05oZEdVaUxDSnlaWEYxYVhKbElpd2lVM1J5WldGdElpd2lRblZtWm1WeUlpd2lUM1Z5VldsdWREaEJjbkpoZVNJc0ltZHNiMkpoYkNJc0lsVnBiblE0UVhKeVlYa2lMQ0p5WldGc1NHRnpTVzV6ZEdGdVkyVWlMQ0prWlhOMGNtOTVTVzF3YkNJc0ltZGxkRWhwWjJoWFlYUmxjazFoY21zaUxDSmZjbVZ4ZFdseVpTUmpiMlJsY3lJc0ltTnZaR1Z6SWl3aVJWSlNYMGxPVmtGTVNVUmZRVkpIWDFSWlVFVWlMQ0pGVWxKZlRVVlVTRTlFWDA1UFZGOUpUVkJNUlUxRlRsUkZSQ0lzSWtWU1VsOU5WVXhVU1ZCTVJWOURRVXhNUWtGRFN5SXNJa1ZTVWw5VFZGSkZRVTFmUTBGT1RrOVVYMUJKVUVVaUxDSkZVbEpmVTFSU1JVRk5YMFJGVTFSU1QxbEZSQ0lzSWtWU1VsOVRWRkpGUVUxZlRsVk1URjlXUVV4VlJWTWlMQ0pGVWxKZlUxUlNSVUZOWDFkU1NWUkZYMEZHVkVWU1gwVk9SQ0lzSWtWU1VsOVZUa3RPVDFkT1gwVk9RMDlFU1U1SElpd2laWEp5YjNKUGNrUmxjM1J5YjNraUxDSnViM0FpTENKdmNIUnBiMjV6SWl3aWMzUnlaV0Z0SWl3aWFYTkVkWEJzWlhnaUxDSnZZbXBsWTNSTmIyUmxJaXdpZDNKcGRHRmliR1ZQWW1wbFkzUk5iMlJsSWl3aWFHbG5hRmRoZEdWeVRXRnlheUlzSW1acGJtRnNRMkZzYkdWa0lpd2libVZsWkVSeVlXbHVJaXdpWlc1a2FXNW5JaXdpWlc1a1pXUWlMQ0ptYVc1cGMyaGxaQ0lzSW1SbGMzUnliM2xsWkNJc0ltNXZSR1ZqYjJSbElpd2laR1ZqYjJSbFUzUnlhVzVuY3lJc0ltUmxabUYxYkhSRmJtTnZaR2x1WnlJc0lteGxibWQwYUNJc0luZHlhWFJwYm1jaUxDSmpiM0pyWldRaUxDSnplVzVqSWl3aVluVm1abVZ5VUhKdlkyVnpjMmx1WnlJc0ltOXVkM0pwZEdVaUxDSmxjaUlzSWw5M2NtbDBZV0pzWlZOMFlYUmxJaXdpZDNKcGRHVmpZaUlzSW5keWFYUmxiR1Z1SWl3aWIyNTNjbWwwWlZOMFlYUmxWWEJrWVhSbElpd2ljSEp2WTJWemN5SXNJbTVsZUhSVWFXTnJJaXdpWm1sdWFYTm9UV0Y1WW1VaUxDSmxjbkp2Y2tWdGFYUjBaV1FpTENKdmJuZHlhWFJsUlhKeWIzSWlMQ0p1WldWa1JtbHVhWE5vSWl3aVluVm1abVZ5WldSU1pYRjFaWE4wSWl3aVkyeGxZWEpDZFdabVpYSWlMQ0poWm5SbGNsZHlhWFJsSWl3aWJHRnpkRUoxWm1abGNtVmtVbVZ4ZFdWemRDSXNJbkJ5WldacGJtbHphR1ZrSWl3aVpXMXBkRU5zYjNObElpd2lZWFYwYjBSbGMzUnliM2tpTENKaWRXWm1aWEpsWkZKbGNYVmxjM1JEYjNWdWRDSXNJbU5oYkd3aUxDSjNjbWwwWVdKc1pTSXNJbmR5YVhSbElpd2lYM2R5YVhSbElpd2lkM0pwZEdWMklpd2lYM2R5YVhSbGRpSXNJbVJsYzNSeWIza2lMQ0pmWkdWemRISnZlU0lzSW1acGJtRnNJaXdpWDJacGJtRnNJaXdpWkc5WGNtbDBaU0lzSW14bGJpSXNJbU5vZFc1cklpd2laVzVqYjJScGJtY2lMQ0psYldsMElpd2liMjUzY21sMFpVUnlZV2x1SWl3aWJDSXNJbUoxWm1abGNpSXNJa0Z5Y21GNUlpd2lhRzlzWkdWeUlpd2lZMjkxYm5RaUxDSmhiR3hDZFdabVpYSnpJaXdpYVhOQ2RXWWlMQ0pqWVd4c1JtbHVZV3dpTENKdVpXVmtJaXdpY0hKbFptbHVhWE5vSWl3aWNsTjBZWFJsSWl3aVgzSmxZV1JoWW14bFUzUmhkR1VpTENKbGJtUkZiV2wwZEdWa0lpd2ljSEp2ZEc5MGVYQmxJaXdpWjJWMFFuVm1abVZ5SWl3aVkzVnljbVZ1ZENJc0ltOTFkQ0lzSW5CMWMyZ2lMQ0pQWW1wbFkzUWlMQ0prWldacGJtVlFjbTl3WlhKMGVTSXNJbWRsZENJc0lsOGlMQ0pUZVcxaWIyd2lMQ0pvWVhOSmJuTjBZVzVqWlNJc0lrWjFibU4wYVc5dUlpd2lkbUZzZFdVaUxDSnZZbXBsWTNRaUxDSndhWEJsSWl3aWIySnFJaXdpY21WMElpd2lhWE5DZFdabVpYSWlMQ0ptY205dElpd2lYM1ZwYm5RNFFYSnlZWGxVYjBKMVptWmxjaUlzSW5keWFYUmxRV1owWlhKRmJtUWlMQ0oyWVd4cFpFTm9kVzVySWl3aWJtVjNRMmgxYm1zaUxDSmtaV052WkdWRGFIVnVheUlzSW14aGMzUWlMQ0ozY21sMFpVOXlRblZtWm1WeUlpd2lZMjl5YXlJc0luVnVZMjl5YXlJc0luTmxkRVJsWm1GMWJIUkZibU52WkdsdVp5SXNJblJ2VEc5M1pYSkRZWE5sSWl3aWFXNWtaWGhQWmlJc0ltVnVkVzFsY21GaWJHVWlMQ0psYm1RaUxDSnZibU5sSWl3aVpXNWtWM0pwZEdGaWJHVWlMQ0oxYm1SbFptbHVaV1FpTENKelpYUWlMQ0pmZFc1a1pYTjBjbTk1SWl3aWRXNWtaWE4wY205NUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGMVFrRXNZVUZqUVN4VFFVRlRRU3hqUVVGalF5eFBRVU55UWl4SlFVRkpReXhOUVVGUlF5eExRVVZhUVN4TFFVRkxReXhMUVVGUExFdEJRMXBFTEV0QlFVdEZMRTFCUVZFc1MwRkZZa1lzUzBGQlMwY3NUMEZCVXl4WlFXbHRRbWhDTEZOQlFYZENReXhSUVVGVFRpeE5RVUZQVHl4TFFVTjBReXhKUVVGSlNDeE5RVUZSUlN4UlFVRlJSaXhOUVVOd1FrVXNVVUZCVVVZc1RVRkJVU3hMUVVWb1FpeExRVUZQUVN4UFFVRlBMRU5CUTFvc1NVRkJTVWtzUjBGQlMwb3NUVUZCVFVzc1UwRkRabFFzVFVGQlRWVXNXVUZEVGtZc1IwRkJSMFFzUzBGRFNFZ3NUVUZCVVVFc1RVRkJUVVFzUzBGSmFFSklMRTFCUVUxWExHMUNRVUZ0UWxJc1MwRkJUMGNzVVVFMWJVSTVRazBzUTBGQlpWZ3NUVUZCVDBRc1VVRlJNVUlzU1VGQlNXRXNUMEV6UWtwRExFOUJRVTlETEZGQlFWVkRMRk5CT0VKcVFrRXNVMEZCVTBNc1kwRkJaMEpCTEdOQlIzcENMRWxCUVVsRExHRkJRV1VzUTBGRGFrSkRMRlZCUVZkRExGRkJRVkVzYlVKQlRXcENReXhQUVVGVFJDeFJRVUZSTERaQ1FVbHFRa1VzVDBGQlUwWXNVVUZCVVN4VlFVRlZSU3hQUVVVelFrTXNZMEZCWjBKRExFOUJRVTlETEZsQlFXTXNZVUZWZWtNc1NVRnJTVWxETEdkQ1FXeEpRVU1zV1VGQlkxQXNVVUZCVVN3NFFrRkhkRUpSTEdsQ1FVUlhVaXhSUVVGUkxEUkNRVU5UVVN4cFFrRkZOVUpETEdWQlFXbENWQ3hSUVVGUkxHRkJRV0ZWTEUxQlEzUkRReXh4UWtGQmRVSkdMR1ZCUVdWRkxIRkNRVU4wUTBNc01rSkJRVFpDU0N4bFFVRmxSeXd5UWtGRE5VTkRMSE5DUVVGM1Frb3NaVUZCWlVrc2MwSkJRM1pEUXl4MVFrRkJlVUpNTEdWQlFXVkxMSFZDUVVONFEwTXNjVUpCUVhWQ1RpeGxRVUZsVFN4eFFrRkRkRU5ETEhWQ1FVRjVRbEFzWlVGQlpVOHNkVUpCUTNoRFF5d3lRa0ZCTmtKU0xHVkJRV1ZSTERKQ1FVTTFRME1zY1VKQlFYVkNWQ3hsUVVGbFV5eHhRa0ZGZEVORExHVkJRV2xDV2l4WlFVRlpXU3hsUVVscVF5eFRRVUZUUXl4UFFVVlVMRk5CUVZOMlFpeGpRVUZqZDBJc1VVRkJVME1zVDBGQlVVTXNWVUZEZEVNNVFpeFBRVUZUUVN4UlFVRlZUeXhSUVVGUkxHOUNRVU16UW5GQ0xGRkJRVlZCTEZOQlFWY3NSMEZOUnl4clFrRkJZa1VzVjBGQmQwSkJMRk5CUVZkRUxHdENRVUZyUWpkQ0xGRkJSMmhGV0N4TFFVRkxNRU1zWVVGQlpVZ3NVVUZCVVVjc1YwRkRlRUpFTEZkQlFWVjZReXhMUVVGTE1FTXNWMEZCWVRGRExFdEJRVXN3UXl4alFVRm5Ra2dzVVVGQlVVa3NiMEpCU1RkRU0wTXNTMEZCU3pSRExHTkJRV2RDYkVJc2FVSkJRV2xDTVVJc1MwRkJUWFZETEZGQlFWTXNkMEpCUVhsQ1JTeFZRVVU1UlhwRExFdEJRVXMyUXl4aFFVRmpMRVZCUlc1Q04wTXNTMEZCU3poRExGZEJRVmtzUlVGRmFrSTVReXhMUVVGTEswTXNVVUZCVXl4RlFVVmtMME1zUzBGQlMyZEVMRTlCUVZFc1JVRkZZbWhFTEV0QlFVdHBSQ3hWUVVGWExFVkJSV2hDYWtRc1MwRkJTMnRFTEZkQlFWa3NSVUZKYWtJc1NVRkJTVU1zVlVGQmNVTXNTVUZCTVVKYUxGRkJRVkZoTEdOQlEzWkNjRVFzUzBGQlMyOUVMR1ZCUVdsQ1JDeFRRVWwwUW01RUxFdEJRVXR4UkN4blFrRkJhMEprTEZGQlFWRmpMR2xDUVVGdFFpeFBRVWxzUkhKRUxFdEJRVXR6UkN4UFFVRlRMRVZCUldSMFJDeExRVUZMZFVRc1UwRkJWU3hGUVVWbWRrUXNTMEZCUzNkRUxFOUJRVk1zUlVGTFpIaEVMRXRCUVV0NVJDeE5RVUZQTEVWQlNWcDZSQ3hMUVVGTE1FUXNhMEpCUVcxQ0xFVkJSWGhDTVVRc1MwRkJTekpFTEZGQlFWVXNVMEZCVlVNc1MwRTJVak5DTEZOQlFXbENjRUlzVDBGQlVXOUNMRWxCUTNaQ0xFbEJRVWs1UkN4TlFVRlJNRU1zVDBGQlQzRkNMR1ZCUTJaS0xFdEJRVTh6UkN4TlFVRk5Na1FzUzBGRFltNUVMRWRCUVV0U0xFMUJRVTFuUlN4UlFVTm1MRWRCUVd0Q0xHMUNRVUZRZUVRc1IwRkJiVUlzVFVGQlRTeEpRVUZKZVVJc2MwSkJSWGhETEVkQllrWXNVMEZCTkVKcVF5eFBRVU14UWtFc1RVRkJUWGxFTEZOQlFWVXNSVUZEYUVKNlJDeE5RVUZOWjBVc1VVRkJWU3hMUVVOb1FtaEZMRTFCUVUxM1JDeFJRVUZWZUVRc1RVRkJUV2xGTEZOQlEzUkNha1VzVFVGQlRXbEZMRk5CUVZjc1JVRlJha0pETEVOQlFXMUNiRVVzVDBGRFpqaEVMRWxCY2tOT0xGTkJRWE5DY0VJc1QwRkJVVEZETEUxQlFVOHlSQ3hMUVVGTlJ5eEhRVUZKZEVRc1RVRkRNME5TTEUxQlFVMVZMRlZCUlVwcFJDeE5RVWRHVVN4UlFVRlJReXhUUVVGVE5VUXNSMEZCU1hORUxFbEJSM0pDU3l4UlFVRlJReXhUUVVGVFF5eFpRVUZoTTBJc1QwRkJVVEZETEU5QlEzUkRNRU1zVDBGQlQzRkNMR1ZCUVdWUExHTkJRV1VzUlVGRGNrTXZRaXhsUVVGbFJ5eFBRVUZSYjBJc1RVRkpka0owUkN4SFFVRkhjMFFzU1VGRFNIQkNMRTlCUVU5eFFpeGxRVUZsVHl4alFVRmxMRVZCUTNKREwwSXNaVUZCWlVjc1QwRkJVVzlDTEVsQlIzWkNUeXhaUVVGWk0wSXNUMEZCVVRGRExGRkJhVUprZFVVc1EwRkJZVGRDTEU5QlFWRXhReXhOUVVGUE1rUXNTMEZCVFVjc1IwRkJTWFJFTEZGQlFWTXNRMEZGY2tRc1NVRkJTVEpETEZOQlFWZHhRaXhYUVVGWGVFVXNVVUZCVlRCRExFOUJRVTlWTEZWQlJYUkRSQ3hWUVVGaGJrUXNUVUZCVFRCRUxGRkJRVmN4UkN4TlFVRk5ORVFzYlVKQlFXOUNOVVFzVFVGQlRYbEZMR2xDUVVOcVJVTXNXVUZCV1doRExFOUJRVkV4UXl4UFFVZHNRakpFTEV0QlEwWlJMRkZCUVZGRExGTkJRVk5QTEZkQlFWbHFReXhQUVVGUk1VTXNUVUZCVDIxRUxGTkJRVlV6UXl4SlFVVjBSRzFGTEZkQlFWZHFReXhQUVVGUk1VTXNUVUZCVDIxRUxGTkJRVlV6UXl4TFFUZFRkRU54UkN4RFFVRlJia0lzVDBGQlVXOUNMRXRCU1d4Q05VUXNTMEZCU3poRUxGRkJRVlVzUzBGRlpqbEVMRXRCUVVzclJDeFRRVUZYTEVWQlEyaENMMFFzUzBGQlMzVkZMR2RDUVVGclFpeExRVU4yUW5aRkxFdEJRVXN3UlN4dlFrRkJjMElzUzBGSE0wSXhSU3hMUVVGTFVTeFZRVUZaTEVWQlIycENVaXhMUVVGTE1rVXNZVUZCWXl4RlFVVnVRak5GTEV0QlFVdHZSU3hqUVVGbExFVkJSWEJDY0VVc1MwRkJTelJGTEZkQlFXdERMRWxCUVhSQ2NrTXNVVUZCVVhGRExGVkJSWHBDTlVVc1MwRkJTelpGTEdOQlFXZENkRU1zVVVGQlVYTkRMRmxCUlRkQ04wVXNTMEZCU3poRkxIRkNRVUYxUWl4RlFVYzFRamxGTEV0QlFVdFRMRzFDUVVGeFFpeEpRVUZKV2l4alFVRmpSeXhOUVRSRE9VTXNVMEZCVTJNc1UwRkJVM2xDTEZOQlZXaENMRWxCUVVsRkxGTkJRVmQ2UXl4blFrRlVabGNzVDBGQlUwRXNVVUZCVlU4c1VVRkJVU3h4UWtGVk0wSXNTVUZCUzNWQ0xGZEJRV0ZxUWl4blFrRkJaMEoxUkN4TFFVRkxha1VzVTBGQlZXUXNUVUZCVHl4UFFVRlBMRWxCUVVsakxGTkJRVk41UWl4VFFVTTFSWFpETEV0QlFVczJSQ3hsUVVGcFFpeEpRVUZKT1VNc1kwRkJZM2RDTEZGQlFWTjJReXhMUVVGTmVVTXNWVUZGZGtSNlF5eExRVUZMWjBZc1ZVRkJWeXhGUVVWYWVrTXNWVUZETWtJc2JVSkJRV3hDUVN4UlFVRlJNRU1zVVVGQmMwSnFSaXhMUVVGTGEwWXNUMEZCVXpORExGRkJRVkV3UXl4UFFVTnFReXh0UWtGQmJrSXhReXhSUVVGUk5FTXNVMEZCZFVKdVJpeExRVUZMYjBZc1VVRkJWVGRETEZGQlFWRTBReXhSUVVOc1F5eHRRa0ZCY0VJMVF5eFJRVUZST0VNc1ZVRkJkMEp5Uml4TFFVRkxjMFlzVTBGQlZ5OURMRkZCUVZFNFF5eFRRVU4wUXl4dFFrRkJiRUk1UXl4UlFVRlJaMFFzVVVGQmMwSjJSaXhMUVVGTGQwWXNUMEZCVTJwRUxGRkJRVkZuUkN4UlFVZHFSWEJGTEU5QlFVODBSQ3hMUVVGTEwwVXNUVUYzU21Rc1UwRkJVM2xHTEZGQlFWRnFSQ3hQUVVGUk1VTXNUVUZCVDNGR0xFOUJRVkZQTEVsQlFVdERMRTFCUVU5RExGTkJRVlYwUml4SlFVTTFSRklzVFVGQlRXbEZMRk5CUVZjeVFpeEpRVU5xUWpWR0xFMUJRVTFuUlN4UlFVRlZlRVFzUjBGRGFFSlNMRTFCUVUxNVJDeFRRVUZWTEVWQlEyaENla1FzVFVGQlRUSkVMRTFCUVU4c1JVRkRWRE5FTEUxQlFVMXZSQ3hWUVVGWGNFUXNUVUZCVFRaRUxGRkJRVkVzU1VGQlNURkNMSEZDUVVGeFFpeFZRVUZ0UW10RUxFOUJRVkV6UXl4UFFVRlBORU1zVVVGQlVVOHNUVUZCVHpkR0xFMUJRVTAyUkN4VFFVRmpia0lzVDBGQlR6QkRMRTlCUVU5VExFMUJRVTlETEZOQlFWVTVSaXhOUVVGTk5rUXNVMEZEZEVzM1JDeE5RVUZOTWtRc1RVRkJUeXhGUVhkRVppeFRRVUZUWjBJc1YwRkJWMnBETEU5QlFWRXhReXhOUVVGUGJVUXNVMEZCVlRORExFbEJRM1JETWtNc1ZVRlRVQ3hUUVVGelFsUXNUMEZCVVRGRExFOUJRMUFzU1VGQmFrSkJMRTFCUVUxM1JDeFJRVUZuUW5oRUxFMUJRVTFuUkN4WlFVTTVRbWhFTEUxQlFVMW5SQ3hYUVVGWkxFVkJRMnhDVGl4UFFVRlBjVVFzUzBGQlN5eFZRVnBEUXl4RFFVRmhkRVFzVDBGQlVURkRMRTlCUTNCRFFTeE5RVUZOVlN4WlFVTk9SaXhMUVVOQk5rUXNXVUZCV1ROQ0xFOUJRVkV4UXl4UFFXTjBRaXhUUVVGVE1FVXNXVUZCV1doRExFOUJRVkV4UXl4UFFVTXpRa0VzVFVGQlRUUkVMR3RDUVVGdFFpeEZRVU42UWl4SlFVRkplRVFzVFVGQlVVb3NUVUZCVFhsRkxHZENRVVZzUWl4SFFVRkpMMElzVDBGQlR6UkRMRk5CUVZkc1JpeFBRVUZUUVN4TlFVRk5SQ3hMUVVGTkxFTkJSWHBETEVsQlFVazRSaXhGUVVGSmFrY3NUVUZCVFdkR0xIRkNRVU5XYTBJc1QwRkJVeXhKUVVGSlF5eE5RVUZOUml4SFFVTnVRa2NzVDBGQlUzQkhMRTFCUVUxWExHMUNRVU51UW5sR0xFOUJRVTlvUnl4TlFVRlJRU3hOUVVsbUxFbEJTRUVzU1VGQlNXbEhMRTFCUVZFc1JVRkRVa01zV1VGQllTeEZRVVZXYkVjc1QwRkRURGhHTEU5QlFVOUhMRTlCUVZOcVJ5eE5RVU5ZUVN4TlFVRk5iVWNzVVVGQlQwUXNXVUZCWVN4SFFVTXZRbXhITEUxQlFWRkJMRTFCUVUxRUxFdEJRMlJyUnl4UFFVRlRMRVZCUjFoSUxFOUJRVTlKTEZkQlFXRkJMRmRCUTNCQ1dDeFJRVUZSYWtRc1QwRkJVVEZETEU5QlFVOHNSVUZCVFVFc1RVRkJUWGRFTEU5QlFWRXdReXhQUVVGUkxFZEJRVWxGTEU5QlFVOHZSaXhSUVVjNVJFd3NUVUZCVFZVc1dVRkRUbFlzVFVGQlRUUkZMRzlDUVVGelFpeExRVVY0UW5kQ0xFOUJRVTlxUnl4TlFVTlVTQ3hOUVVGTlZ5eHRRa0ZCY1VKNVJpeFBRVUZQYWtjc1MwRkRiRU5wUnl4UFFVRlBha2NzUzBGQlR5eE5RVVZrU0N4TlFVRk5WeXh0UWtGQmNVSXNTVUZCU1Zvc1kwRkJZME1zVDBGSEwwTkJMRTFCUVUxblJpeHhRa0ZCZFVJc1RVRkRlRUlzUTBGRlRDeExRVUZQTlVVc1QwRkJUeXhEUVVOYUxFbEJRVWw1Uml4TlFVRlJla1lzVFVGQlRYbEdMRTFCUTJSRExGTkJRVmN4Uml4TlFVRk5NRVlzVTBGRGFrSjBSaXhIUVVGTFNpeE5RVUZOU3l4VFFWTm1MRWRCVUVGclJpeFJRVUZSYWtRc1QwRkJVVEZETEU5QlFVOHNSVUZFWWtFc1RVRkJUVFJETEZkQlFXRXNSVUZCU1dsRUxFMUJRVTF5UXl4UFFVTktjVU1zVFVGQlQwTXNVMEZCVlhSR0xFbEJRM0JFU2l4TlFVRlJRU3hOUVVGTlJDeExRVU5rU0N4TlFVRk5aMFlzZFVKQlMwWm9SaXhOUVVGTmVVUXNVVUZEVWl4TlFVbFZMRTlCUVZaeVJDeFJRVUZuUWtvc1RVRkJUVFJGTEc5Q1FVRnpRaXhOUVVkc1JEVkZMRTFCUVUxNVJTeG5Ra0ZCYTBKeVJTeE5RVU40UWtvc1RVRkJUVFJFTEd0Q1FVRnRRaXhGUVRKRE0wSXNVMEZCVTFrc1YwRkJWM2hGTEU5QlEyeENMRTlCUVU5QkxFMUJRVTFwUkN4UlFVRXlRaXhKUVVGcVFtcEVMRTFCUVUxM1JDeFJRVUV3UXl4UFFVRXhRbmhFTEUxQlFVMTVSU3hyUWtGQk5rSjZSU3hOUVVGTmJVUXNWMEZCWVc1RUxFMUJRVTE1UkN4UlFVY3pSeXhUUVVGVEswTXNWVUZCVlRsRUxFOUJRVkV4UXl4UFFVTjZRakJETEU5QlFVOW5SQ3hQUVVGUExGTkJRVlZ1Uml4TFFVTjBRbEFzVFVGQlRWVXNXVUZGUmtnc1MwRkRSbWRETEdWQlFXVkhMRTlCUVZGdVF5eExRVWQ2UWxBc1RVRkJUVFpGTEdGQlFXTXNSVUZEY0VKdVF5eFBRVUZQY1VRc1MwRkJTeXhoUVVOYU1VSXNXVUZCV1ROQ0xFOUJRVkV4UXl4VFFXbENlRUlzVTBGQlUzRkZMRmxCUVZrelFpeFBRVUZSTVVNc1QwRkRNMElzU1VGQlNYbEhMRXRCUVU5cVF5eFhRVUZYZUVVc1QwRkZkRUlzUjBGQlNYbEhMRTlCYUVKT0xGTkJRVzFDTDBRc1QwRkJVVEZETEU5QlEzQkNRU3hOUVVGTk5rVXNZVUZCWjBJM1JTeE5RVUZOSzBNc1kwRkRSaXh0UWtGQmJFSk1MRTlCUVU5blJDeFJRVUV3UWpGR0xFMUJRVTF2UkN4WFFVdG9SSEJFTEUxQlFVMDJSU3hoUVVGakxFVkJRM0JDYmtNc1QwRkJUM0ZFTEV0QlFVc3NaVUZNV2k5R0xFMUJRVTFWTEZsQlEwNVdMRTFCUVUwclF5eGhRVUZqTEVWQlEzQkNiMElzVVVGQlVVTXNVMEZCVTI5RExGVkJRVmM1UkN4UFFVRlJNVU1zVTBGWmRFTXdSeXhEUVVGVmFFVXNUMEZCVVRGRExFOUJSVTBzU1VGQmNFSkJMRTFCUVUxVkxGbEJRMUpXTEUxQlFVMXRSQ3hWUVVGWExFVkJRMnBDVkN4UFFVRlBjVVFzUzBGQlN5eFZRVVZTTDBZc1RVRkJUU3RGTEdOQlFXRXNRMEZIY2tJc1NVRkJTVFJDTEU5QlFWTnFSU3hQUVVGUGEwVXNhVUpCUldaRUxGRkJRVlZCTEU5QlFVODFRaXhoUVVGbE5FSXNUMEZCVDBVc1lVRkRNVU51UlN4UFFVRlBOa01zVlVGTlppeFBRVUZQYTBJc1MwRXphRUpVY2tZc1VVRkJVU3hYUVVGU1FTeERRVUZ2UWtvc1UwRkJWVXNzVVVGNVJqbENTaXhqUVVGak5rWXNWVUZCVlVNc1ZVRkJXU3hYUVVsc1F5eEpRVWhCTEVsQlFVbERMRkZCUVZVNVJ5eExRVUZMZFVVc1owSkJRMlozUXl4SlFVRk5MRWRCUlVoRUxGTkJRMHhETEVsQlFVbERMRXRCUVV0R0xGTkJRMVJCTEZGQlFWVkJMRkZCUVZFM1J5eExRVWR3UWl4UFFVRlBPRWNzUzBGSFZDeFhRVU5GTEVsQlEwVkZMRTlCUVU5RExHVkJRV1Z1Unl4alFVRmpOa1lzVlVGQlZ5eFRRVUZWTEVOQlEzWkVUeXhKUVVGTGJrY3NZVUZCWVVNc1ZVRkJWU3hYUVVNeFFpeFBRVUZQYWtJc1MwRkJTelpITEdGQlExZ3NOa1ZCUVcxR0xHRkJSWGhHTEUxQlFVOVBMRXRCVUZnc1IwRmpjMElzYlVKQlFWaERMRkZCUVhsQ1FTeFBRVUZQUXl4aFFVRnBSU3h0UWtGQk0wTkRMRk5CUVZOWUxGVkJRVlZUTEU5QlFVOURMR05CUTNwR09VWXNaMEpCUVd0Q0swWXNVMEZCVTFnc1ZVRkJWVk1zVDBGQlQwTXNZVUZETlVOTUxFOUJRVTlETEdWQlFXVndSeXhUUVVGVmRVY3NUMEZCVDBNc1dVRkJZU3hEUVVOc1JFVXNUVUZCVHl4VFFVRmxReXhSUVVOd1FpeFJRVUZKYWtjc1owSkJRV2RDZFVRc1MwRkJTeTlGTEV0QlFVMTVTQ3hUUVVNelFucElMRTlCUVZOakxGZEJRMDR5Unl4UlFVRlZRU3hQUVVGUE5VUXNNRUpCUVRCQ09VTXNiVUpCU1hSRVV5eG5Ra0ZCYTBJc1UwRkJlVUpwUnl4UlFVTjZReXhQUVVGUFFTeHJRa0ZCYTBKNlNDeE5RU3RDTjBKakxGTkJRVk00Uml4VlFVRlZZeXhMUVVGUExGZEJRM2hDY2tZc1pVRkJaWEpETEV0QlFVMHNTVUZCU1dkRExIbENRU3RDTTBKc1FpeFRRVUZUT0VZc1ZVRkJWVE5DTEUxQlFWRXNVMEZCVlZVc1RVRkJUME1zVTBGQlZYUkdMRWxCUTNCRUxFbEJiazV4UW5GSUxFbEJiVTVxUWpkSUxFMUJRVkZGTEV0QlFVczJSQ3hsUVVOaUswUXNTMEZCVFN4RlFVVk9ka0lzVDBGQlUzWkhMRTFCUVUwMFF5eGhRWFJPUldsR0xFbEJjMDR3UW1oRExFMUJjazU0UTNaRkxFOUJRVTk1Unl4VFFVRlRSaXhOUVVGUlFTeGxRVUZsZEVjc1pVRnpUemxETEU5QlprbG5SaXhSUVVGVmFrWXNUMEZCVDNsSExGTkJRVk5zUXl4VFFVTTFRa0VzVFVFM1Rrb3NVMEZCTmtKQkxFOUJRek5DTEU5QlFVOTJSU3hQUVVGUE1FY3NTMEZCUzI1RExFOUJORTVVYjBNc1EwRkJiMEp3UXl4UlFVZE9MRzFDUVVGaVF5eFhRVU5VZEVZc1IwRkJTM05HTEZOQlEweEJMRk5CUVZjc1RVRkhWRk1zVFVGQlQxUXNVMEZCVnl4VFFVRnRRa0VzVjBGQlZVRXNVMEZCVnpsR0xFMUJRVTExUkN4cFFrRkRiRVFzYlVKQlFWQXZReXhMUVVGdFFrRXNSMEZCUzJkRExFdEJReTlDZUVNc1RVRkJUV2xFTEU5Qk4wTmFMRk5CUVhWQ1VDeFBRVUZSYkVNc1NVRkROMElzU1VGQlNYTkVMRWRCUVVzc1NVRkJTWHBDTERKQ1FVVmlSU3hsUVVGbFJ5eFBRVUZSYjBJc1NVRkRka0pMTEZGQlFWRkRMRk5CUVZNMVJDeEhRVUZKYzBRc1NVRjVRMGh2UlN4RFFVRmphRWtzUzBGQlRVMHNTMEZCWVN0R0xFOUJia055UkN4VFFVRnZRamRFTEU5QlFWRXhReXhOUVVGUE5rWXNUVUZCVDNKR0xFbEJRM2hETEVsQlFVbHpSQ3hIUVZGS0xFOUJUbU1zVDBGQlZpdENMRTFCUTBZdlFpeEhRVUZMTEVsQlFVa3hRaXgxUWtGRGFVSXNhVUpCUVZaNVJDeFBRVUYxUWpkR0xFMUJRVTAwUXl4aFFVTTNRMnRDTEVkQlFVc3NTVUZCU1M5Q0xIRkNRVUZ4UWl4UlFVRlRMRU5CUVVNc1UwRkJWU3hWUVVGWE9FUXNVMEZITTBRdlFpeExRVU5HZGtJc1pVRkJaVWNzVDBGQlVXOUNMRWxCUTNaQ1N5eFJRVUZSUXl4VFFVRlROVVFzUjBGQlNYTkVMRXRCUTJRc1IwRjFRbTFFY1VVc1EwRkJWMnBKTEV0QlFVMUdMRTFCUVU4MlJpeE5RVUZQY2tZc1QwRkRla1pTTEUxQlFVMVZMRmxCUTA1dlNDeEpRWGRFU2l4VFFVRjFRbkJHTEU5QlFWRXhReXhOUVVGUGRVY3NUVUZCVDFZc1RVRkJUME1zVTBGQlZYUkdMRWxCUXpWRUxFbEJRVXNyUml4TlFVRlBMRU5CUTFZc1NVRkJTVFpDTEZOQmRFSlNMRk5CUVhGQ2NFa3NUVUZCVHpaR0xFMUJRVTlETEZWQlF6VkNPVVlzVFVGQlRUUkRMR0ZCUVhORExFbEJRWGhDTlVNc1RVRkJUWE5FTEdWQlFUUkRMR2xDUVVGV2RVTXNVVUZETDBSQkxFMUJRVkYyUlN4UFFVRlBNRWNzUzBGQlMyNURMRTFCUVU5RExGZEJSemRDTEU5QlFVOUVMRTFCYVVKVmQwTXNRMEZCV1hKSkxFMUJRVTgyUml4TlFVRlBReXhWUVVWeVEwUXNVVUZCVlhWRExGZEJRMW8zUWl4UFFVRlJMRVZCUTFKVUxGTkJRVmNzVTBGRFdFUXNUVUZCVVhWRExGVkJTVm9zU1VGQlNYaERMRWxCUVUwMVJpeE5RVUZOTkVNc1YwRkJZU3hGUVVGSmFVUXNUVUZCVFhKRExFOUJRM1pEZUVRc1RVRkJUWGRFTEZGQlFWVnZReXhKUVVOb1FpeEpRVUZKYTBNc1NVRkJUVGxJTEUxQlFVMTNSQ3hQUVVGVGVFUXNUVUZCVFRoRExHTkJSVEZDWjBZc1RVRkJTemxJTEUxQlFVMW5SQ3hYUVVGWkxFZEJSVFZDTEVkQlFVbG9SQ3hOUVVGTmVVUXNVMEZCVjNwRUxFMUJRVTB3UkN4UFFVRlJMRU5CUTJwRExFbEJRVWswUlN4TFFVRlBkRWtzVFVGQlRUUkZMRzlDUVVOcVFqVkZMRTFCUVUwMFJTeHZRa0ZCYzBJc1EwRkRNVUpwUWl4TlFVRlBRU3hOUVVOUVF5eFRRVUZWUVN4VFFVTldVeXhOUVVGUFFTeE5RVU5RT1VZc1UwRkJWVVFzUjBGRFZrd3NTMEZCVFN4TlFVZEtiVWtzUzBGRFJrRXNTMEZCUzI1SkxFdEJRVTlJTEUxQlFVMDBSU3h2UWtGRmJFSTFSU3hOUVVGTmVVVXNaMEpCUVd0Q2VrVXNUVUZCVFRSRkxHOUNRVWRvUXpWRkxFMUJRVTFuUml4elFrRkJkMElzVDBGRk9VSlhMRkZCUVZGcVJDeFBRVUZSTVVNc1QwRkJUeXhGUVVGUE5FWXNTVUZCUzBNc1RVRkJUME1zVTBGQlZYUkdMRWxCUjNSRUxFOUJRVTl6U0N4SlFUbEdRMU1zUTBGQlkzSkpMRXRCUVUxR0xFMUJRVTkxUnl4TlFVRlBWaXhOUVVGUFF5eFRRVUZWZEVZc1MwRkZjRVJ6U0N4TFFVZFVPVWNzVTBGQlV6aEdMRlZCUVZVd1FpeExRVUZQTEZkQlEzaENkRWtzUzBGQlN6WkVMR1ZCUVdWTUxGVkJSM1JDTVVNc1UwRkJVemhHTEZWQlFWVXlRaXhQUVVGVExGZEJRekZDTEVsQlFVbDZTU3hOUVVGUlJTeExRVUZMTmtRc1pVRkZZaTlFTEUxQlFVMHdSQ3hUUVVOU01VUXNUVUZCVFRCRUxGTkJRMFF4UkN4TlFVRk5lVVFzVTBGQldYcEVMRTFCUVUwd1JDeFJRVUZYTVVRc1RVRkJUVFJFTEcxQ1FVRnZRalZFTEUxQlFVMTVSU3hwUWtGQmFVSkRMRmxCUVZsNFJTeExRVUZOUml4VFFVa3ZSMmRDTEZOQlFWTTRSaXhWUVVGVk5FSXNiVUpCUVhGQ0xGTkJRVFJDTlVNc1ZVRkhiRVVzUjBGRWQwSXNhVUpCUVdKQkxGZEJRWFZDUVN4VFFVRlhRU3hUUVVGVE5rTXNhVUpCUTJoRUxFTkJRVU1zVFVGQlR5eFBRVUZSTEZGQlFWTXNVVUZCVXl4VFFVRlZMRk5CUVZVc1QwRkJVU3hSUVVGVExGVkJRVmNzVjBGQldTeFBRVUZQUXl4VFFVRlRPVU1zVTBGQlZ5eEpRVUZKTmtNc1owSkJRV3RDTEVkQlFVa3NUVUZCVFN4SlFVRkpja2NzY1VKQlFYRkNkMFFzVlVGRmVFd3NUMEZFUVRWR0xFdEJRVXMyUkN4bFFVRmxVaXhuUWtGQmEwSjFReXhUUVVNdlFqVkdMRTFCUjFScFNDeFBRVUZQUXl4bFFVRmxjRWNzVTBGQlV6aEdMRlZCUVZjc2FVSkJRV3RDTEVOQlNURkVLMElzV1VGQldTeEZRVU5hZUVJc1NVRkJTeXhYUVVOSUxFOUJRVTl1U0N4TFFVRkxOa1FzWjBKQlFXdENOMFFzUzBGQlN6WkVMR1ZCUVdWblJDeGxRVmwwUkVrc1QwRkJUME1zWlVGQlpYQkhMRk5CUVZNNFJpeFZRVUZYTEhkQ1FVRjVRaXhEUVVscVJTdENMRmxCUVZrc1JVRkRXbmhDTEVsQlFVc3NWMEZEU0N4UFFVRlBia2dzUzBGQlN6WkVMR1ZCUVdWcVFpeHBRa0UwVEM5Q09VSXNVMEZCVXpoR0xGVkJRVlV4UWl4UFFVRlRMRk5CUVZWVExFMUJRVTlETEZOQlFWVjBSaXhKUVVOeVJFRXNSMEZCUnl4SlFVRkpkMElzTWtKQlFUSkNMR05CUjNCRGFFSXNVMEZCVXpoR0xGVkJRVlY0UWl4UlFVRlZMRXRCUlRkQ2RFVXNVMEZCVXpoR0xGVkJRVlZuUXl4SlFVRk5MRk5CUVZWcVJDeE5RVUZQUXl4VFFVRlZkRVlzU1VGRGJFUXNTVUZCU1ZJc1RVRkJVVVVzUzBGQlN6WkVMR1ZCYjBKcVFpeE5RV3hDY1VJc2JVSkJRVlk0UWl4UFFVTlVja1lzUjBGQlMzRkdMRTFCUTB4QkxFMUJRVkVzUzBGRFVrTXNVMEZCVnl4TlFVTnJRaXh0UWtGQllrRXNWMEZEYUVKMFJpeEhRVUZMYzBZc1UwRkRURUVzVTBGQlZ5eE5RVWRVUkN4TlFVRkJRU3hQUVVGMVF6TkdMRXRCUVV0cFJpeE5RVUZOVlN4TlFVRlBReXhWUVVWNlJEbEdMRTFCUVUwd1JDeFRRVU5TTVVRc1RVRkJUVEJFTEU5QlFWTXNSVUZEWm5oRUxFdEJRVXQxU1N4VlFVbEdla2tzVFVGQlRXbEVMRkZCYzBWaUxGTkJRWEZDVUN4UFFVRlJNVU1zVFVGQlQxRXNTVUZEYkVOU0xFMUJRVTFwUkN4UlFVRlRMRVZCUTJadlFpeFpRVUZaTTBJc1QwRkJVVEZETEU5QlJXaENVU3hMUVVORlVpeE5RVUZOYlVRc1UwRkJWV2RDTEZGQlFWRkRMRk5CUVZNMVJDeEpRVUZUYTBNc1QwRkJUM0ZITEV0QlFVc3NVMEZCVlhaSkxFdEJSM1JGVWl4TlFVRk5hMFFzVDBGQlVTeEZRVU5rVWl4UFFVRlBkME1zVlVGQlZ5eEZRUzlGUXpoRUxFTkJRVms1U1N4TFFVRk5SaXhOUVVGUFVTeEpRVU55UTA0c1RVRkhWR2xJTEU5QlFVOURMR1ZCUVdWd1J5eFRRVUZUT0VZc1ZVRkJWeXhwUWtGQmEwSXNRMEZKTVVRclFpeFpRVUZaTEVWQlExcDRRaXhKUVVGTExGZEJRMGdzVDBGQlQyNUlMRXRCUVVzMlJDeGxRVUZsVUN4VlFYVkdMMEl5UkN4UFFVRlBReXhsUVVGbGNFY3NVMEZCVXpoR0xGVkJRVmNzV1VGQllTeERRVWx5UkN0Q0xGbEJRVmtzUlVGRFduaENMRWxCUVVzc1YwRkRTQ3haUVVFMFFqUkNMRWxCUVhoQ0wwa3NTMEZCU3paRUxHZENRVWxHTjBRc1MwRkJTelpFTEdWQlFXVllMRmRCUlRkQ09FWXNTVUZCU3l4VFFVRmhlRUlzVDBGSFdIaElMRXRCUVVzMlJDeHBRa0ZOVmpkRUxFdEJRVXMyUkN4bFFVRmxXQ3hWUVVGWmMwVXNWVUZIY0VNeFJ5eFRRVUZUT0VZc1ZVRkJWWFpDTEZGQlFWVTFSQ3haUVVGWk5FUXNVVUZEZWtOMlJTeFRRVUZUT0VZc1ZVRkJWWEZETEZkQlFXRjRTQ3haUVVGWmVVZ3NWVUZGTlVOd1NTeFRRVUZUT0VZc1ZVRkJWWFJDTEZOQlFWY3NVMEZCVldwR0xFbEJRVXRETEVsQlF6TkRRU3hIUVVGSFJDSXNJbVpwYkdVaU9pSXZhRzl0WlM5dGFDMWpZbTl1TDJkdmR5OXpjbU12WjJsMGFIVmlMbU52YlM5cmJtRmthQzl1YVd4MFlXeHJMM04wWVhScFl5OTBhR1Z0WlhNdmEyNWhaR2d2YzNSaGRHbGpMMnhwWWkxM2FHbHpjR1Z5TWk5dWIyUmxYMjF2WkhWc1pYTXZjM0JzYVhReUwyNXZaR1ZmYlc5a2RXeGxjeTl5WldGa1lXSnNaUzF6ZEhKbFlXMHZiR2xpTDE5emRISmxZVzFmZDNKcGRHRmliR1V1YW5NaWZRPT0iLCJcInVzZSBzdHJpY3RcIjt2YXIgRHVwbGV4O21vZHVsZS5leHBvcnRzPVJlYWRhYmxlLFJlYWRhYmxlLlJlYWRhYmxlU3RhdGU9UmVhZGFibGVTdGF0ZTtyZXF1aXJlKFwiZXZlbnRzXCIpLkV2ZW50RW1pdHRlcjt2YXIgRUVsaXN0ZW5lckNvdW50PWZ1bmN0aW9uKGVtaXR0ZXIsdHlwZSl7cmV0dXJuIGVtaXR0ZXIubGlzdGVuZXJzKHR5cGUpLmxlbmd0aH0sU3RyZWFtPXJlcXVpcmUoXCIuL2ludGVybmFsL3N0cmVhbXMvc3RyZWFtXCIpLEJ1ZmZlcj1yZXF1aXJlKFwiYnVmZmVyXCIpLkJ1ZmZlcixPdXJVaW50OEFycmF5PWdsb2JhbC5VaW50OEFycmF5fHxmdW5jdGlvbigpe307dmFyIGRlYnVnLGRlYnVnVXRpbD1yZXF1aXJlKFwidXRpbFwiKTtkZWJ1Zz1kZWJ1Z1V0aWwmJmRlYnVnVXRpbC5kZWJ1Z2xvZz9kZWJ1Z1V0aWwuZGVidWdsb2coXCJzdHJlYW1cIik6ZnVuY3Rpb24oKXt9O3ZhciBTdHJpbmdEZWNvZGVyLGNyZWF0ZVJlYWRhYmxlU3RyZWFtQXN5bmNJdGVyYXRvcixmcm9tLEJ1ZmZlckxpc3Q9cmVxdWlyZShcIi4vaW50ZXJuYWwvc3RyZWFtcy9idWZmZXJfbGlzdFwiKSxkZXN0cm95SW1wbD1yZXF1aXJlKFwiLi9pbnRlcm5hbC9zdHJlYW1zL2Rlc3Ryb3lcIiksZ2V0SGlnaFdhdGVyTWFyaz1yZXF1aXJlKFwiLi9pbnRlcm5hbC9zdHJlYW1zL3N0YXRlXCIpLmdldEhpZ2hXYXRlck1hcmssX3JlcXVpcmUkY29kZXM9cmVxdWlyZShcIi4uL2Vycm9yc1wiKS5jb2RlcyxFUlJfSU5WQUxJRF9BUkdfVFlQRT1fcmVxdWlyZSRjb2Rlcy5FUlJfSU5WQUxJRF9BUkdfVFlQRSxFUlJfU1RSRUFNX1BVU0hfQUZURVJfRU9GPV9yZXF1aXJlJGNvZGVzLkVSUl9TVFJFQU1fUFVTSF9BRlRFUl9FT0YsRVJSX01FVEhPRF9OT1RfSU1QTEVNRU5URUQ9X3JlcXVpcmUkY29kZXMuRVJSX01FVEhPRF9OT1RfSU1QTEVNRU5URUQsRVJSX1NUUkVBTV9VTlNISUZUX0FGVEVSX0VORF9FVkVOVD1fcmVxdWlyZSRjb2Rlcy5FUlJfU1RSRUFNX1VOU0hJRlRfQUZURVJfRU5EX0VWRU5UO3JlcXVpcmUoXCJpbmhlcml0c1wiKShSZWFkYWJsZSxTdHJlYW0pO3ZhciBlcnJvck9yRGVzdHJveT1kZXN0cm95SW1wbC5lcnJvck9yRGVzdHJveSxrUHJveHlFdmVudHM9W1wiZXJyb3JcIixcImNsb3NlXCIsXCJkZXN0cm95XCIsXCJwYXVzZVwiLFwicmVzdW1lXCJdO2Z1bmN0aW9uIFJlYWRhYmxlU3RhdGUob3B0aW9ucyxzdHJlYW0saXNEdXBsZXgpe0R1cGxleD1EdXBsZXh8fHJlcXVpcmUoXCIuL19zdHJlYW1fZHVwbGV4XCIpLG9wdGlvbnM9b3B0aW9uc3x8e30sXCJib29sZWFuXCIhPXR5cGVvZiBpc0R1cGxleCYmKGlzRHVwbGV4PXN0cmVhbSBpbnN0YW5jZW9mIER1cGxleCksdGhpcy5vYmplY3RNb2RlPSEhb3B0aW9ucy5vYmplY3RNb2RlLGlzRHVwbGV4JiYodGhpcy5vYmplY3RNb2RlPXRoaXMub2JqZWN0TW9kZXx8ISFvcHRpb25zLnJlYWRhYmxlT2JqZWN0TW9kZSksdGhpcy5oaWdoV2F0ZXJNYXJrPWdldEhpZ2hXYXRlck1hcmsodGhpcyxvcHRpb25zLFwicmVhZGFibGVIaWdoV2F0ZXJNYXJrXCIsaXNEdXBsZXgpLHRoaXMuYnVmZmVyPW5ldyBCdWZmZXJMaXN0LHRoaXMubGVuZ3RoPTAsdGhpcy5waXBlcz1udWxsLHRoaXMucGlwZXNDb3VudD0wLHRoaXMuZmxvd2luZz1udWxsLHRoaXMuZW5kZWQ9ITEsdGhpcy5lbmRFbWl0dGVkPSExLHRoaXMucmVhZGluZz0hMSx0aGlzLnN5bmM9ITAsdGhpcy5uZWVkUmVhZGFibGU9ITEsdGhpcy5lbWl0dGVkUmVhZGFibGU9ITEsdGhpcy5yZWFkYWJsZUxpc3RlbmluZz0hMSx0aGlzLnJlc3VtZVNjaGVkdWxlZD0hMSx0aGlzLnBhdXNlZD0hMCx0aGlzLmVtaXRDbG9zZT0hMSE9PW9wdGlvbnMuZW1pdENsb3NlLHRoaXMuYXV0b0Rlc3Ryb3k9ISFvcHRpb25zLmF1dG9EZXN0cm95LHRoaXMuZGVzdHJveWVkPSExLHRoaXMuZGVmYXVsdEVuY29kaW5nPW9wdGlvbnMuZGVmYXVsdEVuY29kaW5nfHxcInV0ZjhcIix0aGlzLmF3YWl0RHJhaW49MCx0aGlzLnJlYWRpbmdNb3JlPSExLHRoaXMuZGVjb2Rlcj1udWxsLHRoaXMuZW5jb2Rpbmc9bnVsbCxvcHRpb25zLmVuY29kaW5nJiYoU3RyaW5nRGVjb2Rlcnx8KFN0cmluZ0RlY29kZXI9cmVxdWlyZShcInN0cmluZ19kZWNvZGVyL1wiKS5TdHJpbmdEZWNvZGVyKSx0aGlzLmRlY29kZXI9bmV3IFN0cmluZ0RlY29kZXIob3B0aW9ucy5lbmNvZGluZyksdGhpcy5lbmNvZGluZz1vcHRpb25zLmVuY29kaW5nKX1mdW5jdGlvbiBSZWFkYWJsZShvcHRpb25zKXtpZihEdXBsZXg9RHVwbGV4fHxyZXF1aXJlKFwiLi9fc3RyZWFtX2R1cGxleFwiKSwhKHRoaXMgaW5zdGFuY2VvZiBSZWFkYWJsZSkpcmV0dXJuIG5ldyBSZWFkYWJsZShvcHRpb25zKTt2YXIgaXNEdXBsZXg9dGhpcyBpbnN0YW5jZW9mIER1cGxleDt0aGlzLl9yZWFkYWJsZVN0YXRlPW5ldyBSZWFkYWJsZVN0YXRlKG9wdGlvbnMsdGhpcyxpc0R1cGxleCksdGhpcy5yZWFkYWJsZT0hMCxvcHRpb25zJiYoXCJmdW5jdGlvblwiPT10eXBlb2Ygb3B0aW9ucy5yZWFkJiYodGhpcy5fcmVhZD1vcHRpb25zLnJlYWQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIG9wdGlvbnMuZGVzdHJveSYmKHRoaXMuX2Rlc3Ryb3k9b3B0aW9ucy5kZXN0cm95KSksU3RyZWFtLmNhbGwodGhpcyl9ZnVuY3Rpb24gcmVhZGFibGVBZGRDaHVuayhzdHJlYW0sY2h1bmssZW5jb2RpbmcsYWRkVG9Gcm9udCxza2lwQ2h1bmtDaGVjayl7ZGVidWcoXCJyZWFkYWJsZUFkZENodW5rXCIsY2h1bmspO3ZhciBlcixzdGF0ZT1zdHJlYW0uX3JlYWRhYmxlU3RhdGU7aWYobnVsbD09PWNodW5rKXN0YXRlLnJlYWRpbmc9ITEsZnVuY3Rpb24oc3RyZWFtLHN0YXRlKXtpZihkZWJ1ZyhcIm9uRW9mQ2h1bmtcIiksc3RhdGUuZW5kZWQpcmV0dXJuO2lmKHN0YXRlLmRlY29kZXIpe3ZhciBjaHVuaz1zdGF0ZS5kZWNvZGVyLmVuZCgpO2NodW5rJiZjaHVuay5sZW5ndGgmJihzdGF0ZS5idWZmZXIucHVzaChjaHVuayksc3RhdGUubGVuZ3RoKz1zdGF0ZS5vYmplY3RNb2RlPzE6Y2h1bmsubGVuZ3RoKX1zdGF0ZS5lbmRlZD0hMCxzdGF0ZS5zeW5jP2VtaXRSZWFkYWJsZShzdHJlYW0pOihzdGF0ZS5uZWVkUmVhZGFibGU9ITEsc3RhdGUuZW1pdHRlZFJlYWRhYmxlfHwoc3RhdGUuZW1pdHRlZFJlYWRhYmxlPSEwLGVtaXRSZWFkYWJsZV8oc3RyZWFtKSkpfShzdHJlYW0sc3RhdGUpO2Vsc2UgaWYoc2tpcENodW5rQ2hlY2t8fChlcj1mdW5jdGlvbihzdGF0ZSxjaHVuayl7dmFyIGVyO29iaj1jaHVuayxCdWZmZXIuaXNCdWZmZXIob2JqKXx8b2JqIGluc3RhbmNlb2YgT3VyVWludDhBcnJheXx8XCJzdHJpbmdcIj09dHlwZW9mIGNodW5rfHx2b2lkIDA9PT1jaHVua3x8c3RhdGUub2JqZWN0TW9kZXx8KGVyPW5ldyBFUlJfSU5WQUxJRF9BUkdfVFlQRShcImNodW5rXCIsW1wic3RyaW5nXCIsXCJCdWZmZXJcIixcIlVpbnQ4QXJyYXlcIl0sY2h1bmspKTt2YXIgb2JqO3JldHVybiBlcn0oc3RhdGUsY2h1bmspKSxlcillcnJvck9yRGVzdHJveShzdHJlYW0sZXIpO2Vsc2UgaWYoc3RhdGUub2JqZWN0TW9kZXx8Y2h1bmsmJmNodW5rLmxlbmd0aD4wKWlmKFwic3RyaW5nXCI9PXR5cGVvZiBjaHVua3x8c3RhdGUub2JqZWN0TW9kZXx8T2JqZWN0LmdldFByb3RvdHlwZU9mKGNodW5rKT09PUJ1ZmZlci5wcm90b3R5cGV8fChjaHVuaz1mdW5jdGlvbihjaHVuayl7cmV0dXJuIEJ1ZmZlci5mcm9tKGNodW5rKX0oY2h1bmspKSxhZGRUb0Zyb250KXN0YXRlLmVuZEVtaXR0ZWQ/ZXJyb3JPckRlc3Ryb3koc3RyZWFtLG5ldyBFUlJfU1RSRUFNX1VOU0hJRlRfQUZURVJfRU5EX0VWRU5UKTphZGRDaHVuayhzdHJlYW0sc3RhdGUsY2h1bmssITApO2Vsc2UgaWYoc3RhdGUuZW5kZWQpZXJyb3JPckRlc3Ryb3koc3RyZWFtLG5ldyBFUlJfU1RSRUFNX1BVU0hfQUZURVJfRU9GKTtlbHNle2lmKHN0YXRlLmRlc3Ryb3llZClyZXR1cm4hMTtzdGF0ZS5yZWFkaW5nPSExLHN0YXRlLmRlY29kZXImJiFlbmNvZGluZz8oY2h1bms9c3RhdGUuZGVjb2Rlci53cml0ZShjaHVuayksc3RhdGUub2JqZWN0TW9kZXx8MCE9PWNodW5rLmxlbmd0aD9hZGRDaHVuayhzdHJlYW0sc3RhdGUsY2h1bmssITEpOm1heWJlUmVhZE1vcmUoc3RyZWFtLHN0YXRlKSk6YWRkQ2h1bmsoc3RyZWFtLHN0YXRlLGNodW5rLCExKX1lbHNlIGFkZFRvRnJvbnR8fChzdGF0ZS5yZWFkaW5nPSExLG1heWJlUmVhZE1vcmUoc3RyZWFtLHN0YXRlKSk7cmV0dXJuIXN0YXRlLmVuZGVkJiYoc3RhdGUubGVuZ3RoPHN0YXRlLmhpZ2hXYXRlck1hcmt8fDA9PT1zdGF0ZS5sZW5ndGgpfWZ1bmN0aW9uIGFkZENodW5rKHN0cmVhbSxzdGF0ZSxjaHVuayxhZGRUb0Zyb250KXtzdGF0ZS5mbG93aW5nJiYwPT09c3RhdGUubGVuZ3RoJiYhc3RhdGUuc3luYz8oc3RhdGUuYXdhaXREcmFpbj0wLHN0cmVhbS5lbWl0KFwiZGF0YVwiLGNodW5rKSk6KHN0YXRlLmxlbmd0aCs9c3RhdGUub2JqZWN0TW9kZT8xOmNodW5rLmxlbmd0aCxhZGRUb0Zyb250P3N0YXRlLmJ1ZmZlci51bnNoaWZ0KGNodW5rKTpzdGF0ZS5idWZmZXIucHVzaChjaHVuayksc3RhdGUubmVlZFJlYWRhYmxlJiZlbWl0UmVhZGFibGUoc3RyZWFtKSksbWF5YmVSZWFkTW9yZShzdHJlYW0sc3RhdGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZWFkYWJsZS5wcm90b3R5cGUsXCJkZXN0cm95ZWRcIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5fcmVhZGFibGVTdGF0ZSYmdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWR9LHNldDpmdW5jdGlvbih2YWx1ZSl7dGhpcy5fcmVhZGFibGVTdGF0ZSYmKHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkPXZhbHVlKX19KSxSZWFkYWJsZS5wcm90b3R5cGUuZGVzdHJveT1kZXN0cm95SW1wbC5kZXN0cm95LFJlYWRhYmxlLnByb3RvdHlwZS5fdW5kZXN0cm95PWRlc3Ryb3lJbXBsLnVuZGVzdHJveSxSZWFkYWJsZS5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24oZXJyLGNiKXtjYihlcnIpfSxSZWFkYWJsZS5wcm90b3R5cGUucHVzaD1mdW5jdGlvbihjaHVuayxlbmNvZGluZyl7dmFyIHNraXBDaHVua0NoZWNrLHN0YXRlPXRoaXMuX3JlYWRhYmxlU3RhdGU7cmV0dXJuIHN0YXRlLm9iamVjdE1vZGU/c2tpcENodW5rQ2hlY2s9ITA6XCJzdHJpbmdcIj09dHlwZW9mIGNodW5rJiYoKGVuY29kaW5nPWVuY29kaW5nfHxzdGF0ZS5kZWZhdWx0RW5jb2RpbmcpIT09c3RhdGUuZW5jb2RpbmcmJihjaHVuaz1CdWZmZXIuZnJvbShjaHVuayxlbmNvZGluZyksZW5jb2Rpbmc9XCJcIiksc2tpcENodW5rQ2hlY2s9ITApLHJlYWRhYmxlQWRkQ2h1bmsodGhpcyxjaHVuayxlbmNvZGluZywhMSxza2lwQ2h1bmtDaGVjayl9LFJlYWRhYmxlLnByb3RvdHlwZS51bnNoaWZ0PWZ1bmN0aW9uKGNodW5rKXtyZXR1cm4gcmVhZGFibGVBZGRDaHVuayh0aGlzLGNodW5rLG51bGwsITAsITEpfSxSZWFkYWJsZS5wcm90b3R5cGUuaXNQYXVzZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMT09PXRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZ30sUmVhZGFibGUucHJvdG90eXBlLnNldEVuY29kaW5nPWZ1bmN0aW9uKGVuYyl7U3RyaW5nRGVjb2Rlcnx8KFN0cmluZ0RlY29kZXI9cmVxdWlyZShcInN0cmluZ19kZWNvZGVyL1wiKS5TdHJpbmdEZWNvZGVyKTt2YXIgZGVjb2Rlcj1uZXcgU3RyaW5nRGVjb2RlcihlbmMpO3RoaXMuX3JlYWRhYmxlU3RhdGUuZGVjb2Rlcj1kZWNvZGVyLHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5jb2Rpbmc9dGhpcy5fcmVhZGFibGVTdGF0ZS5kZWNvZGVyLmVuY29kaW5nO2Zvcih2YXIgcD10aGlzLl9yZWFkYWJsZVN0YXRlLmJ1ZmZlci5oZWFkLGNvbnRlbnQ9XCJcIjtudWxsIT09cDspY29udGVudCs9ZGVjb2Rlci53cml0ZShwLmRhdGEpLHA9cC5uZXh0O3JldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlLmJ1ZmZlci5jbGVhcigpLFwiXCIhPT1jb250ZW50JiZ0aGlzLl9yZWFkYWJsZVN0YXRlLmJ1ZmZlci5wdXNoKGNvbnRlbnQpLHRoaXMuX3JlYWRhYmxlU3RhdGUubGVuZ3RoPWNvbnRlbnQubGVuZ3RoLHRoaXN9O3ZhciBNQVhfSFdNPTEwNzM3NDE4MjQ7ZnVuY3Rpb24gaG93TXVjaFRvUmVhZChuLHN0YXRlKXtyZXR1cm4gbjw9MHx8MD09PXN0YXRlLmxlbmd0aCYmc3RhdGUuZW5kZWQ/MDpzdGF0ZS5vYmplY3RNb2RlPzE6biE9bj9zdGF0ZS5mbG93aW5nJiZzdGF0ZS5sZW5ndGg/c3RhdGUuYnVmZmVyLmhlYWQuZGF0YS5sZW5ndGg6c3RhdGUubGVuZ3RoOihuPnN0YXRlLmhpZ2hXYXRlck1hcmsmJihzdGF0ZS5oaWdoV2F0ZXJNYXJrPWZ1bmN0aW9uKG4pe3JldHVybiBuPj1NQVhfSFdNP249TUFYX0hXTToobi0tLG58PW4+Pj4xLG58PW4+Pj4yLG58PW4+Pj40LG58PW4+Pj44LG58PW4+Pj4xNixuKyspLG59KG4pKSxuPD1zdGF0ZS5sZW5ndGg/bjpzdGF0ZS5lbmRlZD9zdGF0ZS5sZW5ndGg6KHN0YXRlLm5lZWRSZWFkYWJsZT0hMCwwKSl9ZnVuY3Rpb24gZW1pdFJlYWRhYmxlKHN0cmVhbSl7dmFyIHN0YXRlPXN0cmVhbS5fcmVhZGFibGVTdGF0ZTtkZWJ1ZyhcImVtaXRSZWFkYWJsZVwiLHN0YXRlLm5lZWRSZWFkYWJsZSxzdGF0ZS5lbWl0dGVkUmVhZGFibGUpLHN0YXRlLm5lZWRSZWFkYWJsZT0hMSxzdGF0ZS5lbWl0dGVkUmVhZGFibGV8fChkZWJ1ZyhcImVtaXRSZWFkYWJsZVwiLHN0YXRlLmZsb3dpbmcpLHN0YXRlLmVtaXR0ZWRSZWFkYWJsZT0hMCxwcm9jZXNzLm5leHRUaWNrKGVtaXRSZWFkYWJsZV8sc3RyZWFtKSl9ZnVuY3Rpb24gZW1pdFJlYWRhYmxlXyhzdHJlYW0pe3ZhciBzdGF0ZT1zdHJlYW0uX3JlYWRhYmxlU3RhdGU7ZGVidWcoXCJlbWl0UmVhZGFibGVfXCIsc3RhdGUuZGVzdHJveWVkLHN0YXRlLmxlbmd0aCxzdGF0ZS5lbmRlZCksc3RhdGUuZGVzdHJveWVkfHwhc3RhdGUubGVuZ3RoJiYhc3RhdGUuZW5kZWR8fChzdHJlYW0uZW1pdChcInJlYWRhYmxlXCIpLHN0YXRlLmVtaXR0ZWRSZWFkYWJsZT0hMSksc3RhdGUubmVlZFJlYWRhYmxlPSFzdGF0ZS5mbG93aW5nJiYhc3RhdGUuZW5kZWQmJnN0YXRlLmxlbmd0aDw9c3RhdGUuaGlnaFdhdGVyTWFyayxmbG93KHN0cmVhbSl9ZnVuY3Rpb24gbWF5YmVSZWFkTW9yZShzdHJlYW0sc3RhdGUpe3N0YXRlLnJlYWRpbmdNb3JlfHwoc3RhdGUucmVhZGluZ01vcmU9ITAscHJvY2Vzcy5uZXh0VGljayhtYXliZVJlYWRNb3JlXyxzdHJlYW0sc3RhdGUpKX1mdW5jdGlvbiBtYXliZVJlYWRNb3JlXyhzdHJlYW0sc3RhdGUpe2Zvcig7IXN0YXRlLnJlYWRpbmcmJiFzdGF0ZS5lbmRlZCYmKHN0YXRlLmxlbmd0aDxzdGF0ZS5oaWdoV2F0ZXJNYXJrfHxzdGF0ZS5mbG93aW5nJiYwPT09c3RhdGUubGVuZ3RoKTspe3ZhciBsZW49c3RhdGUubGVuZ3RoO2lmKGRlYnVnKFwibWF5YmVSZWFkTW9yZSByZWFkIDBcIiksc3RyZWFtLnJlYWQoMCksbGVuPT09c3RhdGUubGVuZ3RoKWJyZWFrfXN0YXRlLnJlYWRpbmdNb3JlPSExfWZ1bmN0aW9uIHVwZGF0ZVJlYWRhYmxlTGlzdGVuaW5nKHNlbGYpe3ZhciBzdGF0ZT1zZWxmLl9yZWFkYWJsZVN0YXRlO3N0YXRlLnJlYWRhYmxlTGlzdGVuaW5nPXNlbGYubGlzdGVuZXJDb3VudChcInJlYWRhYmxlXCIpPjAsc3RhdGUucmVzdW1lU2NoZWR1bGVkJiYhc3RhdGUucGF1c2VkP3N0YXRlLmZsb3dpbmc9ITA6c2VsZi5saXN0ZW5lckNvdW50KFwiZGF0YVwiKT4wJiZzZWxmLnJlc3VtZSgpfWZ1bmN0aW9uIG5SZWFkaW5nTmV4dFRpY2soc2VsZil7ZGVidWcoXCJyZWFkYWJsZSBuZXh0dGljayByZWFkIDBcIiksc2VsZi5yZWFkKDApfWZ1bmN0aW9uIHJlc3VtZV8oc3RyZWFtLHN0YXRlKXtkZWJ1ZyhcInJlc3VtZVwiLHN0YXRlLnJlYWRpbmcpLHN0YXRlLnJlYWRpbmd8fHN0cmVhbS5yZWFkKDApLHN0YXRlLnJlc3VtZVNjaGVkdWxlZD0hMSxzdHJlYW0uZW1pdChcInJlc3VtZVwiKSxmbG93KHN0cmVhbSksc3RhdGUuZmxvd2luZyYmIXN0YXRlLnJlYWRpbmcmJnN0cmVhbS5yZWFkKDApfWZ1bmN0aW9uIGZsb3coc3RyZWFtKXt2YXIgc3RhdGU9c3RyZWFtLl9yZWFkYWJsZVN0YXRlO2ZvcihkZWJ1ZyhcImZsb3dcIixzdGF0ZS5mbG93aW5nKTtzdGF0ZS5mbG93aW5nJiZudWxsIT09c3RyZWFtLnJlYWQoKTspO31mdW5jdGlvbiBmcm9tTGlzdChuLHN0YXRlKXtyZXR1cm4gMD09PXN0YXRlLmxlbmd0aD9udWxsOihzdGF0ZS5vYmplY3RNb2RlP3JldD1zdGF0ZS5idWZmZXIuc2hpZnQoKTohbnx8bj49c3RhdGUubGVuZ3RoPyhyZXQ9c3RhdGUuZGVjb2Rlcj9zdGF0ZS5idWZmZXIuam9pbihcIlwiKToxPT09c3RhdGUuYnVmZmVyLmxlbmd0aD9zdGF0ZS5idWZmZXIuZmlyc3QoKTpzdGF0ZS5idWZmZXIuY29uY2F0KHN0YXRlLmxlbmd0aCksc3RhdGUuYnVmZmVyLmNsZWFyKCkpOnJldD1zdGF0ZS5idWZmZXIuY29uc3VtZShuLHN0YXRlLmRlY29kZXIpLHJldCk7dmFyIHJldH1mdW5jdGlvbiBlbmRSZWFkYWJsZShzdHJlYW0pe3ZhciBzdGF0ZT1zdHJlYW0uX3JlYWRhYmxlU3RhdGU7ZGVidWcoXCJlbmRSZWFkYWJsZVwiLHN0YXRlLmVuZEVtaXR0ZWQpLHN0YXRlLmVuZEVtaXR0ZWR8fChzdGF0ZS5lbmRlZD0hMCxwcm9jZXNzLm5leHRUaWNrKGVuZFJlYWRhYmxlTlQsc3RhdGUsc3RyZWFtKSl9ZnVuY3Rpb24gZW5kUmVhZGFibGVOVChzdGF0ZSxzdHJlYW0pe2lmKGRlYnVnKFwiZW5kUmVhZGFibGVOVFwiLHN0YXRlLmVuZEVtaXR0ZWQsc3RhdGUubGVuZ3RoKSwhc3RhdGUuZW5kRW1pdHRlZCYmMD09PXN0YXRlLmxlbmd0aCYmKHN0YXRlLmVuZEVtaXR0ZWQ9ITAsc3RyZWFtLnJlYWRhYmxlPSExLHN0cmVhbS5lbWl0KFwiZW5kXCIpLHN0YXRlLmF1dG9EZXN0cm95KSl7dmFyIHdTdGF0ZT1zdHJlYW0uX3dyaXRhYmxlU3RhdGU7KCF3U3RhdGV8fHdTdGF0ZS5hdXRvRGVzdHJveSYmd1N0YXRlLmZpbmlzaGVkKSYmc3RyZWFtLmRlc3Ryb3koKX19ZnVuY3Rpb24gaW5kZXhPZih4cyx4KXtmb3IodmFyIGk9MCxsPXhzLmxlbmd0aDtpPGw7aSsrKWlmKHhzW2ldPT09eClyZXR1cm4gaTtyZXR1cm4tMX1SZWFkYWJsZS5wcm90b3R5cGUucmVhZD1mdW5jdGlvbihuKXtkZWJ1ZyhcInJlYWRcIixuKSxuPXBhcnNlSW50KG4sMTApO3ZhciBzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlLG5PcmlnPW47aWYoMCE9PW4mJihzdGF0ZS5lbWl0dGVkUmVhZGFibGU9ITEpLDA9PT1uJiZzdGF0ZS5uZWVkUmVhZGFibGUmJigoMCE9PXN0YXRlLmhpZ2hXYXRlck1hcms/c3RhdGUubGVuZ3RoPj1zdGF0ZS5oaWdoV2F0ZXJNYXJrOnN0YXRlLmxlbmd0aD4wKXx8c3RhdGUuZW5kZWQpKXJldHVybiBkZWJ1ZyhcInJlYWQ6IGVtaXRSZWFkYWJsZVwiLHN0YXRlLmxlbmd0aCxzdGF0ZS5lbmRlZCksMD09PXN0YXRlLmxlbmd0aCYmc3RhdGUuZW5kZWQ/ZW5kUmVhZGFibGUodGhpcyk6ZW1pdFJlYWRhYmxlKHRoaXMpLG51bGw7aWYoMD09PShuPWhvd011Y2hUb1JlYWQobixzdGF0ZSkpJiZzdGF0ZS5lbmRlZClyZXR1cm4gMD09PXN0YXRlLmxlbmd0aCYmZW5kUmVhZGFibGUodGhpcyksbnVsbDt2YXIgcmV0LGRvUmVhZD1zdGF0ZS5uZWVkUmVhZGFibGU7cmV0dXJuIGRlYnVnKFwibmVlZCByZWFkYWJsZVwiLGRvUmVhZCksKDA9PT1zdGF0ZS5sZW5ndGh8fHN0YXRlLmxlbmd0aC1uPHN0YXRlLmhpZ2hXYXRlck1hcmspJiZkZWJ1ZyhcImxlbmd0aCBsZXNzIHRoYW4gd2F0ZXJtYXJrXCIsZG9SZWFkPSEwKSxzdGF0ZS5lbmRlZHx8c3RhdGUucmVhZGluZz9kZWJ1ZyhcInJlYWRpbmcgb3IgZW5kZWRcIixkb1JlYWQ9ITEpOmRvUmVhZCYmKGRlYnVnKFwiZG8gcmVhZFwiKSxzdGF0ZS5yZWFkaW5nPSEwLHN0YXRlLnN5bmM9ITAsMD09PXN0YXRlLmxlbmd0aCYmKHN0YXRlLm5lZWRSZWFkYWJsZT0hMCksdGhpcy5fcmVhZChzdGF0ZS5oaWdoV2F0ZXJNYXJrKSxzdGF0ZS5zeW5jPSExLHN0YXRlLnJlYWRpbmd8fChuPWhvd011Y2hUb1JlYWQobk9yaWcsc3RhdGUpKSksbnVsbD09PShyZXQ9bj4wP2Zyb21MaXN0KG4sc3RhdGUpOm51bGwpPyhzdGF0ZS5uZWVkUmVhZGFibGU9c3RhdGUubGVuZ3RoPD1zdGF0ZS5oaWdoV2F0ZXJNYXJrLG49MCk6KHN0YXRlLmxlbmd0aC09bixzdGF0ZS5hd2FpdERyYWluPTApLDA9PT1zdGF0ZS5sZW5ndGgmJihzdGF0ZS5lbmRlZHx8KHN0YXRlLm5lZWRSZWFkYWJsZT0hMCksbk9yaWchPT1uJiZzdGF0ZS5lbmRlZCYmZW5kUmVhZGFibGUodGhpcykpLG51bGwhPT1yZXQmJnRoaXMuZW1pdChcImRhdGFcIixyZXQpLHJldH0sUmVhZGFibGUucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKG4pe2Vycm9yT3JEZXN0cm95KHRoaXMsbmV3IEVSUl9NRVRIT0RfTk9UX0lNUExFTUVOVEVEKFwiX3JlYWQoKVwiKSl9LFJlYWRhYmxlLnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKGRlc3QscGlwZU9wdHMpe3ZhciBzcmM9dGhpcyxzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlO3N3aXRjaChzdGF0ZS5waXBlc0NvdW50KXtjYXNlIDA6c3RhdGUucGlwZXM9ZGVzdDticmVhaztjYXNlIDE6c3RhdGUucGlwZXM9W3N0YXRlLnBpcGVzLGRlc3RdO2JyZWFrO2RlZmF1bHQ6c3RhdGUucGlwZXMucHVzaChkZXN0KX1zdGF0ZS5waXBlc0NvdW50Kz0xLGRlYnVnKFwicGlwZSBjb3VudD0lZCBvcHRzPSVqXCIsc3RhdGUucGlwZXNDb3VudCxwaXBlT3B0cyk7dmFyIGVuZEZuPSghcGlwZU9wdHN8fCExIT09cGlwZU9wdHMuZW5kKSYmZGVzdCE9PXByb2Nlc3Muc3Rkb3V0JiZkZXN0IT09cHJvY2Vzcy5zdGRlcnI/b25lbmQ6dW5waXBlO2Z1bmN0aW9uIG9udW5waXBlKHJlYWRhYmxlLHVucGlwZUluZm8pe2RlYnVnKFwib251bnBpcGVcIikscmVhZGFibGU9PT1zcmMmJnVucGlwZUluZm8mJiExPT09dW5waXBlSW5mby5oYXNVbnBpcGVkJiYodW5waXBlSW5mby5oYXNVbnBpcGVkPSEwLGRlYnVnKFwiY2xlYW51cFwiKSxkZXN0LnJlbW92ZUxpc3RlbmVyKFwiY2xvc2VcIixvbmNsb3NlKSxkZXN0LnJlbW92ZUxpc3RlbmVyKFwiZmluaXNoXCIsb25maW5pc2gpLGRlc3QucmVtb3ZlTGlzdGVuZXIoXCJkcmFpblwiLG9uZHJhaW4pLGRlc3QucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLG9uZXJyb3IpLGRlc3QucmVtb3ZlTGlzdGVuZXIoXCJ1bnBpcGVcIixvbnVucGlwZSksc3JjLnJlbW92ZUxpc3RlbmVyKFwiZW5kXCIsb25lbmQpLHNyYy5yZW1vdmVMaXN0ZW5lcihcImVuZFwiLHVucGlwZSksc3JjLnJlbW92ZUxpc3RlbmVyKFwiZGF0YVwiLG9uZGF0YSksY2xlYW5lZFVwPSEwLCFzdGF0ZS5hd2FpdERyYWlufHxkZXN0Ll93cml0YWJsZVN0YXRlJiYhZGVzdC5fd3JpdGFibGVTdGF0ZS5uZWVkRHJhaW58fG9uZHJhaW4oKSl9ZnVuY3Rpb24gb25lbmQoKXtkZWJ1ZyhcIm9uZW5kXCIpLGRlc3QuZW5kKCl9c3RhdGUuZW5kRW1pdHRlZD9wcm9jZXNzLm5leHRUaWNrKGVuZEZuKTpzcmMub25jZShcImVuZFwiLGVuZEZuKSxkZXN0Lm9uKFwidW5waXBlXCIsb251bnBpcGUpO3ZhciBvbmRyYWluPWZ1bmN0aW9uKHNyYyl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHN0YXRlPXNyYy5fcmVhZGFibGVTdGF0ZTtkZWJ1ZyhcInBpcGVPbkRyYWluXCIsc3RhdGUuYXdhaXREcmFpbiksc3RhdGUuYXdhaXREcmFpbiYmc3RhdGUuYXdhaXREcmFpbi0tLDA9PT1zdGF0ZS5hd2FpdERyYWluJiZFRWxpc3RlbmVyQ291bnQoc3JjLFwiZGF0YVwiKSYmKHN0YXRlLmZsb3dpbmc9ITAsZmxvdyhzcmMpKX19KHNyYyk7ZGVzdC5vbihcImRyYWluXCIsb25kcmFpbik7dmFyIGNsZWFuZWRVcD0hMTtmdW5jdGlvbiBvbmRhdGEoY2h1bmspe2RlYnVnKFwib25kYXRhXCIpO3ZhciByZXQ9ZGVzdC53cml0ZShjaHVuayk7ZGVidWcoXCJkZXN0LndyaXRlXCIscmV0KSwhMT09PXJldCYmKCgxPT09c3RhdGUucGlwZXNDb3VudCYmc3RhdGUucGlwZXM9PT1kZXN0fHxzdGF0ZS5waXBlc0NvdW50PjEmJi0xIT09aW5kZXhPZihzdGF0ZS5waXBlcyxkZXN0KSkmJiFjbGVhbmVkVXAmJihkZWJ1ZyhcImZhbHNlIHdyaXRlIHJlc3BvbnNlLCBwYXVzZVwiLHN0YXRlLmF3YWl0RHJhaW4pLHN0YXRlLmF3YWl0RHJhaW4rKyksc3JjLnBhdXNlKCkpfWZ1bmN0aW9uIG9uZXJyb3IoZXIpe2RlYnVnKFwib25lcnJvclwiLGVyKSx1bnBpcGUoKSxkZXN0LnJlbW92ZUxpc3RlbmVyKFwiZXJyb3JcIixvbmVycm9yKSwwPT09RUVsaXN0ZW5lckNvdW50KGRlc3QsXCJlcnJvclwiKSYmZXJyb3JPckRlc3Ryb3koZGVzdCxlcil9ZnVuY3Rpb24gb25jbG9zZSgpe2Rlc3QucmVtb3ZlTGlzdGVuZXIoXCJmaW5pc2hcIixvbmZpbmlzaCksdW5waXBlKCl9ZnVuY3Rpb24gb25maW5pc2goKXtkZWJ1ZyhcIm9uZmluaXNoXCIpLGRlc3QucmVtb3ZlTGlzdGVuZXIoXCJjbG9zZVwiLG9uY2xvc2UpLHVucGlwZSgpfWZ1bmN0aW9uIHVucGlwZSgpe2RlYnVnKFwidW5waXBlXCIpLHNyYy51bnBpcGUoZGVzdCl9cmV0dXJuIHNyYy5vbihcImRhdGFcIixvbmRhdGEpLGZ1bmN0aW9uKGVtaXR0ZXIsZXZlbnQsZm4pe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGVtaXR0ZXIucHJlcGVuZExpc3RlbmVyKXJldHVybiBlbWl0dGVyLnByZXBlbmRMaXN0ZW5lcihldmVudCxmbik7ZW1pdHRlci5fZXZlbnRzJiZlbWl0dGVyLl9ldmVudHNbZXZlbnRdP0FycmF5LmlzQXJyYXkoZW1pdHRlci5fZXZlbnRzW2V2ZW50XSk/ZW1pdHRlci5fZXZlbnRzW2V2ZW50XS51bnNoaWZ0KGZuKTplbWl0dGVyLl9ldmVudHNbZXZlbnRdPVtmbixlbWl0dGVyLl9ldmVudHNbZXZlbnRdXTplbWl0dGVyLm9uKGV2ZW50LGZuKX0oZGVzdCxcImVycm9yXCIsb25lcnJvciksZGVzdC5vbmNlKFwiY2xvc2VcIixvbmNsb3NlKSxkZXN0Lm9uY2UoXCJmaW5pc2hcIixvbmZpbmlzaCksZGVzdC5lbWl0KFwicGlwZVwiLHNyYyksc3RhdGUuZmxvd2luZ3x8KGRlYnVnKFwicGlwZSByZXN1bWVcIiksc3JjLnJlc3VtZSgpKSxkZXN0fSxSZWFkYWJsZS5wcm90b3R5cGUudW5waXBlPWZ1bmN0aW9uKGRlc3Qpe3ZhciBzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlLHVucGlwZUluZm89e2hhc1VucGlwZWQ6ITF9O2lmKDA9PT1zdGF0ZS5waXBlc0NvdW50KXJldHVybiB0aGlzO2lmKDE9PT1zdGF0ZS5waXBlc0NvdW50KXJldHVybiBkZXN0JiZkZXN0IT09c3RhdGUucGlwZXM/dGhpczooZGVzdHx8KGRlc3Q9c3RhdGUucGlwZXMpLHN0YXRlLnBpcGVzPW51bGwsc3RhdGUucGlwZXNDb3VudD0wLHN0YXRlLmZsb3dpbmc9ITEsZGVzdCYmZGVzdC5lbWl0KFwidW5waXBlXCIsdGhpcyx1bnBpcGVJbmZvKSx0aGlzKTtpZighZGVzdCl7dmFyIGRlc3RzPXN0YXRlLnBpcGVzLGxlbj1zdGF0ZS5waXBlc0NvdW50O3N0YXRlLnBpcGVzPW51bGwsc3RhdGUucGlwZXNDb3VudD0wLHN0YXRlLmZsb3dpbmc9ITE7Zm9yKHZhciBpPTA7aTxsZW47aSsrKWRlc3RzW2ldLmVtaXQoXCJ1bnBpcGVcIix0aGlzLHtoYXNVbnBpcGVkOiExfSk7cmV0dXJuIHRoaXN9dmFyIGluZGV4PWluZGV4T2Yoc3RhdGUucGlwZXMsZGVzdCk7cmV0dXJuLTE9PT1pbmRleD90aGlzOihzdGF0ZS5waXBlcy5zcGxpY2UoaW5kZXgsMSksc3RhdGUucGlwZXNDb3VudC09MSwxPT09c3RhdGUucGlwZXNDb3VudCYmKHN0YXRlLnBpcGVzPXN0YXRlLnBpcGVzWzBdKSxkZXN0LmVtaXQoXCJ1bnBpcGVcIix0aGlzLHVucGlwZUluZm8pLHRoaXMpfSxSZWFkYWJsZS5wcm90b3R5cGUub249ZnVuY3Rpb24oZXYsZm4pe3ZhciByZXM9U3RyZWFtLnByb3RvdHlwZS5vbi5jYWxsKHRoaXMsZXYsZm4pLHN0YXRlPXRoaXMuX3JlYWRhYmxlU3RhdGU7cmV0dXJuXCJkYXRhXCI9PT1ldj8oc3RhdGUucmVhZGFibGVMaXN0ZW5pbmc9dGhpcy5saXN0ZW5lckNvdW50KFwicmVhZGFibGVcIik+MCwhMSE9PXN0YXRlLmZsb3dpbmcmJnRoaXMucmVzdW1lKCkpOlwicmVhZGFibGVcIj09PWV2JiYoc3RhdGUuZW5kRW1pdHRlZHx8c3RhdGUucmVhZGFibGVMaXN0ZW5pbmd8fChzdGF0ZS5yZWFkYWJsZUxpc3RlbmluZz1zdGF0ZS5uZWVkUmVhZGFibGU9ITAsc3RhdGUuZmxvd2luZz0hMSxzdGF0ZS5lbWl0dGVkUmVhZGFibGU9ITEsZGVidWcoXCJvbiByZWFkYWJsZVwiLHN0YXRlLmxlbmd0aCxzdGF0ZS5yZWFkaW5nKSxzdGF0ZS5sZW5ndGg/ZW1pdFJlYWRhYmxlKHRoaXMpOnN0YXRlLnJlYWRpbmd8fHByb2Nlc3MubmV4dFRpY2soblJlYWRpbmdOZXh0VGljayx0aGlzKSkpLHJlc30sUmVhZGFibGUucHJvdG90eXBlLmFkZExpc3RlbmVyPVJlYWRhYmxlLnByb3RvdHlwZS5vbixSZWFkYWJsZS5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXI9ZnVuY3Rpb24oZXYsZm4pe3ZhciByZXM9U3RyZWFtLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lci5jYWxsKHRoaXMsZXYsZm4pO3JldHVyblwicmVhZGFibGVcIj09PWV2JiZwcm9jZXNzLm5leHRUaWNrKHVwZGF0ZVJlYWRhYmxlTGlzdGVuaW5nLHRoaXMpLHJlc30sUmVhZGFibGUucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycz1mdW5jdGlvbihldil7dmFyIHJlcz1TdHJlYW0ucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycy5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuXCJyZWFkYWJsZVwiIT09ZXYmJnZvaWQgMCE9PWV2fHxwcm9jZXNzLm5leHRUaWNrKHVwZGF0ZVJlYWRhYmxlTGlzdGVuaW5nLHRoaXMpLHJlc30sUmVhZGFibGUucHJvdG90eXBlLnJlc3VtZT1mdW5jdGlvbigpe3ZhciBzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlO3JldHVybiBzdGF0ZS5mbG93aW5nfHwoZGVidWcoXCJyZXN1bWVcIiksc3RhdGUuZmxvd2luZz0hc3RhdGUucmVhZGFibGVMaXN0ZW5pbmcsZnVuY3Rpb24oc3RyZWFtLHN0YXRlKXtzdGF0ZS5yZXN1bWVTY2hlZHVsZWR8fChzdGF0ZS5yZXN1bWVTY2hlZHVsZWQ9ITAscHJvY2Vzcy5uZXh0VGljayhyZXN1bWVfLHN0cmVhbSxzdGF0ZSkpfSh0aGlzLHN0YXRlKSksc3RhdGUucGF1c2VkPSExLHRoaXN9LFJlYWRhYmxlLnByb3RvdHlwZS5wYXVzZT1mdW5jdGlvbigpe3JldHVybiBkZWJ1ZyhcImNhbGwgcGF1c2UgZmxvd2luZz0lalwiLHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyksITEhPT10aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcmJihkZWJ1ZyhcInBhdXNlXCIpLHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZz0hMSx0aGlzLmVtaXQoXCJwYXVzZVwiKSksdGhpcy5fcmVhZGFibGVTdGF0ZS5wYXVzZWQ9ITAsdGhpc30sUmVhZGFibGUucHJvdG90eXBlLndyYXA9ZnVuY3Rpb24oc3RyZWFtKXt2YXIgX3RoaXM9dGhpcyxzdGF0ZT10aGlzLl9yZWFkYWJsZVN0YXRlLHBhdXNlZD0hMTtmb3IodmFyIGkgaW4gc3RyZWFtLm9uKFwiZW5kXCIsZnVuY3Rpb24oKXtpZihkZWJ1ZyhcIndyYXBwZWQgZW5kXCIpLHN0YXRlLmRlY29kZXImJiFzdGF0ZS5lbmRlZCl7dmFyIGNodW5rPXN0YXRlLmRlY29kZXIuZW5kKCk7Y2h1bmsmJmNodW5rLmxlbmd0aCYmX3RoaXMucHVzaChjaHVuayl9X3RoaXMucHVzaChudWxsKX0pLHN0cmVhbS5vbihcImRhdGFcIixmdW5jdGlvbihjaHVuayl7KGRlYnVnKFwid3JhcHBlZCBkYXRhXCIpLHN0YXRlLmRlY29kZXImJihjaHVuaz1zdGF0ZS5kZWNvZGVyLndyaXRlKGNodW5rKSksc3RhdGUub2JqZWN0TW9kZSYmbnVsbD09Y2h1bmspfHwoc3RhdGUub2JqZWN0TW9kZXx8Y2h1bmsmJmNodW5rLmxlbmd0aCkmJihfdGhpcy5wdXNoKGNodW5rKXx8KHBhdXNlZD0hMCxzdHJlYW0ucGF1c2UoKSkpfSksc3RyZWFtKXZvaWQgMD09PXRoaXNbaV0mJlwiZnVuY3Rpb25cIj09dHlwZW9mIHN0cmVhbVtpXSYmKHRoaXNbaV09ZnVuY3Rpb24obWV0aG9kKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gc3RyZWFtW21ldGhvZF0uYXBwbHkoc3RyZWFtLGFyZ3VtZW50cyl9fShpKSk7Zm9yKHZhciBuPTA7bjxrUHJveHlFdmVudHMubGVuZ3RoO24rKylzdHJlYW0ub24oa1Byb3h5RXZlbnRzW25dLHRoaXMuZW1pdC5iaW5kKHRoaXMsa1Byb3h5RXZlbnRzW25dKSk7cmV0dXJuIHRoaXMuX3JlYWQ9ZnVuY3Rpb24obil7ZGVidWcoXCJ3cmFwcGVkIF9yZWFkXCIsbikscGF1c2VkJiYocGF1c2VkPSExLHN0cmVhbS5yZXN1bWUoKSl9LHRoaXN9LFwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmKFJlYWRhYmxlLnByb3RvdHlwZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09Y3JlYXRlUmVhZGFibGVTdHJlYW1Bc3luY0l0ZXJhdG9yJiYoY3JlYXRlUmVhZGFibGVTdHJlYW1Bc3luY0l0ZXJhdG9yPXJlcXVpcmUoXCIuL2ludGVybmFsL3N0cmVhbXMvYXN5bmNfaXRlcmF0b3JcIikpLGNyZWF0ZVJlYWRhYmxlU3RyZWFtQXN5bmNJdGVyYXRvcih0aGlzKX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZWFkYWJsZS5wcm90b3R5cGUsXCJyZWFkYWJsZUhpZ2hXYXRlck1hcmtcIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSZWFkYWJsZS5wcm90b3R5cGUsXCJyZWFkYWJsZUJ1ZmZlclwiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlJiZ0aGlzLl9yZWFkYWJsZVN0YXRlLmJ1ZmZlcn19KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoUmVhZGFibGUucHJvdG90eXBlLFwicmVhZGFibGVGbG93aW5nXCIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZ30sc2V0OmZ1bmN0aW9uKHN0YXRlKXt0aGlzLl9yZWFkYWJsZVN0YXRlJiYodGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nPXN0YXRlKX19KSxSZWFkYWJsZS5fZnJvbUxpc3Q9ZnJvbUxpc3QsT2JqZWN0LmRlZmluZVByb3BlcnR5KFJlYWRhYmxlLnByb3RvdHlwZSxcInJlYWRhYmxlTGVuZ3RoXCIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUubGVuZ3RofX0pLFwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmKFJlYWRhYmxlLmZyb209ZnVuY3Rpb24oaXRlcmFibGUsb3B0cyl7cmV0dXJuIHZvaWQgMD09PWZyb20mJihmcm9tPXJlcXVpcmUoXCIuL2ludGVybmFsL3N0cmVhbXMvZnJvbVwiKSksZnJvbShSZWFkYWJsZSxpdGVyYWJsZSxvcHRzKX0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWw5emRISmxZVzFmY21WaFpHRmliR1V1YW5NaVhTd2libUZ0WlhNaU9sc2lSSFZ3YkdWNElpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SXNJbEpsWVdSaFlteGxJaXdpVW1WaFpHRmliR1ZUZEdGMFpTSXNJbkpsY1hWcGNtVWlMQ0pGZG1WdWRFVnRhWFIwWlhJaUxDSkZSV3hwYzNSbGJtVnlRMjkxYm5RaUxDSmxiV2wwZEdWeUlpd2lkSGx3WlNJc0lteHBjM1JsYm1WeWN5SXNJbXhsYm1kMGFDSXNJbE4wY21WaGJTSXNJa0oxWm1abGNpSXNJazkxY2xWcGJuUTRRWEp5WVhraUxDSm5iRzlpWVd3aUxDSlZhVzUwT0VGeWNtRjVJaXdpWkdWaWRXY2lMQ0prWldKMVoxVjBhV3dpTENKa1pXSjFaMnh2WnlJc0lsTjBjbWx1WjBSbFkyOWtaWElpTENKamNtVmhkR1ZTWldGa1lXSnNaVk4wY21WaGJVRnplVzVqU1hSbGNtRjBiM0lpTENKbWNtOXRJaXdpUW5WbVptVnlUR2x6ZENJc0ltUmxjM1J5YjNsSmJYQnNJaXdpWjJWMFNHbG5hRmRoZEdWeVRXRnlheUlzSWw5eVpYRjFhWEpsSkdOdlpHVnpJaXdpWTI5a1pYTWlMQ0pGVWxKZlNVNVdRVXhKUkY5QlVrZGZWRmxRUlNJc0lrVlNVbDlUVkZKRlFVMWZVRlZUU0Y5QlJsUkZVbDlGVDBZaUxDSkZVbEpmVFVWVVNFOUVYMDVQVkY5SlRWQk1SVTFGVGxSRlJDSXNJa1ZTVWw5VFZGSkZRVTFmVlU1VFNFbEdWRjlCUmxSRlVsOUZUa1JmUlZaRlRsUWlMQ0psY25KdmNrOXlSR1Z6ZEhKdmVTSXNJbXRRY205NGVVVjJaVzUwY3lJc0ltOXdkR2x2Ym5NaUxDSnpkSEpsWVcwaUxDSnBjMFIxY0d4bGVDSXNJblJvYVhNaUxDSnZZbXBsWTNSTmIyUmxJaXdpY21WaFpHRmliR1ZQWW1wbFkzUk5iMlJsSWl3aWFHbG5hRmRoZEdWeVRXRnlheUlzSW1KMVptWmxjaUlzSW5CcGNHVnpJaXdpY0dsd1pYTkRiM1Z1ZENJc0ltWnNiM2RwYm1jaUxDSmxibVJsWkNJc0ltVnVaRVZ0YVhSMFpXUWlMQ0p5WldGa2FXNW5JaXdpYzNsdVl5SXNJbTVsWldSU1pXRmtZV0pzWlNJc0ltVnRhWFIwWldSU1pXRmtZV0pzWlNJc0luSmxZV1JoWW14bFRHbHpkR1Z1YVc1bklpd2ljbVZ6ZFcxbFUyTm9aV1IxYkdWa0lpd2ljR0YxYzJWa0lpd2laVzFwZEVOc2IzTmxJaXdpWVhWMGIwUmxjM1J5YjNraUxDSmtaWE4wY205NVpXUWlMQ0prWldaaGRXeDBSVzVqYjJScGJtY2lMQ0poZDJGcGRFUnlZV2x1SWl3aWNtVmhaR2x1WjAxdmNtVWlMQ0prWldOdlpHVnlJaXdpWlc1amIyUnBibWNpTENKZmNtVmhaR0ZpYkdWVGRHRjBaU0lzSW5KbFlXUmhZbXhsSWl3aWNtVmhaQ0lzSWw5eVpXRmtJaXdpWkdWemRISnZlU0lzSWw5a1pYTjBjbTk1SWl3aVkyRnNiQ0lzSW5KbFlXUmhZbXhsUVdSa1EyaDFibXNpTENKamFIVnVheUlzSW1Ga1pGUnZSbkp2Ym5RaUxDSnphMmx3UTJoMWJtdERhR1ZqYXlJc0ltVnlJaXdpYzNSaGRHVWlMQ0psYm1RaUxDSndkWE5vSWl3aVpXMXBkRkpsWVdSaFlteGxJaXdpWlcxcGRGSmxZV1JoWW14bFh5SXNJbTl1Ulc5bVEyaDFibXNpTENKdlltb2lMQ0pwYzBKMVptWmxjaUlzSW5WdVpHVm1hVzVsWkNJc0ltTm9kVzVyU1c1MllXeHBaQ0lzSWs5aWFtVmpkQ0lzSW1kbGRGQnliM1J2ZEhsd1pVOW1JaXdpY0hKdmRHOTBlWEJsSWl3aVgzVnBiblE0UVhKeVlYbFViMEoxWm1abGNpSXNJbUZrWkVOb2RXNXJJaXdpZDNKcGRHVWlMQ0p0WVhsaVpWSmxZV1JOYjNKbElpd2laVzFwZENJc0luVnVjMmhwWm5RaUxDSmtaV1pwYm1WUWNtOXdaWEowZVNJc0ltVnVkVzFsY21GaWJHVWlMQ0puWlhRaUxDSnpaWFFpTENKMllXeDFaU0lzSWw5MWJtUmxjM1J5YjNraUxDSjFibVJsYzNSeWIza2lMQ0psY25JaUxDSmpZaUlzSW1selVHRjFjMlZrSWl3aWMyVjBSVzVqYjJScGJtY2lMQ0psYm1NaUxDSndJaXdpYUdWaFpDSXNJbU52Ym5SbGJuUWlMQ0prWVhSaElpd2libVY0ZENJc0ltTnNaV0Z5SWl3aVRVRllYMGhYVFNJc0ltaHZkMDExWTJoVWIxSmxZV1FpTENKdUlpd2lZMjl0Y0hWMFpVNWxkMGhwWjJoWFlYUmxjazFoY21zaUxDSndjbTlqWlhOeklpd2libVY0ZEZScFkyc2lMQ0ptYkc5M0lpd2liV0Y1WW1WU1pXRmtUVzl5WlY4aUxDSnNaVzRpTENKMWNHUmhkR1ZTWldGa1lXSnNaVXhwYzNSbGJtbHVaeUlzSW5ObGJHWWlMQ0pzYVhOMFpXNWxja052ZFc1MElpd2ljbVZ6ZFcxbElpd2libEpsWVdScGJtZE9aWGgwVkdsamF5SXNJbkpsYzNWdFpWOGlMQ0ptY205dFRHbHpkQ0lzSW5KbGRDSXNJbk5vYVdaMElpd2lhbTlwYmlJc0ltWnBjbk4wSWl3aVkyOXVZMkYwSWl3aVkyOXVjM1Z0WlNJc0ltVnVaRkpsWVdSaFlteGxJaXdpWlc1a1VtVmhaR0ZpYkdWT1ZDSXNJbmRUZEdGMFpTSXNJbDkzY21sMFlXSnNaVk4wWVhSbElpd2labWx1YVhOb1pXUWlMQ0pwYm1SbGVFOW1JaXdpZUhNaUxDSjRJaXdpYVNJc0ltd2lMQ0p3WVhKelpVbHVkQ0lzSW01UGNtbG5JaXdpWkc5U1pXRmtJaXdpY0dsd1pTSXNJbVJsYzNRaUxDSndhWEJsVDNCMGN5SXNJbk55WXlJc0ltVnVaRVp1SWl3aWMzUmtiM1YwSWl3aWMzUmtaWEp5SWl3aWIyNWxibVFpTENKMWJuQnBjR1VpTENKdmJuVnVjR2x3WlNJc0luVnVjR2x3WlVsdVptOGlMQ0pvWVhOVmJuQnBjR1ZrSWl3aWNtVnRiM1psVEdsemRHVnVaWElpTENKdmJtTnNiM05sSWl3aWIyNW1hVzVwYzJnaUxDSnZibVJ5WVdsdUlpd2liMjVsY25KdmNpSXNJbTl1WkdGMFlTSXNJbU5zWldGdVpXUlZjQ0lzSW01bFpXUkVjbUZwYmlJc0ltOXVZMlVpTENKdmJpSXNJbkJwY0dWUGJrUnlZV2x1SWl3aWNHRjFjMlVpTENKbGRtVnVkQ0lzSW1adUlpd2ljSEpsY0dWdVpFeHBjM1JsYm1WeUlpd2lYMlYyWlc1MGN5SXNJa0Z5Y21GNUlpd2lhWE5CY25KaGVTSXNJbVJsYzNSeklpd2lhVzVrWlhnaUxDSnpjR3hwWTJVaUxDSmxkaUlzSW5KbGN5SXNJbUZrWkV4cGMzUmxibVZ5SWl3aWNtVnRiM1psUVd4c1RHbHpkR1Z1WlhKeklpd2lZWEJ3YkhraUxDSmhjbWQxYldWdWRITWlMQ0ozY21Gd0lpd2lYM1JvYVhNaUxDSnRaWFJvYjJRaUxDSmlhVzVrSWl3aVUzbHRZbTlzSWl3aVlYTjVibU5KZEdWeVlYUnZjaUlzSWw5bWNtOXRUR2x6ZENJc0ltbDBaWEpoWW14bElpd2liM0IwY3lKZExDSnRZWEJ3YVc1bmN5STZJa0ZCYjBKQkxHRkJTMEVzU1VGQlNVRXNUMEZJU2tNc1QwRkJUME1zVVVGQlZVTXNVMEZOYWtKQkxGTkJRVk5ETEdOQlFXZENRU3hqUVVkb1FrTXNVVUZCVVN4VlFVRlZReXhoUVVFelFpeEpRVVZKUXl4blFrRkJhMElzVTBGQmVVSkRMRkZCUVZORExFMUJRM1JFTEU5QlFVOUVMRkZCUVZGRkxGVkJRVlZFTEUxQlFVMUZMRkZCVHpkQ1F5eFBRVUZUVUN4UlFVRlJMRFpDUVVscVFsRXNUMEZCVTFJc1VVRkJVU3hWUVVGVlVTeFBRVVV6UWtNc1kwRkJaMEpETEU5QlFVOURMRmxCUVdNc1lVRlpla01zU1VGRlNVTXNUVUZHUVVNc1ZVRkJXV0lzVVVGQlVTeFJRVXQwUWxrc1RVRkVSVU1zVjBGQllVRXNWVUZCVlVNc1UwRkRha0pFTEZWQlFWVkRMRk5CUVZNc1ZVRkZia0lzWVVGTFZpeEpRV05KUXl4alFVTkJReXhyUTBGRFFVTXNTMEZvUWtGRExGZEJRV0ZzUWl4UlFVRlJMR3REUVVWeVFtMUNMRmxCUVdOdVFpeFJRVUZSTERoQ1FVZDBRbTlDTEdsQ1FVUlhjRUlzVVVGQlVTdzBRa0ZEVTI5Q0xHbENRVVUxUWtNc1pVRkJhVUp5UWl4UlFVRlJMR0ZCUVdGelFpeE5RVU4wUTBNc2NVSkJRWFZDUml4bFFVRmxSU3h4UWtGRGRFTkRMREJDUVVFMFFrZ3NaVUZCWlVjc01FSkJRek5EUXl3eVFrRkJOa0pLTEdWQlFXVkpMREpDUVVNMVEwTXNiVU5CUVhGRFRDeGxRVUZsU3l4dFEwRlBlRVF4UWl4UlFVRlJMRmRCUVZKQkxFTkJRVzlDUml4VFFVRlZVeXhSUVVVNVFpeEpRVUZKYjBJc1pVRkJhVUpTTEZsQlFWbFJMR1ZCUXpkQ1F5eGhRVUZsTEVOQlFVTXNVVUZCVXl4UlFVRlRMRlZCUVZjc1VVRkJVeXhWUVdFeFJDeFRRVUZUTjBJc1kwRkJZemhDTEZGQlFWTkRMRTlCUVZGRExGVkJRM1JEY0VNc1QwRkJVMEVzVVVGQlZVc3NVVUZCVVN4dlFrRkRNMEkyUWl4UlFVRlZRU3hUUVVGWExFZEJUVWNzYTBKQlFXSkZMRmRCUVhkQ1FTeFRRVUZYUkN4clFrRkJhMEp1UXl4UlFVZG9SWEZETEV0QlFVdERMR0ZCUVdWS0xGRkJRVkZKTEZkQlEzaENSaXhYUVVGVlF5eExRVUZMUXl4WFFVRmhSQ3hMUVVGTFF5eGpRVUZuUWtvc1VVRkJVVXNzYjBKQlJ6ZEVSaXhMUVVGTFJ5eGpRVUZuUW1Zc2FVSkJRV2xDV1N4TFFVRk5TQ3hSUVVGVExIZENRVUY1UWtVc1ZVRkpPVVZETEV0QlFVdEpMRTlCUVZNc1NVRkJTV3hDTEZkQlEyeENZeXhMUVVGTE1VSXNUMEZCVXl4RlFVTmtNRUlzUzBGQlMwc3NUVUZCVVN4TFFVTmlUQ3hMUVVGTFRTeFhRVUZoTEVWQlEyeENUaXhMUVVGTFR5eFJRVUZWTEV0QlEyWlFMRXRCUVV0UkxFOUJRVkVzUlVGRFlsSXNTMEZCUzFNc1dVRkJZU3hGUVVOc1FsUXNTMEZCUzFVc1UwRkJWU3hGUVV0bVZpeExRVUZMVnl4TlFVRlBMRVZCUjFwWUxFdEJRVXRaTEdOQlFXVXNSVUZEY0VKYUxFdEJRVXRoTEdsQ1FVRnJRaXhGUVVOMlFtSXNTMEZCUzJNc2JVSkJRVzlDTEVWQlEzcENaQ3hMUVVGTFpTeHBRa0ZCYTBJc1JVRkRka0ptTEV0QlFVdG5RaXhSUVVGVExFVkJSV1JvUWl4TFFVRkxhVUlzVjBGQmEwTXNTVUZCZEVKd1FpeFJRVUZSYjBJc1ZVRkZla0pxUWl4TFFVRkxhMElzWTBGQlowSnlRaXhSUVVGUmNVSXNXVUZGTjBKc1FpeExRVUZMYlVJc1YwRkJXU3hGUVVscVFtNUNMRXRCUVV0dlFpeG5Ra0ZCYTBKMlFpeFJRVUZSZFVJc2FVSkJRVzFDTEU5QlJXeEVjRUlzUzBGQlMzRkNMRmRCUVdFc1JVRkZiRUp5UWl4TFFVRkxjMElzWVVGQll5eEZRVU51UW5SQ0xFdEJRVXQxUWl4UlFVRlZMRXRCUTJaMlFpeExRVUZMZDBJc1UwRkJWeXhMUVVWYU0wSXNVVUZCVVRKQ0xGZEJRMHg2UXl4blFrRkJaVUVzWTBGQlowSm1MRkZCUVZFc2JVSkJRVzFDWlN4bFFVTXZSR2xDTEV0QlFVdDFRaXhSUVVGVkxFbEJRVWw0UXl4alFVRmpZeXhSUVVGUk1rSXNWVUZEZWtONFFpeExRVUZMZDBJc1UwRkJWek5DTEZGQlFWRXlRaXhWUVVrMVFpeFRRVUZUTVVRc1UwRkJVeXRDTEZOQlJXaENMRWRCUkVGc1F5eFBRVUZUUVN4UlFVRlZTeXhSUVVGUkxITkNRVU55UW1kRExHZENRVUZuUW14RExGVkJRVmNzVDBGQlR5eEpRVUZKUVN4VFFVRlRLMElzVTBGSGNrUXNTVUZCU1VVc1UwRkJWME1zWjBKQlFXZENja01zVDBGREwwSnhReXhMUVVGTGVVSXNaVUZCYVVJc1NVRkJTVEZFTEdOQlFXTTRRaXhSUVVGVFJ5eExRVUZOUkN4VlFVVjJSRU1zUzBGQlN6QkNMRlZCUVZjc1JVRkZXamRDTEZWQlF6QkNMRzFDUVVGcVFrRXNVVUZCVVRoQ0xFOUJRWEZDTTBJc1MwRkJTelJDTEUxQlFWRXZRaXhSUVVGUk9FSXNUVUZET1VJc2JVSkJRWEJDT1VJc1VVRkJVV2RETEZWQlFYZENOMElzUzBGQlN6aENMRk5CUVZkcVF5eFJRVUZSWjBNc1ZVRkhja1YwUkN4UFFVRlBkMFFzUzBGQlN5OUNMRTFCYVVWa0xGTkJRVk5uUXl4cFFrRkJhVUpzUXl4UFFVRlJiVU1zVFVGQlQxUXNVMEZCVlZVc1YwRkJXVU1zWjBKQlF6ZEVka1FzVFVGQlRTeHRRa0ZCYjBKeFJDeFBRVU14UWl4SlFVMU5SeXhIUVU1R1F5eE5RVUZSZGtNc1QwRkJUekpDTEdWQlJXNUNMRWRCUVdNc1QwRkJWbEVzVFVGRFJra3NUVUZCVFROQ0xGTkJRVlVzUlVGNVQzQkNMRk5CUVc5Q1dpeFBRVUZSZFVNc1QwRkZNVUlzUjBGRVFYcEVMRTFCUVUwc1kwRkRSbmxFTEUxQlFVMDNRaXhOUVVGUExFOUJSV3BDTEVkQlFVazJRaXhOUVVGTlpDeFJRVUZUTEVOQlEycENMRWxCUVVsVkxFMUJRVkZKTEUxQlFVMWtMRkZCUVZGbExFMUJSWFJDVEN4UFFVRlRRU3hOUVVGTk0wUXNVMEZEYWtJclJDeE5RVUZOYWtNc1QwRkJUMjFETEV0QlFVdE9MRTlCUTJ4Q1NTeE5RVUZOTDBRc1VVRkJWU3RFTEUxQlFVMXdReXhYUVVGaExFVkJRVWxuUXl4TlFVRk5NMFFzVVVGSmFrUXJSQ3hOUVVGTk4wSXNUMEZCVVN4RlFVVldOa0lzVFVGQlRURkNMRXRCU1ZJMlFpeGhRVUZoTVVNc1UwRkhZblZETEUxQlFVMTZRaXhqUVVGbExFVkJSV2hDZVVJc1RVRkJUWGhDTEd0Q1FVTlVkMElzVFVGQlRYaENMR2xDUVVGclFpeEZRVU40UWpSQ0xHTkJRV016UXl4VlFXeFJhRUkwUXl4RFFVRlhOVU1zVDBGQlVYVkRMRmxCUzI1Q0xFZEJSa3RHTEdsQ1FVRm5Ra01zUjBGdFJIcENMRk5CUVhOQ1F5eE5RVUZQU2l4UFFVTXpRaXhKUVVGSlJ5eEhRV2hSYVVKUExFbEJhMUZHVml4TlFXcFJXbnBFTEU5QlFVOXZSU3hUUVVGVFJDeE5RVUZSUVN4bFFVRmxiRVVzWlVGcFVVRXNhVUpCUVZaM1JDeFpRVUZuUTFrc1NVRkJWbG9zVDBGQmQwSkpMRTFCUVUxd1F5eGhRVU4wUm0xRExFZEJRVXNzU1VGQlNUZERMSEZDUVVGeFFpeFJRVUZUTEVOQlFVTXNVMEZCVlN4VFFVRlZMR05CUVdVd1F5eFJRVzVSTDBVc1NVRkJkVUpWTEVsQmMxRnlRaXhQUVVGUFVDeEhRVEZFY1VKVkxFTkJRV0ZVTEUxQlFVOUtMRkZCUlRGRFJ5eEhRVU5HZWtNc1pVRkJaVWNzVDBGQlVYTkRMRk5CUTJ4Q0xFZEJRVWxETEUxQlFVMXdReXhaUVVGalowTXNUMEZCVTBFc1RVRkJUVE5FTEU5QlFWTXNSVUZMY2tRc1IwRktjVUlzYVVKQlFWWXlSQ3hQUVVGMVFra3NUVUZCVFhCRExGbEJRV000UXl4UFFVRlBReXhsUVVGbFppeFRRVUZYZWtRc1QwRkJUM2xGTEZsQlF6VkdhRUlzVFVGMFRsSXNVMEZCTmtKQkxFOUJRek5DTEU5QlFVOTZSQ3hQUVVGUFV5eExRVUZMWjBRc1QwRnhUa3hwUWl4RFFVRnZRbXBDTEZGQlJ6RkNReXhYUVVORlJ5eE5RVUZOTlVJc1YwRkJXV1FzWlVGQlpVY3NUMEZCVVN4SlFVRkpTaXh2UTBGQk1rTjVSQ3hUUVVGVGNrUXNUMEZCVVhWRExFMUJRVTlLTEU5QlFVOHNVVUZEZEVnc1IwRkJTVWtzVFVGQlRUZENMRTFCUTJaaUxHVkJRV1ZITEU5QlFWRXNTVUZCU1U0c0swSkJRM1JDTEVOQlFVRXNSMEZCU1RaRExFMUJRVTFzUWl4VlFVTm1MRTlCUVU4c1JVRkZVR3RDTEUxQlFVMHpRaXhUUVVGVkxFVkJSVm95UWl4TlFVRk5aQ3hWUVVGWlF5eFZRVU53UWxNc1RVRkJVVWtzVFVGQlRXUXNVVUZCVVRaQ0xFMUJRVTF1UWl4UFFVTjRRa2tzVFVGQlRYQkRMRmxCUVN0Q0xFbEJRV3BDWjBNc1RVRkJUVE5FTEU5QlFXTTJSU3hUUVVGVGNrUXNUMEZCVVhWRExFMUJRVTlLTEU5QlFVOHNSMEZCV1c5Q0xHTkJRV04yUkN4UFFVRlJkVU1zVVVGRk4wZGpMRk5CUVZOeVJDeFBRVUZSZFVNc1RVRkJUMG9zVDBGQlR5eFJRVWQ2UWtNc1lVRkRWa2NzVFVGQlRUTkNMRk5CUVZVc1JVRkRhRUl5UXl4alFVRmpka1FzVDBGQlVYVkRMRkZCVHpGQ0xFOUJRVkZCTEUxQlFVMDNRaXhSUVVGVk5rSXNUVUZCVFM5RUxFOUJRVk1yUkN4TlFVRk5iRU1zWlVGQmEwTXNTVUZCYWtKclF5eE5RVUZOTDBRc1VVRkhkRVVzVTBGQlV6WkZMRk5CUVZOeVJDeFBRVUZSZFVNc1RVRkJUMG9zVFVGQlQwTXNXVUZEYkVOSExFMUJRVTA1UWl4VFFVRTBRaXhKUVVGcVFqaENMRTFCUVUwdlJDeFRRVUZwUWl0RUxFMUJRVTB4UWl4TlFVTm9SREJDTEUxQlFVMW9RaXhYUVVGaExFVkJRMjVDZGtJc1QwRkJUM2RFTEV0QlFVc3NUMEZCVVhKQ0xGTkJSM0JDU1N4TlFVRk5MMFFzVVVGQlZTdEVMRTFCUVUxd1F5eFhRVUZoTEVWQlFVbG5ReXhOUVVGTk0wUXNUMEZEZWtNMFJDeFhRVUZaUnl4TlFVRk5ha01zVDBGQlQyMUVMRkZCUVZGMFFpeFBRVUZaU1N4TlFVRk5ha01zVDBGQlQyMURMRXRCUVV0T0xFOUJReTlFU1N4TlFVRk5la0lzWTBGQll6UkNMR0ZCUVdFeFF5eFRRVWQyUTNWRUxHTkJRV04yUkN4UFFVRlJkVU1zVDBGMlNIaENWU3hQUVVGUFV5eGxRVUZsTVVZc1UwRkJVMjFHTEZWQlFWY3NXVUZCWVN4RFFVbHlSRkVzV1VGQldTeEZRVU5hUXl4SlFVRkxMRmRCUTBnc1dVRkJORUppTEVsQlFYaENOME1zUzBGQlMzbENMR2RDUVVsR2VrSXNTMEZCUzNsQ0xHVkJRV1ZPTEZkQlJUZENkME1zU1VGQlN5eFRRVUZoUXl4UFFVZFlOVVFzUzBGQlMzbENMR2xDUVUxV2VrSXNTMEZCUzNsQ0xHVkJRV1ZPTEZWQlFWbDVReXhWUVVkd1F6bEdMRk5CUVZOdFJpeFZRVUZWY0VJc1VVRkJWVEZETEZsQlFWa3dReXhSUVVONlF5OUVMRk5CUVZOdFJpeFZRVUZWV1N4WFFVRmhNVVVzV1VGQldUSkZMRlZCUlRWRGFFY3NVMEZCVTIxR0xGVkJRVlZ1UWl4VFFVRlhMRk5CUVZWcFF5eEpRVUZMUXl4SlFVTXpRMEVzUjBGQlIwUXNUVUZQVEdwSExGTkJRVk50Uml4VlFVRlZWaXhMUVVGUExGTkJRVlZPTEUxQlFVOVVMRlZCUTNwRExFbEJRMGxYTEdWQlJFRkZMRTFCUVZGeVF5eExRVUZMZVVJc1pVRnJRbXBDTEU5QlprdFpMRTFCUVUxd1F5eFhRVmxVYTBNc1owSkJRV2xDTEVWQldFa3NhVUpCUVZaR0xGTkJRMVJVTEZOQlFWZEJMRlZCUVZsaExFMUJRVTFxUWl4dFFrRkZXbWxDTEUxQlFVMWlMRmRCUTNKQ1V5eE5RVUZSZWtRc1QwRkJUMU1zUzBGQlMyZEVMRTFCUVU5VUxGVkJRek5DUVN4VFFVRlhMRWxCUjJKWExHZENRVUZwUWl4SFFVMWtTQ3hwUWtGQmFVSm9ReXhMUVVGTmFVTXNUVUZCVDFRc1ZVRkJWU3hGUVVGUFZ5eHBRa0ZKZUVSeVJTeFRRVUZUYlVZc1ZVRkJWVTBzVVVGQlZTeFRRVUZWZEVJc1QwRkRja01zVDBGQlQwUXNhVUpCUVdsQ2FFTXNTMEZCVFdsRExFMUJRVThzVFVGQlRTeEhRVUZOTEVsQmVVVnVSRzVGTEZOQlFWTnRSaXhWUVVGVlowSXNVMEZCVnl4WFFVTTFRaXhQUVVGMVF5eEpRVUZvUTJwRkxFdEJRVXQ1UWl4bFFVRmxiRUlzVTBGSk4wSjZReXhUUVVGVGJVWXNWVUZCVldsQ0xGbEJRV01zVTBGQlZVTXNTMEZEY0VOd1JpeG5Ra0ZCWlVFc1kwRkJaMEptTEZGQlFWRXNiVUpCUVcxQ1pTeGxRVU12UkN4SlFVRkpkME1zVVVGQlZTeEpRVUZKZUVNc1kwRkJZMjlHTEV0QlEyaERia1VzUzBGQlMzbENMR1ZCUVdWR0xGRkJRVlZCTEZGQlJUbENka0lzUzBGQlMzbENMR1ZCUVdWRUxGTkJRVmQ0UWl4TFFVRkxlVUlzWlVGQlpVWXNVVUZCVVVNc1UwRkxNMFFzU1VGSVFTeEpRVUZKTkVNc1JVRkJTWEJGTEV0QlFVdDVRaXhsUVVGbGNrSXNUMEZCVDJsRkxFdEJReTlDUXl4UlFVRlZMRWRCUlVRc1QwRkJUa1lzUjBGRFRFVXNVMEZCVnk5RExGRkJRVkUyUWl4TlFVRk5aMElzUlVGQlJVY3NUVUZETTBKSUxFVkJRVWxCTEVWQlFVVkpMRXRCVDFJc1QwRktRWGhGTEV0QlFVdDVRaXhsUVVGbGNrSXNUMEZCVDNGRkxGRkJSVmdzUzBGQldrZ3NVMEZCWjBKMFJTeExRVUZMZVVJc1pVRkJaWEpDTEU5QlFVOXRReXhMUVVGTEswSXNVMEZEY0VSMFJTeExRVUZMZVVJc1pVRkJaVzVFTEU5QlFWTm5SeXhSUVVGUmFFY3NUMEZET1VJd1FpeE5RVWxVTEVsQlFVa3dSU3hSUVVGVkxGZEJkVUprTEZOQlFWTkRMR05CUVdORExFVkJRVWQyUXl4UFFVTjRRaXhQUVVGSmRVTXNSMEZCU3l4SFFVRnpRaXhKUVVGcVFuWkRMRTFCUVUwdlJDeFJRVUZuUWl0RUxFMUJRVTAzUWl4TlFVRmpMRVZCUTNCRU5rSXNUVUZCVFhCRExGZEJRVzFDTEVWQlJYcENNa1VzUjBGQlRVRXNSVUZGU25aRExFMUJRVTA1UWl4VFFVRlhPRUlzVFVGQlRTOUVMRTlCUVdVclJDeE5RVUZOYWtNc1QwRkJUMmxGTEV0QlFVdEZMRXRCUVV0cVJ5eFBRVUZ0UWl0RUxFMUJRVTB2UkN4UlFVbDRSbk5ITEVWQlFVbDJReXhOUVVGTmJFTXNaMEpCUVdWclF5eE5RVUZOYkVNc1kwRXZRbkpETEZOQlFXbERlVVVzUjBGblFpOUNMRTlCWmtsQkxFZEJRVXRHTEZGQlJWQkZMRVZCUVVsR0xGTkJTVXBGTEVsQlEwRkJMRWRCUVV0QkxFbEJRVTBzUlVGRFdFRXNSMEZCUzBFc1NVRkJUU3hGUVVOWVFTeEhRVUZMUVN4SlFVRk5MRVZCUTFoQkxFZEJRVXRCTEVsQlFVMHNSVUZEV0VFc1IwRkJTMEVzU1VGQlRTeEhRVU5ZUVN4TFFVZExRU3hGUVdVMFEwTXNRMEZCZDBKRUxFbEJRM1pGUVN4SFFVRkxka01zVFVGQlRTOUVMRTlCUVdWelJ5eEZRVVY2UW5aRExFMUJRVTAzUWl4TlFVdEtOa0lzVFVGQlRTOUVMRkZCU2xnclJDeE5RVUZOZWtJc1kwRkJaU3hGUVVOa0xFbEJkMGxZTEZOQlFWTTBRaXhoUVVGaE1VTXNVVUZEY0VJc1NVRkJTWFZETEUxQlFWRjJReXhQUVVGUE1rSXNaVUZEYmtJM1F5eE5RVUZOTEdWQlFXZENlVVFzVFVGQlRYcENMR0ZCUVdONVFpeE5RVUZOZUVJc2FVSkJRMmhFZDBJc1RVRkJUWHBDTEdOQlFXVXNSVUZGYUVKNVFpeE5RVUZOZUVJc2EwSkJRMVJxUXl4TlFVRk5MR1ZCUVdkQ2VVUXNUVUZCVFRsQ0xGTkJRelZDT0VJc1RVRkJUWGhDTEdsQ1FVRnJRaXhGUVVONFFtbEZMRkZCUVZGRExGTkJRVk4wUXl4alFVRmxNME1zVTBGSmNFTXNVMEZCVXpKRExHTkJRV016UXl4UlFVTnlRaXhKUVVGSmRVTXNUVUZCVVhaRExFOUJRVTh5UWl4bFFVTnVRamRETEUxQlFVMHNaMEpCUVdsQ2VVUXNUVUZCVFd4Q0xGVkJRVmRyUWl4TlFVRk5MMFFzVDBGQlVTdEVMRTFCUVUwM1FpeFBRVVYyUkRaQ0xFMUJRVTFzUWl4WlFVRmphMElzVFVGQlRTOUVMRk5CUVZVclJDeE5RVUZOTjBJc1VVRkROME5XTEU5QlFVOTNSQ3hMUVVGTExGbEJRMXBxUWl4TlFVRk5lRUlzYVVKQlFXdENMRWRCVXpGQ2QwSXNUVUZCVFhwQ0xHTkJRV2RDZVVJc1RVRkJUVGxDTEZWQlFWazRRaXhOUVVGTk4wSXNUMEZCVXpaQ0xFMUJRVTB2UkN4UlFVRlZLMFFzVFVGQlRXeERMR05CUXpkRk5rVXNTMEZCUzJ4R0xGRkJVMUFzVTBGQlUzVkVMR05CUVdOMlJDeFBRVUZSZFVNc1QwRkRlRUpCTEUxQlFVMW1MR05CUTFSbExFMUJRVTFtTEdGQlFXTXNSVUZEY0VKM1JDeFJRVUZSUXl4VFFVRlRSU3hsUVVGblFtNUdMRTlCUVZGMVF5eFJRVWszUXl4VFFVRlRORU1zWlVGQlpXNUdMRTlCUVZGMVF5eFBRWGRDT1VJc1RVRkJVVUVzVFVGQlRUTkNMRlZCUVZreVFpeE5RVUZOTjBJc1VVRkJWVFpDTEUxQlFVMHZSQ3hQUVVGVEswUXNUVUZCVFd4RExHVkJRV2xDYTBNc1RVRkJUVGxDTEZOQlFUUkNMRWxCUVdwQ09FSXNUVUZCVFM5RUxGTkJRV1VzUTBGRGNFZ3NTVUZCU1RSSExFbEJRVTAzUXl4TlFVRk5MMFFzVDBGSGFFSXNSMEZHUVUwc1RVRkJUU3gzUWtGRFRtdENMRTlCUVU4MlFpeExRVUZMTEVkQlExSjFSQ3hOUVVGUk4wTXNUVUZCVFM5RUxFOUJRMmhDTEUxQlIwb3JSQ3hOUVVGTlppeGhRVUZqTEVWQk5sRjBRaXhUUVVGVE5rUXNkMEpCUVhkQ1F5eE5RVU12UWl4SlFVRkpMME1zVFVGQlVTdERMRXRCUVVzelJDeGxRVU5xUWxrc1RVRkJUWFpDTEd0Q1FVRnZRbk5GTEV0QlFVdERMR05CUVdNc1dVRkJZeXhGUVVWMlJHaEVMRTFCUVUxMFFpeHJRa0ZCYjBKelFpeE5RVUZOY2tJc1QwRkhiRU54UWl4TlFVRk5PVUlzVTBGQlZTeEZRVU5RTmtVc1MwRkJTME1zWTBGQll5eFJRVUZWTEVkQlEzUkRSQ3hMUVVGTFJTeFRRVWxVTEZOQlFWTkRMR2xDUVVGcFFrZ3NUVUZEZUVKNFJ5eE5RVUZOTERSQ1FVTk9kMGNzUzBGQlMzcEVMRXRCUVVzc1IwRTBRbG9zVTBGQlV6WkVMRkZCUVZFeFJpeFBRVUZSZFVNc1QwRkRka0o2UkN4TlFVRk5MRk5CUVZWNVJDeE5RVUZOTTBJc1UwRkZha0l5UWl4TlFVRk5NMElzVTBGRFZGb3NUMEZCVHpaQ0xFdEJRVXNzUjBGSFpGVXNUVUZCVFhSQ0xHbENRVUZyUWl4RlFVTjRRbXBDTEU5QlFVOTNSQ3hMUVVGTExGVkJRMW93UWl4TFFVRkxiRVlzVVVGRFJIVkRMRTFCUVUwNVFpeFZRVUZaT0VJc1RVRkJUVE5DTEZOQlFWTmFMRTlCUVU4MlFpeExRVUZMTEVkQlowSnVSQ3hUUVVGVGNVUXNTMEZCUzJ4R0xGRkJRMW9zU1VGQlNYVkRMRTFCUVZGMlF5eFBRVUZQTWtJc1pVRkhia0lzU1VGR1FUZERMRTFCUVUwc1QwRkJVWGxFTEUxQlFVMDVRaXhUUVVWaU9FSXNUVUZCVFRsQ0xGTkJRVFpDTEU5QlFXeENWQ3hQUVVGUE5rSXNWVUUwU0dwRExGTkJRVk00UkN4VFFVRlRZaXhGUVVGSGRrTXNUMEZGYmtJc1QwRkJjVUlzU1VGQmFrSkJMRTFCUVUwdlJDeFBRVUZ4UWl4TlFVVXpRaXRFTEUxQlFVMXdReXhYUVVGWmVVWXNTVUZCVFhKRUxFMUJRVTFxUXl4UFFVRlBkVVlzVTBGQmEwSm1MRWRCUVV0QkxFZEJRVXQyUXl4TlFVRk5MMFFzVVVGRmRFUnZTQ3hKUVVGbWNrUXNUVUZCVFdRc1VVRkJaV01zVFVGQlRXcERMRTlCUVU5M1JpeExRVUZMTEVsQlFYRkRMRWxCUVhoQ2RrUXNUVUZCVFdwRExFOUJRVTg1UWl4UFFVRnZRaXRFTEUxQlFVMXFReXhQUVVGUGVVWXNVVUZCYlVKNFJDeE5RVUZOYWtNc1QwRkJUekJHTEU5QlFVOTZSQ3hOUVVGTkwwUXNVVUZEYmtvclJDeE5RVUZOYWtNc1QwRkJUM0ZGTEZOQlIySnBRaXhKUVVGTmNrUXNUVUZCVFdwRExFOUJRVTh5Uml4UlFVRlJia0lzUlVGQlIzWkRMRTFCUVUxa0xGTkJSUzlDYlVVc1MwRlVVQ3hKUVVGSlFTeEpRVmxPTEZOQlFWTk5MRmxCUVZsc1J5eFJRVU51UWl4SlFVRkpkVU1zVFVGQlVYWkRMRTlCUVU4eVFpeGxRVU51UWpkRExFMUJRVTBzWTBGQlpYbEVMRTFCUVUwMVFpeFpRVVYwUWpSQ0xFMUJRVTAxUWl4aFFVTlVORUlzVFVGQlRUZENMRTlCUVZFc1JVRkRaSE5GTEZGQlFWRkRMRk5CUVZOclFpeGpRVUZsTlVRc1RVRkJUM1pETEZOQlNUTkRMRk5CUVZOdFJ5eGpRVUZqTlVRc1RVRkJUM1pETEZGQlJ6VkNMRWRCUmtGc1FpeE5RVUZOTEdkQ1FVRnBRbmxFTEUxQlFVMDFRaXhYUVVGWk5FSXNUVUZCVFM5RUxGTkJSVEZESzBRc1RVRkJUVFZDTEZsQlFTdENMRWxCUVdwQ05FSXNUVUZCVFM5RUxGTkJRemRDSzBRc1RVRkJUVFZDTEZsQlFXRXNSVUZEYmtKWUxFOUJRVTgwUWl4VlFVRlhMRVZCUTJ4Q05VSXNUMEZCVDNkRUxFdEJRVXNzVDBGRlVtcENMRTFCUVUxdVFpeGhRVUZoTEVOQlIzSkNMRWxCUVVsblJpeFBRVUZUY0Vjc1QwRkJUM0ZITEdsQ1FVVm1SQ3hSUVVGVlFTeFBRVUZQYUVZc1lVRkJaV2RHTEU5QlFVOUZMRmRCUXpGRGRFY3NUMEZCVHl0Q0xGZEJaMEptTEZOQlFWTjNSU3hSUVVGUlF5eEhRVUZKUXl4SFFVTnVRaXhKUVVGTExFbEJRVWxETEVWQlFVa3NSVUZCUjBNc1JVRkJTVWdzUjBGQlIyaEpMRTlCUVZGclNTeEZRVUZKUXl4RlFVRkhSQ3hKUVVOd1F5eEhRVUZKUml4SFFVRkhSU3hMUVVGUFJDeEZRVUZITEU5QlFVOURMRVZCUnpGQ0xFOUJRVkVzUlVFemRFSldNVWtzVTBGQlUyMUdMRlZCUVZWMFFpeExRVUZQTEZOQlFWVnBSQ3hIUVVOc1EyaEhMRTFCUVUwc1QwRkJVV2RITEVkQlEyUkJMRVZCUVVrNFFpeFRRVUZUT1VJc1JVRkJSeXhKUVVOb1FpeEpRVUZKZGtNc1RVRkJVWEpETEV0QlFVdDVRaXhsUVVOaWEwWXNUVUZCVVM5Q0xFVkJTMW9zUjBGS1ZTeEpRVUZPUVN4SlFVRlRka01zVFVGQlRYaENMR2xDUVVGclFpeEhRVWt6UWl4SlFVRk9LMFFzUjBGQlYzWkRMRTFCUVUxNlFpeG5Ra0ZCTUVNc1NVRkJlRUo1UWl4TlFVRk5iRU1zWTBGQmMwSnJReXhOUVVGTkwwUXNVVUZCVlN0RUxFMUJRVTFzUXl4alFVRm5RbXRETEUxQlFVMHZSQ3hQUVVGVExFbEJRVTByUkN4TlFVRk5OMElzVDBGSGJFa3NUMEZHUVRWQ0xFMUJRVTBzY1VKQlFYTkNlVVFzVFVGQlRTOUVMRTlCUVZFclJDeE5RVUZOTjBJc1QwRkRNMElzU1VGQmFrSTJRaXhOUVVGTkwwUXNVVUZCWjBJclJDeE5RVUZOTjBJc1RVRkJUM2RHTEZsQlFWbG9SeXhOUVVGWGQwTXNZVUZCWVhoRExFMUJRM0JGTEV0QlMxUXNSMEZCVlN4TFFVWldORVVzUlVGQlNVUXNZMEZCWTBNc1JVRkJSM1pETEZOQlJVNUJMRTFCUVUwM1FpeE5RVVZ1UWl4UFFVUnhRaXhKUVVGcVFqWkNMRTFCUVUwdlJDeFJRVUZqTUVnc1dVRkJXV2hITEUxQlF6ZENMRXRCZVVKVUxFbEJORUpKTUVZc1NVRTFRa0ZyUWl4UFFVRlRka1VzVFVGQlRYcENMR0ZCWjBSdVFpeFBRUzlEUVdoRExFMUJRVTBzWjBKQlFXbENaMGtzVTBGRlJpeEpRVUZxUW5aRkxFMUJRVTB2UkN4UlFVRm5RaXRFTEUxQlFVMHZSQ3hQUVVGVGMwY3NSVUZCU1haRExFMUJRVTFzUXl4blFrRkZha1IyUWl4TlFVRk5MRFpDUVVST1owa3NVVUZCVXl4SFFVMVFka1VzVFVGQlRUZENMRTlCUVZNMlFpeE5RVUZOTTBJc1VVRkZka0k1UWl4TlFVRk5MRzFDUVVST1owa3NVVUZCVXl4SFFVVkJRU3hUUVVOVWFFa3NUVUZCVFN4WFFVTk9lVVFzVFVGQlRUTkNMRk5CUVZVc1JVRkRhRUl5UWl4TlFVRk5NVUlzVFVGQlR5eEZRVVZSTEVsQlFXcENNRUlzVFVGQlRTOUVMRk5CUVdNclJDeE5RVUZOZWtJc1kwRkJaU3hIUVVVM1Exb3NTMEZCU3pSQ0xFMUJRVTFUTEUxQlFVMXNReXhsUVVWcVFtdERMRTFCUVUweFFpeE5RVUZQTEVWQlIxSXdRaXhOUVVGTk0wSXNWVUZCVTJ0RkxFVkJRVWxFTEdOQlFXTm5ReXhOUVVGUGRFVXNVMEZOYmtNc1VVRkdSSEZFTEVsQlFWQmtMRVZCUVVrc1JVRkJVMkVzVTBGQlUySXNSVUZCUjNaRExFOUJRV3RDTEU5QlJ6ZERRU3hOUVVGTmVrSXNZVUZCWlhsQ0xFMUJRVTB2UkN4UlFVRlZLMFFzVFVGQlRXeERMR05CUXpORGVVVXNSVUZCU1N4SlFVVktka01zVFVGQlRTOUVMRkZCUVZWelJ5eEZRVU5vUW5aRExFMUJRVTFvUWl4WFFVRmhMRWRCUjBFc1NVRkJha0puUWl4TlFVRk5MMFFzVTBGSFNDdEVMRTFCUVUwM1FpeFJRVUZQTmtJc1RVRkJUWHBDTEdOQlFXVXNSMEZGYmtNclJpeFJRVUZWTDBJc1IwRkJTM1pETEUxQlFVMDNRaXhQUVVGUGQwWXNXVUZCV1doSExFOUJSMnhETEU5QlFWSXdSaXhMUVVGak1VWXNTMEZCUzNORUxFdEJRVXNzVDBGQlVXOURMRXRCUXpkQ1FTeExRWGRJVkRWSUxGTkJRVk50Uml4VlFVRlZja0lzVFVGQlVTeFRRVUZWWjBRc1IwRkRia05xUml4bFFVRmxTeXhMUVVGTkxFbEJRVWxRTERKQ1FVRXlRaXhoUVVkMFJETkNMRk5CUVZOdFJpeFZRVUZWTkVRc1MwRkJUeXhUUVVGVlF5eExRVUZOUXl4VlFVTjRReXhKUVVGSlF5eEpRVUZOYUVnc1MwRkRUbkZETEUxQlFWRnlReXhMUVVGTGVVSXNaVUZGYWtJc1QwRkJVVmtzVFVGQlRTOUNMRmxCUTFvc1MwRkJTeXhGUVVOSUswSXNUVUZCVFdoRExFMUJRVkY1Unl4TFFVTmtMRTFCUlVZc1MwRkJTeXhGUVVOSWVrVXNUVUZCVFdoRExFMUJRVkVzUTBGQlEyZERMRTFCUVUxb1F5eE5RVUZQZVVjc1RVRkROVUlzVFVGRlJpeFJRVU5GZWtVc1RVRkJUV2hETEUxQlFVMXJReXhMUVVGTGRVVXNUVUZKY2tKNlJTeE5RVUZOTDBJc1dVRkJZeXhGUVVOd1FqRkNMRTFCUVUwc2QwSkJRWGxDZVVRc1RVRkJUUzlDTEZkQlFWbDVSeXhWUVVOcVJDeEpRVU5KUlN4UlFVUlZSaXhYUVVFMlFpeEpRVUZxUWtFc1UwRkJVM3BGTEUxQlFXdENkMFVzVDBGQlUyaERMRkZCUVZGdlF5eFJRVUZWU2l4UFFVRlRhRU1zVVVGQlVYRkRMRTlCUXpkRlF5eE5RVUZSUXl4UFFVazFRaXhUUVVGVFF5eFRRVUZUTlVZc1UwRkJWVFpHTEZsQlF6RkNNMGtzVFVGQlRTeFpRVVZHT0VNc1YwRkJZWE5HTEV0QlExaFBMR0ZCUVhkRExFbEJRVEZDUVN4WFFVRlhReXhoUVVNelFrUXNWMEZCVjBNc1dVRkJZU3hGUVc5Q05VSTFTU3hOUVVGTkxGZEJSVTVyU1N4TFFVRkxWeXhsUVVGbExGRkJRVk5ETEZOQlF6ZENXaXhMUVVGTFZ5eGxRVUZsTEZOQlFWVkZMRlZCUXpsQ1lpeExRVUZMVnl4bFFVRmxMRkZCUVZOSExGTkJRemRDWkN4TFFVRkxWeXhsUVVGbExGRkJRVk5KTEZOQlF6ZENaaXhMUVVGTFZ5eGxRVUZsTEZOQlFWVklMRlZCUXpsQ1RpeEpRVUZKVXl4bFFVRmxMRTFCUVU5TUxFOUJRekZDU2l4SlFVRkpVeXhsUVVGbExFMUJRVTlLTEZGQlF6RkNUQ3hKUVVGSlV5eGxRVUZsTEU5QlFWRkxMRkZCUXpOQ1F5eFhRVUZaTEVkQlRWSXhSaXhOUVVGTmFFSXNXVUZCWjBKNVJpeExRVUZMV0N4cFFrRkJhMEpYTEV0QlFVdFlMR1ZCUVdVMlFpeFhRVUZaU2l4WFFUbENia1lzVTBGQlUxSXNVVUZEVUhoSkxFMUJRVTBzVTBGRFRtdEpMRXRCUVV0NFJTeE5RV2hDU0VRc1RVRkJUVFZDTEZkQlFWbHhSU3hSUVVGUlF5eFRRVUZUYTBNc1QwRkJXVVFzU1VGQlNXbENMRXRCUVVzc1RVRkJUMmhDTEU5QlEyNUZTQ3hMUVVGTGIwSXNSMEZCUnl4VFFVRlZXaXhWUVhOQ2JFSXNTVUZCU1Uwc1VVRjNSazRzVTBGQmNVSmFMRXRCUTI1Q0xFOUJRVThzVjBGRFRDeEpRVUZKTTBVc1RVRkJVVEpGTEVsQlFVbDJSaXhsUVVOb1FqZERMRTFCUVUwc1kwRkJaWGxFTEUxQlFVMW9RaXhaUVVOMlFtZENMRTFCUVUxb1FpeFpRVUZaWjBJc1RVRkJUV2hDTEdGQlJVZ3NTVUZCY2tKblFpeE5RVUZOYUVJc1dVRkJiMEp1UkN4blFrRkJaMEk0U1N4SlFVRkxMRlZCUTJwRU0wVXNUVUZCVFRsQ0xGTkJRVlVzUlVGRGFFSjVSU3hMUVVGTFowTXNUMEZvUjB0dFFpeERRVUZaYmtJc1MwRkRNVUpHTEV0QlFVdHZRaXhIUVVGSExGRkJRVk5PTEZOQlEycENMRWxCUVVsSExGZEJRVmtzUlVGM1FtaENMRk5CUVZORUxFOUJRVTgzUml4UFFVTmtja1FzVFVGQlRTeFZRVU5PTEVsQlFVazRSeXhKUVVGTmIwSXNTMEZCU3pGRUxFMUJRVTF1UWl4UFFVTnlRbkpFTEUxQlFVMHNZVUZCWXpoSExFMUJSVklzU1VGQlVrRXNUMEZMZDBJc1NVRkJja0p5UkN4TlFVRk5MMElzV1VGQmIwSXJRaXhOUVVGTmFFTXNVVUZCVlhsSExFMUJRVkY2UlN4TlFVRk5MMElzVjBGQllTeEpRVUZ4UXl4SlFVRm9ReXRHTEZGQlFWRm9SU3hOUVVGTmFFTXNUVUZCVDNsSExGTkJRV3RDYVVJc1dVRkRjRWh1U2l4TlFVRk5MRGhDUVVFclFubEVMRTFCUVUxb1FpeFpRVU16UTJkQ0xFMUJRVTFvUWl4alFVZFNNa1lzU1VGQlNXOUNMRk5CVFZJc1UwRkJVMUFzVVVGQlVYcEdMRWxCUTJaNFJDeE5RVUZOTEZWQlFWZDNSQ3hKUVVOcVFtbEdMRk5CUTBGUUxFdEJRVXRYTEdWQlFXVXNVVUZCVTBrc1UwRkRWU3hKUVVGdVF6TktMR2RDUVVGblFqUkpMRXRCUVUwc1ZVRkJaMEp1U0N4bFFVRmxiVWdzUzBGQlRURkZMRWxCVFdwRkxGTkJRVk56Uml4VlFVTlFXaXhMUVVGTFZ5eGxRVUZsTEZOQlFWVkZMRlZCUXpsQ1RpeFRRVXRHTEZOQlFWTk5MRmRCUTFBdlNTeE5RVUZOTEZsQlEwNXJTU3hMUVVGTFZ5eGxRVUZsTEZGQlFWTkRMRk5CUXpkQ1RDeFRRVXRHTEZOQlFWTkJMRk5CUTFCNlNTeE5RVUZOTEZWQlEwNXZTU3hKUVVGSlN5eFBRVUZQVUN4TlFWZGlMRTlCTjBSQlJTeEpRVUZKYTBJc1IwRkJSeXhQUVVGUlNpeFJRWFJyUW1wQ0xGTkJRWGxDTTBvc1VVRkJVMnRMTEUxQlFVOURMRWxCUjNaRExFZEJRWFZETEcxQ1FVRTFRbTVMTEZGQlFWRnZTeXhuUWtGQlowTXNUMEZCVDNCTExGRkJRVkZ2U3l4blFrRkJaMEpHTEUxQlFVOURMRWxCUzNCR2Jrc3NVVUZCVVhGTExGTkJRVmx5U3l4UlFVRlJjVXNzVVVGQlVVZ3NUMEZCZFVOSkxFMUJRVTFETEZGQlFWRjJTeXhSUVVGUmNVc3NVVUZCVVVnc1VVRkJVMnhMTEZGQlFWRnhTeXhSUVVGUlNDeFBRVUZQT1VVc1VVRkJVU3RGTEVsQlFWTnVTeXhSUVVGUmNVc3NVVUZCVVVnc1QwRkJVeXhEUVVGRFF5eEhRVUZKYmtzc1VVRkJVWEZMTEZGQlFWRklMRkZCUVRWS2JFc3NVVUZCVVN0S0xFZEJRVWRITEUxQlFVOURMRWxCTm14Q2JrVkRMRU5CUVdkQ2VrSXNTMEZCVFN4UlFVRlRaU3hUUVU4dlFtWXNTMEZCUzIxQ0xFdEJRVXNzVVVGQlUxQXNVMEZSYmtKYUxFdEJRVXR0UWl4TFFVRkxMRk5CUVZWT0xGVkJVWEJDWWl4TFFVRkxlRVFzUzBGQlN5eFBRVUZSTUVRc1MwRkZZak5GTEUxQlFVMDVRaXhWUVVOVU0wSXNUVUZCVFN4bFFVTk9iMGtzU1VGQlNURkNMRlZCUjBOM1FpeE5RV2RDVkdoS0xGTkJRVk50Uml4VlFVRlZiMFVzVDBGQlV5eFRRVUZWVUN4TlFVTndReXhKUVVGSmVrVXNUVUZCVVhKRExFdEJRVXQ1UWl4bFFVTmlPRVlzVjBGQllTeERRVU5tUXl4WlFVRlpMRWRCUjJRc1IwRkJlVUlzU1VGQmNrSnVSaXhOUVVGTkwwSXNWMEZCYTBJc1QwRkJUMDRzUzBGRmJrTXNSMEZCZVVJc1NVRkJja0p4UXl4TlFVRk5MMElzVjBGRlVpeFBRVUZKZDBjc1RVRkJVVUVzVDBGQlUzcEZMRTFCUVUxb1F5eE5RVUZqVEN4TlFVTndRemhITEU5QlFVMUJMRXRCUVU5NlJTeE5RVUZOYUVNc1QwRkZlRUpuUXl4TlFVRk5hRU1zVFVGQlVTeExRVU5rWjBNc1RVRkJUUzlDTEZkQlFXRXNSVUZEYmtJclFpeE5RVUZOT1VJc1UwRkJWU3hGUVVOYWRVY3NUVUZCVFVFc1MwRkJTM2hFTEV0QlFVc3NVMEZCVlhSRUxFdEJRVTExU0N4WlFVTTNRblpJTEUxQlNWUXNTVUZCU3poSExFdEJRVTBzUTBGRlZDeEpRVUZKTmtJc1RVRkJVWFJITEUxQlFVMW9ReXhOUVVOa05rVXNTVUZCVFRkRExFMUJRVTB2UWl4WFFVTm9RaXRDTEUxQlFVMW9ReXhOUVVGUkxFdEJRMlJuUXl4TlFVRk5MMElzVjBGQllTeEZRVU51UWl0Q0xFMUJRVTA1UWl4VFFVRlZMRVZCUldoQ0xFbEJRVXNzU1VGQlNXbEhMRVZCUVVrc1JVRkJSMEVzUlVGQlNYUkNMRWxCUVV0elFpeEpRVU4yUW0xRExFMUJRVTF1UXl4SFFVRkhiRVFzUzBGQlN5eFRRVUZWZEVRc1MwRkJUU3hEUVVNMVFuZElMRmxCUVZrc1NVRkphRUlzVDBGQlQzaElMRXRCU1ZRc1NVRkJTVFJKTEUxQlFWRjJReXhSUVVGUmFFVXNUVUZCVFdoRExFMUJRVTk1Unl4TlFVTnFReXhQUVVGbExFbEJRVmc0UWl4TlFVRnhRalZKTEUxQlEzcENjVU1zVFVGQlRXaERMRTFCUVUxM1NTeFBRVUZQUkN4TlFVRlBMRWRCUXpGQ2RrY3NUVUZCVFM5Q0xGbEJRV01zUlVGRFN5eEpRVUZ5UWl0Q0xFMUJRVTB2UWl4aFFVRnJRaXRDTEUxQlFVMW9ReXhOUVVGUlowTXNUVUZCVFdoRExFMUJRVTBzU1VGRGRFUjVSeXhMUVVGTGVFUXNTMEZCU3l4VFFVRlZkRVFzUzBGQlRYVklMRmxCUTI1Q2RrZ3NUMEZMVkd4RExGTkJRVk50Uml4VlFVRlZhVVlzUjBGQlN5eFRRVUZWV1N4SFFVRkpVaXhKUVVOd1F5eEpRVUZKVXl4SlFVRk5lRXNzVDBGQlR6QkZMRlZCUVZWcFJpeEhRVUZIYmtjc1MwRkJTeTlDTEV0QlFVMDRTU3hIUVVGSlVpeEpRVU42UTJwSExFMUJRVkZ5UXl4TFFVRkxlVUlzWlVGMVFtcENMRTFCY2tKWExGTkJRVkJ4U0N4SlFVZEdla2NzVFVGQlRYWkNMR3RDUVVGdlFtUXNTMEZCUzNGR0xHTkJRV01zV1VGQll5eEhRVVZ5UXl4SlFVRnNRbWhFTEUxQlFVMDVRaXhUUVVGdFFsQXNTMEZCUzNOR0xGVkJRMnhDTEdGQlFWQjNSQ3hMUVVOS2VrY3NUVUZCVFRWQ0xGbEJRV1UwUWl4TlFVRk5ka0lzYjBKQlF6bENkVUlzVFVGQlRYWkNMR3RDUVVGdlFuVkNMRTFCUVUxNlFpeGpRVUZsTEVWQlF5OURlVUlzVFVGQlRUbENMRk5CUVZVc1JVRkRhRUk0UWl4TlFVRk5lRUlzYVVKQlFXdENMRVZCUTNoQ2FrTXNUVUZCVFN4alFVRmxlVVFzVFVGQlRTOUVMRTlCUVZFclJDeE5RVUZOTTBJc1UwRkZja015UWl4TlFVRk5MMFFzVDBGRFVtdEZMR0ZCUVdGNFF5eE5RVU5JY1VNc1RVRkJUVE5DTEZOQlEyaENiMFVzVVVGQlVVTXNVMEZCVTFFc2FVSkJRV3RDZGtZc1VVRkxiRU1yU1N4TFFVZFVha3dzVTBGQlUyMUdMRlZCUVZVclJpeFpRVUZqYkV3c1UwRkJVMjFHTEZWQlFWVnBSaXhIUVVWd1JIQkxMRk5CUVZOdFJpeFZRVUZWZDBVc1pVRkJhVUlzVTBGQlZYRkNMRWRCUVVsU0xFbEJRMmhFTEVsQlFVbFRMRWxCUVUxNFN5eFBRVUZQTUVVc1ZVRkJWWGRGTEdWQlFXVXhSaXhMUVVGTEwwSXNTMEZCVFRoSkxFZEJRVWxTTEVsQldYcEVMRTFCVmxjc1lVRkJVRkVzU1VGUFJtaEZMRkZCUVZGRExGTkJRVk5KTEhkQ1FVRjVRbTVHTEUxQlIzSkRLMGtzUzBGSFZHcE1MRk5CUVZOdFJpeFZRVUZWWjBjc2JVSkJRWEZDTEZOQlFWVklMRWxCUTJoRUxFbEJRVWxETEVsQlFVMTRTeXhQUVVGUE1FVXNWVUZCVldkSExHMUNRVUZ0UWtNc1RVRkJUV3hLTEV0QlFVMXRTaXhYUVZreFJDeE5RVlpYTEdGQlFWQk1MRk5CUVRSQ2FrY3NTVUZCVUdsSExFbEJUM1pDYUVVc1VVRkJVVU1zVTBGQlUwa3NkMEpCUVhsQ2JrWXNUVUZIY2tNclNTeExRWFZDVkdwTUxGTkJRVk50Uml4VlFVRlZjVU1zVDBGQlV5eFhRVU14UWl4SlFVRkpha1FzVFVGQlVYSkRMRXRCUVV0NVFpeGxRVmxxUWl4UFFWWkxXU3hOUVVGTk9VSXNWVUZEVkROQ0xFMUJRVTBzVlVGSlRubEVMRTFCUVUwNVFpeFRRVUZYT0VJc1RVRkJUWFpDTEd0Q1FWRXpRaXhUUVVGblFtaENMRTlCUVZGMVF5eFBRVU5xUWtFc1RVRkJUWFJDTEd0Q1FVTlVjMElzVFVGQlRYUkNMR2xDUVVGclFpeEZRVU40UWl0RUxGRkJRVkZETEZOQlFWTlRMRkZCUVZNeFJpeFBRVUZSZFVNc1VVRldiRU5wUkN4RFFVRlBkRVlzUzBGQlRYRkRMRkZCUjJaQkxFMUJRVTF5UWl4UlFVRlRMRVZCUTFKb1FpeE5RWFZDVkd4RExGTkJRVk50Uml4VlFVRlZiVVlzVFVGQlVTeFhRVlY2UWl4UFFWUkJlRW9zVFVGQlRTeDNRa0ZCZVVKdlFpeExRVUZMZVVJc1pVRkJaV3hDTEZWQlJXWXNTVUZCYUVOUUxFdEJRVXQ1UWl4bFFVRmxiRUlzVlVGRGRFSXpRaXhOUVVGTkxGTkJRMDV2UWl4TFFVRkxlVUlzWlVGQlpXeENMRk5CUVZVc1JVRkRPVUpRTEV0QlFVdHpSQ3hMUVVGTExGVkJSMXAwUkN4TFFVRkxlVUlzWlVGQlpWUXNVVUZCVXl4RlFVTjBRbWhDTEUxQlpWUnNReXhUUVVGVGJVWXNWVUZCVlcxSExFdEJRVThzVTBGQlZYUktMRkZCUTJ4RExFbEJRVWwxU2l4TlFVRlJja29zUzBGRlVuRkRMRTFCUVZGeVF5eExRVUZMZVVJc1pVRkRZbFFzVVVGQlV5eEZRVEJDWWl4SlFVRkxMRWxCUVVsM1JpeExRWHBDVkRGSExFOUJRVTl2U1N4SFFVRkhMRTFCUVU4c1YwRkhaaXhIUVVaQmRFb3NUVUZCVFN4bFFVVkdlVVFzVFVGQlRXUXNWVUZCV1dNc1RVRkJUVGRDTEUxQlFVOHNRMEZEYWtNc1NVRkJTWGxDTEUxQlFWRkpMRTFCUVUxa0xGRkJRVkZsTEUxQlEzUkNUQ3hQUVVGVFFTeE5RVUZOTTBRc1VVRkJVU3RMTEUxQlFVMDVSeXhMUVVGTFRpeFBRVWQ0UTI5SUxFMUJRVTA1Unl4TFFVRkxMRkZCUldKNlF5eFBRVUZQYjBrc1IwRkJSeXhQUVVGUkxGTkJRVlZxUnl4UlFVTXhRbkpFTEUxQlFVMHNaMEpCUTBaNVJDeE5RVUZOWkN4VlFVRlRWU3hOUVVGUlNTeE5RVUZOWkN4UlFVRlJOa0lzVFVGQlRXNUNMRkZCUlRORFNTeE5RVUZOY0VNc1dVRkJZeXhOUVVGRFowTXNVMEZCZVVSSkxFMUJRVTF3UXl4WlFVRm5RbWRETEU5QlFWVkJMRTFCUVUwelJDeFZRVVU1Unl0TExFMUJRVTA1Unl4TFFVRkxUaXhUUVVkdVFtcENMRkZCUVZNc1JVRkRWR3hDTEU5QlFVOXpTU3haUVV0SGRFa3NXVUZEU1N0RExFbEJRVm8zUXl4TFFVRkxkMGNzU1VGQmVVTXNiVUpCUVdReFJ5eFBRVUZQTUVjc1MwRkRla040Unl4TFFVRkxkMGNzUjBGQlN5eFRRVUZ2UWpoRExGRkJRelZDTEU5QlFVOHNWMEZEVEN4UFFVRlBlRW9zVDBGQlQzZEtMRkZCUVZGS0xFMUJRVTF3U2l4UFFVRlJjVW9zV1VGR09VSXNRMEZKVWpORExFbEJTMDRzU1VGQlN5eEpRVUZKTlVJc1JVRkJTU3hGUVVGSFFTeEZRVUZKYUVZc1lVRkJZWFJDTEU5QlFWRnpSeXhKUVVOMlF6bEZMRTlCUVU5dlNTeEhRVUZIZEVrc1lVRkJZV2RHTEVkQlFVazFSU3hMUVVGTGMwUXNTMEZCUzJsSExFdEJRVXQyU2l4TFFVRk5TaXhoUVVGaFowWXNTMEZqTDBRc1QwRlVRVFZGTEV0QlFVczBRaXhOUVVGUkxGTkJRVlZuUkN4SFFVTnlRbWhITEUxQlFVMHNaMEpCUVdsQ1owY3NSMEZGYmtJMVJDeFRRVU5HUVN4UlFVRlRMRVZCUTFSc1FpeFBRVUZQZDBZc1YwRkpTblJHTEUxQlIyRXNiVUpCUVZoM1NpeFRRVU5VTVV3c1UwRkJVMjFHTEZWQlFWVjFSeXhQUVVGUFF5eGxRVUZwUWl4WFFVdDZReXhaUVVvd1F6VkhMRWxCUVhSRE4wUXNiME5CUTBaQkxHdERRVUZ2UTJoQ0xGRkJRVkVzYzBOQlIzWkRaMElzYTBOQlFXdERaMElzVVVGSk4wTXJReXhQUVVGUFV5eGxRVUZsTVVZc1UwRkJVMjFHTEZWQlFWY3NkMEpCUVhsQ0xFTkJTV3BGVVN4WlFVRlpMRVZCUTFwRExFbEJRVXNzVjBGRFNDeFBRVUZQTVVRc1MwRkJTM2xDTEdWQlFXVjBRaXhwUWtGSEwwSTBReXhQUVVGUFV5eGxRVUZsTVVZc1UwRkJVMjFHTEZWQlFWY3NhVUpCUVd0Q0xFTkJTVEZFVVN4WlFVRlpMRVZCUTFwRExFbEJRVXNzVjBGRFNDeFBRVUZQTVVRc1MwRkJTM2xDTEdkQ1FVRnJRbnBDTEV0QlFVdDVRaXhsUVVGbGNrSXNWVUZIZEVReVF5eFBRVUZQVXl4bFFVRmxNVVlzVTBGQlUyMUdMRlZCUVZjc2EwSkJRVzFDTEVOQlNUTkVVU3haUVVGWkxFVkJRMXBETEVsQlFVc3NWMEZEU0N4UFFVRlBNVVFzUzBGQlMzbENMR1ZCUVdWc1FpeFRRVVUzUW05RUxFbEJRVXNzVTBGQllYUkNMRTlCUTFweVF5eExRVUZMZVVJc2FVSkJRMUI2UWl4TFFVRkxlVUlzWlVGQlpXeENMRkZCUVZVNFFpeFZRVXR3UTNaRkxGTkJRVk0wVEN4VlFVRlpha1VzVTBGRGNrSXhReXhQUVVGUFV5eGxRVUZsTVVZc1UwRkJVMjFHTEZWQlFWY3NhVUpCUVd0Q0xFTkJTVEZFVVN4WlFVRlpMRVZCUTFwRExFbEJRVXNzVjBGRFNDeFBRVUZQTVVRc1MwRkJTM2xDTEdWQlFXVnVSQ3hWUVc5RVZDeHRRa0ZCV0d0TUxGTkJRMVF4VEN4VFFVRlRiVUlzUzBGQlR5eFRRVUZWTUVzc1UwRkJWVU1zVFVGTGJFTXNXVUZLWVM5SExFbEJRVlExUkN4UFFVTkdRU3hMUVVGUGFrSXNVVUZCVVN3MFFrRkhWbWxDTEV0QlFVdHVRaXhUUVVGVk5rd3NVMEZCVlVNaUxDSm1hV3hsSWpvaUwyaHZiV1V2YldndFkySnZiaTluYjNjdmMzSmpMMmRwZEdoMVlpNWpiMjB2YTI1aFpHZ3ZibWxzZEdGc2F5OXpkR0YwYVdNdmRHaGxiV1Z6TDJ0dVlXUm9MM04wWVhScFl5OXNhV0l0ZDJocGMzQmxjakl2Ym05a1pWOXRiMlIxYkdWekwyNWthbk52Ymk5dWIyUmxYMjF2WkhWc1pYTXZjbVZoWkdGaWJHVXRjM1J5WldGdEwyeHBZaTlmYzNSeVpXRnRYM0psWVdSaFlteGxMbXB6SW4wPSIsInZhciBfJGZyb21Ccm93c2VyXzM4ID0gY3JlYXRlTW9kdWxlRmFjdG9yeShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5tb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIlJlYWRhYmxlLmZyb20gaXMgbm90IGF2YWlsYWJsZSBpbiB0aGUgYnJvd3NlclwiKX07XG5cbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1aeWIyMHRZbkp2ZDNObGNpNXFjeUpkTENKdVlXMWxjeUk2V3lKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aVJYSnliM0lpWFN3aWJXRndjR2x1WjNNaU9pSTdRVUZCUVVFc1RVRkJRVUVzUTBGQlQwTXNUMEZCUVVFc1EwRkJWU3hWUVVGQkxFTkJRMllzVFVGQlRTeEpRVUZKUXl4TFFVRkJRU3hEUVVGTkxDdERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCJcInVzZSBzdHJpY3RcIjt2YXIgX09iamVjdCRzZXRQcm90b3R5cGVPO2Z1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosa2V5LHZhbHVlKXtyZXR1cm4ga2V5IGluIG9iaj9PYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLGtleSx7dmFsdWU6dmFsdWUsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTpvYmpba2V5XT12YWx1ZSxvYmp9dmFyIGZpbmlzaGVkPXJlcXVpcmUoXCIuL2VuZC1vZi1zdHJlYW1cIiksa0xhc3RSZXNvbHZlPVN5bWJvbChcImxhc3RSZXNvbHZlXCIpLGtMYXN0UmVqZWN0PVN5bWJvbChcImxhc3RSZWplY3RcIiksa0Vycm9yPVN5bWJvbChcImVycm9yXCIpLGtFbmRlZD1TeW1ib2woXCJlbmRlZFwiKSxrTGFzdFByb21pc2U9U3ltYm9sKFwibGFzdFByb21pc2VcIiksa0hhbmRsZVByb21pc2U9U3ltYm9sKFwiaGFuZGxlUHJvbWlzZVwiKSxrU3RyZWFtPVN5bWJvbChcInN0cmVhbVwiKTtmdW5jdGlvbiBjcmVhdGVJdGVyUmVzdWx0KHZhbHVlLGRvbmUpe3JldHVybnt2YWx1ZTp2YWx1ZSxkb25lOmRvbmV9fWZ1bmN0aW9uIHJlYWRBbmRSZXNvbHZlKGl0ZXIpe3ZhciByZXNvbHZlPWl0ZXJba0xhc3RSZXNvbHZlXTtpZihudWxsIT09cmVzb2x2ZSl7dmFyIGRhdGE9aXRlcltrU3RyZWFtXS5yZWFkKCk7bnVsbCE9PWRhdGEmJihpdGVyW2tMYXN0UHJvbWlzZV09bnVsbCxpdGVyW2tMYXN0UmVzb2x2ZV09bnVsbCxpdGVyW2tMYXN0UmVqZWN0XT1udWxsLHJlc29sdmUoY3JlYXRlSXRlclJlc3VsdChkYXRhLCExKSkpfX12YXIgQXN5bmNJdGVyYXRvclByb3RvdHlwZT1PYmplY3QuZ2V0UHJvdG90eXBlT2YoZnVuY3Rpb24oKXt9KSxSZWFkYWJsZVN0cmVhbUFzeW5jSXRlcmF0b3JQcm90b3R5cGU9T2JqZWN0LnNldFByb3RvdHlwZU9mKChfZGVmaW5lUHJvcGVydHkoX09iamVjdCRzZXRQcm90b3R5cGVPPXtnZXQgc3RyZWFtKCl7cmV0dXJuIHRoaXNba1N0cmVhbV19LG5leHQ6ZnVuY3Rpb24oKXt2YXIgX3RoaXM9dGhpcyxlcnJvcj10aGlzW2tFcnJvcl07aWYobnVsbCE9PWVycm9yKXJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7aWYodGhpc1trRW5kZWRdKXJldHVybiBQcm9taXNlLnJlc29sdmUoY3JlYXRlSXRlclJlc3VsdCh2b2lkIDAsITApKTtpZih0aGlzW2tTdHJlYW1dLmRlc3Ryb3llZClyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe3Byb2Nlc3MubmV4dFRpY2soZnVuY3Rpb24oKXtfdGhpc1trRXJyb3JdP3JlamVjdChfdGhpc1trRXJyb3JdKTpyZXNvbHZlKGNyZWF0ZUl0ZXJSZXN1bHQodm9pZCAwLCEwKSl9KX0pO3ZhciBwcm9taXNlLGxhc3RQcm9taXNlPXRoaXNba0xhc3RQcm9taXNlXTtpZihsYXN0UHJvbWlzZSlwcm9taXNlPW5ldyBQcm9taXNlKGZ1bmN0aW9uKGxhc3RQcm9taXNlLGl0ZXIpe3JldHVybiBmdW5jdGlvbihyZXNvbHZlLHJlamVjdCl7bGFzdFByb21pc2UudGhlbihmdW5jdGlvbigpe2l0ZXJba0VuZGVkXT9yZXNvbHZlKGNyZWF0ZUl0ZXJSZXN1bHQodm9pZCAwLCEwKSk6aXRlcltrSGFuZGxlUHJvbWlzZV0ocmVzb2x2ZSxyZWplY3QpfSxyZWplY3QpfX0obGFzdFByb21pc2UsdGhpcykpO2Vsc2V7dmFyIGRhdGE9dGhpc1trU3RyZWFtXS5yZWFkKCk7aWYobnVsbCE9PWRhdGEpcmV0dXJuIFByb21pc2UucmVzb2x2ZShjcmVhdGVJdGVyUmVzdWx0KGRhdGEsITEpKTtwcm9taXNlPW5ldyBQcm9taXNlKHRoaXNba0hhbmRsZVByb21pc2VdKX1yZXR1cm4gdGhpc1trTGFzdFByb21pc2VdPXByb21pc2UscHJvbWlzZX19LFN5bWJvbC5hc3luY0l0ZXJhdG9yLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSxfZGVmaW5lUHJvcGVydHkoX09iamVjdCRzZXRQcm90b3R5cGVPLFwicmV0dXJuXCIsZnVuY3Rpb24oKXt2YXIgX3RoaXMyPXRoaXM7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXtfdGhpczJba1N0cmVhbV0uZGVzdHJveShudWxsLGZ1bmN0aW9uKGVycil7ZXJyP3JlamVjdChlcnIpOnJlc29sdmUoY3JlYXRlSXRlclJlc3VsdCh2b2lkIDAsITApKX0pfSl9KSxfT2JqZWN0JHNldFByb3RvdHlwZU8pLEFzeW5jSXRlcmF0b3JQcm90b3R5cGUpO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKHN0cmVhbSl7dmFyIF9PYmplY3QkY3JlYXRlLGl0ZXJhdG9yPU9iamVjdC5jcmVhdGUoUmVhZGFibGVTdHJlYW1Bc3luY0l0ZXJhdG9yUHJvdG90eXBlLChfZGVmaW5lUHJvcGVydHkoX09iamVjdCRjcmVhdGU9e30sa1N0cmVhbSx7dmFsdWU6c3RyZWFtLHdyaXRhYmxlOiEwfSksX2RlZmluZVByb3BlcnR5KF9PYmplY3QkY3JlYXRlLGtMYXN0UmVzb2x2ZSx7dmFsdWU6bnVsbCx3cml0YWJsZTohMH0pLF9kZWZpbmVQcm9wZXJ0eShfT2JqZWN0JGNyZWF0ZSxrTGFzdFJlamVjdCx7dmFsdWU6bnVsbCx3cml0YWJsZTohMH0pLF9kZWZpbmVQcm9wZXJ0eShfT2JqZWN0JGNyZWF0ZSxrRXJyb3Ise3ZhbHVlOm51bGwsd3JpdGFibGU6ITB9KSxfZGVmaW5lUHJvcGVydHkoX09iamVjdCRjcmVhdGUsa0VuZGVkLHt2YWx1ZTpzdHJlYW0uX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZCx3cml0YWJsZTohMH0pLF9kZWZpbmVQcm9wZXJ0eShfT2JqZWN0JGNyZWF0ZSxrSGFuZGxlUHJvbWlzZSx7dmFsdWU6ZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe3ZhciBkYXRhPWl0ZXJhdG9yW2tTdHJlYW1dLnJlYWQoKTtkYXRhPyhpdGVyYXRvcltrTGFzdFByb21pc2VdPW51bGwsaXRlcmF0b3Jba0xhc3RSZXNvbHZlXT1udWxsLGl0ZXJhdG9yW2tMYXN0UmVqZWN0XT1udWxsLHJlc29sdmUoY3JlYXRlSXRlclJlc3VsdChkYXRhLCExKSkpOihpdGVyYXRvcltrTGFzdFJlc29sdmVdPXJlc29sdmUsaXRlcmF0b3Jba0xhc3RSZWplY3RdPXJlamVjdCl9LHdyaXRhYmxlOiEwfSksX09iamVjdCRjcmVhdGUpKTtyZXR1cm4gaXRlcmF0b3Jba0xhc3RQcm9taXNlXT1udWxsLGZpbmlzaGVkKHN0cmVhbSxmdW5jdGlvbihlcnIpe2lmKGVyciYmXCJFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRVwiIT09ZXJyLmNvZGUpe3ZhciByZWplY3Q9aXRlcmF0b3Jba0xhc3RSZWplY3RdO3JldHVybiBudWxsIT09cmVqZWN0JiYoaXRlcmF0b3Jba0xhc3RQcm9taXNlXT1udWxsLGl0ZXJhdG9yW2tMYXN0UmVzb2x2ZV09bnVsbCxpdGVyYXRvcltrTGFzdFJlamVjdF09bnVsbCxyZWplY3QoZXJyKSksdm9pZChpdGVyYXRvcltrRXJyb3JdPWVycil9dmFyIHJlc29sdmU9aXRlcmF0b3Jba0xhc3RSZXNvbHZlXTtudWxsIT09cmVzb2x2ZSYmKGl0ZXJhdG9yW2tMYXN0UHJvbWlzZV09bnVsbCxpdGVyYXRvcltrTGFzdFJlc29sdmVdPW51bGwsaXRlcmF0b3Jba0xhc3RSZWplY3RdPW51bGwscmVzb2x2ZShjcmVhdGVJdGVyUmVzdWx0KHZvaWQgMCwhMCkpKSxpdGVyYXRvcltrRW5kZWRdPSEwfSksc3RyZWFtLm9uKFwicmVhZGFibGVcIixmdW5jdGlvbihpdGVyKXtwcm9jZXNzLm5leHRUaWNrKHJlYWRBbmRSZXNvbHZlLGl0ZXIpfS5iaW5kKG51bGwsaXRlcmF0b3IpKSxpdGVyYXRvcn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUZ6ZVc1algybDBaWEpoZEc5eUxtcHpJbDBzSW01aGJXVnpJanBiSWw5UFltcGxZM1FrYzJWMFVISnZkRzkwZVhCbFR5SXNJbDlrWldacGJtVlFjbTl3WlhKMGVTSXNJbTlpYWlJc0ltdGxlU0lzSW5aaGJIVmxJaXdpVDJKcVpXTjBJaXdpWkdWbWFXNWxVSEp2Y0dWeWRIa2lMQ0psYm5WdFpYSmhZbXhsSWl3aVkyOXVabWxuZFhKaFlteGxJaXdpZDNKcGRHRmliR1VpTENKbWFXNXBjMmhsWkNJc0luSmxjWFZwY21VaUxDSnJUR0Z6ZEZKbGMyOXNkbVVpTENKVGVXMWliMndpTENKclRHRnpkRkpsYW1WamRDSXNJbXRGY25KdmNpSXNJbXRGYm1SbFpDSXNJbXRNWVhOMFVISnZiV2x6WlNJc0ltdElZVzVrYkdWUWNtOXRhWE5sSWl3aWExTjBjbVZoYlNJc0ltTnlaV0YwWlVsMFpYSlNaWE4xYkhRaUxDSmtiMjVsSWl3aWNtVmhaRUZ1WkZKbGMyOXNkbVVpTENKcGRHVnlJaXdpY21WemIyeDJaU0lzSW1SaGRHRWlMQ0p5WldGa0lpd2lRWE41Ym1OSmRHVnlZWFJ2Y2xCeWIzUnZkSGx3WlNJc0ltZGxkRkJ5YjNSdmRIbHdaVTltSWl3aVVtVmhaR0ZpYkdWVGRISmxZVzFCYzNsdVkwbDBaWEpoZEc5eVVISnZkRzkwZVhCbElpd2ljMlYwVUhKdmRHOTBlWEJsVDJZaUxDSnpkSEpsWVcwaUxDSjBhR2x6SWl3aWJtVjRkQ0lzSWw5MGFHbHpJaXdpWlhKeWIzSWlMQ0pRY205dGFYTmxJaXdpY21WcVpXTjBJaXdpZFc1a1pXWnBibVZrSWl3aVpHVnpkSEp2ZVdWa0lpd2ljSEp2WTJWemN5SXNJbTVsZUhSVWFXTnJJaXdpY0hKdmJXbHpaU0lzSW14aGMzUlFjbTl0YVhObElpd2lkR2hsYmlJc0luZHlZWEJHYjNKT1pYaDBJaXdpWVhONWJtTkpkR1Z5WVhSdmNpSXNJbDkwYUdsek1pSXNJbVJsYzNSeWIza2lMQ0psY25JaUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2lYMDlpYW1WamRDUmpjbVZoZEdVaUxDSnBkR1Z5WVhSdmNpSXNJbU55WldGMFpTSXNJbDl5WldGa1lXSnNaVk4wWVhSbElpd2laVzVrUlcxcGRIUmxaQ0lzSW1OdlpHVWlMQ0p2YmlJc0ltSnBibVFpWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEdGQlJVRXNTVUZCU1VFc2MwSkJSVW9zVTBGQlUwTXNaMEpCUVdkQ1F5eEpRVUZMUXl4SlFVRkxReXhQUVVGcFN5eFBRVUZ3U2tRc1QwRkJUMFFzU1VGQlQwY3NUMEZCVDBNc1pVRkJaVW9zU1VGQlMwTXNTVUZCU3l4RFFVRkZReXhOUVVGUFFTeE5RVUZQUnl4WlFVRlpMRVZCUVUxRExHTkJRV01zUlVGQlRVTXNWVUZCVlN4SlFVRnJRbEFzU1VGQlNVTXNTMEZCVDBNc1RVRkJaMEpHTEVsQlJUTk5MRWxCUVVsUkxGTkJRVmRETEZGQlFWRXNiVUpCUlc1Q1F5eGhRVUZsUXl4UFFVRlBMR1ZCUTNSQ1F5eFpRVUZqUkN4UFFVRlBMR05CUTNKQ1JTeFBRVUZUUml4UFFVRlBMRk5CUTJoQ1J5eFBRVUZUU0N4UFFVRlBMRk5CUTJoQ1NTeGhRVUZsU2l4UFFVRlBMR1ZCUTNSQ1N5eGxRVUZwUWt3c1QwRkJUeXhwUWtGRGVFSk5MRkZCUVZWT0xFOUJRVThzVlVGRmNrSXNVMEZCVTA4c2FVSkJRV2xDYUVJc1RVRkJUMmxDTEUxQlF5OUNMRTFCUVU4c1EwRkRUR3BDTEUxQlFVOUJMRTFCUTFCcFFpeExRVUZOUVN4TlFVbFdMRk5CUVZORExHVkJRV1ZETEUxQlEzUkNMRWxCUVVsRExGRkJRVlZFTEV0QlFVdFlMR05CUlc1Q0xFZEJRV2RDTEU5QlFWcFpMRkZCUVd0Q0xFTkJRM0JDTEVsQlFVbERMRXRCUVU5R0xFdEJRVXRLTEZOQlFWTlBMRTlCU1Zvc1QwRkJWRVFzVDBGRFJrWXNTMEZCUzA0c1kwRkJaMElzUzBGRGNrSk5MRXRCUVV0WUxHTkJRV2RDTEV0QlEzSkNWeXhMUVVGTFZDeGhRVUZsTEV0QlEzQkNWU3hSUVVGUlNpeHBRa0ZCYVVKTExFMUJRVTBzVFVGM1FuSkRMRWxCUVVsRkxIVkNRVUY1UW5SQ0xFOUJRVTkxUWl4bFFVRmxMR05CUXk5RFF5eHhRMEZCZFVONFFpeFBRVUZQZVVJc1owSkJORVF2UXpkQ0xHZENRVFZFSzBSRUxITkNRVUYzUWl4RFFVTjRSaXRDTEdGQlEwVXNUMEZCVDBNc1MwRkJTMklzVlVGSFpHTXNTMEZCVFN4WFFVTktMRWxCUVVsRExFMUJRVkZHTEV0QlNWSkhMRTFCUVZGSUxFdEJRVXRxUWl4UlFVVnFRaXhIUVVGakxFOUJRVlp2UWl4TlFVTkdMRTlCUVU5RExGRkJRVkZETEU5QlFVOUdMRTlCUjNoQ0xFZEJRVWxJTEV0QlFVdG9RaXhSUVVOUUxFOUJRVTl2UWl4UlFVRlJXaXhSUVVGUlNpeHpRa0ZCYVVKclFpeEhRVUZYTEVsQlIzSkVMRWRCUVVsT0xFdEJRVXRpTEZOQlFWTnZRaXhWUVV0b1FpeFBRVUZQTEVsQlFVbElMRkZCUVZFc1UwRkJWVm9zVVVGQlUyRXNVVUZEY0VOSExGRkJRVkZETEZOQlFWTXNWMEZEV0ZBc1RVRkJUVzVDTEZGQlExSnpRaXhQUVVGUFNDeE5RVUZOYmtJc1UwRkZZbE1zVVVGQlVVb3NjMEpCUVdsQ2EwSXNSMEZCVnl4UlFWVTFReXhKUVVOSlNTeFJRVVJCUXl4WlFVRmpXQ3hMUVVGTFppeGpRVWQyUWl4SFFVRkpNRUlzV1VGRFJrUXNVVUZCVlN4SlFVRkpUaXhSUVRGRWNFSXNVMEZCY1VKUExGbEJRV0Z3UWl4TlFVTm9ReXhQUVVGUExGTkJRVlZETEZGQlFWTmhMRkZCUTNoQ1RTeFpRVUZaUXl4TFFVRkxMRmRCUTFoeVFpeExRVUZMVUN4UlFVTlFVU3hSUVVGUlNpeHpRa0ZCYVVKclFpeEhRVUZYTEVsQlNYUkRaaXhMUVVGTFRDeG5Ra0ZCWjBKTkxGRkJRVk5oTEZOQlF6ZENRU3hUUVdsRWNVSlJMRU5CUVZsR0xGbEJRV0ZZTEZkQlF6RkRMRU5CUjB3c1NVRkJTVkFzUzBGQlQwOHNTMEZCUzJJc1UwRkJVMDhzVDBGRmVrSXNSMEZCWVN4UFFVRlVSQ3hMUVVOR0xFOUJRVTlYTEZGQlFWRmFMRkZCUVZGS0xHbENRVUZwUWtzc1RVRkJUU3hKUVVkb1JHbENMRkZCUVZVc1NVRkJTVTRzVVVGQlVVb3NTMEZCUzJRc2FVSkJTVGRDTEU5QlJFRmpMRXRCUVV0bUxHTkJRV2RDZVVJc1VVRkRaRUVzVlVGRkswSTNRaXhQUVVGUGFVTXNZMEZCWlN4WFFVTTVSQ3hQUVVGUFpDeFBRVU5NTDBJc1owSkJRV2RDUkN4elFrRkJkVUlzVTBGQlZTeFhRVU51UkN4SlFVRkpLME1zVDBGQlUyWXNTMEZMWWl4UFFVRlBMRWxCUVVsSkxGRkJRVkVzVTBGQlZWb3NVVUZCVTJFc1VVRkRjRU5WTEU5QlFVODFRaXhUUVVGVE5rSXNVVUZCVVN4TFFVRk5MRk5CUVZWRExFdEJRMnhEUVN4SlFVTkdXaXhQUVVGUFdTeExRVWxVZWtJc1VVRkJVVW9zYzBKQlFXbENhMElzUjBGQlZ5eFZRVWQwUTNSRExIVkNRVUYzUWpKQ0xIZENRVzlGTlVKMVFpeFBRVUZQUXl4UlFXeEZhVU1zVTBGQk1rTndRaXhSUVVOcVJpeEpRVUZKY1VJc1pVRkZRVU1zVTBGQlYyaEVMRTlCUVU5cFJDeFBRVUZQZWtJc2MwTkJRVFJFTlVJc1owSkJRWEpDYlVRc1pVRkJhVUlzUjBGQmIwTnFReXhSUVVGVExFTkJRMmhKWml4TlFVRlBNa0lzVDBGRFVIUkNMRlZCUVZVc1NVRkRVbElzWjBKQlFXZENiVVFzWlVGQlowSjRReXhoUVVGakxFTkJRMmhFVWl4TlFVRlBMRXRCUTFCTExGVkJRVlVzU1VGRFVsSXNaMEpCUVdkQ2JVUXNaVUZCWjBKMFF5eFpRVUZoTEVOQlF5OURWaXhOUVVGUExFdEJRMUJMTEZWQlFWVXNTVUZEVWxJc1owSkJRV2RDYlVRc1pVRkJaMEp5UXl4UFFVRlJMRU5CUXpGRFdDeE5RVUZQTEV0QlExQkxMRlZCUVZVc1NVRkRVbElzWjBKQlFXZENiVVFzWlVGQlowSndReXhQUVVGUkxFTkJRekZEV2l4TlFVRlBNa0lzVDBGQlQzZENMR1ZCUVdWRExGZEJRemRDTDBNc1ZVRkJWU3hKUVVOU1VpeG5Ra0ZCWjBKdFJDeGxRVUZuUW14RExHVkJRV2RDTEVOQlEyeEVaQ3hOUVVGUExGTkJRV1Z2UWl4UlFVRlRZU3hSUVVNM1FpeEpRVUZKV2l4TFFVRlBORUlzVTBGQlUyeERMRk5CUVZOUExFOUJSWHBDUkN4TlFVTkdORUlzVTBGQlUzQkRMR05CUVdkQ0xFdEJRM3BDYjBNc1UwRkJVM3BETEdOQlFXZENMRXRCUTNwQ2VVTXNVMEZCVTNaRExHRkJRV1VzUzBGRGVFSlZMRkZCUVZGS0xHbENRVUZwUWtzc1RVRkJUU3hOUVVVdlFqUkNMRk5CUVZONlF5eGpRVUZuUWxrc1VVRkRla0kyUWl4VFFVRlRka01zWVVGQlpYVkNMRk5CUnpWQ05VSXNWVUZCVlN4SlFVTlNNa01zYVVKQk9FSktMRTlCTjBKQlF5eFRRVUZUY0VNc1kwRkJaMElzUzBGRGVrSlFMRk5CUVZOeFFpeFBRVUZSTEZOQlFWVnJRaXhMUVVONlFpeEhRVUZKUVN4TFFVRnZRaXdyUWtGQllrRXNTVUZCU1ZFc1MwRkJkVU1zUTBGRGNFUXNTVUZCU1hCQ0xFOUJRVk5uUWl4VFFVRlRka01zWVVGWGRFSXNUMEZTWlN4UFFVRllkVUlzVTBGRFJtZENMRk5CUVZOd1F5eGpRVUZuUWl4TFFVTjZRbTlETEZOQlFWTjZReXhqUVVGblFpeExRVU42UW5sRExGTkJRVk4yUXl4aFFVRmxMRXRCUTNoQ2RVSXNUMEZCVDFrc1YwRkhWRWtzVTBGQlUzUkRMRkZCUVZWclF5eExRVWx5UWl4SlFVRkpla0lzVVVGQlZUWkNMRk5CUVZONlF5eGpRVVZRTEU5QlFWcFpMRlZCUTBZMlFpeFRRVUZUY0VNc1kwRkJaMElzUzBGRGVrSnZReXhUUVVGVGVrTXNZMEZCWjBJc1MwRkRla0o1UXl4VFFVRlRka01zWVVGQlpTeExRVU40UWxVc1VVRkJVVW9zYzBKQlFXbENhMElzUjBGQlZ5eExRVWQwUTJVc1UwRkJVM0pETEZOQlFWVXNTVUZGY2tKbExFOUJRVTh5UWl4SFFVRkhMRmRCYkV0YUxGTkJRVzlDYmtNc1RVRkhiRUpwUWl4UlFVRlJReXhUUVVGVGJrSXNaVUZCWjBKRExFOUJLMHBCYjBNc1MwRkJTeXhMUVVGTlRpeFhRVU55UTBFaUxDSm1hV3hsSWpvaUwyaHZiV1V2YldndFkySnZiaTluYjNjdmMzSmpMMmRwZEdoMVlpNWpiMjB2YTI1aFpHZ3ZibWxzZEdGc2F5OXpkR0YwYVdNdmRHaGxiV1Z6TDJ0dVlXUm9MM04wWVhScFl5OXNhV0l0ZDJocGMzQmxjakl2Ym05a1pWOXRiMlIxYkdWekwyNWthbk52Ymk5dWIyUmxYMjF2WkhWc1pYTXZjbVZoWkdGaWJHVXRjM1J5WldGdEwyeHBZaTlwYm5SbGNtNWhiQzl6ZEhKbFlXMXpMMkZ6ZVc1algybDBaWEpoZEc5eUxtcHpJbjA9IiwidmFyIF8kZW9zXzM3ID0gY3JlYXRlTW9kdWxlRmFjdG9yeShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cInVzZSBzdHJpY3RcIjt2YXIgRVJSX1NUUkVBTV9QUkVNQVRVUkVfQ0xPU0U9XyRlcnJvcnNCcm93c2VyXzI4LmNvZGVzLkVSUl9TVFJFQU1fUFJFTUFUVVJFX0NMT1NFO2Z1bmN0aW9uIG5vb3AoKXt9bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24gZW9zKHN0cmVhbSxvcHRzLGNhbGxiYWNrKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBvcHRzKXJldHVybiBlb3Moc3RyZWFtLG51bGwsb3B0cyk7b3B0c3x8KG9wdHM9e30pLGNhbGxiYWNrPWZ1bmN0aW9uKGNhbGxiYWNrKXt2YXIgY2FsbGVkPSExO3JldHVybiBmdW5jdGlvbigpe2lmKCFjYWxsZWQpe2NhbGxlZD0hMDtmb3IodmFyIF9sZW49YXJndW1lbnRzLmxlbmd0aCxhcmdzPW5ldyBBcnJheShfbGVuKSxfa2V5PTA7X2tleTxfbGVuO19rZXkrKylhcmdzW19rZXldPWFyZ3VtZW50c1tfa2V5XTtjYWxsYmFjay5hcHBseSh0aGlzLGFyZ3MpfX19KGNhbGxiYWNrfHxub29wKTt2YXIgcmVhZGFibGU9b3B0cy5yZWFkYWJsZXx8ITEhPT1vcHRzLnJlYWRhYmxlJiZzdHJlYW0ucmVhZGFibGUsd3JpdGFibGU9b3B0cy53cml0YWJsZXx8ITEhPT1vcHRzLndyaXRhYmxlJiZzdHJlYW0ud3JpdGFibGUsb25sZWdhY3lmaW5pc2g9ZnVuY3Rpb24oKXtzdHJlYW0ud3JpdGFibGV8fG9uZmluaXNoKCl9LHdyaXRhYmxlRW5kZWQ9c3RyZWFtLl93cml0YWJsZVN0YXRlJiZzdHJlYW0uX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQsb25maW5pc2g9ZnVuY3Rpb24oKXt3cml0YWJsZT0hMSx3cml0YWJsZUVuZGVkPSEwLHJlYWRhYmxlfHxjYWxsYmFjay5jYWxsKHN0cmVhbSl9LHJlYWRhYmxlRW5kZWQ9c3RyZWFtLl9yZWFkYWJsZVN0YXRlJiZzdHJlYW0uX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZCxvbmVuZD1mdW5jdGlvbigpe3JlYWRhYmxlPSExLHJlYWRhYmxlRW5kZWQ9ITAsd3JpdGFibGV8fGNhbGxiYWNrLmNhbGwoc3RyZWFtKX0sb25lcnJvcj1mdW5jdGlvbihlcnIpe2NhbGxiYWNrLmNhbGwoc3RyZWFtLGVycil9LG9uY2xvc2U9ZnVuY3Rpb24oKXt2YXIgZXJyO3JldHVybiByZWFkYWJsZSYmIXJlYWRhYmxlRW5kZWQ/KHN0cmVhbS5fcmVhZGFibGVTdGF0ZSYmc3RyZWFtLl9yZWFkYWJsZVN0YXRlLmVuZGVkfHwoZXJyPW5ldyBFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRSksY2FsbGJhY2suY2FsbChzdHJlYW0sZXJyKSk6d3JpdGFibGUmJiF3cml0YWJsZUVuZGVkPyhzdHJlYW0uX3dyaXRhYmxlU3RhdGUmJnN0cmVhbS5fd3JpdGFibGVTdGF0ZS5lbmRlZHx8KGVycj1uZXcgRVJSX1NUUkVBTV9QUkVNQVRVUkVfQ0xPU0UpLGNhbGxiYWNrLmNhbGwoc3RyZWFtLGVycikpOnZvaWQgMH0sb25yZXF1ZXN0PWZ1bmN0aW9uKCl7c3RyZWFtLnJlcS5vbihcImZpbmlzaFwiLG9uZmluaXNoKX07cmV0dXJuIGZ1bmN0aW9uKHN0cmVhbSl7cmV0dXJuIHN0cmVhbS5zZXRIZWFkZXImJlwiZnVuY3Rpb25cIj09dHlwZW9mIHN0cmVhbS5hYm9ydH0oc3RyZWFtKT8oc3RyZWFtLm9uKFwiY29tcGxldGVcIixvbmZpbmlzaCksc3RyZWFtLm9uKFwiYWJvcnRcIixvbmNsb3NlKSxzdHJlYW0ucmVxP29ucmVxdWVzdCgpOnN0cmVhbS5vbihcInJlcXVlc3RcIixvbnJlcXVlc3QpKTp3cml0YWJsZSYmIXN0cmVhbS5fd3JpdGFibGVTdGF0ZSYmKHN0cmVhbS5vbihcImVuZFwiLG9ubGVnYWN5ZmluaXNoKSxzdHJlYW0ub24oXCJjbG9zZVwiLG9ubGVnYWN5ZmluaXNoKSksc3RyZWFtLm9uKFwiZW5kXCIsb25lbmQpLHN0cmVhbS5vbihcImZpbmlzaFwiLG9uZmluaXNoKSwhMSE9PW9wdHMuZXJyb3ImJnN0cmVhbS5vbihcImVycm9yXCIsb25lcnJvciksc3RyZWFtLm9uKFwiY2xvc2VcIixvbmNsb3NlKSxmdW5jdGlvbigpe3N0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImNvbXBsZXRlXCIsb25maW5pc2gpLHN0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImFib3J0XCIsb25jbG9zZSksc3RyZWFtLnJlbW92ZUxpc3RlbmVyKFwicmVxdWVzdFwiLG9ucmVxdWVzdCksc3RyZWFtLnJlcSYmc3RyZWFtLnJlcS5yZW1vdmVMaXN0ZW5lcihcImZpbmlzaFwiLG9uZmluaXNoKSxzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoXCJlbmRcIixvbmxlZ2FjeWZpbmlzaCksc3RyZWFtLnJlbW92ZUxpc3RlbmVyKFwiY2xvc2VcIixvbmxlZ2FjeWZpbmlzaCksc3RyZWFtLnJlbW92ZUxpc3RlbmVyKFwiZmluaXNoXCIsb25maW5pc2gpLHN0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImVuZFwiLG9uZW5kKSxzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLG9uZXJyb3IpLHN0cmVhbS5yZW1vdmVMaXN0ZW5lcihcImNsb3NlXCIsb25jbG9zZSl9fTtcblxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbVZ1WkMxdlppMXpkSEpsWVcwdWFuTWlYU3dpYm1GdFpYTWlPbHNpUlZKU1gxTlVVa1ZCVFY5UVVrVk5RVlJWVWtWZlEweFBVMFVpTENKeVpYRjFhWEpsSWl3aVkyOWtaWE1pTENKdWIyOXdJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW1WdmN5SXNJbk4wY21WaGJTSXNJbTl3ZEhNaUxDSmpZV3hzWW1GamF5SXNJbU5oYkd4bFpDSXNJbDlzWlc0aUxDSmhjbWQxYldWdWRITWlMQ0pzWlc1bmRHZ2lMQ0poY21keklpd2lRWEp5WVhraUxDSmZhMlY1SWl3aVlYQndiSGtpTENKMGFHbHpJaXdpYjI1alpTSXNJbkpsWVdSaFlteGxJaXdpZDNKcGRHRmliR1VpTENKdmJteGxaMkZqZVdacGJtbHphQ0lzSW05dVptbHVhWE5vSWl3aWQzSnBkR0ZpYkdWRmJtUmxaQ0lzSWw5M2NtbDBZV0pzWlZOMFlYUmxJaXdpWm1sdWFYTm9aV1FpTENKallXeHNJaXdpY21WaFpHRmliR1ZGYm1SbFpDSXNJbDl5WldGa1lXSnNaVk4wWVhSbElpd2laVzVrUlcxcGRIUmxaQ0lzSW05dVpXNWtJaXdpYjI1bGNuSnZjaUlzSW1WeWNpSXNJbTl1WTJ4dmMyVWlMQ0psYm1SbFpDSXNJbTl1Y21WeGRXVnpkQ0lzSW5KbGNTSXNJbTl1SWl3aWMyVjBTR1ZoWkdWeUlpd2lZV0p2Y25RaUxDSnBjMUpsY1hWbGMzUWlMQ0psY25KdmNpSXNJbkpsYlc5MlpVeHBjM1JsYm1WeUlsMHNJbTFoY0hCcGJtZHpJam9pTzBGQlJVRXNXVUZCUVN4RFFVVkJMRWxCUVVsQkxEQkNRVUZCUVN4RFFVRTJRa01zYTBKQlFWRXNRMEZCYlVKRExFdEJRVUZCTEVOQlFVMUdMREJDUVVGQlFTeERRV2RDYkVVc1UwRkJVMGNzU1VGQlFVRXNSVUZCUVVFc1JVRnRSbFJETEUxQlFVRkJMRU5CUVU5RExFOUJRVUZCTEVOQk4wVlFMRk5CUVZORExFZEJRVUZCTEVOQlFVbERMRTFCUVVGQkxFTkJRVkZETEVsQlFVRkJMRU5CUVUxRExGRkJRVUZCTEVOQlFVRkJMRU5CUTNwQ0xFZEJRVzlDTEZWQlFVRXNSVUZCUVN4UFFVRlVSQ3hKUVVGQlFTeERRVUZ4UWl4UFFVRlBSaXhIUVVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGUkxFbEJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJRVUVzUTBGRGNFUkJMRWxCUVVGQkxFZEJRVTFCTEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVGQkxFTkJRMnhDUXl4UlFVRkJRU3hEUVhaQ1JpeFRRVUZqUVN4UlFVRkJRU3hEUVVGQlFTeERRVU5hTEVsQlFVbERMRTFCUVVGQkxFTkJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVTmlMRTlCUVU4c1ZVRkJRU3hEUVVOTUxFZEJRVUVzUTBGQlNVRXNUVUZCUVVFc1EwRkJTaXhEUVVOQlFTeE5RVUZCUVN4RFFVRkJRU3hEUVVGVExFTkJRVUVzUTBGRlZDeEpRVUZMTEVsQlFVbERMRWxCUVVGQkxFTkJRVTlETEZOQlFVRkJMRU5CUVZWRExFMUJRVUZCTEVOQlFWRkRMRWxCUVVGQkxFTkJRVThzU1VGQlNVTXNTMEZCUVVFc1EwRkJUVW9zU1VGQlFVRXNRMEZCUVVFc1EwRkJUMHNzU1VGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVVkQkxFbEJRVUZCTEVOQlFVOU1MRWxCUVVGQkxFTkJRVTFMTEVsQlFVRkJMRVZCUVVGQkxFTkJReTlGUml4SlFVRkJRU3hEUVVGTFJTeEpRVUZCUVN4RFFVRkJRU3hEUVVGUlNpeFRRVUZCUVN4RFFVRlZTU3hKUVVGQlFTeERRVUZCUVN4RFFVZDZRbEFzVVVGQlFVRXNRMEZCVTFFc1MwRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJUVW9zU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZoV2tzc1EwRkJTMVlzVVVGQlFVRXNSVUZCV1U0c1NVRkJRVUVzUTBGQlFVRXNRMEZETlVJc1NVRkJTV2xDTEZGQlFVRkJMRU5CUVZkYUxFbEJRVUZCTEVOQlFVdFpMRkZCUVVGQkxFVkJRVUZCTEVOQlFUaENMRU5CUVVFc1IwRkJiRUphTEVsQlFVRkJMRU5CUVV0WkxGRkJRVUZCTEVWQlFYTkNZaXhOUVVGQlFTeERRVUZQWVN4UlFVRkJRU3hEUVVNNVJFTXNVVUZCUVVFc1EwRkJWMklzU1VGQlFVRXNRMEZCUzJFc1VVRkJRVUVzUlVGQlFVRXNRMEZCT0VJc1EwRkJRU3hIUVVGc1FtSXNTVUZCUVVFc1EwRkJTMkVzVVVGQlFVRXNSVUZCYzBKa0xFMUJRVUZCTEVOQlFVOWpMRkZCUVVGQkxFTkJSVGxFUXl4alFVRkJRU3hEUVVGcFFpeFZRVUZCTEVOQlEyUm1MRTFCUVVGQkxFTkJRVTlqTEZGQlFVRkJMRVZCUVZWRkxGRkJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJSM0JDUXl4aFFVRkJRU3hEUVVGblFtcENMRTFCUVVGQkxFTkJRVTlyUWl4alFVRkJRU3hGUVVGclFteENMRTFCUVVGQkxFTkJRVTlyUWl4alFVRkJRU3hEUVVGbFF5eFJRVUZCUVN4RFFVVXZSRWdzVVVGQlFVRXNRMEZCVnl4VlFVRkJMRU5CUTJKR0xGRkJRVUZCTEVOQlFVRkJMRU5CUVZjc1EwRkJRU3hEUVVOWVJ5eGhRVUZCUVN4RFFVRkJRU3hEUVVGblFpeERRVUZCTEVOQlExaEtMRkZCUVVGQkxFVkJRVlZZTEZGQlFVRkJMRU5CUVZOclFpeEpRVUZCUVN4RFFVRkxjRUlzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSE0wSnhRaXhoUVVGQlFTeERRVUZuUW5KQ0xFMUJRVUZCTEVOQlFVOXpRaXhqUVVGQlFTeEZRVUZyUW5SQ0xFMUJRVUZCTEVOQlFVOXpRaXhqUVVGQlFTeERRVUZsUXl4VlFVRkJRU3hEUVVVdlJFTXNTMEZCUVVFc1EwRkJVU3hWUVVGQkxFTkJRMVpZTEZGQlFVRkJMRU5CUVVGQkxFTkJRVmNzUTBGQlFTeERRVU5ZVVN4aFFVRkJRU3hEUVVGQlFTeERRVUZuUWl4RFFVRkJMRU5CUTFoUUxGRkJRVUZCTEVWQlFWVmFMRkZCUVVGQkxFTkJRVk5yUWl4SlFVRkJRU3hEUVVGTGNFSXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZITTBKNVFpeFBRVUZCUVN4RFFVRlZMRk5CUVdsQ1F5eEhRVUZCUVN4RFFVRkJRU3hEUVVNM1FuaENMRkZCUVVGQkxFTkJRVk5yUWl4SlFVRkJRU3hEUVVGTGNFSXNUVUZCUVVFc1EwRkJVVEJDTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzQkNReXhQUVVGQlFTeERRVUZWTEZWQlFVRXNRMEZEV2l4SlFVRkpSQ3hIUVVGQlFTeERRVVZLTEU5QlFVbGlMRkZCUVVGQkxFVkJRVUZCTEVOQlFXRlJMR0ZCUVVGQkxFVkJRMVp5UWl4TlFVRkJRU3hEUVVGUGMwSXNZMEZCUVVFc1JVRkJiVUowUWl4TlFVRkJRU3hEUVVGUGMwSXNZMEZCUVVFc1EwRkJaVTBzUzBGQlFVRXNSMEZCVDBZc1IwRkJRVUVzUTBGQlRTeEpRVUZKYWtNc01FSkJRVUZCTEVOQlFVRkJMRU5CUXk5RVV5eFJRVUZCUVN4RFFVRlRhMElzU1VGQlFVRXNRMEZCUzNCQ0xFMUJRVUZCTEVOQlFWRXdRaXhIUVVGQlFTeERRVUZCUVN4RlFVY3pRbG9zVVVGQlFVRXNSVUZCUVVFc1EwRkJZVWNzWVVGQlFVRXNSVUZEVm1wQ0xFMUJRVUZCTEVOQlFVOXJRaXhqUVVGQlFTeEZRVUZ0UW14Q0xFMUJRVUZCTEVOQlFVOXJRaXhqUVVGQlFTeERRVUZsVlN4TFFVRkJRU3hIUVVGUFJpeEhRVUZCUVN4RFFVRk5MRWxCUVVscVF5d3dRa0ZCUVVFc1EwRkJRVUVzUTBGREwwUlRMRkZCUVVGQkxFTkJRVk5yUWl4SlFVRkJRU3hEUVVGTGNFSXNUVUZCUVVFc1EwRkJVVEJDTEVkQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEV0QlJpOUNMRU5CUVVFc1EwRkJRU3hEUVUxRlJ5eFRRVUZCUVN4RFFVRlpMRlZCUVVFc1EwRkRaRGRDTEUxQlFVRkJMRU5CUVU4NFFpeEhRVUZCUVN4RFFVRkpReXhGUVVGQlFTeERRVUZITEZGQlFVRXNRMEZCVldZc1VVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRnBRakZDTEU5QmJrVkdMRk5CUVcxQ2FFSXNUVUZCUVVFc1EwRkJRVUVzUTBGRGFrSXNUMEZCVDBFc1RVRkJRVUVzUTBGQlQyZERMRk5CUVVGQkxFVkJRWEZETEZWQlFVRXNSVUZCUVN4UFFVRnFRbWhETEUxQlFVRkJMRU5CUVU5cFF5eExRVUZCUVN4RFFXOUVja05ETEVOQlFWVnNReXhOUVVGQlFTeERRVUZCUVN4RlFVTmFRU3hOUVVGQlFTeERRVUZQSzBJc1JVRkJRVUVzUTBGQlJ5eFZRVUZCTEVOQlFWbG1MRkZCUVVGQkxFTkJRVUZCTEVOQlEzUkNhRUlzVFVGQlFVRXNRMEZCVHl0Q0xFVkJRVUZCTEVOQlFVY3NUMEZCUVN4RFFVRlRTaXhQUVVGQlFTeERRVUZCUVN4RFFVTm1NMElzVFVGQlFVRXNRMEZCVHpoQ0xFZEJRVUZCTEVOQlFVdEVMRk5CUVVGQkxFVkJRVUZCTEVOQlFXbENOMElzVFVGQlFVRXNRMEZCVHl0Q0xFVkJRVUZCTEVOQlFVY3NVMEZCUVN4RFFVRlhSaXhUUVVGQlFTeERRVUZCUVN4RlFVTTNRMllzVVVGQlFVRXNSVUZCUVVFc1EwRkJZV1FzVFVGQlFVRXNRMEZCVDJ0Q0xHTkJRVUZCTEVkQlJUZENiRUlzVFVGQlFVRXNRMEZCVHl0Q0xFVkJRVUZCTEVOQlFVY3NTMEZCUVN4RFFVRlBhRUlzWTBGQlFVRXNRMEZCUVVFc1EwRkRha0ptTEUxQlFVRkJMRU5CUVU4clFpeEZRVUZCUVN4RFFVRkhMRTlCUVVFc1EwRkJVMmhDTEdOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzSkNaaXhOUVVGQlFTeERRVUZQSzBJc1JVRkJRVUVzUTBGQlJ5eExRVUZCTEVOQlFVOVFMRXRCUVVGQkxFTkJRVUZCTEVOQlEycENlRUlzVFVGQlFVRXNRMEZCVHl0Q0xFVkJRVUZCTEVOQlFVY3NVVUZCUVN4RFFVRlZaaXhSUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVORUxFTkJRVUVzUjBGQlptWXNTVUZCUVVFc1EwRkJTMnRETEV0QlFVRkJMRVZCUVdsQ2JrTXNUVUZCUVVFc1EwRkJUeXRDTEVWQlFVRkJMRU5CUVVjc1QwRkJRU3hEUVVGVFRpeFBRVUZCUVN4RFFVRkJRU3hEUVVNM1EzcENMRTFCUVVGQkxFTkJRVThyUWl4RlFVRkJRU3hEUVVGSExFOUJRVUVzUTBGQlUwb3NUMEZCUVVFc1EwRkJRVUVzUTBGRFdpeFZRVUZCTEVOQlEwd3pRaXhOUVVGQlFTeERRVUZQYjBNc1kwRkJRVUVzUTBGQlpTeFZRVUZCTEVOQlFWbHdRaXhSUVVGQlFTeERRVUZCUVN4RFFVTnNRMmhDTEUxQlFVRkJMRU5CUVU5dlF5eGpRVUZCUVN4RFFVRmxMRTlCUVVFc1EwRkJVMVFzVDBGQlFVRXNRMEZCUVVFc1EwRkRMMEl6UWl4TlFVRkJRU3hEUVVGUGIwTXNZMEZCUVVFc1EwRkJaU3hUUVVGQkxFTkJRVmRRTEZOQlFVRkJMRU5CUVVGQkxFTkJRemRDTjBJc1RVRkJRVUVzUTBGQlR6aENMRWRCUVVGQkxFVkJRVXM1UWl4TlFVRkJRU3hEUVVGUE9FSXNSMEZCUVVFc1EwRkJTVTBzWTBGQlFVRXNRMEZCWlN4UlFVRkJMRU5CUVZWd1FpeFJRVUZCUVN4RFFVRkJRU3hEUVVOd1JHaENMRTFCUVVGQkxFTkJRVTl2UXl4alFVRkJRU3hEUVVGbExFdEJRVUVzUTBGQlQzSkNMR05CUVVGQkxFTkJRVUZCTEVOQlF6ZENaaXhOUVVGQlFTeERRVUZQYjBNc1kwRkJRVUVzUTBGQlpTeFBRVUZCTEVOQlFWTnlRaXhqUVVGQlFTeERRVUZCUVN4RFFVTXZRbVlzVFVGQlFVRXNRMEZCVDI5RExHTkJRVUZCTEVOQlFXVXNVVUZCUVN4RFFVRlZjRUlzVVVGQlFVRXNRMEZCUVVFc1EwRkRhRU5vUWl4TlFVRkJRU3hEUVVGUGIwTXNZMEZCUVVFc1EwRkJaU3hMUVVGQkxFTkJRVTlhTEV0QlFVRkJMRU5CUVVGQkxFTkJRemRDZUVJc1RVRkJRVUVzUTBGQlQyOURMR05CUVVGQkxFTkJRV1VzVDBGQlFTeERRVUZUV0N4UFFVRkJRU3hEUVVGQlFTeERRVU12UW5wQ0xFMUJRVUZCTEVOQlFVOXZReXhqUVVGQlFTeERRVUZsTEU5QlFVRXNRMEZCVTFRc1QwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJ2YXIgXyRzdHJpbmdfZGVjb2Rlcl82MyA9IGNyZWF0ZU1vZHVsZUZhY3RvcnkoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXCJ1c2Ugc3RyaWN0XCI7dmFyIEJ1ZmZlcj1fJHNhZmVCdWZmZXJfNDYuQnVmZmVyLGlzRW5jb2Rpbmc9QnVmZmVyLmlzRW5jb2Rpbmd8fGZ1bmN0aW9uKGVuY29kaW5nKXtzd2l0Y2goKGVuY29kaW5nPVwiXCIrZW5jb2RpbmcpJiZlbmNvZGluZy50b0xvd2VyQ2FzZSgpKXtjYXNlXCJoZXhcIjpjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImJpbmFyeVwiOmNhc2VcImJhc2U2NFwiOmNhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOmNhc2VcInJhd1wiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fTtmdW5jdGlvbiBTdHJpbmdEZWNvZGVyKGVuY29kaW5nKXt2YXIgbmI7c3dpdGNoKHRoaXMuZW5jb2Rpbmc9ZnVuY3Rpb24oZW5jKXt2YXIgbmVuYz1mdW5jdGlvbihlbmMpe2lmKCFlbmMpcmV0dXJuXCJ1dGY4XCI7Zm9yKHZhciByZXRyaWVkOzspc3dpdGNoKGVuYyl7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuXCJ1dGY4XCI7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuXCJ1dGYxNmxlXCI7Y2FzZVwibGF0aW4xXCI6Y2FzZVwiYmluYXJ5XCI6cmV0dXJuXCJsYXRpbjFcIjtjYXNlXCJiYXNlNjRcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImhleFwiOnJldHVybiBlbmM7ZGVmYXVsdDppZihyZXRyaWVkKXJldHVybjtlbmM9KFwiXCIrZW5jKS50b0xvd2VyQ2FzZSgpLHJldHJpZWQ9ITB9fShlbmMpO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBuZW5jJiYoQnVmZmVyLmlzRW5jb2Rpbmc9PT1pc0VuY29kaW5nfHwhaXNFbmNvZGluZyhlbmMpKSl0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGVuY29kaW5nOiBcIitlbmMpO3JldHVybiBuZW5jfHxlbmN9KGVuY29kaW5nKSx0aGlzLmVuY29kaW5nKXtjYXNlXCJ1dGYxNmxlXCI6dGhpcy50ZXh0PXV0ZjE2VGV4dCx0aGlzLmVuZD11dGYxNkVuZCxuYj00O2JyZWFrO2Nhc2VcInV0ZjhcIjp0aGlzLmZpbGxMYXN0PXV0ZjhGaWxsTGFzdCxuYj00O2JyZWFrO2Nhc2VcImJhc2U2NFwiOnRoaXMudGV4dD1iYXNlNjRUZXh0LHRoaXMuZW5kPWJhc2U2NEVuZCxuYj0zO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIHRoaXMud3JpdGU9c2ltcGxlV3JpdGUsdm9pZCh0aGlzLmVuZD1zaW1wbGVFbmQpfXRoaXMubGFzdE5lZWQ9MCx0aGlzLmxhc3RUb3RhbD0wLHRoaXMubGFzdENoYXI9QnVmZmVyLmFsbG9jVW5zYWZlKG5iKX1mdW5jdGlvbiB1dGY4Q2hlY2tCeXRlKGJ5dGUpe3JldHVybiBieXRlPD0xMjc/MDpieXRlPj41PT02PzI6Ynl0ZT4+ND09MTQ/MzpieXRlPj4zPT0zMD80OmJ5dGU+PjY9PTI/LTE6LTJ9ZnVuY3Rpb24gdXRmOEZpbGxMYXN0KGJ1Zil7dmFyIHA9dGhpcy5sYXN0VG90YWwtdGhpcy5sYXN0TmVlZCxyPWZ1bmN0aW9uKHNlbGYsYnVmLHApe2lmKDEyOCE9KDE5MiZidWZbMF0pKXJldHVybiBzZWxmLmxhc3ROZWVkPTAsXCJcXHVmZmZkXCI7aWYoc2VsZi5sYXN0TmVlZD4xJiZidWYubGVuZ3RoPjEpe2lmKDEyOCE9KDE5MiZidWZbMV0pKXJldHVybiBzZWxmLmxhc3ROZWVkPTEsXCJcXHVmZmZkXCI7aWYoc2VsZi5sYXN0TmVlZD4yJiZidWYubGVuZ3RoPjImJjEyOCE9KDE5MiZidWZbMl0pKXJldHVybiBzZWxmLmxhc3ROZWVkPTIsXCJcXHVmZmZkXCJ9fSh0aGlzLGJ1Zik7cmV0dXJuIHZvaWQgMCE9PXI/cjp0aGlzLmxhc3ROZWVkPD1idWYubGVuZ3RoPyhidWYuY29weSh0aGlzLmxhc3RDaGFyLHAsMCx0aGlzLmxhc3ROZWVkKSx0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcsMCx0aGlzLmxhc3RUb3RhbCkpOihidWYuY29weSh0aGlzLmxhc3RDaGFyLHAsMCxidWYubGVuZ3RoKSx2b2lkKHRoaXMubGFzdE5lZWQtPWJ1Zi5sZW5ndGgpKX1mdW5jdGlvbiB1dGYxNlRleHQoYnVmLGkpe2lmKChidWYubGVuZ3RoLWkpJTI9PTApe3ZhciByPWJ1Zi50b1N0cmluZyhcInV0ZjE2bGVcIixpKTtpZihyKXt2YXIgYz1yLmNoYXJDb2RlQXQoci5sZW5ndGgtMSk7aWYoYz49NTUyOTYmJmM8PTU2MzE5KXJldHVybiB0aGlzLmxhc3ROZWVkPTIsdGhpcy5sYXN0VG90YWw9NCx0aGlzLmxhc3RDaGFyWzBdPWJ1ZltidWYubGVuZ3RoLTJdLHRoaXMubGFzdENoYXJbMV09YnVmW2J1Zi5sZW5ndGgtMV0sci5zbGljZSgwLC0xKX1yZXR1cm4gcn1yZXR1cm4gdGhpcy5sYXN0TmVlZD0xLHRoaXMubGFzdFRvdGFsPTIsdGhpcy5sYXN0Q2hhclswXT1idWZbYnVmLmxlbmd0aC0xXSxidWYudG9TdHJpbmcoXCJ1dGYxNmxlXCIsaSxidWYubGVuZ3RoLTEpfWZ1bmN0aW9uIHV0ZjE2RW5kKGJ1Zil7dmFyIHI9YnVmJiZidWYubGVuZ3RoP3RoaXMud3JpdGUoYnVmKTpcIlwiO2lmKHRoaXMubGFzdE5lZWQpe3ZhciBlbmQ9dGhpcy5sYXN0VG90YWwtdGhpcy5sYXN0TmVlZDtyZXR1cm4gcit0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKFwidXRmMTZsZVwiLDAsZW5kKX1yZXR1cm4gcn1mdW5jdGlvbiBiYXNlNjRUZXh0KGJ1ZixpKXt2YXIgbj0oYnVmLmxlbmd0aC1pKSUzO3JldHVybiAwPT09bj9idWYudG9TdHJpbmcoXCJiYXNlNjRcIixpKToodGhpcy5sYXN0TmVlZD0zLW4sdGhpcy5sYXN0VG90YWw9MywxPT09bj90aGlzLmxhc3RDaGFyWzBdPWJ1ZltidWYubGVuZ3RoLTFdOih0aGlzLmxhc3RDaGFyWzBdPWJ1ZltidWYubGVuZ3RoLTJdLHRoaXMubGFzdENoYXJbMV09YnVmW2J1Zi5sZW5ndGgtMV0pLGJ1Zi50b1N0cmluZyhcImJhc2U2NFwiLGksYnVmLmxlbmd0aC1uKSl9ZnVuY3Rpb24gYmFzZTY0RW5kKGJ1Zil7dmFyIHI9YnVmJiZidWYubGVuZ3RoP3RoaXMud3JpdGUoYnVmKTpcIlwiO3JldHVybiB0aGlzLmxhc3ROZWVkP3IrdGhpcy5sYXN0Q2hhci50b1N0cmluZyhcImJhc2U2NFwiLDAsMy10aGlzLmxhc3ROZWVkKTpyfWZ1bmN0aW9uIHNpbXBsZVdyaXRlKGJ1Zil7cmV0dXJuIGJ1Zi50b1N0cmluZyh0aGlzLmVuY29kaW5nKX1mdW5jdGlvbiBzaW1wbGVFbmQoYnVmKXtyZXR1cm4gYnVmJiZidWYubGVuZ3RoP3RoaXMud3JpdGUoYnVmKTpcIlwifWV4cG9ydHMuU3RyaW5nRGVjb2Rlcj1TdHJpbmdEZWNvZGVyLFN0cmluZ0RlY29kZXIucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKGJ1Zil7aWYoMD09PWJ1Zi5sZW5ndGgpcmV0dXJuXCJcIjt2YXIgcixpO2lmKHRoaXMubGFzdE5lZWQpe2lmKHZvaWQgMD09PShyPXRoaXMuZmlsbExhc3QoYnVmKSkpcmV0dXJuXCJcIjtpPXRoaXMubGFzdE5lZWQsdGhpcy5sYXN0TmVlZD0wfWVsc2UgaT0wO3JldHVybiBpPGJ1Zi5sZW5ndGg/cj9yK3RoaXMudGV4dChidWYsaSk6dGhpcy50ZXh0KGJ1ZixpKTpyfHxcIlwifSxTdHJpbmdEZWNvZGVyLnByb3RvdHlwZS5lbmQ9ZnVuY3Rpb24oYnVmKXt2YXIgcj1idWYmJmJ1Zi5sZW5ndGg/dGhpcy53cml0ZShidWYpOlwiXCI7cmV0dXJuIHRoaXMubGFzdE5lZWQ/citcIlxcdWZmZmRcIjpyfSxTdHJpbmdEZWNvZGVyLnByb3RvdHlwZS50ZXh0PWZ1bmN0aW9uKGJ1ZixpKXt2YXIgdG90YWw9ZnVuY3Rpb24oc2VsZixidWYsaSl7dmFyIGo9YnVmLmxlbmd0aC0xO2lmKGo8aSlyZXR1cm4gMDt2YXIgbmI9dXRmOENoZWNrQnl0ZShidWZbal0pO2lmKG5iPj0wKXJldHVybiBuYj4wJiYoc2VsZi5sYXN0TmVlZD1uYi0xKSxuYjtpZigtLWo8aXx8LTI9PT1uYilyZXR1cm4gMDtpZigobmI9dXRmOENoZWNrQnl0ZShidWZbal0pKT49MClyZXR1cm4gbmI+MCYmKHNlbGYubGFzdE5lZWQ9bmItMiksbmI7aWYoLS1qPGl8fC0yPT09bmIpcmV0dXJuIDA7aWYoKG5iPXV0ZjhDaGVja0J5dGUoYnVmW2pdKSk+PTApcmV0dXJuIG5iPjAmJigyPT09bmI/bmI9MDpzZWxmLmxhc3ROZWVkPW5iLTMpLG5iO3JldHVybiAwfSh0aGlzLGJ1ZixpKTtpZighdGhpcy5sYXN0TmVlZClyZXR1cm4gYnVmLnRvU3RyaW5nKFwidXRmOFwiLGkpO3RoaXMubGFzdFRvdGFsPXRvdGFsO3ZhciBlbmQ9YnVmLmxlbmd0aC0odG90YWwtdGhpcy5sYXN0TmVlZCk7cmV0dXJuIGJ1Zi5jb3B5KHRoaXMubGFzdENoYXIsMCxlbmQpLGJ1Zi50b1N0cmluZyhcInV0ZjhcIixpLGVuZCl9LFN0cmluZ0RlY29kZXIucHJvdG90eXBlLmZpbGxMYXN0PWZ1bmN0aW9uKGJ1Zil7aWYodGhpcy5sYXN0TmVlZDw9YnVmLmxlbmd0aClyZXR1cm4gYnVmLmNvcHkodGhpcy5sYXN0Q2hhcix0aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkLDAsdGhpcy5sYXN0TmVlZCksdGhpcy5sYXN0Q2hhci50b1N0cmluZyh0aGlzLmVuY29kaW5nLDAsdGhpcy5sYXN0VG90YWwpO2J1Zi5jb3B5KHRoaXMubGFzdENoYXIsdGhpcy5sYXN0VG90YWwtdGhpcy5sYXN0TmVlZCwwLGJ1Zi5sZW5ndGgpLHRoaXMubGFzdE5lZWQtPWJ1Zi5sZW5ndGh9O1xuXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluTjBjbWx1WjE5a1pXTnZaR1Z5TG1weklsMHNJbTVoYldWeklqcGJJa0oxWm1abGNpSXNJbkpsY1hWcGNtVWlMQ0pwYzBWdVkyOWthVzVuSWl3aVpXNWpiMlJwYm1jaUxDSjBiMHh2ZDJWeVEyRnpaU0lzSWxOMGNtbHVaMFJsWTI5a1pYSWlMQ0p1WWlJc0luUm9hWE1pTENKbGJtTWlMQ0p1Wlc1aklpd2ljbVYwY21sbFpDSXNJbDl1YjNKdFlXeHBlbVZGYm1OdlpHbHVaeUlzSWtWeWNtOXlJaXdpYm05eWJXRnNhWHBsUlc1amIyUnBibWNpTENKMFpYaDBJaXdpZFhSbU1UWlVaWGgwSWl3aVpXNWtJaXdpZFhSbU1UWkZibVFpTENKbWFXeHNUR0Z6ZENJc0luVjBaamhHYVd4c1RHRnpkQ0lzSW1KaGMyVTJORlJsZUhRaUxDSmlZWE5sTmpSRmJtUWlMQ0ozY21sMFpTSXNJbk5wYlhCc1pWZHlhWFJsSWl3aWMybHRjR3hsUlc1a0lpd2liR0Z6ZEU1bFpXUWlMQ0pzWVhOMFZHOTBZV3dpTENKc1lYTjBRMmhoY2lJc0ltRnNiRzlqVlc1ellXWmxJaXdpZFhSbU9FTm9aV05yUW5sMFpTSXNJbUo1ZEdVaUxDSmlkV1lpTENKd0lpd2ljaUlzSW5ObGJHWWlMQ0pzWlc1bmRHZ2lMQ0oxZEdZNFEyaGxZMnRGZUhSeVlVSjVkR1Z6SWl3aWRXNWtaV1pwYm1Wa0lpd2lZMjl3ZVNJc0luUnZVM1J5YVc1bklpd2lhU0lzSW1NaUxDSmphR0Z5UTI5a1pVRjBJaXdpYzJ4cFkyVWlMQ0p1SWl3aVpYaHdiM0owY3lJc0luQnliM1J2ZEhsd1pTSXNJblJ2ZEdGc0lpd2lhaUlzSW5WMFpqaERhR1ZqYTBsdVkyOXRjR3hsZEdVaVhTd2liV0Z3Y0dsdVozTWlPaUk3UVVGeFFrRXNXVUZCUVN4RFFVbEJMRWxCUVVsQkxFMUJRVUZCTEVOQlFWTkRMR1ZCUVZFc1EwRkJaVVFzVFVGQlFVRXNRMEZIYUVORkxGVkJRVUZCTEVOQlFXRkdMRTFCUVVGQkxFTkJRVTlGTEZWQlFVRkJMRVZCUVdNc1UwRkJWVU1zVVVGQlFVRXNRMEZCUVVFc1EwRkZPVU1zVDBGQlFTeERRVVJCUVN4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGQlMwRXNVVUZCUVVFc1IwRkRTVUVzVVVGQlFVRXNRMEZCVTBNc1YwRkJRVUVzUlVGQlFVRXNSVUZETTBJc1NVRkJTeXhMUVVGQkxFTkJRVTBzU1VGQlN5eE5RVUZCTEVOQlFVOHNTVUZCU3l4UFFVRkJMRU5CUVZFc1NVRkJTeXhQUVVGQkxFTkJRVkVzU1VGQlN5eFJRVUZCTEVOQlFWTXNTVUZCU3l4UlFVRkJMRU5CUVZNc1NVRkJTeXhOUVVGQkxFTkJRVThzU1VGQlN5eFBRVUZCTEVOQlFWRXNTVUZCU3l4VFFVRkJMRU5CUVZVc1NVRkJTeXhWUVVGQkxFTkJRVmNzU1VGQlN5eExRVUZCTEVOQlEzaEpMRTFCUVVFc1EwRkJUeXhEUVVGQkxFTkJRMVFzVVVGRFJTeE5RVUZCTEVOQlFVOHNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRTBRMklzVTBGQlUwTXNZVUZCUVVFc1EwRkJZMFlzVVVGQlFVRXNRMEZCUVVFc1EwRkZja0lzU1VGQlNVY3NSVUZCUVVFc1EwRkRTaXhQUVVaQlF5eEpRVUZCUVN4RFFVRkxTaXhSUVVGQlFTeERRVmhRTEZOQlFUSkNTeXhIUVVGQlFTeERRVUZCUVN4RFFVTjZRaXhKUVVGSlF5eEpRVUZCUVN4RFFTOUNUaXhUUVVFMFFrUXNSMEZCUVVFc1EwRkJRVUVzUTBGRE1VSXNSMEZCUVN4RFFVRkxRU3hIUVVGQlFTeERRVUZMTEUxQlFVOHNUVUZCUVN4RFFVVnFRaXhKUVVSQkxFbEJRVWxGTEU5QlFVRkJMRWRCUlVZc1QwRkJVVVlzUjBGQlFVRXNSVUZEVGl4SlFVRkxMRTFCUVVFc1EwRkRUQ3hKUVVGTExFOUJRVUVzUTBGRFNDeE5RVUZQTEUxQlFVRXNRMEZEVkN4SlFVRkxMRTFCUVVFc1EwRkRUQ3hKUVVGTExFOUJRVUVzUTBGRFRDeEpRVUZMTEZOQlFVRXNRMEZEVEN4SlFVRkxMRlZCUVVFc1EwRkRTQ3hOUVVGUExGTkJRVUVzUTBGRFZDeEpRVUZMTEZGQlFVRXNRMEZEVEN4SlFVRkxMRkZCUVVFc1EwRkRTQ3hOUVVGUExGRkJRVUVzUTBGRFZDeEpRVUZMTEZGQlFVRXNRMEZEVEN4SlFVRkxMRTlCUVVFc1EwRkRUQ3hKUVVGTExFdEJRVUVzUTBGRFNDeFBRVUZQUVN4SFFVRkJRU3hEUVVOVUxGRkJRMFVzUjBGQlNVVXNUMEZCUVVFc1EwRkJVeXhQUVVOaVJpeEhRVUZCUVN4RFFVRkJRU3hEUVVGUExFVkJRVUVzUTBGQlMwRXNSMEZCUVVFc1JVRkJTMG9zVjBGQlFVRXNSVUZCUVVFc1EwRkRha0pOTEU5QlFVRkJMRU5CUVVGQkxFTkJRVlVzUTBGQlFTeERRVUZCTEVOQlVVeERMRU5CUVcxQ1NDeEhRVUZCUVN4RFFVRkJRU3hEUVVNNVFpeEhRVUZ2UWl4UlFVRkJMRVZCUVVFc1QwRkJWRU1zU1VGQlFVRXNSMEZCYzBKVUxFMUJRVUZCTEVOQlFVOUZMRlZCUVVGQkxFZEJRV1ZCTEZWQlFVRkJMRVZCUVVGQkxFTkJRV1ZCTEZWQlFVRkJMRU5CUVZkTkxFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVThzVFVGQlRTeEpRVUZKU1N4TFFVRkJRU3hEUVVGTkxHOUNRVUZCTEVOQlFYVkNTaXhIUVVGQlFTeERRVUZCUVN4RFFVTXZTQ3hQUVVGUFF5eEpRVUZCUVN4RlFVRlJSQ3hIUVVGQlFTeERRVkZEU3l4RFFVRnJRbFlzVVVGQlFVRXNRMEZCUVVFc1EwRkZNVUpKTEVsQlFVRkJMRU5CUVV0S0xGRkJRVUZCTEVWQlExZ3NTVUZCU3l4VFFVRkJMRU5CUTBoSkxFbEJRVUZCTEVOQlFVdFBMRWxCUVVGQkxFTkJRVTlETEZOQlFVRkJMRU5CUTFwU0xFbEJRVUZCTEVOQlFVdFRMRWRCUVVGQkxFTkJRVTFETEZGQlFVRkJMRU5CUTFoWUxFVkJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVTk1MRTFCUTBZc1NVRkJTeXhOUVVGQkxFTkJRMGhETEVsQlFVRkJMRU5CUVV0WExGRkJRVUZCTEVOQlFWZERMRmxCUVVGQkxFTkJRMmhDWWl4RlFVRkJRU3hEUVVGTExFTkJRVUVzUTBGRFRDeE5RVU5HTEVsQlFVc3NVVUZCUVN4RFFVTklReXhKUVVGQlFTeERRVUZMVHl4SlFVRkJRU3hEUVVGUFRTeFZRVUZCUVN4RFFVTmFZaXhKUVVGQlFTeERRVUZMVXl4SFFVRkJRU3hEUVVGTlN5eFRRVUZCUVN4RFFVTllaaXhGUVVGQlFTeERRVUZMTEVOQlFVRXNRMEZEVEN4TlFVTkdMRkZCUjBVc1QwRkdRVU1zU1VGQlFVRXNRMEZCUzJVc1MwRkJRVUVzUTBGQlVVTXNWMEZCUVVFc1EwRkJRVUVzUzBGRFltaENMRWxCUVVGQkxFTkJRVXRUTEVkQlFVRkJMRU5CUVUxUkxGTkJRVUZCTEVOQlFVRkJMRU5CUjJacVFpeEpRVUZCUVN4RFFVRkxhMElzVVVGQlFVRXNRMEZCVnl4RFFVRkJMRU5CUTJoQ2JFSXNTVUZCUVVFc1EwRkJTMjFDTEZOQlFVRkJMRU5CUVZrc1EwRkJRU3hEUVVOcVFtNUNMRWxCUVVGQkxFTkJRVXR2UWl4UlFVRkJRU3hEUVVGWE0wSXNUVUZCUVVFc1EwRkJUelJDTEZkQlFVRkJMRU5CUVZsMFFpeEZRVUZCUVN4RFFVRkJRU3hEUVc5RGNrTXNVMEZCVTNWQ0xHRkJRVUZCTEVOQlFXTkRMRWxCUVVGQkxFTkJRVUZCTEVOQlEzSkNMRTlCUVVsQkxFbEJRVUZCTEVWQlFWRXNSMEZCUVN4RFFVRmhMRU5CUVVFc1EwRkJWMEVzU1VGQlFVRXNSVUZCVVN4RFFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGaExFTkJRVUVzUTBGQlYwRXNTVUZCUVVFc1JVRkJVU3hEUVVGQkxFVkJRVTBzUlVGQlFTeERRVUZoTEVOQlFVRXNRMEZCVjBFc1NVRkJRVUVzUlVGQlVTeERRVUZCTEVWQlFVMHNSVUZCUVN4RFFVRmhMRU5CUVVFc1EwRkRjRWxCTEVsQlFVRkJMRVZCUVZFc1EwRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlFTeERRVUZSTEVOQlFVRXNRMEZCUVN4RFFVRkxMRU5CUVVFc1EwRXlSSEJETEZOQlFWTllMRmxCUVVGQkxFTkJRV0ZaTEVkQlFVRkJMRU5CUVVGQkxFTkJRM0JDTEVsQlFVbERMRU5CUVVGQkxFTkJRVWw2UWl4SlFVRkJRU3hEUVVGTGJVSXNVMEZCUVVFc1EwRkJXVzVDTEVsQlFVRkJMRU5CUVV0clFpeFJRVUZCUVN4RFFVTXhRbEVzUTBGQlFVRXNRMEYwUWs0c1UwRkJOa0pETEVsQlFVRkJMRU5CUVUxSUxFZEJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVUZCTEVOQlEzUkRMRWRCUVhkQ0xFZEJRVUVzUjBGQlZpeEhRVUZCTEVOQlFWUkVMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZGVUN4UFFVUkJSeXhKUVVGQlFTeERRVUZMVkN4UlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGRFZDeFJRVUZCTEVOQlJWUXNSMEZCU1ZNc1NVRkJRVUVzUTBGQlMxUXNVVUZCUVVFc1EwRkJWeXhEUVVGQkxFVkJRVXROTEVkQlFVRkJMRU5CUVVsSkxFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkhMRU5CUTNaRExFZEJRWGRDTEVkQlFVRXNSMEZCVml4SFFVRkJMRU5CUVZSS0xFZEJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkZVQ3hQUVVSQlJ5eEpRVUZCUVN4RFFVRkxWQ3hSUVVGQlFTeERRVUZYTEVOQlFVRXNRMEZEVkN4UlFVRkJMRU5CUlZRc1IwRkJTVk1zU1VGQlFVRXNRMEZCUzFRc1VVRkJRVUVzUTBGQlZ5eERRVUZCTEVWQlFVdE5MRWRCUVVGQkxFTkJRVWxKTEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hGUVVOYUxFZEJRVUVzUjBGQlZpeEhRVUZCTEVOQlFWUktMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZGVUN4UFFVUkJSeXhKUVVGQlFTeERRVUZMVkN4UlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGRFZDeFJRVUZCTEVOQlFVRXNRMEZUVEZjc1EwRkJiMEkzUWl4SlFVRkJRU3hEUVVGTmQwSXNSMEZCUVVFc1EwRkJRVUVzUTBGRGJFTXNUMEZCUVN4TFFVRlZUU3hEUVVGQlFTeEhRVUZPU2l4RFFVRkJRU3hEUVVGM1FrRXNRMEZCUVVFc1EwRkRlRUl4UWl4SlFVRkJRU3hEUVVGTGEwSXNVVUZCUVVFc1JVRkJXVTBzUjBGQlFVRXNRMEZCU1Vrc1RVRkJRVUVzUlVGRGRrSktMRWRCUVVGQkxFTkJRVWxQTEVsQlFVRkJMRU5CUVVzdlFpeEpRVUZCUVN4RFFVRkxiMElzVVVGQlFVRXNRMEZCVlVzc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVZDZRaXhKUVVGQlFTeERRVUZMYTBJc1VVRkJRVUVzUTBGQlFVRXNRMEZETlVKc1FpeEpRVUZCUVN4RFFVRkxiMElzVVVGQlFVRXNRMEZCVTFrc1VVRkJRVUVzUTBGQlUyaERMRWxCUVVGQkxFTkJRVXRLTEZGQlFVRkJMRU5CUVZVc1EwRkJRU3hEUVVGSFNTeEpRVUZCUVN4RFFVRkxiVUlzVTBGQlFVRXNRMEZCUVVFc1IwRkZka1JMTEVkQlFVRkJMRU5CUVVsUExFbEJRVUZCTEVOQlFVc3ZRaXhKUVVGQlFTeERRVUZMYjBJc1VVRkJRVUVzUTBGQlZVc3NRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVWRFTEVkQlFVRkJMRU5CUVVsSkxFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJRMnhETlVJc1NVRkJRVUVzUTBGQlMydENMRkZCUVVGQkxFVkJRVmxOTEVkQlFVRkJMRU5CUVVsSkxFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJNa0oyUWl4VFFVRlRjRUlzVTBGQlFVRXNRMEZCVldkQ0xFZEJRVUZCTEVOQlFVdFRMRU5CUVVGQkxFTkJRVUZCTEVOQlEzUkNMRWRCUVVFc1EwRkJTMVFzUjBGQlFVRXNRMEZCU1Vrc1RVRkJRVUVzUTBGQlUwc3NRMEZCUVVFc1JVRkJTeXhEUVVGQkxFVkJRVTBzUTBGQlFTeERRVUZITEVOQlF6bENMRWxCUVVsUUxFTkJRVUZCTEVOQlFVbEdMRWRCUVVGQkxFTkJRVWxSTEZGQlFVRkJMRU5CUVZNc1UwRkJRU3hEUVVGWFF5eERRVUZCUVN4RFFVRkJRU3hEUVVOb1F5eEhRVUZKVUN4RFFVRkJRU3hEUVVGSExFTkJRMHdzU1VGQlNWRXNRMEZCUVVFc1EwRkJTVklzUTBGQlFVRXNRMEZCUlZNc1ZVRkJRVUVzUTBGQlYxUXNRMEZCUVVFc1EwRkJSVVVzVFVGQlFVRXNRMEZCVXl4RFFVRkJMRU5CUVVFc1EwRkRhRU1zUjBGQlNVMHNRMEZCUVVFc1JVRkJTeXhMUVVGQkxFVkJRVlZCTEVOQlFVRkJMRVZCUVVzc1MwRkJRU3hEUVV0MFFpeFBRVXBCYkVNc1NVRkJRVUVzUTBGQlMydENMRkZCUVVGQkxFTkJRVmNzUTBGQlFTeERRVU5vUW14Q0xFbEJRVUZCTEVOQlFVdHRRaXhUUVVGQlFTeERRVUZaTEVOQlFVRXNRMEZEYWtKdVFpeEpRVUZCUVN4RFFVRkxiMElzVVVGQlFVRXNRMEZCVXl4RFFVRkJMRU5CUVVFc1EwRkJTMGtzUjBGQlFVRXNRMEZCU1VFc1IwRkJRVUVzUTBGQlNVa3NUVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRVUVzUTBGRGNFTTFRaXhKUVVGQlFTeERRVUZMYjBJc1VVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVRXNRMEZCUzBrc1IwRkJRVUVzUTBGQlNVRXNSMEZCUVVFc1EwRkJTVWtzVFVGQlFVRXNRMEZCVXl4RFFVRkJMRU5CUVVFc1EwRkROMEpHTEVOQlFVRkJMRU5CUVVWVkxFdEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGQkxFTkJSM1pDTEU5QlFVOVdMRU5CUVVGQkxFTkJTMVFzVDBGSVFURkNMRWxCUVVGQkxFTkJRVXRyUWl4UlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGRGFFSnNRaXhKUVVGQlFTeERRVUZMYlVJc1UwRkJRVUVzUTBGQldTeERRVUZCTEVOQlEycENia0lzU1VGQlFVRXNRMEZCUzI5Q0xGRkJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkJMRU5CUVV0SkxFZEJRVUZCTEVOQlFVbEJMRWRCUVVGQkxFTkJRVWxKTEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVGQkxFTkJRemRDU2l4SFFVRkJRU3hEUVVGSlVTeFJRVUZCUVN4RFFVRlRMRk5CUVVFc1EwRkJWME1zUTBGQlFVRXNRMEZCUjFRc1IwRkJRVUVzUTBGQlNVa3NUVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRVUVzUTBGTGFrUXNVMEZCVTJ4Q0xGRkJRVUZCTEVOQlFWTmpMRWRCUVVGQkxFTkJRVUZCTEVOQlEyaENMRWxCUVVsRkxFTkJRVUZCTEVOQlFVbEdMRWRCUVVGQkxFVkJRVTlCTEVkQlFVRkJMRU5CUVVsSkxFMUJRVUZCTEVOQlFWTTFRaXhKUVVGQlFTeERRVUZMWlN4TFFVRkJRU3hEUVVGTlV5eEhRVUZCUVN4RFFVRkJRU3hEUVVGUExFVkJRVUVzUTBGRE9VTXNSMEZCU1hoQ0xFbEJRVUZCTEVOQlFVdHJRaXhSUVVGQlFTeERRVUZWTEVOQlEycENMRWxCUVVsVUxFZEJRVUZCTEVOQlFVMVVMRWxCUVVGQkxFTkJRVXR0UWl4VFFVRkJRU3hEUVVGWmJrSXNTVUZCUVVFc1EwRkJTMnRDTEZGQlFVRkJMRU5CUTJoRExFOUJRVTlSTEVOQlFVRkJMRU5CUVVreFFpeEpRVUZCUVN4RFFVRkxiMElzVVVGQlFVRXNRMEZCVTFrc1VVRkJRVUVzUTBGQlV5eFRRVUZCTEVOQlFWY3NRMEZCUVN4RFFVRkhka0lzUjBGQlFVRXNRMEZCUVVFc1EwRkZiRVFzVDBGQlQybENMRU5CUVVGQkxFTkJSMVFzVTBGQlUySXNWVUZCUVVFc1EwRkJWMWNzUjBGQlFVRXNRMEZCUzFNc1EwRkJRVUVzUTBGQlFVRXNRMEZEZGtJc1NVRkJTVWtzUTBGQlFVRXNRMEZCUVVFc1EwRkJTMklzUjBGQlFVRXNRMEZCU1Vrc1RVRkJRVUVzUTBGQlUwc3NRMEZCUVVFc1JVRkJTeXhEUVVGQkxFTkJRek5DTEU5QlFWVXNRMEZCUVN4SFFVRk9TU3hEUVVGQlFTeERRVUZuUW1Jc1IwRkJRVUVzUTBGQlNWRXNVVUZCUVVFc1EwRkJVeXhSUVVGQkxFTkJRVlZETEVOQlFVRkJMRU5CUVVGQkxFVkJRek5EYWtNc1NVRkJRVUVzUTBGQlMydENMRkZCUVVGQkxFTkJRVmNzUTBGQlFTeERRVUZKYlVJc1EwRkJRVUVzUTBGRGNFSnlReXhKUVVGQlFTeERRVUZMYlVJc1UwRkJRVUVzUTBGQldTeERRVUZCTEVOQlExQXNRMEZCUVN4SFFVRk9hMElzUTBGQlFVRXNRMEZEUm5KRExFbEJRVUZCTEVOQlFVdHZRaXhSUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZCUVN4RFFVRkxTU3hIUVVGQlFTeERRVUZKUVN4SFFVRkJRU3hEUVVGSlNTeE5RVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJRU3hGUVVWd1F6VkNMRWxCUVVGQkxFTkJRVXR2UWl4UlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeERRVUZMU1N4SFFVRkJRU3hEUVVGSlFTeEhRVUZCUVN4RFFVRkpTU3hOUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZCUVN4RFFVTndRelZDTEVsQlFVRkJMRU5CUVV0dlFpeFJRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJRU3hEUVVGTFNTeEhRVUZCUVN4RFFVRkpRU3hIUVVGQlFTeERRVUZKU1N4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlJTOUNTaXhIUVVGQlFTeERRVUZKVVN4UlFVRkJRU3hEUVVGVExGRkJRVUVzUTBGQlZVTXNRMEZCUVVFc1EwRkJSMVFzUjBGQlFVRXNRMEZCU1Vrc1RVRkJRVUVzUTBGQlUxTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIYUVRc1UwRkJVM1pDTEZOQlFVRkJMRU5CUVZWVkxFZEJRVUZCTEVOQlFVRkJMRU5CUTJwQ0xFbEJRVWxGTEVOQlFVRkJMRU5CUVVsR0xFZEJRVUZCTEVWQlFVOUJMRWRCUVVGQkxFTkJRVWxKTEUxQlFVRkJMRU5CUVZNMVFpeEpRVUZCUVN4RFFVRkxaU3hMUVVGQlFTeERRVUZOVXl4SFFVRkJRU3hEUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZET1VNc1QwRkJTWGhDTEVsQlFVRkJMRU5CUVV0clFpeFJRVUZCUVN4RFFVRnBRbEVzUTBGQlFVRXNRMEZCU1RGQ0xFbEJRVUZCTEVOQlFVdHZRaXhSUVVGQlFTeERRVUZUV1N4UlFVRkJRU3hEUVVGVExGRkJRVUVzUTBGQlZTeERRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkphRU1zU1VGQlFVRXNRMEZCUzJ0Q0xGRkJRVUZCTEVOQlFVRkJMRU5CUTNCRlVTeERRVUZCUVN4RFFVbFVMRk5CUVZOV0xGZEJRVUZCTEVOQlFWbFJMRWRCUVVGQkxFTkJRVUZCTEVOQlEyNUNMRTlCUVU5QkxFZEJRVUZCTEVOQlFVbFJMRkZCUVVGQkxFTkJRVk5vUXl4SlFVRkJRU3hEUVVGTFNpeFJRVUZCUVN4RFFVRkJRU3hEUVVjelFpeFRRVUZUY1VJc1UwRkJRVUVzUTBGQlZVOHNSMEZCUVVFc1EwRkJRVUVzUTBGRGFrSXNUMEZCVDBFc1IwRkJRVUVzUlVGQlQwRXNSMEZCUVVFc1EwRkJTVWtzVFVGQlFVRXNRMEZCVXpWQ0xFbEJRVUZCTEVOQlFVdGxMRXRCUVVGQkxFTkJRVTFUTEVkQlFVRkJMRU5CUVVGQkxFTkJRVThzUlVGQlFTeERRWHBPTDBOakxFOUJRVUZCTEVOQlFWRjRReXhoUVVGQlFTeERRVUZuUWtFc1lVRkJRVUVzUTBFMlFuaENRU3hoUVVGQlFTeERRVUZqZVVNc1UwRkJRVUVzUTBGQlZYaENMRXRCUVVGQkxFTkJRVkVzVTBGQlZWTXNSMEZCUVVFc1EwRkJRVUVzUTBGRGVFTXNSMEZCYlVJc1EwRkJRU3hIUVVGbVFTeEhRVUZCUVN4RFFVRkpTU3hOUVVGQlFTeERRVUZqTEUxQlFVOHNSVUZCUVN4RFFVTTNRaXhKUVVGSlJpeERRVUZCUVN4RFFVTkJUeXhEUVVGQlFTeERRVU5LTEVkQlFVbHFReXhKUVVGQlFTeERRVUZMYTBJc1VVRkJRVUVzUTBGQlZTeERRVVZxUWl4SFFVRkJMRXRCUVZWWkxFTkJRVUZCTEVsQlJGWktMRU5CUVVGQkxFTkJRVWt4UWl4SlFVRkJRU3hEUVVGTFZ5eFJRVUZCUVN4RFFVRlRZU3hIUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVOSExFMUJRVThzUlVGQlFTeERRVU0xUWxNc1EwRkJRVUVzUTBGQlNXcERMRWxCUVVGQkxFTkJRVXRyUWl4UlFVRkJRU3hEUVVOVWJFSXNTVUZCUVVFc1EwRkJTMnRDTEZGQlFVRkJMRU5CUVZjc1EwRkJRU3hEUVVGQkxFdEJSV2hDWlN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGRlRpeFBRVUZKUVN4RFFVRkJRU3hEUVVGSlZDeEhRVUZCUVN4RFFVRkpTU3hOUVVGQlFTeERRVUZsUml4RFFVRkJRU3hEUVVGSlFTeERRVUZCUVN4RFFVRkpNVUlzU1VGQlFVRXNRMEZCUzA4c1NVRkJRVUVzUTBGQlMybENMRWRCUVVGQkxFTkJRVXRUTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXRxUXl4SlFVRkJRU3hEUVVGTFR5eEpRVUZCUVN4RFFVRkxhVUlzUjBGQlFVRXNRMEZCUzFNc1EwRkJRVUVzUTBGQlFVRXNRMEZETDBSUUxFTkJRVUZCTEVWQlFVc3NSVUZCUVN4RFFVRkJMRU5CUjJRMVFpeGhRVUZCUVN4RFFVRmplVU1zVTBGQlFVRXNRMEZCVlRsQ0xFZEJRVUZCTEVOQmQwZDRRaXhUUVVGcFFtVXNSMEZCUVVFc1EwRkJRVUVzUTBGRFppeEpRVUZKUlN4RFFVRkJRU3hEUVVGSlJpeEhRVUZCUVN4RlFVRlBRU3hIUVVGQlFTeERRVUZKU1N4TlFVRkJRU3hEUVVGVE5VSXNTVUZCUVVFc1EwRkJTMlVzUzBGQlFVRXNRMEZCVFZNc1IwRkJRVUVzUTBGQlFVRXNRMEZCVHl4RlFVRkJMRU5CUXpsRExFOUJRVWw0UWl4SlFVRkJRU3hEUVVGTGEwSXNVVUZCUVVFc1EwRkJhVUpSTEVOQlFVRkJMRU5CUVVrc1VVRkJRU3hEUVVOMlFrRXNRMEZCUVVFc1EwRkJRVUVzUTBGNFIxUTFRaXhoUVVGQlFTeERRVUZqZVVNc1UwRkJRVUVzUTBGQlZXaERMRWxCUVVGQkxFTkJNRVo0UWl4VFFVRnJRbWxDTEVkQlFVRkJMRU5CUVV0VExFTkJRVUZCTEVOQlFVRkJMRU5CUTNKQ0xFbEJRVWxQTEV0QlFVRkJMRU5CY2tWT0xGTkJRVFpDWWl4SlFVRkJRU3hEUVVGTlNDeEhRVUZCUVN4RFFVRkxVeXhEUVVGQlFTeERRVUZCUVN4RFFVTjBReXhKUVVGSlVTeERRVUZCUVN4RFFVRkpha0lzUjBGQlFVRXNRMEZCU1Vrc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlEzSkNMRWRCUVVsaExFTkJRVUZCTEVOQlFVbFNMRU5CUVVGQkxFTkJRVWNzVDBGQlR5eERRVUZCTEVOQlEyeENMRWxCUVVsc1F5eEZRVUZCUVN4RFFVRkxkVUlzWVVGQlFVRXNRMEZCWTBVc1IwRkJRVUVzUTBGQlNXbENMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUXpOQ0xFZEJRVWt4UXl4RlFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGRlVpeFBRVVJKUVN4RlFVRkJRU3hEUVVGTExFTkJRVUVzUjBGQlJ6UkNMRWxCUVVGQkxFTkJRVXRVTEZGQlFVRkJMRU5CUVZkdVFpeEZRVUZCUVN4RFFVRkxMRU5CUVVFc1EwRkJRU3hEUVVNeFFrRXNSVUZCUVVFc1EwRkZWQ3hIUVVGQkxFVkJRVTB3UXl4RFFVRkJRU3hEUVVGSlVpeERRVUZCUVN4RlFVRkJRU3hEUVVGaExFTkJRVUVzUjBGQlVteERMRVZCUVVGQkxFTkJRVmNzVDBGQlR5eERRVUZCTEVOQlJXcERMRWRCUVVFc1EwRkVRVUVzUlVGQlFVRXNRMEZCUzNWQ0xHRkJRVUZCTEVOQlFXTkZMRWRCUVVGQkxFTkJRVWxwUWl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4SFFVTmlMRU5CUVVFc1EwRkZVaXhQUVVSSk1VTXNSVUZCUVVFc1EwRkJTeXhEUVVGQkxFZEJRVWMwUWl4SlFVRkJRU3hEUVVGTFZDeFJRVUZCUVN4RFFVRlhia0lzUlVGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVVFc1EwRkRNVUpCTEVWQlFVRkJMRU5CUlZRc1IwRkJRU3hGUVVGTk1FTXNRMEZCUVVFc1EwRkJTVklzUTBGQlFVRXNSVUZCUVVFc1EwRkJZU3hEUVVGQkxFZEJRVkpzUXl4RlFVRkJRU3hEUVVGWExFOUJRVThzUTBGQlFTeERRVVZxUXl4SFFVRkJMRU5CUkVGQkxFVkJRVUZCTEVOQlFVdDFRaXhoUVVGQlFTeERRVUZqUlN4SFFVRkJRU3hEUVVGSmFVSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSMEZEWWl4RFFVRkJMRU5CU1ZJc1QwRklTVEZETEVWQlFVRkJMRU5CUVVzc1EwRkJRU3hIUVVOSkxFTkJRVUVzUjBGQlVFRXNSVUZCUVVFc1EwRkJWVUVzUlVGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVU4MFFpeEpRVUZCUVN4RFFVRkxWQ3hSUVVGQlFTeERRVUZYYmtJc1JVRkJRVUVzUTBGQlN5eERRVUZCTEVOQlFVRXNRMEZGTVVOQkxFVkJRVUZCTEVOQlJWUXNUMEZCVHl4RFFVRkJMRU5CSzBOTE1rTXNRMEZCYjBJeFF5eEpRVUZCUVN4RFFVRk5kMElzUjBGQlFVRXNRMEZCUzFNc1EwRkJRVUVzUTBGQlFVRXNRMEZETTBNc1IwRkJRU3hEUVVGTGFrTXNTVUZCUVVFc1EwRkJTMnRDTEZGQlFVRkJMRU5CUVZVc1QwRkJUMDBzUjBGQlFVRXNRMEZCU1ZFc1VVRkJRVUVzUTBGQlV5eE5RVUZCTEVOQlFWRkRMRU5CUVVGQkxFTkJRVUZCTEVOQlEyaEVha01zU1VGQlFVRXNRMEZCUzIxQ0xGTkJRVUZCTEVOQlFWbHhRaXhMUVVGQlFTeERRVU5xUWl4SlFVRkpMMElzUjBGQlFVRXNRMEZCVFdVc1IwRkJRVUVzUTBGQlNVa3NUVUZCUVVFc1JVRkJWVmtzUzBGQlFVRXNRMEZCVVhoRExFbEJRVUZCTEVOQlFVdHJRaXhSUVVGQlFTeERRVUZCUVN4RFFVVnlReXhQUVVSQlRTeEhRVUZCUVN4RFFVRkpUeXhKUVVGQlFTeERRVUZMTDBJc1NVRkJRVUVzUTBGQlMyOUNMRkZCUVVGQkxFTkJRVlVzUTBGQlFTeERRVUZIV0N4SFFVRkJRU3hEUVVGQlFTeERRVU53UW1Vc1IwRkJRVUVzUTBGQlNWRXNVVUZCUVVFc1EwRkJVeXhOUVVGQkxFTkJRVkZETEVOQlFVRkJMRU5CUVVkNFFpeEhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVGRHYWtOWUxHRkJRVUZCTEVOQlFXTjVReXhUUVVGQlFTeERRVUZWTlVJc1VVRkJRVUVzUTBGQlZ5eFRRVUZWWVN4SFFVRkJRU3hEUVVGQlFTeERRVU16UXl4SFFVRkplRUlzU1VGQlFVRXNRMEZCUzJ0Q0xGRkJRVUZCTEVWQlFWbE5MRWRCUVVGQkxFTkJRVWxKTEUxQlFVRkJMRU5CUlhaQ0xFOUJSRUZLTEVkQlFVRkJMRU5CUVVsUExFbEJRVUZCTEVOQlFVc3ZRaXhKUVVGQlFTeERRVUZMYjBJc1VVRkJRVUVzUTBGQlZYQkNMRWxCUVVGQkxFTkJRVXR0UWl4VFFVRkJRU3hEUVVGWmJrSXNTVUZCUVVFc1EwRkJTMnRDTEZGQlFVRkJMRU5CUVZVc1EwRkJRU3hEUVVGSGJFSXNTVUZCUVVFc1EwRkJTMnRDTEZGQlFVRkJMRU5CUVVGQkxFTkJRM3BFYkVJc1NVRkJRVUVzUTBGQlMyOUNMRkZCUVVGQkxFTkJRVk5aTEZGQlFVRkJMRU5CUVZOb1F5eEpRVUZCUVN4RFFVRkxTaXhSUVVGQlFTeERRVUZWTEVOQlFVRXNRMEZCUjBrc1NVRkJRVUVzUTBGQlMyMUNMRk5CUVVGQkxFTkJRVUZCTEVOQlJYWkVTeXhIUVVGQlFTeERRVUZKVHl4SlFVRkJRU3hEUVVGTEwwSXNTVUZCUVVFc1EwRkJTMjlDTEZGQlFVRkJMRU5CUVZWd1FpeEpRVUZCUVN4RFFVRkxiVUlzVTBGQlFVRXNRMEZCV1c1Q0xFbEJRVUZCTEVOQlFVdHJRaXhSUVVGQlFTeERRVUZWTEVOQlFVRXNRMEZCUjAwc1IwRkJRVUVzUTBGQlNVa3NUVUZCUVVFc1EwRkJRVUVzUTBGREwwUTFRaXhKUVVGQlFTeERRVUZMYTBJc1VVRkJRVUVzUlVGQldVMHNSMEZCUVVFc1EwRkJTVWtzVFVGQlFVRXNRMEZCUVVFc1EwRkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIG9iamVjdEtleXM9T2JqZWN0LmtleXN8fGZ1bmN0aW9uKG9iail7dmFyIGtleXM9W107Zm9yKHZhciBrZXkgaW4gb2JqKWtleXMucHVzaChrZXkpO3JldHVybiBrZXlzfTttb2R1bGUuZXhwb3J0cz1EdXBsZXg7dmFyIFJlYWRhYmxlPXJlcXVpcmUoXCIuL19zdHJlYW1fcmVhZGFibGVcIiksV3JpdGFibGU9cmVxdWlyZShcIi4vX3N0cmVhbV93cml0YWJsZVwiKTtyZXF1aXJlKFwiaW5oZXJpdHNcIikoRHVwbGV4LFJlYWRhYmxlKTtmb3IodmFyIGtleXM9b2JqZWN0S2V5cyhXcml0YWJsZS5wcm90b3R5cGUpLHY9MDt2PGtleXMubGVuZ3RoO3YrKyl7dmFyIG1ldGhvZD1rZXlzW3ZdO0R1cGxleC5wcm90b3R5cGVbbWV0aG9kXXx8KER1cGxleC5wcm90b3R5cGVbbWV0aG9kXT1Xcml0YWJsZS5wcm90b3R5cGVbbWV0aG9kXSl9ZnVuY3Rpb24gRHVwbGV4KG9wdGlvbnMpe2lmKCEodGhpcyBpbnN0YW5jZW9mIER1cGxleCkpcmV0dXJuIG5ldyBEdXBsZXgob3B0aW9ucyk7UmVhZGFibGUuY2FsbCh0aGlzLG9wdGlvbnMpLFdyaXRhYmxlLmNhbGwodGhpcyxvcHRpb25zKSx0aGlzLmFsbG93SGFsZk9wZW49ITAsb3B0aW9ucyYmKCExPT09b3B0aW9ucy5yZWFkYWJsZSYmKHRoaXMucmVhZGFibGU9ITEpLCExPT09b3B0aW9ucy53cml0YWJsZSYmKHRoaXMud3JpdGFibGU9ITEpLCExPT09b3B0aW9ucy5hbGxvd0hhbGZPcGVuJiYodGhpcy5hbGxvd0hhbGZPcGVuPSExLHRoaXMub25jZShcImVuZFwiLG9uZW5kKSkpfWZ1bmN0aW9uIG9uZW5kKCl7dGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZHx8cHJvY2Vzcy5uZXh0VGljayhvbkVuZE5ULHRoaXMpfWZ1bmN0aW9uIG9uRW5kTlQoc2VsZil7c2VsZi5lbmQoKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSxcIndyaXRhYmxlSGlnaFdhdGVyTWFya1wiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmhpZ2hXYXRlck1hcmt9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsXCJ3cml0YWJsZUJ1ZmZlclwiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlJiZ0aGlzLl93cml0YWJsZVN0YXRlLmdldEJ1ZmZlcigpfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLFwid3JpdGFibGVMZW5ndGhcIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5sZW5ndGh9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsXCJkZXN0cm95ZWRcIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5fcmVhZGFibGVTdGF0ZSYmdm9pZCAwIT09dGhpcy5fd3JpdGFibGVTdGF0ZSYmKHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkJiZ0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZCl9LHNldDpmdW5jdGlvbih2YWx1ZSl7dm9pZCAwIT09dGhpcy5fcmVhZGFibGVTdGF0ZSYmdm9pZCAwIT09dGhpcy5fd3JpdGFibGVTdGF0ZSYmKHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkPXZhbHVlLHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkPXZhbHVlKX19KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklsOXpkSEpsWVcxZlpIVndiR1Y0TG1weklsMHNJbTVoYldWeklqcGJJbTlpYW1WamRFdGxlWE1pTENKUFltcGxZM1FpTENKclpYbHpJaXdpYjJKcUlpd2lhMlY1SWl3aWNIVnphQ0lzSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKRWRYQnNaWGdpTENKU1pXRmtZV0pzWlNJc0luSmxjWFZwY21VaUxDSlhjbWwwWVdKc1pTSXNJbkJ5YjNSdmRIbHdaU0lzSW5ZaUxDSnNaVzVuZEdnaUxDSnRaWFJvYjJRaUxDSnZjSFJwYjI1eklpd2lkR2hwY3lJc0ltTmhiR3dpTENKaGJHeHZkMGhoYkdaUGNHVnVJaXdpY21WaFpHRmliR1VpTENKM2NtbDBZV0pzWlNJc0ltOXVZMlVpTENKdmJtVnVaQ0lzSWw5M2NtbDBZV0pzWlZOMFlYUmxJaXdpWlc1a1pXUWlMQ0p3Y205alpYTnpJaXdpYm1WNGRGUnBZMnNpTENKdmJrVnVaRTVVSWl3aWMyVnNaaUlzSW1WdVpDSXNJbVJsWm1sdVpWQnliM0JsY25SNUlpd2laVzUxYldWeVlXSnNaU0lzSW1kbGRDSXNJbWhwWjJoWFlYUmxjazFoY21zaUxDSm5aWFJDZFdabVpYSWlMQ0oxYm1SbFptbHVaV1FpTENKZmNtVmhaR0ZpYkdWVGRHRjBaU0lzSW1SbGMzUnliM2xsWkNJc0luTmxkQ0lzSW5aaGJIVmxJbDBzSW0xaGNIQnBibWR6SWpvaVFVRjNRa0VzWVVGSFFTeEpRVUZKUVN4WFFVRmhReXhQUVVGUFF5eE5RVUZSTEZOQlFWVkRMRXRCUTNoRExFbEJRVWxFTEV0QlFVOHNSMEZGV0N4SlFVRkxMRWxCUVVsRkxFOUJRVTlFTEVsQlEyUkVMRXRCUVV0SExFdEJRVXRFTEV0QlIxb3NUMEZCVDBZc1RVRkxWRWtzVDBGQlQwTXNVVUZCVlVNc1QwRkZha0lzU1VGQlNVTXNVMEZCVjBNc1VVRkJVU3h6UWtGRmJrSkRMRk5CUVZkRUxGRkJRVkVzYzBKQlJYWkNRU3hSUVVGUkxGZEJRVkpCTEVOQlFXOUNSaXhQUVVGUlF5eFZRVTB4UWl4SlFVWkJMRWxCUVVsUUxFdEJRVTlHTEZkQlFWZFhMRk5CUVZORExGZEJSWFJDUXl4RlFVRkpMRVZCUVVkQkxFVkJRVWxZTEV0QlFVdFpMRTlCUVZGRUxFbEJRVXNzUTBGRGNFTXNTVUZCU1VVc1QwRkJVMklzUzBGQlMxY3NSMEZEWWt3c1QwRkJUMGtzVlVGQlZVY3NWVUZCVTFBc1QwRkJUMGtzVlVGQlZVY3NVVUZCVlVvc1UwRkJVME1zVlVGQlZVY3NVMEZKYWtZc1UwRkJVMUFzVDBGQlQxRXNVMEZEWkN4TFFVRk5ReXhuUWtGQlowSlVMRkZCUVZNc1QwRkJUeXhKUVVGSlFTeFBRVUZQVVN4VFFVTnFSRkFzVTBGQlUxTXNTMEZCUzBRc1MwRkJUVVFzVTBGRGNFSk1MRk5CUVZOUExFdEJRVXRFTEV0QlFVMUVMRk5CUTNCQ1F5eExRVUZMUlN4bFFVRm5RaXhGUVVWcVFrZ3NWMEZEZFVJc1NVRkJja0pCTEZGQlFWRkpMRmRCUVc5Q1NDeExRVUZMUnl4VlFVRlhMRWxCUTNaQ0xFbEJRWEpDU2l4UlFVRlJTeXhYUVVGdlFrb3NTMEZCUzBrc1ZVRkJWeXhKUVVWc1FpeEpRVUV4UWt3c1VVRkJVVWNzWjBKQlExWkdMRXRCUVV0RkxHVkJRV2RDTEVWQlEzSkNSaXhMUVVGTFN5eExRVUZMTEUxQlFVOURMRk5CYVVOMlFpeFRRVUZUUVN4UlFVVklUaXhMUVVGTFR5eGxRVUZsUXl4UFFVZDRRa01zVVVGQlVVTXNVMEZCVTBNc1VVRkJVMWdzVFVGSE5VSXNVMEZCVTFjc1VVRkJVVU1zVFVGRFprRXNTMEZCUzBNc1RVRnlRMUEzUWl4UFFVRlBPRUlzWlVGQlpYWkNMRTlCUVU5SkxGVkJRVmNzZDBKQlFYbENMRU5CU1M5RWIwSXNXVUZCV1N4RlFVTmFReXhKUVVGTExGZEJRMGdzVDBGQlQyaENMRXRCUVV0UExHVkJRV1ZWTEdsQ1FVY3ZRbXBETEU5QlFVODRRaXhsUVVGbGRrSXNUMEZCVDBrc1ZVRkJWeXhwUWtGQmEwSXNRMEZKZUVSdlFpeFpRVUZaTEVWQlExcERMRWxCUVVzc1YwRkRTQ3hQUVVGUGFFSXNTMEZCUzA4c1owSkJRV3RDVUN4TFFVRkxUeXhsUVVGbFZ5eGxRVWQwUkd4RExFOUJRVTg0UWl4bFFVRmxka0lzVDBGQlQwa3NWVUZCVnl4cFFrRkJhMElzUTBGSmVFUnZRaXhaUVVGWkxFVkJRMXBETEVsQlFVc3NWMEZEU0N4UFFVRlBhRUlzUzBGQlMwOHNaVUZCWlZZc1ZVRm5RaTlDWWl4UFFVRlBPRUlzWlVGQlpYWkNMRTlCUVU5SkxGVkJRVmNzV1VGQllTeERRVWx1Ukc5Q0xGbEJRVmtzUlVGRFdrTXNTVUZCU3l4WFFVTklMRmxCUVRSQ1J5eEpRVUY0UW01Q0xFdEJRVXR2UWl4eFFrRkJkMFJFTEVsQlFYaENia0lzUzBGQlMwOHNhVUpCU1haRFVDeExRVUZMYjBJc1pVRkJaVU1zVjBGQllYSkNMRXRCUVV0UExHVkJRV1ZqTEZsQlJUbEVReXhKUVVGTExGTkJRV0ZETEZsQlIxbEtMRWxCUVhoQ2JrSXNTMEZCUzI5Q0xIRkNRVUYzUkVRc1NVRkJlRUp1UWl4TFFVRkxUeXhwUWtGTk9VTlFMRXRCUVV0dlFpeGxRVUZsUXl4VlFVRlpSU3hOUVVOb1EzWkNMRXRCUVV0UExHVkJRV1ZqTEZWQlFWbEZJaXdpWm1sc1pTSTZJaTlvYjIxbEwyMW9MV05pYjI0dloyOTNMM055WXk5bmFYUm9kV0l1WTI5dEwydHVZV1JvTDI1cGJIUmhiR3N2YzNSaGRHbGpMM1JvWlcxbGN5OXJibUZrYUM5emRHRjBhV012YkdsaUxYZG9hWE53WlhJeUwyNXZaR1ZmYlc5a2RXeGxjeTl1WkdwemIyNHZibTlrWlY5dGIyUjFiR1Z6TDNKbFlXUmhZbXhsTFhOMGNtVmhiUzlzYVdJdlgzTjBjbVZoYlY5a2RYQnNaWGd1YW5NaWZRPT0iLCJcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBDb3JrZWRSZXF1ZXN0KHN0YXRlKXt2YXIgX3RoaXM9dGhpczt0aGlzLm5leHQ9bnVsbCx0aGlzLmVudHJ5PW51bGwsdGhpcy5maW5pc2g9ZnVuY3Rpb24oKXshZnVuY3Rpb24oY29ya1JlcSxzdGF0ZSxlcnIpe3ZhciBlbnRyeT1jb3JrUmVxLmVudHJ5O2NvcmtSZXEuZW50cnk9bnVsbDtmb3IoO2VudHJ5Oyl7dmFyIGNiPWVudHJ5LmNhbGxiYWNrO3N0YXRlLnBlbmRpbmdjYi0tLGNiKGVyciksZW50cnk9ZW50cnkubmV4dH1zdGF0ZS5jb3JrZWRSZXF1ZXN0c0ZyZWUubmV4dD1jb3JrUmVxfShfdGhpcyxzdGF0ZSl9fXZhciBEdXBsZXg7bW9kdWxlLmV4cG9ydHM9V3JpdGFibGUsV3JpdGFibGUuV3JpdGFibGVTdGF0ZT1Xcml0YWJsZVN0YXRlO3ZhciBpbnRlcm5hbFV0aWw9e2RlcHJlY2F0ZTpyZXF1aXJlKFwidXRpbC1kZXByZWNhdGVcIil9LFN0cmVhbT1yZXF1aXJlKFwiLi9pbnRlcm5hbC9zdHJlYW1zL3N0cmVhbVwiKSxCdWZmZXI9cmVxdWlyZShcImJ1ZmZlclwiKS5CdWZmZXIsT3VyVWludDhBcnJheT1nbG9iYWwuVWludDhBcnJheXx8ZnVuY3Rpb24oKXt9O3ZhciByZWFsSGFzSW5zdGFuY2UsZGVzdHJveUltcGw9cmVxdWlyZShcIi4vaW50ZXJuYWwvc3RyZWFtcy9kZXN0cm95XCIpLGdldEhpZ2hXYXRlck1hcms9cmVxdWlyZShcIi4vaW50ZXJuYWwvc3RyZWFtcy9zdGF0ZVwiKS5nZXRIaWdoV2F0ZXJNYXJrLF9yZXF1aXJlJGNvZGVzPXJlcXVpcmUoXCIuLi9lcnJvcnNcIikuY29kZXMsRVJSX0lOVkFMSURfQVJHX1RZUEU9X3JlcXVpcmUkY29kZXMuRVJSX0lOVkFMSURfQVJHX1RZUEUsRVJSX01FVEhPRF9OT1RfSU1QTEVNRU5URUQ9X3JlcXVpcmUkY29kZXMuRVJSX01FVEhPRF9OT1RfSU1QTEVNRU5URUQsRVJSX01VTFRJUExFX0NBTExCQUNLPV9yZXF1aXJlJGNvZGVzLkVSUl9NVUxUSVBMRV9DQUxMQkFDSyxFUlJfU1RSRUFNX0NBTk5PVF9QSVBFPV9yZXF1aXJlJGNvZGVzLkVSUl9TVFJFQU1fQ0FOTk9UX1BJUEUsRVJSX1NUUkVBTV9ERVNUUk9ZRUQ9X3JlcXVpcmUkY29kZXMuRVJSX1NUUkVBTV9ERVNUUk9ZRUQsRVJSX1NUUkVBTV9OVUxMX1ZBTFVFUz1fcmVxdWlyZSRjb2Rlcy5FUlJfU1RSRUFNX05VTExfVkFMVUVTLEVSUl9TVFJFQU1fV1JJVEVfQUZURVJfRU5EPV9yZXF1aXJlJGNvZGVzLkVSUl9TVFJFQU1fV1JJVEVfQUZURVJfRU5ELEVSUl9VTktOT1dOX0VOQ09ESU5HPV9yZXF1aXJlJGNvZGVzLkVSUl9VTktOT1dOX0VOQ09ESU5HLGVycm9yT3JEZXN0cm95PWRlc3Ryb3lJbXBsLmVycm9yT3JEZXN0cm95O2Z1bmN0aW9uIG5vcCgpe31mdW5jdGlvbiBXcml0YWJsZVN0YXRlKG9wdGlvbnMsc3RyZWFtLGlzRHVwbGV4KXtEdXBsZXg9RHVwbGV4fHxyZXF1aXJlKFwiLi9fc3RyZWFtX2R1cGxleFwiKSxvcHRpb25zPW9wdGlvbnN8fHt9LFwiYm9vbGVhblwiIT10eXBlb2YgaXNEdXBsZXgmJihpc0R1cGxleD1zdHJlYW0gaW5zdGFuY2VvZiBEdXBsZXgpLHRoaXMub2JqZWN0TW9kZT0hIW9wdGlvbnMub2JqZWN0TW9kZSxpc0R1cGxleCYmKHRoaXMub2JqZWN0TW9kZT10aGlzLm9iamVjdE1vZGV8fCEhb3B0aW9ucy53cml0YWJsZU9iamVjdE1vZGUpLHRoaXMuaGlnaFdhdGVyTWFyaz1nZXRIaWdoV2F0ZXJNYXJrKHRoaXMsb3B0aW9ucyxcIndyaXRhYmxlSGlnaFdhdGVyTWFya1wiLGlzRHVwbGV4KSx0aGlzLmZpbmFsQ2FsbGVkPSExLHRoaXMubmVlZERyYWluPSExLHRoaXMuZW5kaW5nPSExLHRoaXMuZW5kZWQ9ITEsdGhpcy5maW5pc2hlZD0hMSx0aGlzLmRlc3Ryb3llZD0hMTt2YXIgbm9EZWNvZGU9ITE9PT1vcHRpb25zLmRlY29kZVN0cmluZ3M7dGhpcy5kZWNvZGVTdHJpbmdzPSFub0RlY29kZSx0aGlzLmRlZmF1bHRFbmNvZGluZz1vcHRpb25zLmRlZmF1bHRFbmNvZGluZ3x8XCJ1dGY4XCIsdGhpcy5sZW5ndGg9MCx0aGlzLndyaXRpbmc9ITEsdGhpcy5jb3JrZWQ9MCx0aGlzLnN5bmM9ITAsdGhpcy5idWZmZXJQcm9jZXNzaW5nPSExLHRoaXMub253cml0ZT1mdW5jdGlvbihlcil7IWZ1bmN0aW9uKHN0cmVhbSxlcil7dmFyIHN0YXRlPXN0cmVhbS5fd3JpdGFibGVTdGF0ZSxzeW5jPXN0YXRlLnN5bmMsY2I9c3RhdGUud3JpdGVjYjtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBjYil0aHJvdyBuZXcgRVJSX01VTFRJUExFX0NBTExCQUNLO2lmKGZ1bmN0aW9uKHN0YXRlKXtzdGF0ZS53cml0aW5nPSExLHN0YXRlLndyaXRlY2I9bnVsbCxzdGF0ZS5sZW5ndGgtPXN0YXRlLndyaXRlbGVuLHN0YXRlLndyaXRlbGVuPTB9KHN0YXRlKSxlcikhZnVuY3Rpb24oc3RyZWFtLHN0YXRlLHN5bmMsZXIsY2Ipey0tc3RhdGUucGVuZGluZ2NiLHN5bmM/KHByb2Nlc3MubmV4dFRpY2soY2IsZXIpLHByb2Nlc3MubmV4dFRpY2soZmluaXNoTWF5YmUsc3RyZWFtLHN0YXRlKSxzdHJlYW0uX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPSEwLGVycm9yT3JEZXN0cm95KHN0cmVhbSxlcikpOihjYihlciksc3RyZWFtLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCxlcnJvck9yRGVzdHJveShzdHJlYW0sZXIpLGZpbmlzaE1heWJlKHN0cmVhbSxzdGF0ZSkpfShzdHJlYW0sc3RhdGUsc3luYyxlcixjYik7ZWxzZXt2YXIgZmluaXNoZWQ9bmVlZEZpbmlzaChzdGF0ZSl8fHN0cmVhbS5kZXN0cm95ZWQ7ZmluaXNoZWR8fHN0YXRlLmNvcmtlZHx8c3RhdGUuYnVmZmVyUHJvY2Vzc2luZ3x8IXN0YXRlLmJ1ZmZlcmVkUmVxdWVzdHx8Y2xlYXJCdWZmZXIoc3RyZWFtLHN0YXRlKSxzeW5jP3Byb2Nlc3MubmV4dFRpY2soYWZ0ZXJXcml0ZSxzdHJlYW0sc3RhdGUsZmluaXNoZWQsY2IpOmFmdGVyV3JpdGUoc3RyZWFtLHN0YXRlLGZpbmlzaGVkLGNiKX19KHN0cmVhbSxlcil9LHRoaXMud3JpdGVjYj1udWxsLHRoaXMud3JpdGVsZW49MCx0aGlzLmJ1ZmZlcmVkUmVxdWVzdD1udWxsLHRoaXMubGFzdEJ1ZmZlcmVkUmVxdWVzdD1udWxsLHRoaXMucGVuZGluZ2NiPTAsdGhpcy5wcmVmaW5pc2hlZD0hMSx0aGlzLmVycm9yRW1pdHRlZD0hMSx0aGlzLmVtaXRDbG9zZT0hMSE9PW9wdGlvbnMuZW1pdENsb3NlLHRoaXMuYXV0b0Rlc3Ryb3k9ISFvcHRpb25zLmF1dG9EZXN0cm95LHRoaXMuYnVmZmVyZWRSZXF1ZXN0Q291bnQ9MCx0aGlzLmNvcmtlZFJlcXVlc3RzRnJlZT1uZXcgQ29ya2VkUmVxdWVzdCh0aGlzKX1mdW5jdGlvbiBXcml0YWJsZShvcHRpb25zKXt2YXIgaXNEdXBsZXg9dGhpcyBpbnN0YW5jZW9mKER1cGxleD1EdXBsZXh8fHJlcXVpcmUoXCIuL19zdHJlYW1fZHVwbGV4XCIpKTtpZighaXNEdXBsZXgmJiFyZWFsSGFzSW5zdGFuY2UuY2FsbChXcml0YWJsZSx0aGlzKSlyZXR1cm4gbmV3IFdyaXRhYmxlKG9wdGlvbnMpO3RoaXMuX3dyaXRhYmxlU3RhdGU9bmV3IFdyaXRhYmxlU3RhdGUob3B0aW9ucyx0aGlzLGlzRHVwbGV4KSx0aGlzLndyaXRhYmxlPSEwLG9wdGlvbnMmJihcImZ1bmN0aW9uXCI9PXR5cGVvZiBvcHRpb25zLndyaXRlJiYodGhpcy5fd3JpdGU9b3B0aW9ucy53cml0ZSksXCJmdW5jdGlvblwiPT10eXBlb2Ygb3B0aW9ucy53cml0ZXYmJih0aGlzLl93cml0ZXY9b3B0aW9ucy53cml0ZXYpLFwiZnVuY3Rpb25cIj09dHlwZW9mIG9wdGlvbnMuZGVzdHJveSYmKHRoaXMuX2Rlc3Ryb3k9b3B0aW9ucy5kZXN0cm95KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBvcHRpb25zLmZpbmFsJiYodGhpcy5fZmluYWw9b3B0aW9ucy5maW5hbCkpLFN0cmVhbS5jYWxsKHRoaXMpfWZ1bmN0aW9uIGRvV3JpdGUoc3RyZWFtLHN0YXRlLHdyaXRldixsZW4sY2h1bmssZW5jb2RpbmcsY2Ipe3N0YXRlLndyaXRlbGVuPWxlbixzdGF0ZS53cml0ZWNiPWNiLHN0YXRlLndyaXRpbmc9ITAsc3RhdGUuc3luYz0hMCxzdGF0ZS5kZXN0cm95ZWQ/c3RhdGUub253cml0ZShuZXcgRVJSX1NUUkVBTV9ERVNUUk9ZRUQoXCJ3cml0ZVwiKSk6d3JpdGV2P3N0cmVhbS5fd3JpdGV2KGNodW5rLHN0YXRlLm9ud3JpdGUpOnN0cmVhbS5fd3JpdGUoY2h1bmssZW5jb2Rpbmcsc3RhdGUub253cml0ZSksc3RhdGUuc3luYz0hMX1mdW5jdGlvbiBhZnRlcldyaXRlKHN0cmVhbSxzdGF0ZSxmaW5pc2hlZCxjYil7ZmluaXNoZWR8fGZ1bmN0aW9uKHN0cmVhbSxzdGF0ZSl7MD09PXN0YXRlLmxlbmd0aCYmc3RhdGUubmVlZERyYWluJiYoc3RhdGUubmVlZERyYWluPSExLHN0cmVhbS5lbWl0KFwiZHJhaW5cIikpfShzdHJlYW0sc3RhdGUpLHN0YXRlLnBlbmRpbmdjYi0tLGNiKCksZmluaXNoTWF5YmUoc3RyZWFtLHN0YXRlKX1mdW5jdGlvbiBjbGVhckJ1ZmZlcihzdHJlYW0sc3RhdGUpe3N0YXRlLmJ1ZmZlclByb2Nlc3Npbmc9ITA7dmFyIGVudHJ5PXN0YXRlLmJ1ZmZlcmVkUmVxdWVzdDtpZihzdHJlYW0uX3dyaXRldiYmZW50cnkmJmVudHJ5Lm5leHQpe3ZhciBsPXN0YXRlLmJ1ZmZlcmVkUmVxdWVzdENvdW50LGJ1ZmZlcj1uZXcgQXJyYXkobCksaG9sZGVyPXN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZTtob2xkZXIuZW50cnk9ZW50cnk7Zm9yKHZhciBjb3VudD0wLGFsbEJ1ZmZlcnM9ITA7ZW50cnk7KWJ1ZmZlcltjb3VudF09ZW50cnksZW50cnkuaXNCdWZ8fChhbGxCdWZmZXJzPSExKSxlbnRyeT1lbnRyeS5uZXh0LGNvdW50Kz0xO2J1ZmZlci5hbGxCdWZmZXJzPWFsbEJ1ZmZlcnMsZG9Xcml0ZShzdHJlYW0sc3RhdGUsITAsc3RhdGUubGVuZ3RoLGJ1ZmZlcixcIlwiLGhvbGRlci5maW5pc2gpLHN0YXRlLnBlbmRpbmdjYisrLHN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3Q9bnVsbCxob2xkZXIubmV4dD8oc3RhdGUuY29ya2VkUmVxdWVzdHNGcmVlPWhvbGRlci5uZXh0LGhvbGRlci5uZXh0PW51bGwpOnN0YXRlLmNvcmtlZFJlcXVlc3RzRnJlZT1uZXcgQ29ya2VkUmVxdWVzdChzdGF0ZSksc3RhdGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQ9MH1lbHNle2Zvcig7ZW50cnk7KXt2YXIgY2h1bms9ZW50cnkuY2h1bmssZW5jb2Rpbmc9ZW50cnkuZW5jb2RpbmcsY2I9ZW50cnkuY2FsbGJhY2s7aWYoZG9Xcml0ZShzdHJlYW0sc3RhdGUsITEsc3RhdGUub2JqZWN0TW9kZT8xOmNodW5rLmxlbmd0aCxjaHVuayxlbmNvZGluZyxjYiksZW50cnk9ZW50cnkubmV4dCxzdGF0ZS5idWZmZXJlZFJlcXVlc3RDb3VudC0tLHN0YXRlLndyaXRpbmcpYnJlYWt9bnVsbD09PWVudHJ5JiYoc3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdD1udWxsKX1zdGF0ZS5idWZmZXJlZFJlcXVlc3Q9ZW50cnksc3RhdGUuYnVmZmVyUHJvY2Vzc2luZz0hMX1mdW5jdGlvbiBuZWVkRmluaXNoKHN0YXRlKXtyZXR1cm4gc3RhdGUuZW5kaW5nJiYwPT09c3RhdGUubGVuZ3RoJiZudWxsPT09c3RhdGUuYnVmZmVyZWRSZXF1ZXN0JiYhc3RhdGUuZmluaXNoZWQmJiFzdGF0ZS53cml0aW5nfWZ1bmN0aW9uIGNhbGxGaW5hbChzdHJlYW0sc3RhdGUpe3N0cmVhbS5fZmluYWwoZnVuY3Rpb24oZXJyKXtzdGF0ZS5wZW5kaW5nY2ItLSxlcnImJmVycm9yT3JEZXN0cm95KHN0cmVhbSxlcnIpLHN0YXRlLnByZWZpbmlzaGVkPSEwLHN0cmVhbS5lbWl0KFwicHJlZmluaXNoXCIpLGZpbmlzaE1heWJlKHN0cmVhbSxzdGF0ZSl9KX1mdW5jdGlvbiBmaW5pc2hNYXliZShzdHJlYW0sc3RhdGUpe3ZhciBuZWVkPW5lZWRGaW5pc2goc3RhdGUpO2lmKG5lZWQmJihmdW5jdGlvbihzdHJlYW0sc3RhdGUpe3N0YXRlLnByZWZpbmlzaGVkfHxzdGF0ZS5maW5hbENhbGxlZHx8KFwiZnVuY3Rpb25cIiE9dHlwZW9mIHN0cmVhbS5fZmluYWx8fHN0YXRlLmRlc3Ryb3llZD8oc3RhdGUucHJlZmluaXNoZWQ9ITAsc3RyZWFtLmVtaXQoXCJwcmVmaW5pc2hcIikpOihzdGF0ZS5wZW5kaW5nY2IrKyxzdGF0ZS5maW5hbENhbGxlZD0hMCxwcm9jZXNzLm5leHRUaWNrKGNhbGxGaW5hbCxzdHJlYW0sc3RhdGUpKSl9KHN0cmVhbSxzdGF0ZSksMD09PXN0YXRlLnBlbmRpbmdjYiYmKHN0YXRlLmZpbmlzaGVkPSEwLHN0cmVhbS5lbWl0KFwiZmluaXNoXCIpLHN0YXRlLmF1dG9EZXN0cm95KSkpe3ZhciByU3RhdGU9c3RyZWFtLl9yZWFkYWJsZVN0YXRlOyghclN0YXRlfHxyU3RhdGUuYXV0b0Rlc3Ryb3kmJnJTdGF0ZS5lbmRFbWl0dGVkKSYmc3RyZWFtLmRlc3Ryb3koKX1yZXR1cm4gbmVlZH1yZXF1aXJlKFwiaW5oZXJpdHNcIikoV3JpdGFibGUsU3RyZWFtKSxXcml0YWJsZVN0YXRlLnByb3RvdHlwZS5nZXRCdWZmZXI9ZnVuY3Rpb24oKXtmb3IodmFyIGN1cnJlbnQ9dGhpcy5idWZmZXJlZFJlcXVlc3Qsb3V0PVtdO2N1cnJlbnQ7KW91dC5wdXNoKGN1cnJlbnQpLGN1cnJlbnQ9Y3VycmVudC5uZXh0O3JldHVybiBvdXR9LGZ1bmN0aW9uKCl7dHJ5e09iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZVN0YXRlLnByb3RvdHlwZSxcImJ1ZmZlclwiLHtnZXQ6aW50ZXJuYWxVdGlsLmRlcHJlY2F0ZShmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEJ1ZmZlcigpfSxcIl93cml0YWJsZVN0YXRlLmJ1ZmZlciBpcyBkZXByZWNhdGVkLiBVc2UgX3dyaXRhYmxlU3RhdGUuZ2V0QnVmZmVyIGluc3RlYWQuXCIsXCJERVAwMDAzXCIpfSl9Y2F0Y2goXyl7fX0oKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5oYXNJbnN0YW5jZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgRnVuY3Rpb24ucHJvdG90eXBlW1N5bWJvbC5oYXNJbnN0YW5jZV0/KHJlYWxIYXNJbnN0YW5jZT1GdW5jdGlvbi5wcm90b3R5cGVbU3ltYm9sLmhhc0luc3RhbmNlXSxPYmplY3QuZGVmaW5lUHJvcGVydHkoV3JpdGFibGUsU3ltYm9sLmhhc0luc3RhbmNlLHt2YWx1ZTpmdW5jdGlvbihvYmplY3Qpe3JldHVybiEhcmVhbEhhc0luc3RhbmNlLmNhbGwodGhpcyxvYmplY3QpfHx0aGlzPT09V3JpdGFibGUmJihvYmplY3QmJm9iamVjdC5fd3JpdGFibGVTdGF0ZSBpbnN0YW5jZW9mIFdyaXRhYmxlU3RhdGUpfX0pKTpyZWFsSGFzSW5zdGFuY2U9ZnVuY3Rpb24ob2JqZWN0KXtyZXR1cm4gb2JqZWN0IGluc3RhbmNlb2YgdGhpc30sV3JpdGFibGUucHJvdG90eXBlLnBpcGU9ZnVuY3Rpb24oKXtlcnJvck9yRGVzdHJveSh0aGlzLG5ldyBFUlJfU1RSRUFNX0NBTk5PVF9QSVBFKX0sV3JpdGFibGUucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKGNodW5rLGVuY29kaW5nLGNiKXt2YXIgb2JqLHN0YXRlPXRoaXMuX3dyaXRhYmxlU3RhdGUscmV0PSExLGlzQnVmPSFzdGF0ZS5vYmplY3RNb2RlJiYob2JqPWNodW5rLEJ1ZmZlci5pc0J1ZmZlcihvYmopfHxvYmogaW5zdGFuY2VvZiBPdXJVaW50OEFycmF5KTtyZXR1cm4gaXNCdWYmJiFCdWZmZXIuaXNCdWZmZXIoY2h1bmspJiYoY2h1bms9ZnVuY3Rpb24oY2h1bmspe3JldHVybiBCdWZmZXIuZnJvbShjaHVuayl9KGNodW5rKSksXCJmdW5jdGlvblwiPT10eXBlb2YgZW5jb2RpbmcmJihjYj1lbmNvZGluZyxlbmNvZGluZz1udWxsKSxpc0J1Zj9lbmNvZGluZz1cImJ1ZmZlclwiOmVuY29kaW5nfHwoZW5jb2Rpbmc9c3RhdGUuZGVmYXVsdEVuY29kaW5nKSxcImZ1bmN0aW9uXCIhPXR5cGVvZiBjYiYmKGNiPW5vcCksc3RhdGUuZW5kaW5nP2Z1bmN0aW9uKHN0cmVhbSxjYil7dmFyIGVyPW5ldyBFUlJfU1RSRUFNX1dSSVRFX0FGVEVSX0VORDtlcnJvck9yRGVzdHJveShzdHJlYW0sZXIpLHByb2Nlc3MubmV4dFRpY2soY2IsZXIpfSh0aGlzLGNiKTooaXNCdWZ8fGZ1bmN0aW9uKHN0cmVhbSxzdGF0ZSxjaHVuayxjYil7dmFyIGVyO3JldHVybiBudWxsPT09Y2h1bms/ZXI9bmV3IEVSUl9TVFJFQU1fTlVMTF9WQUxVRVM6XCJzdHJpbmdcIj09dHlwZW9mIGNodW5rfHxzdGF0ZS5vYmplY3RNb2RlfHwoZXI9bmV3IEVSUl9JTlZBTElEX0FSR19UWVBFKFwiY2h1bmtcIixbXCJzdHJpbmdcIixcIkJ1ZmZlclwiXSxjaHVuaykpLCFlcnx8KGVycm9yT3JEZXN0cm95KHN0cmVhbSxlcikscHJvY2Vzcy5uZXh0VGljayhjYixlciksITEpfSh0aGlzLHN0YXRlLGNodW5rLGNiKSkmJihzdGF0ZS5wZW5kaW5nY2IrKyxyZXQ9ZnVuY3Rpb24oc3RyZWFtLHN0YXRlLGlzQnVmLGNodW5rLGVuY29kaW5nLGNiKXtpZighaXNCdWYpe3ZhciBuZXdDaHVuaz1mdW5jdGlvbihzdGF0ZSxjaHVuayxlbmNvZGluZyl7c3RhdGUub2JqZWN0TW9kZXx8ITE9PT1zdGF0ZS5kZWNvZGVTdHJpbmdzfHxcInN0cmluZ1wiIT10eXBlb2YgY2h1bmt8fChjaHVuaz1CdWZmZXIuZnJvbShjaHVuayxlbmNvZGluZykpO3JldHVybiBjaHVua30oc3RhdGUsY2h1bmssZW5jb2RpbmcpO2NodW5rIT09bmV3Q2h1bmsmJihpc0J1Zj0hMCxlbmNvZGluZz1cImJ1ZmZlclwiLGNodW5rPW5ld0NodW5rKX12YXIgbGVuPXN0YXRlLm9iamVjdE1vZGU/MTpjaHVuay5sZW5ndGg7c3RhdGUubGVuZ3RoKz1sZW47dmFyIHJldD1zdGF0ZS5sZW5ndGg8c3RhdGUuaGlnaFdhdGVyTWFyaztyZXR8fChzdGF0ZS5uZWVkRHJhaW49ITApO2lmKHN0YXRlLndyaXRpbmd8fHN0YXRlLmNvcmtlZCl7dmFyIGxhc3Q9c3RhdGUubGFzdEJ1ZmZlcmVkUmVxdWVzdDtzdGF0ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0PXtjaHVuazpjaHVuayxlbmNvZGluZzplbmNvZGluZyxpc0J1Zjppc0J1ZixjYWxsYmFjazpjYixuZXh0Om51bGx9LGxhc3Q/bGFzdC5uZXh0PXN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3Q6c3RhdGUuYnVmZmVyZWRSZXF1ZXN0PXN0YXRlLmxhc3RCdWZmZXJlZFJlcXVlc3Qsc3RhdGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQrPTF9ZWxzZSBkb1dyaXRlKHN0cmVhbSxzdGF0ZSwhMSxsZW4sY2h1bmssZW5jb2RpbmcsY2IpO3JldHVybiByZXR9KHRoaXMsc3RhdGUsaXNCdWYsY2h1bmssZW5jb2RpbmcsY2IpKSxyZXR9LFdyaXRhYmxlLnByb3RvdHlwZS5jb3JrPWZ1bmN0aW9uKCl7dGhpcy5fd3JpdGFibGVTdGF0ZS5jb3JrZWQrK30sV3JpdGFibGUucHJvdG90eXBlLnVuY29yaz1mdW5jdGlvbigpe3ZhciBzdGF0ZT10aGlzLl93cml0YWJsZVN0YXRlO3N0YXRlLmNvcmtlZCYmKHN0YXRlLmNvcmtlZC0tLHN0YXRlLndyaXRpbmd8fHN0YXRlLmNvcmtlZHx8c3RhdGUuYnVmZmVyUHJvY2Vzc2luZ3x8IXN0YXRlLmJ1ZmZlcmVkUmVxdWVzdHx8Y2xlYXJCdWZmZXIodGhpcyxzdGF0ZSkpfSxXcml0YWJsZS5wcm90b3R5cGUuc2V0RGVmYXVsdEVuY29kaW5nPWZ1bmN0aW9uKGVuY29kaW5nKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZW5jb2RpbmcmJihlbmNvZGluZz1lbmNvZGluZy50b0xvd2VyQ2FzZSgpKSwhKFtcImhleFwiLFwidXRmOFwiLFwidXRmLThcIixcImFzY2lpXCIsXCJiaW5hcnlcIixcImJhc2U2NFwiLFwidWNzMlwiLFwidWNzLTJcIixcInV0ZjE2bGVcIixcInV0Zi0xNmxlXCIsXCJyYXdcIl0uaW5kZXhPZigoZW5jb2RpbmcrXCJcIikudG9Mb3dlckNhc2UoKSk+LTEpKXRocm93IG5ldyBFUlJfVU5LTk9XTl9FTkNPRElORyhlbmNvZGluZyk7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVmYXVsdEVuY29kaW5nPWVuY29kaW5nLHRoaXN9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZS5wcm90b3R5cGUsXCJ3cml0YWJsZUJ1ZmZlclwiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlJiZ0aGlzLl93cml0YWJsZVN0YXRlLmdldEJ1ZmZlcigpfX0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZS5wcm90b3R5cGUsXCJ3cml0YWJsZUhpZ2hXYXRlck1hcmtcIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrfX0pLFdyaXRhYmxlLnByb3RvdHlwZS5fd3JpdGU9ZnVuY3Rpb24oY2h1bmssZW5jb2RpbmcsY2Ipe2NiKG5ldyBFUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRChcIl93cml0ZSgpXCIpKX0sV3JpdGFibGUucHJvdG90eXBlLl93cml0ZXY9bnVsbCxXcml0YWJsZS5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKGNodW5rLGVuY29kaW5nLGNiKXt2YXIgc3RhdGU9dGhpcy5fd3JpdGFibGVTdGF0ZTtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBjaHVuaz8oY2I9Y2h1bmssY2h1bms9bnVsbCxlbmNvZGluZz1udWxsKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBlbmNvZGluZyYmKGNiPWVuY29kaW5nLGVuY29kaW5nPW51bGwpLG51bGwhPWNodW5rJiZ0aGlzLndyaXRlKGNodW5rLGVuY29kaW5nKSxzdGF0ZS5jb3JrZWQmJihzdGF0ZS5jb3JrZWQ9MSx0aGlzLnVuY29yaygpKSxzdGF0ZS5lbmRpbmd8fGZ1bmN0aW9uKHN0cmVhbSxzdGF0ZSxjYil7c3RhdGUuZW5kaW5nPSEwLGZpbmlzaE1heWJlKHN0cmVhbSxzdGF0ZSksY2ImJihzdGF0ZS5maW5pc2hlZD9wcm9jZXNzLm5leHRUaWNrKGNiKTpzdHJlYW0ub25jZShcImZpbmlzaFwiLGNiKSk7c3RhdGUuZW5kZWQ9ITAsc3RyZWFtLndyaXRhYmxlPSExfSh0aGlzLHN0YXRlLGNiKSx0aGlzfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoV3JpdGFibGUucHJvdG90eXBlLFwid3JpdGFibGVMZW5ndGhcIix7ZW51bWVyYWJsZTohMSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5sZW5ndGh9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KFdyaXRhYmxlLnByb3RvdHlwZSxcImRlc3Ryb3llZFwiLHtlbnVtZXJhYmxlOiExLGdldDpmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLl93cml0YWJsZVN0YXRlJiZ0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZH0sc2V0OmZ1bmN0aW9uKHZhbHVlKXt0aGlzLl93cml0YWJsZVN0YXRlJiYodGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ9dmFsdWUpfX0pLFdyaXRhYmxlLnByb3RvdHlwZS5kZXN0cm95PWRlc3Ryb3lJbXBsLmRlc3Ryb3ksV3JpdGFibGUucHJvdG90eXBlLl91bmRlc3Ryb3k9ZGVzdHJveUltcGwudW5kZXN0cm95LFdyaXRhYmxlLnByb3RvdHlwZS5fZGVzdHJveT1mdW5jdGlvbihlcnIsY2Ipe2NiKGVycil9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSWw5emRISmxZVzFmZDNKcGRHRmliR1V1YW5NaVhTd2libUZ0WlhNaU9sc2lRMjl5YTJWa1VtVnhkV1Z6ZENJc0luTjBZWFJsSWl3aVgzUm9hWE1pTENKMGFHbHpJaXdpYm1WNGRDSXNJbVZ1ZEhKNUlpd2labWx1YVhOb0lpd2lZMjl5YTFKbGNTSXNJbVZ5Y2lJc0ltTmlJaXdpWTJGc2JHSmhZMnNpTENKd1pXNWthVzVuWTJJaUxDSmpiM0pyWldSU1pYRjFaWE4wYzBaeVpXVWlMQ0p2YmtOdmNtdGxaRVpwYm1semFDSXNJa1IxY0d4bGVDSXNJbTF2WkhWc1pTSXNJbVY0Y0c5eWRITWlMQ0pYY21sMFlXSnNaU0lzSWxkeWFYUmhZbXhsVTNSaGRHVWlMQ0pwYm5SbGNtNWhiRlYwYVd3aUxDSmtaWEJ5WldOaGRHVWlMQ0p5WlhGMWFYSmxJaXdpVTNSeVpXRnRJaXdpUW5WbVptVnlJaXdpVDNWeVZXbHVkRGhCY25KaGVTSXNJbWRzYjJKaGJDSXNJbFZwYm5RNFFYSnlZWGtpTENKeVpXRnNTR0Z6U1c1emRHRnVZMlVpTENKa1pYTjBjbTk1U1cxd2JDSXNJbWRsZEVocFoyaFhZWFJsY2sxaGNtc2lMQ0pmY21WeGRXbHlaU1JqYjJSbGN5SXNJbU52WkdWeklpd2lSVkpTWDBsT1ZrRk1TVVJmUVZKSFgxUlpVRVVpTENKRlVsSmZUVVZVU0U5RVgwNVBWRjlKVFZCTVJVMUZUbFJGUkNJc0lrVlNVbDlOVlV4VVNWQk1SVjlEUVV4TVFrRkRTeUlzSWtWU1VsOVRWRkpGUVUxZlEwRk9UazlVWDFCSlVFVWlMQ0pGVWxKZlUxUlNSVUZOWDBSRlUxUlNUMWxGUkNJc0lrVlNVbDlUVkZKRlFVMWZUbFZNVEY5V1FVeFZSVk1pTENKRlVsSmZVMVJTUlVGTlgxZFNTVlJGWDBGR1ZFVlNYMFZPUkNJc0lrVlNVbDlWVGt0T1QxZE9YMFZPUTA5RVNVNUhJaXdpWlhKeWIzSlBja1JsYzNSeWIza2lMQ0p1YjNBaUxDSnZjSFJwYjI1eklpd2ljM1J5WldGdElpd2lhWE5FZFhCc1pYZ2lMQ0p2WW1wbFkzUk5iMlJsSWl3aWQzSnBkR0ZpYkdWUFltcGxZM1JOYjJSbElpd2lhR2xuYUZkaGRHVnlUV0Z5YXlJc0ltWnBibUZzUTJGc2JHVmtJaXdpYm1WbFpFUnlZV2x1SWl3aVpXNWthVzVuSWl3aVpXNWtaV1FpTENKbWFXNXBjMmhsWkNJc0ltUmxjM1J5YjNsbFpDSXNJbTV2UkdWamIyUmxJaXdpWkdWamIyUmxVM1J5YVc1bmN5SXNJbVJsWm1GMWJIUkZibU52WkdsdVp5SXNJbXhsYm1kMGFDSXNJbmR5YVhScGJtY2lMQ0pqYjNKclpXUWlMQ0p6ZVc1aklpd2lZblZtWm1WeVVISnZZMlZ6YzJsdVp5SXNJbTl1ZDNKcGRHVWlMQ0psY2lJc0lsOTNjbWwwWVdKc1pWTjBZWFJsSWl3aWQzSnBkR1ZqWWlJc0luZHlhWFJsYkdWdUlpd2liMjUzY21sMFpWTjBZWFJsVlhCa1lYUmxJaXdpY0hKdlkyVnpjeUlzSW01bGVIUlVhV05ySWl3aVptbHVhWE5vVFdGNVltVWlMQ0psY25KdmNrVnRhWFIwWldRaUxDSnZibmR5YVhSbFJYSnliM0lpTENKdVpXVmtSbWx1YVhOb0lpd2lZblZtWm1WeVpXUlNaWEYxWlhOMElpd2lZMnhsWVhKQ2RXWm1aWElpTENKaFpuUmxjbGR5YVhSbElpd2liR0Z6ZEVKMVptWmxjbVZrVW1WeGRXVnpkQ0lzSW5CeVpXWnBibWx6YUdWa0lpd2laVzFwZEVOc2IzTmxJaXdpWVhWMGIwUmxjM1J5YjNraUxDSmlkV1ptWlhKbFpGSmxjWFZsYzNSRGIzVnVkQ0lzSW1OaGJHd2lMQ0ozY21sMFlXSnNaU0lzSW5keWFYUmxJaXdpWDNkeWFYUmxJaXdpZDNKcGRHVjJJaXdpWDNkeWFYUmxkaUlzSW1SbGMzUnliM2tpTENKZlpHVnpkSEp2ZVNJc0ltWnBibUZzSWl3aVgyWnBibUZzSWl3aVpHOVhjbWwwWlNJc0lteGxiaUlzSW1Ob2RXNXJJaXdpWlc1amIyUnBibWNpTENKbGJXbDBJaXdpYjI1M2NtbDBaVVJ5WVdsdUlpd2liQ0lzSW1KMVptWmxjaUlzSWtGeWNtRjVJaXdpYUc5c1pHVnlJaXdpWTI5MWJuUWlMQ0poYkd4Q2RXWm1aWEp6SWl3aWFYTkNkV1lpTENKallXeHNSbWx1WVd3aUxDSnVaV1ZrSWl3aWNISmxabWx1YVhOb0lpd2ljbE4wWVhSbElpd2lYM0psWVdSaFlteGxVM1JoZEdVaUxDSmxibVJGYldsMGRHVmtJaXdpY0hKdmRHOTBlWEJsSWl3aVoyVjBRblZtWm1WeUlpd2lZM1Z5Y21WdWRDSXNJbTkxZENJc0luQjFjMmdpTENKUFltcGxZM1FpTENKa1pXWnBibVZRY205d1pYSjBlU0lzSW1kbGRDSXNJbDhpTENKVGVXMWliMndpTENKb1lYTkpibk4wWVc1alpTSXNJa1oxYm1OMGFXOXVJaXdpZG1Gc2RXVWlMQ0p2WW1wbFkzUWlMQ0p3YVhCbElpd2liMkpxSWl3aWNtVjBJaXdpYVhOQ2RXWm1aWElpTENKbWNtOXRJaXdpWDNWcGJuUTRRWEp5WVhsVWIwSjFabVpsY2lJc0luZHlhWFJsUVdaMFpYSkZibVFpTENKMllXeHBaRU5vZFc1cklpd2libVYzUTJoMWJtc2lMQ0prWldOdlpHVkRhSFZ1YXlJc0lteGhjM1FpTENKM2NtbDBaVTl5UW5WbVptVnlJaXdpWTI5eWF5SXNJblZ1WTI5eWF5SXNJbk5sZEVSbFptRjFiSFJGYm1OdlpHbHVaeUlzSW5SdlRHOTNaWEpEWVhObElpd2lhVzVrWlhoUFppSXNJbVZ1ZFcxbGNtRmliR1VpTENKbGJtUWlMQ0p2Ym1ObElpd2laVzVrVjNKcGRHRmliR1VpTENKMWJtUmxabWx1WldRaUxDSnpaWFFpTENKZmRXNWtaWE4wY205NUlpd2lkVzVrWlhOMGNtOTVJbDBzSW0xaGNIQnBibWR6SWpvaVFVRjFRa0VzWVVGalFTeFRRVUZUUVN4alFVRmpReXhQUVVOeVFpeEpRVUZKUXl4TlFVRlJReXhMUVVWYVFTeExRVUZMUXl4TFFVRlBMRXRCUTFwRUxFdEJRVXRGTEUxQlFWRXNTMEZGWWtZc1MwRkJTMGNzVDBGQlV5eFpRV2x0UW1oQ0xGTkJRWGRDUXl4UlFVRlRUaXhOUVVGUFR5eExRVU4wUXl4SlFVRkpTQ3hOUVVGUlJTeFJRVUZSUml4TlFVTndRa1VzVVVGQlVVWXNUVUZCVVN4TFFVVm9RaXhMUVVGUFFTeFBRVUZQTEVOQlExb3NTVUZCU1Vrc1IwRkJTMG9zVFVGQlRVc3NVMEZEWmxRc1RVRkJUVlVzV1VGRFRrWXNSMEZCUjBRc1MwRkRTRWdzVFVGQlVVRXNUVUZCVFVRc1MwRkphRUpJTEUxQlFVMVhMRzFDUVVGdFFsSXNTMEZCVDBjc1VVRTFiVUk1UWswc1EwRkJaVmdzVFVGQlQwUXNVVUZSTVVJc1NVRkJTV0VzVDBFelFrcERMRTlCUVU5RExGRkJRVlZETEZOQk9FSnFRa0VzVTBGQlUwTXNZMEZCWjBKQkxHTkJSM3BDTEVsQlFVbERMR0ZCUVdVc1EwRkRha0pETEZWQlFWZERMRkZCUVZFc2JVSkJUV3BDUXl4UFFVRlRSQ3hSUVVGUkxEWkNRVWxxUWtVc1QwRkJVMFlzVVVGQlVTeFZRVUZWUlN4UFFVVXpRa01zWTBGQlowSkRMRTlCUVU5RExGbEJRV01zWVVGVmVrTXNTVUZyU1VsRExHZENRV3hKUVVNc1dVRkJZMUFzVVVGQlVTdzRRa0ZIZEVKUkxHbENRVVJYVWl4UlFVRlJMRFJDUVVOVFVTeHBRa0ZGTlVKRExHVkJRV2xDVkN4UlFVRlJMR0ZCUVdGVkxFMUJRM1JEUXl4eFFrRkJkVUpHTEdWQlFXVkZMSEZDUVVOMFEwTXNNa0pCUVRaQ1NDeGxRVUZsUnl3eVFrRkROVU5ETEhOQ1FVRjNRa29zWlVGQlpVa3NjMEpCUTNaRFF5eDFRa0ZCZVVKTUxHVkJRV1ZMTEhWQ1FVTjRRME1zY1VKQlFYVkNUaXhsUVVGbFRTeHhRa0ZEZEVORExIVkNRVUY1UWxBc1pVRkJaVThzZFVKQlEzaERReXd5UWtGQk5rSlNMR1ZCUVdWUkxESkNRVU0xUTBNc2NVSkJRWFZDVkN4bFFVRmxVeXh4UWtGRmRFTkRMR1ZCUVdsQ1dpeFpRVUZaV1N4bFFVbHFReXhUUVVGVFF5eFBRVVZVTEZOQlFWTjJRaXhqUVVGamQwSXNVVUZCVTBNc1QwRkJVVU1zVlVGRGRFTTVRaXhQUVVGVFFTeFJRVUZWVHl4UlFVRlJMRzlDUVVNelFuRkNMRkZCUVZWQkxGTkJRVmNzUjBGTlJ5eHJRa0ZCWWtVc1YwRkJkMEpCTEZOQlFWZEVMR3RDUVVGclFqZENMRkZCUjJoRldDeExRVUZMTUVNc1lVRkJaVWdzVVVGQlVVY3NWMEZEZUVKRUxGZEJRVlY2UXl4TFFVRkxNRU1zVjBGQllURkRMRXRCUVVzd1F5eGpRVUZuUWtnc1VVRkJVVWtzYjBKQlNUZEVNME1zUzBGQlN6UkRMR05CUVdkQ2JFSXNhVUpCUVdsQ01VSXNTMEZCVFhWRExGRkJRVk1zZDBKQlFYbENSU3hWUVVVNVJYcERMRXRCUVVzMlF5eGhRVUZqTEVWQlJXNUNOME1zUzBGQlN6aERMRmRCUVZrc1JVRkZha0k1UXl4TFFVRkxLME1zVVVGQlV5eEZRVVZrTDBNc1MwRkJTMmRFTEU5QlFWRXNSVUZGWW1oRUxFdEJRVXRwUkN4VlFVRlhMRVZCUldoQ2FrUXNTMEZCUzJ0RUxGZEJRVmtzUlVGSmFrSXNTVUZCU1VNc1ZVRkJjVU1zU1VGQk1VSmFMRkZCUVZGaExHTkJRM1pDY0VRc1MwRkJTMjlFTEdWQlFXbENSQ3hUUVVsMFFtNUVMRXRCUVV0eFJDeG5Ra0ZCYTBKa0xGRkJRVkZqTEdsQ1FVRnRRaXhQUVVsc1JISkVMRXRCUVV0elJDeFBRVUZUTEVWQlJXUjBSQ3hMUVVGTGRVUXNVMEZCVlN4RlFVVm1ka1FzUzBGQlMzZEVMRTlCUVZNc1JVRkxaSGhFTEV0QlFVdDVSQ3hOUVVGUExFVkJTVnA2UkN4TFFVRkxNRVFzYTBKQlFXMUNMRVZCUlhoQ01VUXNTMEZCU3pKRUxGRkJRVlVzVTBGQlZVTXNTMEUyVWpOQ0xGTkJRV2xDY0VJc1QwRkJVVzlDTEVsQlEzWkNMRWxCUVVrNVJDeE5RVUZSTUVNc1QwRkJUM0ZDTEdWQlEyWktMRXRCUVU4elJDeE5RVUZOTWtRc1MwRkRZbTVFTEVkQlFVdFNMRTFCUVUxblJTeFJRVU5tTEVkQlFXdENMRzFDUVVGUWVFUXNSMEZCYlVJc1RVRkJUU3hKUVVGSmVVSXNjMEpCUlhoRExFZEJZa1lzVTBGQk5FSnFReXhQUVVNeFFrRXNUVUZCVFhsRUxGTkJRVlVzUlVGRGFFSjZSQ3hOUVVGTlowVXNVVUZCVlN4TFFVTm9RbWhGTEUxQlFVMTNSQ3hSUVVGVmVFUXNUVUZCVFdsRkxGTkJRM1JDYWtVc1RVRkJUV2xGTEZOQlFWY3NSVUZSYWtKRExFTkJRVzFDYkVVc1QwRkRaamhFTEVsQmNrTk9MRk5CUVhOQ2NFSXNUMEZCVVRGRExFMUJRVTh5UkN4TFFVRk5SeXhIUVVGSmRFUXNUVUZETTBOU0xFMUJRVTFWTEZWQlJVcHBSQ3hOUVVkR1VTeFJRVUZSUXl4VFFVRlROVVFzUjBGQlNYTkVMRWxCUjNKQ1N5eFJRVUZSUXl4VFFVRlRReXhaUVVGaE0wSXNUMEZCVVRGRExFOUJRM1JETUVNc1QwRkJUM0ZDTEdWQlFXVlBMR05CUVdVc1JVRkRja012UWl4bFFVRmxSeXhQUVVGUmIwSXNUVUZKZGtKMFJDeEhRVUZIYzBRc1NVRkRTSEJDTEU5QlFVOXhRaXhsUVVGbFR5eGpRVUZsTEVWQlEzSkRMMElzWlVGQlpVY3NUMEZCVVc5Q0xFbEJSM1pDVHl4WlFVRlpNMElzVDBGQlVURkRMRkZCYVVKa2RVVXNRMEZCWVRkQ0xFOUJRVkV4UXl4TlFVRlBNa1FzUzBGQlRVY3NSMEZCU1hSRUxGRkJRVk1zUTBGRmNrUXNTVUZCU1RKRExGTkJRVmR4UWl4WFFVRlhlRVVzVVVGQlZUQkRMRTlCUVU5VkxGVkJSWFJEUkN4VlFVRmhia1FzVFVGQlRUQkVMRkZCUVZjeFJDeE5RVUZOTkVRc2JVSkJRVzlDTlVRc1RVRkJUWGxGTEdsQ1FVTnFSVU1zV1VGQldXaERMRTlCUVZFeFF5eFBRVWRzUWpKRUxFdEJRMFpSTEZGQlFWRkRMRk5CUVZOUExGZEJRVmxxUXl4UFFVRlJNVU1zVFVGQlQyMUVMRk5CUVZVelF5eEpRVVYwUkcxRkxGZEJRVmRxUXl4UFFVRlJNVU1zVFVGQlQyMUVMRk5CUVZVelF5eExRVGRUZEVOeFJDeERRVUZSYmtJc1QwRkJVVzlDTEV0QlNXeENOVVFzUzBGQlN6aEVMRkZCUVZVc1MwRkZaamxFTEV0QlFVc3JSQ3hUUVVGWExFVkJRMmhDTDBRc1MwRkJTM1ZGTEdkQ1FVRnJRaXhMUVVOMlFuWkZMRXRCUVVzd1JTeHZRa0ZCYzBJc1MwRkhNMEl4UlN4TFFVRkxVU3hWUVVGWkxFVkJSMnBDVWl4TFFVRkxNa1VzWVVGQll5eEZRVVZ1UWpORkxFdEJRVXR2UlN4alFVRmxMRVZCUlhCQ2NFVXNTMEZCU3pSRkxGZEJRV3RETEVsQlFYUkNja01zVVVGQlVYRkRMRlZCUlhwQ05VVXNTMEZCU3paRkxHTkJRV2RDZEVNc1VVRkJVWE5ETEZsQlJUZENOMFVzUzBGQlN6aEZMSEZDUVVGMVFpeEZRVWMxUWpsRkxFdEJRVXRUTEcxQ1FVRnhRaXhKUVVGSldpeGpRVUZqUnl4TlFUUkRPVU1zVTBGQlUyTXNVMEZCVTNsQ0xGTkJWV2hDTEVsQlFVbEZMRk5CUVZkNlF5eG5Ra0ZVWmxjc1QwRkJVMEVzVVVGQlZVOHNVVUZCVVN4eFFrRlZNMElzU1VGQlMzVkNMRmRCUVdGcVFpeG5Ra0ZCWjBKMVJDeExRVUZMYWtVc1UwRkJWV1FzVFVGQlR5eFBRVUZQTEVsQlFVbGpMRk5CUVZONVFpeFRRVU0xUlhaRExFdEJRVXMyUkN4bFFVRnBRaXhKUVVGSk9VTXNZMEZCWTNkQ0xGRkJRVk4yUXl4TFFVRk5lVU1zVlVGRmRrUjZReXhMUVVGTFowWXNWVUZCVnl4RlFVVmFla01zVlVGRE1rSXNiVUpCUVd4Q1FTeFJRVUZSTUVNc1VVRkJjMEpxUml4TFFVRkxhMFlzVDBGQlV6TkRMRkZCUVZFd1F5eFBRVU5xUXl4dFFrRkJia0l4UXl4UlFVRlJORU1zVTBGQmRVSnVSaXhMUVVGTGIwWXNVVUZCVlRkRExGRkJRVkUwUXl4UlFVTnNReXh0UWtGQmNFSTFReXhSUVVGUk9FTXNWVUZCZDBKeVJpeExRVUZMYzBZc1UwRkJWeTlETEZGQlFWRTRReXhUUVVOMFF5eHRRa0ZCYkVJNVF5eFJRVUZSWjBRc1VVRkJjMEoyUml4TFFVRkxkMFlzVDBGQlUycEVMRkZCUVZGblJDeFJRVWRxUlhCRkxFOUJRVTgwUkN4TFFVRkxMMFVzVFVGM1NtUXNVMEZCVTNsR0xGRkJRVkZxUkN4UFFVRlJNVU1zVFVGQlQzRkdMRTlCUVZGUExFbEJRVXRETEUxQlFVOURMRk5CUVZWMFJpeEpRVU0xUkZJc1RVRkJUV2xGTEZOQlFWY3lRaXhKUVVOcVFqVkdMRTFCUVUxblJTeFJRVUZWZUVRc1IwRkRhRUpTTEUxQlFVMTVSQ3hUUVVGVkxFVkJRMmhDZWtRc1RVRkJUVEpFTEUxQlFVOHNSVUZEVkRORUxFMUJRVTF2UkN4VlFVRlhjRVFzVFVGQlRUWkVMRkZCUVZFc1NVRkJTVEZDTEhGQ1FVRnhRaXhWUVVGdFFtdEVMRTlCUVZFelF5eFBRVUZQTkVNc1VVRkJVVThzVFVGQlR6ZEdMRTFCUVUwMlJDeFRRVUZqYmtJc1QwRkJUekJETEU5QlFVOVRMRTFCUVU5RExGTkJRVlU1Uml4TlFVRk5Oa1FzVTBGRGRFczNSQ3hOUVVGTk1rUXNUVUZCVHl4RlFYZEVaaXhUUVVGVFowSXNWMEZCVjJwRExFOUJRVkV4UXl4TlFVRlBiVVFzVTBGQlZUTkRMRWxCUTNSRE1rTXNWVUZUVUN4VFFVRnpRbFFzVDBGQlVURkRMRTlCUTFBc1NVRkJha0pCTEUxQlFVMTNSQ3hSUVVGblFuaEVMRTFCUVUxblJDeFpRVU01UW1oRUxFMUJRVTFuUkN4WFFVRlpMRVZCUTJ4Q1RpeFBRVUZQY1VRc1MwRkJTeXhWUVZwRFF5eERRVUZoZEVRc1QwRkJVVEZETEU5QlEzQkRRU3hOUVVGTlZTeFpRVU5PUml4TFFVTkJOa1FzV1VGQldUTkNMRTlCUVZFeFF5eFBRV04wUWl4VFFVRlRNRVVzV1VGQldXaERMRTlCUVZFeFF5eFBRVU16UWtFc1RVRkJUVFJFTEd0Q1FVRnRRaXhGUVVONlFpeEpRVUZKZUVRc1RVRkJVVW9zVFVGQlRYbEZMR2RDUVVWc1FpeEhRVUZKTDBJc1QwRkJUelJETEZOQlFWZHNSaXhQUVVGVFFTeE5RVUZOUkN4TFFVRk5MRU5CUlhwRExFbEJRVWs0Uml4RlFVRkpha2NzVFVGQlRXZEdMSEZDUVVOV2EwSXNUMEZCVXl4SlFVRkpReXhOUVVGTlJpeEhRVU51UWtjc1QwRkJVM0JITEUxQlFVMVhMRzFDUVVOdVFubEdMRTlCUVU5b1J5eE5RVUZSUVN4TlFVbG1MRWxCU0VFc1NVRkJTV2xITEUxQlFWRXNSVUZEVWtNc1dVRkJZU3hGUVVWV2JFY3NUMEZEVERoR0xFOUJRVTlITEU5QlFWTnFSeXhOUVVOWVFTeE5RVUZOYlVjc1VVRkJUMFFzV1VGQllTeEhRVU12UW14SExFMUJRVkZCTEUxQlFVMUVMRXRCUTJSclJ5eFBRVUZUTEVWQlIxaElMRTlCUVU5SkxGZEJRV0ZCTEZkQlEzQkNXQ3hSUVVGUmFrUXNUMEZCVVRGRExFOUJRVThzUlVGQlRVRXNUVUZCVFhkRUxFOUJRVkV3UXl4UFFVRlJMRWRCUVVsRkxFOUJRVTh2Uml4UlFVYzVSRXdzVFVGQlRWVXNXVUZEVGxZc1RVRkJUVFJGTEc5Q1FVRnpRaXhMUVVWNFFuZENMRTlCUVU5cVJ5eE5RVU5VU0N4TlFVRk5WeXh0UWtGQmNVSjVSaXhQUVVGUGFrY3NTMEZEYkVOcFJ5eFBRVUZQYWtjc1MwRkJUeXhOUVVWa1NDeE5RVUZOVnl4dFFrRkJjVUlzU1VGQlNWb3NZMEZCWTBNc1QwRkhMME5CTEUxQlFVMW5SaXh4UWtGQmRVSXNUVUZEZUVJc1EwRkZUQ3hMUVVGUE5VVXNUMEZCVHl4RFFVTmFMRWxCUVVsNVJpeE5RVUZSZWtZc1RVRkJUWGxHTEUxQlEyUkRMRk5CUVZjeFJpeE5RVUZOTUVZc1UwRkRha0owUml4SFFVRkxTaXhOUVVGTlN5eFRRVk5tTEVkQlVFRnJSaXhSUVVGUmFrUXNUMEZCVVRGRExFOUJRVThzUlVGRVlrRXNUVUZCVFRSRExGZEJRV0VzUlVGQlNXbEVMRTFCUVUxeVF5eFBRVU5LY1VNc1RVRkJUME1zVTBGQlZYUkdMRWxCUTNCRVNpeE5RVUZSUVN4TlFVRk5SQ3hMUVVOa1NDeE5RVUZOWjBZc2RVSkJTMFpvUml4TlFVRk5lVVFzVVVGRFVpeE5RVWxWTEU5QlFWWnlSQ3hSUVVGblFrb3NUVUZCVFRSRkxHOUNRVUZ6UWl4TlFVZHNSRFZGTEUxQlFVMTVSU3huUWtGQmEwSnlSU3hOUVVONFFrb3NUVUZCVFRSRUxHdENRVUZ0UWl4RlFUSkRNMElzVTBGQlUxa3NWMEZCVjNoRkxFOUJRMnhDTEU5QlFVOUJMRTFCUVUxcFJDeFJRVUV5UWl4SlFVRnFRbXBFTEUxQlFVMTNSQ3hSUVVFd1F5eFBRVUV4UW5oRUxFMUJRVTE1UlN4clFrRkJOa0o2UlN4TlFVRk5iVVFzVjBGQllXNUVMRTFCUVUxNVJDeFJRVWN6Unl4VFFVRlRLME1zVlVGQlZUbEVMRTlCUVZFeFF5eFBRVU42UWpCRExFOUJRVTluUkN4UFFVRlBMRk5CUVZWdVJpeExRVU4wUWxBc1RVRkJUVlVzV1VGRlJrZ3NTMEZEUm1kRExHVkJRV1ZITEU5QlFWRnVReXhMUVVkNlFsQXNUVUZCVFRaRkxHRkJRV01zUlVGRGNFSnVReXhQUVVGUGNVUXNTMEZCU3l4aFFVTmFNVUlzV1VGQldUTkNMRTlCUVZFeFF5eFRRV2xDZUVJc1UwRkJVM0ZGTEZsQlFWa3pRaXhQUVVGUk1VTXNUMEZETTBJc1NVRkJTWGxITEV0QlFVOXFReXhYUVVGWGVFVXNUMEZGZEVJc1IwRkJTWGxITEU5QmFFSk9MRk5CUVcxQ0wwUXNUMEZCVVRGRExFOUJRM0JDUVN4TlFVRk5Oa1VzWVVGQlowSTNSU3hOUVVGTkswTXNZMEZEUml4dFFrRkJiRUpNTEU5QlFVOW5SQ3hSUVVFd1FqRkdMRTFCUVUxdlJDeFhRVXRvUkhCRUxFMUJRVTAyUlN4aFFVRmpMRVZCUTNCQ2JrTXNUMEZCVDNGRUxFdEJRVXNzWlVGTVdpOUdMRTFCUVUxVkxGbEJRMDVXTEUxQlFVMHJReXhoUVVGakxFVkJRM0JDYjBJc1VVRkJVVU1zVTBGQlUyOURMRlZCUVZjNVJDeFBRVUZSTVVNc1UwRlpkRU13Unl4RFFVRlZhRVVzVDBGQlVURkRMRTlCUlUwc1NVRkJjRUpCTEUxQlFVMVZMRmxCUTFKV0xFMUJRVTF0UkN4VlFVRlhMRVZCUTJwQ1ZDeFBRVUZQY1VRc1MwRkJTeXhWUVVWU0wwWXNUVUZCVFN0RkxHTkJRV0VzUTBGSGNrSXNTVUZCU1RSQ0xFOUJRVk5xUlN4UFFVRlBhMFVzYVVKQlJXWkVMRkZCUVZWQkxFOUJRVTgxUWl4aFFVRmxORUlzVDBGQlQwVXNZVUZETVVOdVJTeFBRVUZQTmtNc1ZVRk5aaXhQUVVGUGEwSXNTMEV6YUVKVWNrWXNVVUZCVVN4WFFVRlNRU3hEUVVGdlFrb3NVMEZCVlVzc1VVRjVSamxDU2l4alFVRmpOa1lzVlVGQlZVTXNWVUZCV1N4WFFVbHNReXhKUVVoQkxFbEJRVWxETEZGQlFWVTVSeXhMUVVGTGRVVXNaMEpCUTJaM1F5eEpRVUZOTEVkQlJVaEVMRk5CUTB4RExFbEJRVWxETEV0QlFVdEdMRk5CUTFSQkxGRkJRVlZCTEZGQlFWRTNSeXhMUVVkd1FpeFBRVUZQT0Vjc1MwRkhWQ3hYUVVORkxFbEJRMFZGTEU5QlFVOURMR1ZCUVdWdVJ5eGpRVUZqTmtZc1ZVRkJWeXhUUVVGVkxFTkJRM1pFVHl4SlFVRkxia2NzWVVGQllVTXNWVUZCVlN4WFFVTXhRaXhQUVVGUGFrSXNTMEZCU3paSExHRkJRMWdzTmtWQlFXMUdMR0ZCUlhoR0xFMUJRVTlQTEV0QlVGZ3NSMEZqYzBJc2JVSkJRVmhETEZGQlFYbENRU3hQUVVGUFF5eGhRVUZwUlN4dFFrRkJNME5ETEZOQlFWTllMRlZCUVZWVExFOUJRVTlETEdOQlEzcEdPVVlzWjBKQlFXdENLMFlzVTBGQlUxZ3NWVUZCVlZNc1QwRkJUME1zWVVGRE5VTk1MRTlCUVU5RExHVkJRV1Z3Unl4VFFVRlZkVWNzVDBGQlQwTXNXVUZCWVN4RFFVTnNSRVVzVFVGQlR5eFRRVUZsUXl4UlFVTndRaXhSUVVGSmFrY3NaMEpCUVdkQ2RVUXNTMEZCU3k5RkxFdEJRVTE1U0N4VFFVTXpRbnBJTEU5QlFWTmpMRmRCUTA0eVJ5eFJRVUZWUVN4UFFVRlBOVVFzTUVKQlFUQkNPVU1zYlVKQlNYUkVVeXhuUWtGQmEwSXNVMEZCZVVKcFJ5eFJRVU42UXl4UFFVRlBRU3hyUWtGQmEwSjZTQ3hOUVN0Q04wSmpMRk5CUVZNNFJpeFZRVUZWWXl4TFFVRlBMRmRCUTNoQ2NrWXNaVUZCWlhKRExFdEJRVTBzU1VGQlNXZERMSGxDUVN0Q00wSnNRaXhUUVVGVE9FWXNWVUZCVlROQ0xFMUJRVkVzVTBGQlZWVXNUVUZCVDBNc1UwRkJWWFJHTEVsQlEzQkVMRWxCYms1eFFuRklMRWxCYlU1cVFqZElMRTFCUVZGRkxFdEJRVXMyUkN4bFFVTmlLMFFzUzBGQlRTeEZRVVZPZGtJc1QwRkJVM1pITEUxQlFVMDBReXhoUVhST1JXbEdMRWxCYzA0d1FtaERMRTFCY2s1NFEzWkZMRTlCUVU5NVJ5eFRRVUZUUml4TlFVRlJRU3hsUVVGbGRFY3NaVUZ6VHpsRExFOUJaa2xuUml4UlFVRlZha1lzVDBGQlQzbEhMRk5CUVZOc1F5eFRRVU0xUWtFc1RVRTNUa29zVTBGQk5rSkJMRTlCUXpOQ0xFOUJRVTkyUlN4UFFVRlBNRWNzUzBGQlMyNURMRTlCTkU1VWIwTXNRMEZCYjBKd1F5eFJRVWRPTEcxQ1FVRmlReXhYUVVOVWRFWXNSMEZCUzNOR0xGTkJRMHhCTEZOQlFWY3NUVUZIVkZNc1RVRkJUMVFzVTBGQlZ5eFRRVUZ0UWtFc1YwRkJWVUVzVTBGQlZ6bEdMRTFCUVUxMVJDeHBRa0ZEYkVRc2JVSkJRVkF2UXl4TFFVRnRRa0VzUjBGQlMyZERMRXRCUXk5Q2VFTXNUVUZCVFdsRUxFOUJOME5hTEZOQlFYVkNVQ3hQUVVGUmJFTXNTVUZETjBJc1NVRkJTWE5FTEVkQlFVc3NTVUZCU1hwQ0xESkNRVVZpUlN4bFFVRmxSeXhQUVVGUmIwSXNTVUZEZGtKTExGRkJRVkZETEZOQlFWTTFSQ3hIUVVGSmMwUXNTVUY1UTBodlJTeERRVUZqYUVrc1MwRkJUVTBzUzBGQllTdEdMRTlCYmtOeVJDeFRRVUZ2UWpkRUxFOUJRVkV4UXl4TlFVRlBOa1lzVFVGQlQzSkdMRWxCUTNoRExFbEJRVWx6UkN4SFFWRktMRTlCVG1Nc1QwRkJWaXRDTEUxQlEwWXZRaXhIUVVGTExFbEJRVWt4UWl4MVFrRkRhVUlzYVVKQlFWWjVSQ3hQUVVGMVFqZEdMRTFCUVUwMFF5eGhRVU0zUTJ0Q0xFZEJRVXNzU1VGQlNTOUNMSEZDUVVGeFFpeFJRVUZUTEVOQlFVTXNVMEZCVlN4VlFVRlhPRVFzVTBGSE0wUXZRaXhMUVVOR2RrSXNaVUZCWlVjc1QwRkJVVzlDTEVsQlEzWkNTeXhSUVVGUlF5eFRRVUZUTlVRc1IwRkJTWE5FTEV0QlEyUXNSMEYxUW0xRWNVVXNRMEZCVjJwSkxFdEJRVTFHTEUxQlFVODJSaXhOUVVGUGNrWXNUMEZEZWtaU0xFMUJRVTFWTEZsQlEwNXZTQ3hKUVhkRVNpeFRRVUYxUW5CR0xFOUJRVkV4UXl4TlFVRlBkVWNzVFVGQlQxWXNUVUZCVDBNc1UwRkJWWFJHTEVsQlF6VkVMRWxCUVVzclJpeE5RVUZQTEVOQlExWXNTVUZCU1RaQ0xGTkJkRUpTTEZOQlFYRkNjRWtzVFVGQlR6WkdMRTFCUVU5RExGVkJRelZDT1VZc1RVRkJUVFJETEdGQlFYTkRMRWxCUVhoQ05VTXNUVUZCVFhORUxHVkJRVFJETEdsQ1FVRldkVU1zVVVGREwwUkJMRTFCUVZGMlJTeFBRVUZQTUVjc1MwRkJTMjVETEUxQlFVOURMRmRCUnpkQ0xFOUJRVTlFTEUxQmFVSlZkME1zUTBGQldYSkpMRTFCUVU4MlJpeE5RVUZQUXl4VlFVVnlRMFFzVVVGQlZYVkRMRmRCUTFvM1FpeFBRVUZSTEVWQlExSlVMRk5CUVZjc1UwRkRXRVFzVFVGQlVYVkRMRlZCU1Zvc1NVRkJTWGhETEVsQlFVMDFSaXhOUVVGTk5FTXNWMEZCWVN4RlFVRkphVVFzVFVGQlRYSkRMRTlCUTNaRGVFUXNUVUZCVFhkRUxGRkJRVlZ2UXl4SlFVTm9RaXhKUVVGSmEwTXNTVUZCVFRsSUxFMUJRVTEzUkN4UFFVRlRlRVFzVFVGQlRUaERMR05CUlRGQ1owWXNUVUZCU3psSUxFMUJRVTFuUkN4WFFVRlpMRWRCUlRWQ0xFZEJRVWxvUkN4TlFVRk5lVVFzVTBGQlYzcEVMRTFCUVUwd1JDeFBRVUZSTEVOQlEycERMRWxCUVVrMFJTeExRVUZQZEVrc1RVRkJUVFJGTEc5Q1FVTnFRalZGTEUxQlFVMDBSU3h2UWtGQmMwSXNRMEZETVVKcFFpeE5RVUZQUVN4TlFVTlFReXhUUVVGVlFTeFRRVU5XVXl4TlFVRlBRU3hOUVVOUU9VWXNVMEZCVlVRc1IwRkRWa3dzUzBGQlRTeE5RVWRLYlVrc1MwRkRSa0VzUzBGQlMyNUpMRXRCUVU5SUxFMUJRVTAwUlN4dlFrRkZiRUkxUlN4TlFVRk5lVVVzWjBKQlFXdENla1VzVFVGQlRUUkZMRzlDUVVkb1F6VkZMRTFCUVUxblJpeHpRa0ZCZDBJc1QwRkZPVUpYTEZGQlFWRnFSQ3hQUVVGUk1VTXNUMEZCVHl4RlFVRlBORVlzU1VGQlMwTXNUVUZCVDBNc1UwRkJWWFJHTEVsQlIzUkVMRTlCUVU5elNDeEpRVGxHUTFNc1EwRkJZM0pKTEV0QlFVMUdMRTFCUVU5MVJ5eE5RVUZQVml4TlFVRlBReXhUUVVGVmRFWXNTMEZGY0VSelNDeExRVWRVT1Vjc1UwRkJVemhHTEZWQlFWVXdRaXhMUVVGUExGZEJRM2hDZEVrc1MwRkJTelpFTEdWQlFXVk1MRlZCUjNSQ01VTXNVMEZCVXpoR0xGVkJRVlV5UWl4UFFVRlRMRmRCUXpGQ0xFbEJRVWw2U1N4TlFVRlJSU3hMUVVGTE5rUXNaVUZGWWk5RUxFMUJRVTB3UkN4VFFVTlNNVVFzVFVGQlRUQkVMRk5CUTBReFJDeE5RVUZOZVVRc1UwRkJXWHBFTEUxQlFVMHdSQ3hSUVVGWE1VUXNUVUZCVFRSRUxHMUNRVUZ2UWpWRUxFMUJRVTE1UlN4cFFrRkJhVUpETEZsQlFWbDRSU3hMUVVGTlJpeFRRVWt2UjJkQ0xGTkJRVk00Uml4VlFVRlZORUlzYlVKQlFYRkNMRk5CUVRSQ05VTXNWVUZIYkVVc1IwRkVkMElzYVVKQlFXSkJMRmRCUVhWQ1FTeFRRVUZYUVN4VFFVRlROa01zYVVKQlEyaEVMRU5CUVVNc1RVRkJUeXhQUVVGUkxGRkJRVk1zVVVGQlV5eFRRVUZWTEZOQlFWVXNUMEZCVVN4UlFVRlRMRlZCUVZjc1YwRkJXU3hQUVVGUFF5eFRRVUZUT1VNc1UwRkJWeXhKUVVGSk5rTXNaMEpCUVd0Q0xFZEJRVWtzVFVGQlRTeEpRVUZKY2tjc2NVSkJRWEZDZDBRc1ZVRkZlRXdzVDBGRVFUVkdMRXRCUVVzMlJDeGxRVUZsVWl4blFrRkJhMEoxUXl4VFFVTXZRalZHTEUxQlIxUnBTQ3hQUVVGUFF5eGxRVUZsY0Vjc1UwRkJVemhHTEZWQlFWY3NhVUpCUVd0Q0xFTkJTVEZFSzBJc1dVRkJXU3hGUVVOYWVFSXNTVUZCU3l4WFFVTklMRTlCUVU5dVNDeExRVUZMTmtRc1owSkJRV3RDTjBRc1MwRkJTelpFTEdWQlFXVm5SQ3hsUVZsMFJFa3NUMEZCVDBNc1pVRkJaWEJITEZOQlFWTTRSaXhWUVVGWExIZENRVUY1UWl4RFFVbHFSU3RDTEZsQlFWa3NSVUZEV25oQ0xFbEJRVXNzVjBGRFNDeFBRVUZQYmtnc1MwRkJTelpFTEdWQlFXVnFRaXhwUWtFMFRDOUNPVUlzVTBGQlV6aEdMRlZCUVZVeFFpeFBRVUZUTEZOQlFWVlRMRTFCUVU5RExGTkJRVlYwUml4SlFVTnlSRUVzUjBGQlJ5eEpRVUZKZDBJc01rSkJRVEpDTEdOQlIzQkRhRUlzVTBGQlV6aEdMRlZCUVZWNFFpeFJRVUZWTEV0QlJUZENkRVVzVTBGQlV6aEdMRlZCUVZWblF5eEpRVUZOTEZOQlFWVnFSQ3hOUVVGUFF5eFRRVUZWZEVZc1NVRkRiRVFzU1VGQlNWSXNUVUZCVVVVc1MwRkJTelpFTEdWQmIwSnFRaXhOUVd4Q2NVSXNiVUpCUVZZNFFpeFBRVU5VY2tZc1IwRkJTM0ZHTEUxQlEweEJMRTFCUVZFc1MwRkRVa01zVTBGQlZ5eE5RVU5yUWl4dFFrRkJZa0VzVjBGRGFFSjBSaXhIUVVGTGMwWXNVMEZEVEVFc1UwRkJWeXhOUVVkVVJDeE5RVUZCUVN4UFFVRjFRek5HTEV0QlFVdHBSaXhOUVVGTlZTeE5RVUZQUXl4VlFVVjZSRGxHTEUxQlFVMHdSQ3hUUVVOU01VUXNUVUZCVFRCRUxFOUJRVk1zUlVGRFpuaEVMRXRCUVV0MVNTeFZRVWxHZWtrc1RVRkJUV2xFTEZGQmMwVmlMRk5CUVhGQ1VDeFBRVUZSTVVNc1RVRkJUMUVzU1VGRGJFTlNMRTFCUVUxcFJDeFJRVUZUTEVWQlEyWnZRaXhaUVVGWk0wSXNUMEZCVVRGRExFOUJSV2hDVVN4TFFVTkZVaXhOUVVGTmJVUXNVMEZCVldkQ0xGRkJRVkZETEZOQlFWTTFSQ3hKUVVGVGEwTXNUMEZCVDNGSExFdEJRVXNzVTBGQlZYWkpMRXRCUjNSRlVpeE5RVUZOYTBRc1QwRkJVU3hGUVVOa1VpeFBRVUZQZDBNc1ZVRkJWeXhGUVM5RlF6aEVMRU5CUVZrNVNTeExRVUZOUml4TlFVRlBVU3hKUVVOeVEwNHNUVUZIVkdsSUxFOUJRVTlETEdWQlFXVndSeXhUUVVGVE9FWXNWVUZCVnl4cFFrRkJhMElzUTBGSk1VUXJRaXhaUVVGWkxFVkJRMXA0UWl4SlFVRkxMRmRCUTBnc1QwRkJUMjVJTEV0QlFVczJSQ3hsUVVGbFVDeFZRWFZHTDBJeVJDeFBRVUZQUXl4bFFVRmxjRWNzVTBGQlV6aEdMRlZCUVZjc1dVRkJZU3hEUVVseVJDdENMRmxCUVZrc1JVRkRXbmhDTEVsQlFVc3NWMEZEU0N4WlFVRTBRalJDTEVsQlFYaENMMGtzUzBGQlN6WkVMR2RDUVVsR04wUXNTMEZCU3paRUxHVkJRV1ZZTEZkQlJUZENPRVlzU1VGQlN5eFRRVUZoZUVJc1QwRkhXSGhJTEV0QlFVczJSQ3hwUWtGTlZqZEVMRXRCUVVzMlJDeGxRVUZsV0N4VlFVRlpjMFVzVlVGSGNFTXhSeXhUUVVGVE9FWXNWVUZCVlhaQ0xGRkJRVlUxUkN4WlFVRlpORVFzVVVGRGVrTjJSU3hUUVVGVE9FWXNWVUZCVlhGRExGZEJRV0Y0U0N4WlFVRlplVWdzVlVGRk5VTndTU3hUUVVGVE9FWXNWVUZCVlhSQ0xGTkJRVmNzVTBGQlZXcEdMRWxCUVV0RExFbEJRek5EUVN4SFFVRkhSQ0lzSW1acGJHVWlPaUl2YUc5dFpTOXRhQzFqWW05dUwyZHZkeTl6Y21NdloybDBhSFZpTG1OdmJTOXJibUZrYUM5dWFXeDBZV3hyTDNOMFlYUnBZeTkwYUdWdFpYTXZhMjVoWkdndmMzUmhkR2xqTDJ4cFlpMTNhR2x6Y0dWeU1pOXViMlJsWDIxdlpIVnNaWE12Ym1ScWMyOXVMMjV2WkdWZmJXOWtkV3hsY3k5eVpXRmtZV0pzWlMxemRISmxZVzB2YkdsaUwxOXpkSEpsWVcxZmQzSnBkR0ZpYkdVdWFuTWlmUT09IiwiLyohXG4gKiBUaGUgYnVmZmVyIG1vZHVsZSBmcm9tIG5vZGUuanMsIGZvciB0aGUgYnJvd3Nlci5cbiAqXG4gKiBAYXV0aG9yICAgRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnPlxuICogQGxpY2Vuc2UgIE1JVFxuICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xuXG4ndXNlIHN0cmljdCdcblxudmFyIGJhc2U2NCA9IHJlcXVpcmUoJ2Jhc2U2NC1qcycpXG52YXIgaWVlZTc1NCA9IHJlcXVpcmUoJ2llZWU3NTQnKVxuXG5leHBvcnRzLkJ1ZmZlciA9IEJ1ZmZlclxuZXhwb3J0cy5TbG93QnVmZmVyID0gU2xvd0J1ZmZlclxuZXhwb3J0cy5JTlNQRUNUX01BWF9CWVRFUyA9IDUwXG5cbnZhciBLX01BWF9MRU5HVEggPSAweDdmZmZmZmZmXG5leHBvcnRzLmtNYXhMZW5ndGggPSBLX01BWF9MRU5HVEhcblxuLyoqXG4gKiBJZiBgQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlRgOlxuICogICA9PT0gdHJ1ZSAgICBVc2UgVWludDhBcnJheSBpbXBsZW1lbnRhdGlvbiAoZmFzdGVzdClcbiAqICAgPT09IGZhbHNlICAgUHJpbnQgd2FybmluZyBhbmQgcmVjb21tZW5kIHVzaW5nIGBidWZmZXJgIHY0Lnggd2hpY2ggaGFzIGFuIE9iamVjdFxuICogICAgICAgICAgICAgICBpbXBsZW1lbnRhdGlvbiAobW9zdCBjb21wYXRpYmxlLCBldmVuIElFNilcbiAqXG4gKiBCcm93c2VycyB0aGF0IHN1cHBvcnQgdHlwZWQgYXJyYXlzIGFyZSBJRSAxMCssIEZpcmVmb3ggNCssIENocm9tZSA3KywgU2FmYXJpIDUuMSssXG4gKiBPcGVyYSAxMS42KywgaU9TIDQuMisuXG4gKlxuICogV2UgcmVwb3J0IHRoYXQgdGhlIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCB0eXBlZCBhcnJheXMgaWYgdGhlIGFyZSBub3Qgc3ViY2xhc3NhYmxlXG4gKiB1c2luZyBfX3Byb3RvX18uIEZpcmVmb3ggNC0yOSBsYWNrcyBzdXBwb3J0IGZvciBhZGRpbmcgbmV3IHByb3BlcnRpZXMgdG8gYFVpbnQ4QXJyYXlgXG4gKiAoU2VlOiBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02OTU0MzgpLiBJRSAxMCBsYWNrcyBzdXBwb3J0XG4gKiBmb3IgX19wcm90b19fIGFuZCBoYXMgYSBidWdneSB0eXBlZCBhcnJheSBpbXBsZW1lbnRhdGlvbi5cbiAqL1xuQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQgPSB0eXBlZEFycmF5U3VwcG9ydCgpXG5cbmlmICghQnVmZmVyLlRZUEVEX0FSUkFZX1NVUFBPUlQgJiYgdHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmXG4gICAgdHlwZW9mIGNvbnNvbGUuZXJyb3IgPT09ICdmdW5jdGlvbicpIHtcbiAgY29uc29sZS5lcnJvcihcbiAgICAnVGhpcyBicm93c2VyIGxhY2tzIHR5cGVkIGFycmF5IChVaW50OEFycmF5KSBzdXBwb3J0IHdoaWNoIGlzIHJlcXVpcmVkIGJ5ICcgK1xuICAgICdgYnVmZmVyYCB2NS54LiBVc2UgYGJ1ZmZlcmAgdjQueCBpZiB5b3UgcmVxdWlyZSBvbGQgYnJvd3NlciBzdXBwb3J0LidcbiAgKVxufVxuXG5mdW5jdGlvbiB0eXBlZEFycmF5U3VwcG9ydCAoKSB7XG4gIC8vIENhbiB0eXBlZCBhcnJheSBpbnN0YW5jZXMgY2FuIGJlIGF1Z21lbnRlZD9cbiAgdHJ5IHtcbiAgICB2YXIgYXJyID0gbmV3IFVpbnQ4QXJyYXkoMSlcbiAgICBhcnIuX19wcm90b19fID0geyBfX3Byb3RvX186IFVpbnQ4QXJyYXkucHJvdG90eXBlLCBmb286IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDQyIH0gfVxuICAgIHJldHVybiBhcnIuZm9vKCkgPT09IDQyXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoQnVmZmVyLnByb3RvdHlwZSwgJ3BhcmVudCcsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCFCdWZmZXIuaXNCdWZmZXIodGhpcykpIHJldHVybiB1bmRlZmluZWRcbiAgICByZXR1cm4gdGhpcy5idWZmZXJcbiAgfVxufSlcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KEJ1ZmZlci5wcm90b3R5cGUsICdvZmZzZXQnLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIGlmICghQnVmZmVyLmlzQnVmZmVyKHRoaXMpKSByZXR1cm4gdW5kZWZpbmVkXG4gICAgcmV0dXJuIHRoaXMuYnl0ZU9mZnNldFxuICB9XG59KVxuXG5mdW5jdGlvbiBjcmVhdGVCdWZmZXIgKGxlbmd0aCkge1xuICBpZiAobGVuZ3RoID4gS19NQVhfTEVOR1RIKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZSB2YWx1ZSBcIicgKyBsZW5ndGggKyAnXCIgaXMgaW52YWxpZCBmb3Igb3B0aW9uIFwic2l6ZVwiJylcbiAgfVxuICAvLyBSZXR1cm4gYW4gYXVnbWVudGVkIGBVaW50OEFycmF5YCBpbnN0YW5jZVxuICB2YXIgYnVmID0gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKVxuICBidWYuX19wcm90b19fID0gQnVmZmVyLnByb3RvdHlwZVxuICByZXR1cm4gYnVmXG59XG5cbi8qKlxuICogVGhlIEJ1ZmZlciBjb25zdHJ1Y3RvciByZXR1cm5zIGluc3RhbmNlcyBvZiBgVWludDhBcnJheWAgdGhhdCBoYXZlIHRoZWlyXG4gKiBwcm90b3R5cGUgY2hhbmdlZCB0byBgQnVmZmVyLnByb3RvdHlwZWAuIEZ1cnRoZXJtb3JlLCBgQnVmZmVyYCBpcyBhIHN1YmNsYXNzIG9mXG4gKiBgVWludDhBcnJheWAsIHNvIHRoZSByZXR1cm5lZCBpbnN0YW5jZXMgd2lsbCBoYXZlIGFsbCB0aGUgbm9kZSBgQnVmZmVyYCBtZXRob2RzXG4gKiBhbmQgdGhlIGBVaW50OEFycmF5YCBtZXRob2RzLiBTcXVhcmUgYnJhY2tldCBub3RhdGlvbiB3b3JrcyBhcyBleHBlY3RlZCAtLSBpdFxuICogcmV0dXJucyBhIHNpbmdsZSBvY3RldC5cbiAqXG4gKiBUaGUgYFVpbnQ4QXJyYXlgIHByb3RvdHlwZSByZW1haW5zIHVubW9kaWZpZWQuXG4gKi9cblxuZnVuY3Rpb24gQnVmZmVyIChhcmcsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aCkge1xuICAvLyBDb21tb24gY2FzZS5cbiAgaWYgKHR5cGVvZiBhcmcgPT09ICdudW1iZXInKSB7XG4gICAgaWYgKHR5cGVvZiBlbmNvZGluZ09yT2Zmc2V0ID09PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICAgJ1RoZSBcInN0cmluZ1wiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBzdHJpbmcuIFJlY2VpdmVkIHR5cGUgbnVtYmVyJ1xuICAgICAgKVxuICAgIH1cbiAgICByZXR1cm4gYWxsb2NVbnNhZmUoYXJnKVxuICB9XG4gIHJldHVybiBmcm9tKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxufVxuXG4vLyBGaXggc3ViYXJyYXkoKSBpbiBFUzIwMTYuIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2Zlcm9zcy9idWZmZXIvcHVsbC85N1xuaWYgKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC5zcGVjaWVzICE9IG51bGwgJiZcbiAgICBCdWZmZXJbU3ltYm9sLnNwZWNpZXNdID09PSBCdWZmZXIpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEJ1ZmZlciwgU3ltYm9sLnNwZWNpZXMsIHtcbiAgICB2YWx1ZTogbnVsbCxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgd3JpdGFibGU6IGZhbHNlXG4gIH0pXG59XG5cbkJ1ZmZlci5wb29sU2l6ZSA9IDgxOTIgLy8gbm90IHVzZWQgYnkgdGhpcyBpbXBsZW1lbnRhdGlvblxuXG5mdW5jdGlvbiBmcm9tICh2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIGZyb21TdHJpbmcodmFsdWUsIGVuY29kaW5nT3JPZmZzZXQpXG4gIH1cblxuICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KHZhbHVlKSkge1xuICAgIHJldHVybiBmcm9tQXJyYXlMaWtlKHZhbHVlKVxuICB9XG5cbiAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoXG4gICAgICAnVGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIEFycmF5QnVmZmVyLCBBcnJheSwgJyArXG4gICAgICAnb3IgQXJyYXktbGlrZSBPYmplY3QuIFJlY2VpdmVkIHR5cGUgJyArICh0eXBlb2YgdmFsdWUpXG4gICAgKVxuICB9XG5cbiAgaWYgKGlzSW5zdGFuY2UodmFsdWUsIEFycmF5QnVmZmVyKSB8fFxuICAgICAgKHZhbHVlICYmIGlzSW5zdGFuY2UodmFsdWUuYnVmZmVyLCBBcnJheUJ1ZmZlcikpKSB7XG4gICAgcmV0dXJuIGZyb21BcnJheUJ1ZmZlcih2YWx1ZSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKVxuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgJ1RoZSBcInZhbHVlXCIgYXJndW1lbnQgbXVzdCBub3QgYmUgb2YgdHlwZSBudW1iZXIuIFJlY2VpdmVkIHR5cGUgbnVtYmVyJ1xuICAgIClcbiAgfVxuXG4gIHZhciB2YWx1ZU9mID0gdmFsdWUudmFsdWVPZiAmJiB2YWx1ZS52YWx1ZU9mKClcbiAgaWYgKHZhbHVlT2YgIT0gbnVsbCAmJiB2YWx1ZU9mICE9PSB2YWx1ZSkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbSh2YWx1ZU9mLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG4gIH1cblxuICB2YXIgYiA9IGZyb21PYmplY3QodmFsdWUpXG4gIGlmIChiKSByZXR1cm4gYlxuXG4gIGlmICh0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9QcmltaXRpdmUgIT0gbnVsbCAmJlxuICAgICAgdHlwZW9mIHZhbHVlW1N5bWJvbC50b1ByaW1pdGl2ZV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oXG4gICAgICB2YWx1ZVtTeW1ib2wudG9QcmltaXRpdmVdKCdzdHJpbmcnKSwgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoXG4gICAgKVxuICB9XG5cbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAnVGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIEFycmF5QnVmZmVyLCBBcnJheSwgJyArXG4gICAgJ29yIEFycmF5LWxpa2UgT2JqZWN0LiBSZWNlaXZlZCB0eXBlICcgKyAodHlwZW9mIHZhbHVlKVxuICApXG59XG5cbi8qKlxuICogRnVuY3Rpb25hbGx5IGVxdWl2YWxlbnQgdG8gQnVmZmVyKGFyZywgZW5jb2RpbmcpIGJ1dCB0aHJvd3MgYSBUeXBlRXJyb3JcbiAqIGlmIHZhbHVlIGlzIGEgbnVtYmVyLlxuICogQnVmZmVyLmZyb20oc3RyWywgZW5jb2RpbmddKVxuICogQnVmZmVyLmZyb20oYXJyYXkpXG4gKiBCdWZmZXIuZnJvbShidWZmZXIpXG4gKiBCdWZmZXIuZnJvbShhcnJheUJ1ZmZlclssIGJ5dGVPZmZzZXRbLCBsZW5ndGhdXSlcbiAqKi9cbkJ1ZmZlci5mcm9tID0gZnVuY3Rpb24gKHZhbHVlLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGZyb20odmFsdWUsIGVuY29kaW5nT3JPZmZzZXQsIGxlbmd0aClcbn1cblxuLy8gTm90ZTogQ2hhbmdlIHByb3RvdHlwZSAqYWZ0ZXIqIEJ1ZmZlci5mcm9tIGlzIGRlZmluZWQgdG8gd29ya2Fyb3VuZCBDaHJvbWUgYnVnOlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2Zlcm9zcy9idWZmZXIvcHVsbC8xNDhcbkJ1ZmZlci5wcm90b3R5cGUuX19wcm90b19fID0gVWludDhBcnJheS5wcm90b3R5cGVcbkJ1ZmZlci5fX3Byb3RvX18gPSBVaW50OEFycmF5XG5cbmZ1bmN0aW9uIGFzc2VydFNpemUgKHNpemUpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wic2l6ZVwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBudW1iZXInKVxuICB9IGVsc2UgaWYgKHNpemUgPCAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZSB2YWx1ZSBcIicgKyBzaXplICsgJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpXG4gIH1cbn1cblxuZnVuY3Rpb24gYWxsb2MgKHNpemUsIGZpbGwsIGVuY29kaW5nKSB7XG4gIGFzc2VydFNpemUoc2l6ZSlcbiAgaWYgKHNpemUgPD0gMCkge1xuICAgIHJldHVybiBjcmVhdGVCdWZmZXIoc2l6ZSlcbiAgfVxuICBpZiAoZmlsbCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgLy8gT25seSBwYXkgYXR0ZW50aW9uIHRvIGVuY29kaW5nIGlmIGl0J3MgYSBzdHJpbmcuIFRoaXNcbiAgICAvLyBwcmV2ZW50cyBhY2NpZGVudGFsbHkgc2VuZGluZyBpbiBhIG51bWJlciB0aGF0IHdvdWxkXG4gICAgLy8gYmUgaW50ZXJwcmV0dGVkIGFzIGEgc3RhcnQgb2Zmc2V0LlxuICAgIHJldHVybiB0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnXG4gICAgICA/IGNyZWF0ZUJ1ZmZlcihzaXplKS5maWxsKGZpbGwsIGVuY29kaW5nKVxuICAgICAgOiBjcmVhdGVCdWZmZXIoc2l6ZSkuZmlsbChmaWxsKVxuICB9XG4gIHJldHVybiBjcmVhdGVCdWZmZXIoc2l6ZSlcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IGZpbGxlZCBCdWZmZXIgaW5zdGFuY2UuXG4gKiBhbGxvYyhzaXplWywgZmlsbFssIGVuY29kaW5nXV0pXG4gKiovXG5CdWZmZXIuYWxsb2MgPSBmdW5jdGlvbiAoc2l6ZSwgZmlsbCwgZW5jb2RpbmcpIHtcbiAgcmV0dXJuIGFsbG9jKHNpemUsIGZpbGwsIGVuY29kaW5nKVxufVxuXG5mdW5jdGlvbiBhbGxvY1Vuc2FmZSAoc2l6ZSkge1xuICBhc3NlcnRTaXplKHNpemUpXG4gIHJldHVybiBjcmVhdGVCdWZmZXIoc2l6ZSA8IDAgPyAwIDogY2hlY2tlZChzaXplKSB8IDApXG59XG5cbi8qKlxuICogRXF1aXZhbGVudCB0byBCdWZmZXIobnVtKSwgYnkgZGVmYXVsdCBjcmVhdGVzIGEgbm9uLXplcm8tZmlsbGVkIEJ1ZmZlciBpbnN0YW5jZS5cbiAqICovXG5CdWZmZXIuYWxsb2NVbnNhZmUgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICByZXR1cm4gYWxsb2NVbnNhZmUoc2l6ZSlcbn1cbi8qKlxuICogRXF1aXZhbGVudCB0byBTbG93QnVmZmVyKG51bSksIGJ5IGRlZmF1bHQgY3JlYXRlcyBhIG5vbi16ZXJvLWZpbGxlZCBCdWZmZXIgaW5zdGFuY2UuXG4gKi9cbkJ1ZmZlci5hbGxvY1Vuc2FmZVNsb3cgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICByZXR1cm4gYWxsb2NVbnNhZmUoc2l6ZSlcbn1cblxuZnVuY3Rpb24gZnJvbVN0cmluZyAoc3RyaW5nLCBlbmNvZGluZykge1xuICBpZiAodHlwZW9mIGVuY29kaW5nICE9PSAnc3RyaW5nJyB8fCBlbmNvZGluZyA9PT0gJycpIHtcbiAgICBlbmNvZGluZyA9ICd1dGY4J1xuICB9XG5cbiAgaWYgKCFCdWZmZXIuaXNFbmNvZGluZyhlbmNvZGluZykpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmtub3duIGVuY29kaW5nOiAnICsgZW5jb2RpbmcpXG4gIH1cblxuICB2YXIgbGVuZ3RoID0gYnl0ZUxlbmd0aChzdHJpbmcsIGVuY29kaW5nKSB8IDBcbiAgdmFyIGJ1ZiA9IGNyZWF0ZUJ1ZmZlcihsZW5ndGgpXG5cbiAgdmFyIGFjdHVhbCA9IGJ1Zi53cml0ZShzdHJpbmcsIGVuY29kaW5nKVxuXG4gIGlmIChhY3R1YWwgIT09IGxlbmd0aCkge1xuICAgIC8vIFdyaXRpbmcgYSBoZXggc3RyaW5nLCBmb3IgZXhhbXBsZSwgdGhhdCBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMgd2lsbFxuICAgIC8vIGNhdXNlIGV2ZXJ5dGhpbmcgYWZ0ZXIgdGhlIGZpcnN0IGludmFsaWQgY2hhcmFjdGVyIHRvIGJlIGlnbm9yZWQuIChlLmcuXG4gICAgLy8gJ2FieHhjZCcgd2lsbCBiZSB0cmVhdGVkIGFzICdhYicpXG4gICAgYnVmID0gYnVmLnNsaWNlKDAsIGFjdHVhbClcbiAgfVxuXG4gIHJldHVybiBidWZcbn1cblxuZnVuY3Rpb24gZnJvbUFycmF5TGlrZSAoYXJyYXkpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCA8IDAgPyAwIDogY2hlY2tlZChhcnJheS5sZW5ndGgpIHwgMFxuICB2YXIgYnVmID0gY3JlYXRlQnVmZmVyKGxlbmd0aClcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMSkge1xuICAgIGJ1ZltpXSA9IGFycmF5W2ldICYgMjU1XG4gIH1cbiAgcmV0dXJuIGJ1ZlxufVxuXG5mdW5jdGlvbiBmcm9tQXJyYXlCdWZmZXIgKGFycmF5LCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgaWYgKGJ5dGVPZmZzZXQgPCAwIHx8IGFycmF5LmJ5dGVMZW5ndGggPCBieXRlT2Zmc2V0KSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1wib2Zmc2V0XCIgaXMgb3V0c2lkZSBvZiBidWZmZXIgYm91bmRzJylcbiAgfVxuXG4gIGlmIChhcnJheS5ieXRlTGVuZ3RoIDwgYnl0ZU9mZnNldCArIChsZW5ndGggfHwgMCkpIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJsZW5ndGhcIiBpcyBvdXRzaWRlIG9mIGJ1ZmZlciBib3VuZHMnKVxuICB9XG5cbiAgdmFyIGJ1ZlxuICBpZiAoYnl0ZU9mZnNldCA9PT0gdW5kZWZpbmVkICYmIGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgYnVmID0gbmV3IFVpbnQ4QXJyYXkoYXJyYXkpXG4gIH0gZWxzZSBpZiAobGVuZ3RoID09PSB1bmRlZmluZWQpIHtcbiAgICBidWYgPSBuZXcgVWludDhBcnJheShhcnJheSwgYnl0ZU9mZnNldClcbiAgfSBlbHNlIHtcbiAgICBidWYgPSBuZXcgVWludDhBcnJheShhcnJheSwgYnl0ZU9mZnNldCwgbGVuZ3RoKVxuICB9XG5cbiAgLy8gUmV0dXJuIGFuIGF1Z21lbnRlZCBgVWludDhBcnJheWAgaW5zdGFuY2VcbiAgYnVmLl9fcHJvdG9fXyA9IEJ1ZmZlci5wcm90b3R5cGVcbiAgcmV0dXJuIGJ1ZlxufVxuXG5mdW5jdGlvbiBmcm9tT2JqZWN0IChvYmopIHtcbiAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihvYmopKSB7XG4gICAgdmFyIGxlbiA9IGNoZWNrZWQob2JqLmxlbmd0aCkgfCAwXG4gICAgdmFyIGJ1ZiA9IGNyZWF0ZUJ1ZmZlcihsZW4pXG5cbiAgICBpZiAoYnVmLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIGJ1ZlxuICAgIH1cblxuICAgIG9iai5jb3B5KGJ1ZiwgMCwgMCwgbGVuKVxuICAgIHJldHVybiBidWZcbiAgfVxuXG4gIGlmIChvYmoubGVuZ3RoICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAodHlwZW9mIG9iai5sZW5ndGggIT09ICdudW1iZXInIHx8IG51bWJlcklzTmFOKG9iai5sZW5ndGgpKSB7XG4gICAgICByZXR1cm4gY3JlYXRlQnVmZmVyKDApXG4gICAgfVxuICAgIHJldHVybiBmcm9tQXJyYXlMaWtlKG9iailcbiAgfVxuXG4gIGlmIChvYmoudHlwZSA9PT0gJ0J1ZmZlcicgJiYgQXJyYXkuaXNBcnJheShvYmouZGF0YSkpIHtcbiAgICByZXR1cm4gZnJvbUFycmF5TGlrZShvYmouZGF0YSlcbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja2VkIChsZW5ndGgpIHtcbiAgLy8gTm90ZTogY2Fubm90IHVzZSBgbGVuZ3RoIDwgS19NQVhfTEVOR1RIYCBoZXJlIGJlY2F1c2UgdGhhdCBmYWlscyB3aGVuXG4gIC8vIGxlbmd0aCBpcyBOYU4gKHdoaWNoIGlzIG90aGVyd2lzZSBjb2VyY2VkIHRvIHplcm8uKVxuICBpZiAobGVuZ3RoID49IEtfTUFYX0xFTkdUSCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdBdHRlbXB0IHRvIGFsbG9jYXRlIEJ1ZmZlciBsYXJnZXIgdGhhbiBtYXhpbXVtICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICdzaXplOiAweCcgKyBLX01BWF9MRU5HVEgudG9TdHJpbmcoMTYpICsgJyBieXRlcycpXG4gIH1cbiAgcmV0dXJuIGxlbmd0aCB8IDBcbn1cblxuZnVuY3Rpb24gU2xvd0J1ZmZlciAobGVuZ3RoKSB7XG4gIGlmICgrbGVuZ3RoICE9IGxlbmd0aCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGVxZXFlcVxuICAgIGxlbmd0aCA9IDBcbiAgfVxuICByZXR1cm4gQnVmZmVyLmFsbG9jKCtsZW5ndGgpXG59XG5cbkJ1ZmZlci5pc0J1ZmZlciA9IGZ1bmN0aW9uIGlzQnVmZmVyIChiKSB7XG4gIHJldHVybiBiICE9IG51bGwgJiYgYi5faXNCdWZmZXIgPT09IHRydWUgJiZcbiAgICBiICE9PSBCdWZmZXIucHJvdG90eXBlIC8vIHNvIEJ1ZmZlci5pc0J1ZmZlcihCdWZmZXIucHJvdG90eXBlKSB3aWxsIGJlIGZhbHNlXG59XG5cbkJ1ZmZlci5jb21wYXJlID0gZnVuY3Rpb24gY29tcGFyZSAoYSwgYikge1xuICBpZiAoaXNJbnN0YW5jZShhLCBVaW50OEFycmF5KSkgYSA9IEJ1ZmZlci5mcm9tKGEsIGEub2Zmc2V0LCBhLmJ5dGVMZW5ndGgpXG4gIGlmIChpc0luc3RhbmNlKGIsIFVpbnQ4QXJyYXkpKSBiID0gQnVmZmVyLmZyb20oYiwgYi5vZmZzZXQsIGIuYnl0ZUxlbmd0aClcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoYSkgfHwgIUJ1ZmZlci5pc0J1ZmZlcihiKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXG4gICAgICAnVGhlIFwiYnVmMVwiLCBcImJ1ZjJcIiBhcmd1bWVudHMgbXVzdCBiZSBvbmUgb2YgdHlwZSBCdWZmZXIgb3IgVWludDhBcnJheSdcbiAgICApXG4gIH1cblxuICBpZiAoYSA9PT0gYikgcmV0dXJuIDBcblxuICB2YXIgeCA9IGEubGVuZ3RoXG4gIHZhciB5ID0gYi5sZW5ndGhcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gTWF0aC5taW4oeCwgeSk7IGkgPCBsZW47ICsraSkge1xuICAgIGlmIChhW2ldICE9PSBiW2ldKSB7XG4gICAgICB4ID0gYVtpXVxuICAgICAgeSA9IGJbaV1cbiAgICAgIGJyZWFrXG4gICAgfVxuICB9XG5cbiAgaWYgKHggPCB5KSByZXR1cm4gLTFcbiAgaWYgKHkgPCB4KSByZXR1cm4gMVxuICByZXR1cm4gMFxufVxuXG5CdWZmZXIuaXNFbmNvZGluZyA9IGZ1bmN0aW9uIGlzRW5jb2RpbmcgKGVuY29kaW5nKSB7XG4gIHN3aXRjaCAoU3RyaW5nKGVuY29kaW5nKS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgY2FzZSAnaGV4JzpcbiAgICBjYXNlICd1dGY4JzpcbiAgICBjYXNlICd1dGYtOCc6XG4gICAgY2FzZSAnYXNjaWknOlxuICAgIGNhc2UgJ2xhdGluMSc6XG4gICAgY2FzZSAnYmluYXJ5JzpcbiAgICBjYXNlICdiYXNlNjQnOlxuICAgIGNhc2UgJ3VjczInOlxuICAgIGNhc2UgJ3Vjcy0yJzpcbiAgICBjYXNlICd1dGYxNmxlJzpcbiAgICBjYXNlICd1dGYtMTZsZSc6XG4gICAgICByZXR1cm4gdHJ1ZVxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuXG5CdWZmZXIuY29uY2F0ID0gZnVuY3Rpb24gY29uY2F0IChsaXN0LCBsZW5ndGgpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KGxpc3QpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXN0XCIgYXJndW1lbnQgbXVzdCBiZSBhbiBBcnJheSBvZiBCdWZmZXJzJylcbiAgfVxuXG4gIGlmIChsaXN0Lmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBCdWZmZXIuYWxsb2MoMClcbiAgfVxuXG4gIHZhciBpXG4gIGlmIChsZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgIGxlbmd0aCA9IDBcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7ICsraSkge1xuICAgICAgbGVuZ3RoICs9IGxpc3RbaV0ubGVuZ3RoXG4gICAgfVxuICB9XG5cbiAgdmFyIGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpXG4gIHZhciBwb3MgPSAwXG4gIGZvciAoaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgKytpKSB7XG4gICAgdmFyIGJ1ZiA9IGxpc3RbaV1cbiAgICBpZiAoaXNJbnN0YW5jZShidWYsIFVpbnQ4QXJyYXkpKSB7XG4gICAgICBidWYgPSBCdWZmZXIuZnJvbShidWYpXG4gICAgfVxuICAgIGlmICghQnVmZmVyLmlzQnVmZmVyKGJ1ZikpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wibGlzdFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpXG4gICAgfVxuICAgIGJ1Zi5jb3B5KGJ1ZmZlciwgcG9zKVxuICAgIHBvcyArPSBidWYubGVuZ3RoXG4gIH1cbiAgcmV0dXJuIGJ1ZmZlclxufVxuXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChzdHJpbmcsIGVuY29kaW5nKSB7XG4gIGlmIChCdWZmZXIuaXNCdWZmZXIoc3RyaW5nKSkge1xuICAgIHJldHVybiBzdHJpbmcubGVuZ3RoXG4gIH1cbiAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyhzdHJpbmcpIHx8IGlzSW5zdGFuY2Uoc3RyaW5nLCBBcnJheUJ1ZmZlcikpIHtcbiAgICByZXR1cm4gc3RyaW5nLmJ5dGVMZW5ndGhcbiAgfVxuICBpZiAodHlwZW9mIHN0cmluZyAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgJ1RoZSBcInN0cmluZ1wiIGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIG9yIEFycmF5QnVmZmVyLiAnICtcbiAgICAgICdSZWNlaXZlZCB0eXBlICcgKyB0eXBlb2Ygc3RyaW5nXG4gICAgKVxuICB9XG5cbiAgdmFyIGxlbiA9IHN0cmluZy5sZW5ndGhcbiAgdmFyIG11c3RNYXRjaCA9IChhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gPT09IHRydWUpXG4gIGlmICghbXVzdE1hdGNoICYmIGxlbiA9PT0gMCkgcmV0dXJuIDBcblxuICAvLyBVc2UgYSBmb3IgbG9vcCB0byBhdm9pZCByZWN1cnNpb25cbiAgdmFyIGxvd2VyZWRDYXNlID0gZmFsc2VcbiAgZm9yICg7Oykge1xuICAgIHN3aXRjaCAoZW5jb2RpbmcpIHtcbiAgICAgIGNhc2UgJ2FzY2lpJzpcbiAgICAgIGNhc2UgJ2xhdGluMSc6XG4gICAgICBjYXNlICdiaW5hcnknOlxuICAgICAgICByZXR1cm4gbGVuXG4gICAgICBjYXNlICd1dGY4JzpcbiAgICAgIGNhc2UgJ3V0Zi04JzpcbiAgICAgICAgcmV0dXJuIHV0ZjhUb0J5dGVzKHN0cmluZykubGVuZ3RoXG4gICAgICBjYXNlICd1Y3MyJzpcbiAgICAgIGNhc2UgJ3Vjcy0yJzpcbiAgICAgIGNhc2UgJ3V0ZjE2bGUnOlxuICAgICAgY2FzZSAndXRmLTE2bGUnOlxuICAgICAgICByZXR1cm4gbGVuICogMlxuICAgICAgY2FzZSAnaGV4JzpcbiAgICAgICAgcmV0dXJuIGxlbiA+Pj4gMVxuICAgICAgY2FzZSAnYmFzZTY0JzpcbiAgICAgICAgcmV0dXJuIGJhc2U2NFRvQnl0ZXMoc3RyaW5nKS5sZW5ndGhcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmIChsb3dlcmVkQ2FzZSkge1xuICAgICAgICAgIHJldHVybiBtdXN0TWF0Y2ggPyAtMSA6IHV0ZjhUb0J5dGVzKHN0cmluZykubGVuZ3RoIC8vIGFzc3VtZSB1dGY4XG4gICAgICAgIH1cbiAgICAgICAgZW5jb2RpbmcgPSAoJycgKyBlbmNvZGluZykudG9Mb3dlckNhc2UoKVxuICAgICAgICBsb3dlcmVkQ2FzZSA9IHRydWVcbiAgICB9XG4gIH1cbn1cbkJ1ZmZlci5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuXG5mdW5jdGlvbiBzbG93VG9TdHJpbmcgKGVuY29kaW5nLCBzdGFydCwgZW5kKSB7XG4gIHZhciBsb3dlcmVkQ2FzZSA9IGZhbHNlXG5cbiAgLy8gTm8gbmVlZCB0byB2ZXJpZnkgdGhhdCBcInRoaXMubGVuZ3RoIDw9IE1BWF9VSU5UMzJcIiBzaW5jZSBpdCdzIGEgcmVhZC1vbmx5XG4gIC8vIHByb3BlcnR5IG9mIGEgdHlwZWQgYXJyYXkuXG5cbiAgLy8gVGhpcyBiZWhhdmVzIG5laXRoZXIgbGlrZSBTdHJpbmcgbm9yIFVpbnQ4QXJyYXkgaW4gdGhhdCB3ZSBzZXQgc3RhcnQvZW5kXG4gIC8vIHRvIHRoZWlyIHVwcGVyL2xvd2VyIGJvdW5kcyBpZiB0aGUgdmFsdWUgcGFzc2VkIGlzIG91dCBvZiByYW5nZS5cbiAgLy8gdW5kZWZpbmVkIGlzIGhhbmRsZWQgc3BlY2lhbGx5IGFzIHBlciBFQ01BLTI2MiA2dGggRWRpdGlvbixcbiAgLy8gU2VjdGlvbiAxMy4zLjMuNyBSdW50aW1lIFNlbWFudGljczogS2V5ZWRCaW5kaW5nSW5pdGlhbGl6YXRpb24uXG4gIGlmIChzdGFydCA9PT0gdW5kZWZpbmVkIHx8IHN0YXJ0IDwgMCkge1xuICAgIHN0YXJ0ID0gMFxuICB9XG4gIC8vIFJldHVybiBlYXJseSBpZiBzdGFydCA+IHRoaXMubGVuZ3RoLiBEb25lIGhlcmUgdG8gcHJldmVudCBwb3RlbnRpYWwgdWludDMyXG4gIC8vIGNvZXJjaW9uIGZhaWwgYmVsb3cuXG4gIGlmIChzdGFydCA+IHRoaXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuICcnXG4gIH1cblxuICBpZiAoZW5kID09PSB1bmRlZmluZWQgfHwgZW5kID4gdGhpcy5sZW5ndGgpIHtcbiAgICBlbmQgPSB0aGlzLmxlbmd0aFxuICB9XG5cbiAgaWYgKGVuZCA8PSAwKSB7XG4gICAgcmV0dXJuICcnXG4gIH1cblxuICAvLyBGb3JjZSBjb2Vyc2lvbiB0byB1aW50MzIuIFRoaXMgd2lsbCBhbHNvIGNvZXJjZSBmYWxzZXkvTmFOIHZhbHVlcyB0byAwLlxuICBlbmQgPj4+PSAwXG4gIHN0YXJ0ID4+Pj0gMFxuXG4gIGlmIChlbmQgPD0gc3RhcnQpIHtcbiAgICByZXR1cm4gJydcbiAgfVxuXG4gIGlmICghZW5jb2RpbmcpIGVuY29kaW5nID0gJ3V0ZjgnXG5cbiAgd2hpbGUgKHRydWUpIHtcbiAgICBzd2l0Y2ggKGVuY29kaW5nKSB7XG4gICAgICBjYXNlICdoZXgnOlxuICAgICAgICByZXR1cm4gaGV4U2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgY2FzZSAndXRmOCc6XG4gICAgICBjYXNlICd1dGYtOCc6XG4gICAgICAgIHJldHVybiB1dGY4U2xpY2UodGhpcywgc3RhcnQsIGVuZClcblxuICAgICAgY2FzZSAnYXNjaWknOlxuICAgICAgICByZXR1cm4gYXNjaWlTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBjYXNlICdsYXRpbjEnOlxuICAgICAgY2FzZSAnYmluYXJ5JzpcbiAgICAgICAgcmV0dXJuIGxhdGluMVNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGNhc2UgJ2Jhc2U2NCc6XG4gICAgICAgIHJldHVybiBiYXNlNjRTbGljZSh0aGlzLCBzdGFydCwgZW5kKVxuXG4gICAgICBjYXNlICd1Y3MyJzpcbiAgICAgIGNhc2UgJ3Vjcy0yJzpcbiAgICAgIGNhc2UgJ3V0ZjE2bGUnOlxuICAgICAgY2FzZSAndXRmLTE2bGUnOlxuICAgICAgICByZXR1cm4gdXRmMTZsZVNsaWNlKHRoaXMsIHN0YXJ0LCBlbmQpXG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmIChsb3dlcmVkQ2FzZSkgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5rbm93biBlbmNvZGluZzogJyArIGVuY29kaW5nKVxuICAgICAgICBlbmNvZGluZyA9IChlbmNvZGluZyArICcnKS50b0xvd2VyQ2FzZSgpXG4gICAgICAgIGxvd2VyZWRDYXNlID0gdHJ1ZVxuICAgIH1cbiAgfVxufVxuXG4vLyBUaGlzIHByb3BlcnR5IGlzIHVzZWQgYnkgYEJ1ZmZlci5pc0J1ZmZlcmAgKGFuZCB0aGUgYGlzLWJ1ZmZlcmAgbnBtIHBhY2thZ2UpXG4vLyB0byBkZXRlY3QgYSBCdWZmZXIgaW5zdGFuY2UuIEl0J3Mgbm90IHBvc3NpYmxlIHRvIHVzZSBgaW5zdGFuY2VvZiBCdWZmZXJgXG4vLyByZWxpYWJseSBpbiBhIGJyb3dzZXJpZnkgY29udGV4dCBiZWNhdXNlIHRoZXJlIGNvdWxkIGJlIG11bHRpcGxlIGRpZmZlcmVudFxuLy8gY29waWVzIG9mIHRoZSAnYnVmZmVyJyBwYWNrYWdlIGluIHVzZS4gVGhpcyBtZXRob2Qgd29ya3MgZXZlbiBmb3IgQnVmZmVyXG4vLyBpbnN0YW5jZXMgdGhhdCB3ZXJlIGNyZWF0ZWQgZnJvbSBhbm90aGVyIGNvcHkgb2YgdGhlIGBidWZmZXJgIHBhY2thZ2UuXG4vLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvYnVmZmVyL2lzc3Vlcy8xNTRcbkJ1ZmZlci5wcm90b3R5cGUuX2lzQnVmZmVyID0gdHJ1ZVxuXG5mdW5jdGlvbiBzd2FwIChiLCBuLCBtKSB7XG4gIHZhciBpID0gYltuXVxuICBiW25dID0gYlttXVxuICBiW21dID0gaVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnN3YXAxNiA9IGZ1bmN0aW9uIHN3YXAxNiAoKSB7XG4gIHZhciBsZW4gPSB0aGlzLmxlbmd0aFxuICBpZiAobGVuICUgMiAhPT0gMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMTYtYml0cycpXG4gIH1cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkgKz0gMikge1xuICAgIHN3YXAodGhpcywgaSwgaSArIDEpXG4gIH1cbiAgcmV0dXJuIHRoaXNcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5zd2FwMzIgPSBmdW5jdGlvbiBzd2FwMzIgKCkge1xuICB2YXIgbGVuID0gdGhpcy5sZW5ndGhcbiAgaWYgKGxlbiAlIDQgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDMyLWJpdHMnKVxuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICBzd2FwKHRoaXMsIGksIGkgKyAzKVxuICAgIHN3YXAodGhpcywgaSArIDEsIGkgKyAyKVxuICB9XG4gIHJldHVybiB0aGlzXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUuc3dhcDY0ID0gZnVuY3Rpb24gc3dhcDY0ICgpIHtcbiAgdmFyIGxlbiA9IHRoaXMubGVuZ3RoXG4gIGlmIChsZW4gJSA4ICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0J1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA2NC1iaXRzJylcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSArPSA4KSB7XG4gICAgc3dhcCh0aGlzLCBpLCBpICsgNylcbiAgICBzd2FwKHRoaXMsIGkgKyAxLCBpICsgNilcbiAgICBzd2FwKHRoaXMsIGkgKyAyLCBpICsgNSlcbiAgICBzd2FwKHRoaXMsIGkgKyAzLCBpICsgNClcbiAgfVxuICByZXR1cm4gdGhpc1xufVxuXG5CdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcgKCkge1xuICB2YXIgbGVuZ3RoID0gdGhpcy5sZW5ndGhcbiAgaWYgKGxlbmd0aCA9PT0gMCkgcmV0dXJuICcnXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSByZXR1cm4gdXRmOFNsaWNlKHRoaXMsIDAsIGxlbmd0aClcbiAgcmV0dXJuIHNsb3dUb1N0cmluZy5hcHBseSh0aGlzLCBhcmd1bWVudHMpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUudG9Mb2NhbGVTdHJpbmcgPSBCdWZmZXIucHJvdG90eXBlLnRvU3RyaW5nXG5cbkJ1ZmZlci5wcm90b3R5cGUuZXF1YWxzID0gZnVuY3Rpb24gZXF1YWxzIChiKSB7XG4gIGlmICghQnVmZmVyLmlzQnVmZmVyKGIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyJylcbiAgaWYgKHRoaXMgPT09IGIpIHJldHVybiB0cnVlXG4gIHJldHVybiBCdWZmZXIuY29tcGFyZSh0aGlzLCBiKSA9PT0gMFxufVxuXG5CdWZmZXIucHJvdG90eXBlLmluc3BlY3QgPSBmdW5jdGlvbiBpbnNwZWN0ICgpIHtcbiAgdmFyIHN0ciA9ICcnXG4gIHZhciBtYXggPSBleHBvcnRzLklOU1BFQ1RfTUFYX0JZVEVTXG4gIHN0ciA9IHRoaXMudG9TdHJpbmcoJ2hleCcsIDAsIG1heCkucmVwbGFjZSgvKC57Mn0pL2csICckMSAnKS50cmltKClcbiAgaWYgKHRoaXMubGVuZ3RoID4gbWF4KSBzdHIgKz0gJyAuLi4gJ1xuICByZXR1cm4gJzxCdWZmZXIgJyArIHN0ciArICc+J1xufVxuXG5CdWZmZXIucHJvdG90eXBlLmNvbXBhcmUgPSBmdW5jdGlvbiBjb21wYXJlICh0YXJnZXQsIHN0YXJ0LCBlbmQsIHRoaXNTdGFydCwgdGhpc0VuZCkge1xuICBpZiAoaXNJbnN0YW5jZSh0YXJnZXQsIFVpbnQ4QXJyYXkpKSB7XG4gICAgdGFyZ2V0ID0gQnVmZmVyLmZyb20odGFyZ2V0LCB0YXJnZXQub2Zmc2V0LCB0YXJnZXQuYnl0ZUxlbmd0aClcbiAgfVxuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcih0YXJnZXQpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgICdUaGUgXCJ0YXJnZXRcIiBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIEJ1ZmZlciBvciBVaW50OEFycmF5LiAnICtcbiAgICAgICdSZWNlaXZlZCB0eXBlICcgKyAodHlwZW9mIHRhcmdldClcbiAgICApXG4gIH1cblxuICBpZiAoc3RhcnQgPT09IHVuZGVmaW5lZCkge1xuICAgIHN0YXJ0ID0gMFxuICB9XG4gIGlmIChlbmQgPT09IHVuZGVmaW5lZCkge1xuICAgIGVuZCA9IHRhcmdldCA/IHRhcmdldC5sZW5ndGggOiAwXG4gIH1cbiAgaWYgKHRoaXNTdGFydCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhpc1N0YXJ0ID0gMFxuICB9XG4gIGlmICh0aGlzRW5kID09PSB1bmRlZmluZWQpIHtcbiAgICB0aGlzRW5kID0gdGhpcy5sZW5ndGhcbiAgfVxuXG4gIGlmIChzdGFydCA8IDAgfHwgZW5kID4gdGFyZ2V0Lmxlbmd0aCB8fCB0aGlzU3RhcnQgPCAwIHx8IHRoaXNFbmQgPiB0aGlzLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdvdXQgb2YgcmFuZ2UgaW5kZXgnKVxuICB9XG5cbiAgaWYgKHRoaXNTdGFydCA+PSB0aGlzRW5kICYmIHN0YXJ0ID49IGVuZCkge1xuICAgIHJldHVybiAwXG4gIH1cbiAgaWYgKHRoaXNTdGFydCA+PSB0aGlzRW5kKSB7XG4gICAgcmV0dXJuIC0xXG4gIH1cbiAgaWYgKHN0YXJ0ID49IGVuZCkge1xuICAgIHJldHVybiAxXG4gIH1cblxuICBzdGFydCA+Pj49IDBcbiAgZW5kID4+Pj0gMFxuICB0aGlzU3RhcnQgPj4+PSAwXG4gIHRoaXNFbmQgPj4+PSAwXG5cbiAgaWYgKHRoaXMgPT09IHRhcmdldCkgcmV0dXJuIDBcblxuICB2YXIgeCA9IHRoaXNFbmQgLSB0aGlzU3RhcnRcbiAgdmFyIHkgPSBlbmQgLSBzdGFydFxuICB2YXIgbGVuID0gTWF0aC5taW4oeCwgeSlcblxuICB2YXIgdGhpc0NvcHkgPSB0aGlzLnNsaWNlKHRoaXNTdGFydCwgdGhpc0VuZClcbiAgdmFyIHRhcmdldENvcHkgPSB0YXJnZXQuc2xpY2Uoc3RhcnQsIGVuZClcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgaWYgKHRoaXNDb3B5W2ldICE9PSB0YXJnZXRDb3B5W2ldKSB7XG4gICAgICB4ID0gdGhpc0NvcHlbaV1cbiAgICAgIHkgPSB0YXJnZXRDb3B5W2ldXG4gICAgICBicmVha1xuICAgIH1cbiAgfVxuXG4gIGlmICh4IDwgeSkgcmV0dXJuIC0xXG4gIGlmICh5IDwgeCkgcmV0dXJuIDFcbiAgcmV0dXJuIDBcbn1cblxuLy8gRmluZHMgZWl0aGVyIHRoZSBmaXJzdCBpbmRleCBvZiBgdmFsYCBpbiBgYnVmZmVyYCBhdCBvZmZzZXQgPj0gYGJ5dGVPZmZzZXRgLFxuLy8gT1IgdGhlIGxhc3QgaW5kZXggb2YgYHZhbGAgaW4gYGJ1ZmZlcmAgYXQgb2Zmc2V0IDw9IGBieXRlT2Zmc2V0YC5cbi8vXG4vLyBBcmd1bWVudHM6XG4vLyAtIGJ1ZmZlciAtIGEgQnVmZmVyIHRvIHNlYXJjaFxuLy8gLSB2YWwgLSBhIHN0cmluZywgQnVmZmVyLCBvciBudW1iZXJcbi8vIC0gYnl0ZU9mZnNldCAtIGFuIGluZGV4IGludG8gYGJ1ZmZlcmA7IHdpbGwgYmUgY2xhbXBlZCB0byBhbiBpbnQzMlxuLy8gLSBlbmNvZGluZyAtIGFuIG9wdGlvbmFsIGVuY29kaW5nLCByZWxldmFudCBpcyB2YWwgaXMgYSBzdHJpbmdcbi8vIC0gZGlyIC0gdHJ1ZSBmb3IgaW5kZXhPZiwgZmFsc2UgZm9yIGxhc3RJbmRleE9mXG5mdW5jdGlvbiBiaWRpcmVjdGlvbmFsSW5kZXhPZiAoYnVmZmVyLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCBkaXIpIHtcbiAgLy8gRW1wdHkgYnVmZmVyIG1lYW5zIG5vIG1hdGNoXG4gIGlmIChidWZmZXIubGVuZ3RoID09PSAwKSByZXR1cm4gLTFcblxuICAvLyBOb3JtYWxpemUgYnl0ZU9mZnNldFxuICBpZiAodHlwZW9mIGJ5dGVPZmZzZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgZW5jb2RpbmcgPSBieXRlT2Zmc2V0XG4gICAgYnl0ZU9mZnNldCA9IDBcbiAgfSBlbHNlIGlmIChieXRlT2Zmc2V0ID4gMHg3ZmZmZmZmZikge1xuICAgIGJ5dGVPZmZzZXQgPSAweDdmZmZmZmZmXG4gIH0gZWxzZSBpZiAoYnl0ZU9mZnNldCA8IC0weDgwMDAwMDAwKSB7XG4gICAgYnl0ZU9mZnNldCA9IC0weDgwMDAwMDAwXG4gIH1cbiAgYnl0ZU9mZnNldCA9ICtieXRlT2Zmc2V0IC8vIENvZXJjZSB0byBOdW1iZXIuXG4gIGlmIChudW1iZXJJc05hTihieXRlT2Zmc2V0KSkge1xuICAgIC8vIGJ5dGVPZmZzZXQ6IGl0IGl0J3MgdW5kZWZpbmVkLCBudWxsLCBOYU4sIFwiZm9vXCIsIGV0Yywgc2VhcmNoIHdob2xlIGJ1ZmZlclxuICAgIGJ5dGVPZmZzZXQgPSBkaXIgPyAwIDogKGJ1ZmZlci5sZW5ndGggLSAxKVxuICB9XG5cbiAgLy8gTm9ybWFsaXplIGJ5dGVPZmZzZXQ6IG5lZ2F0aXZlIG9mZnNldHMgc3RhcnQgZnJvbSB0aGUgZW5kIG9mIHRoZSBidWZmZXJcbiAgaWYgKGJ5dGVPZmZzZXQgPCAwKSBieXRlT2Zmc2V0ID0gYnVmZmVyLmxlbmd0aCArIGJ5dGVPZmZzZXRcbiAgaWYgKGJ5dGVPZmZzZXQgPj0gYnVmZmVyLmxlbmd0aCkge1xuICAgIGlmIChkaXIpIHJldHVybiAtMVxuICAgIGVsc2UgYnl0ZU9mZnNldCA9IGJ1ZmZlci5sZW5ndGggLSAxXG4gIH0gZWxzZSBpZiAoYnl0ZU9mZnNldCA8IDApIHtcbiAgICBpZiAoZGlyKSBieXRlT2Zmc2V0ID0gMFxuICAgIGVsc2UgcmV0dXJuIC0xXG4gIH1cblxuICAvLyBOb3JtYWxpemUgdmFsXG4gIGlmICh0eXBlb2YgdmFsID09PSAnc3RyaW5nJykge1xuICAgIHZhbCA9IEJ1ZmZlci5mcm9tKHZhbCwgZW5jb2RpbmcpXG4gIH1cblxuICAvLyBGaW5hbGx5LCBzZWFyY2ggZWl0aGVyIGluZGV4T2YgKGlmIGRpciBpcyB0cnVlKSBvciBsYXN0SW5kZXhPZlxuICBpZiAoQnVmZmVyLmlzQnVmZmVyKHZhbCkpIHtcbiAgICAvLyBTcGVjaWFsIGNhc2U6IGxvb2tpbmcgZm9yIGVtcHR5IHN0cmluZy9idWZmZXIgYWx3YXlzIGZhaWxzXG4gICAgaWYgKHZhbC5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiAtMVxuICAgIH1cbiAgICByZXR1cm4gYXJyYXlJbmRleE9mKGJ1ZmZlciwgdmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZywgZGlyKVxuICB9IGVsc2UgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgdmFsID0gdmFsICYgMHhGRiAvLyBTZWFyY2ggZm9yIGEgYnl0ZSB2YWx1ZSBbMC0yNTVdXG4gICAgaWYgKHR5cGVvZiBVaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBpZiAoZGlyKSB7XG4gICAgICAgIHJldHVybiBVaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwoYnVmZmVyLCB2YWwsIGJ5dGVPZmZzZXQpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gVWludDhBcnJheS5wcm90b3R5cGUubGFzdEluZGV4T2YuY2FsbChidWZmZXIsIHZhbCwgYnl0ZU9mZnNldClcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGFycmF5SW5kZXhPZihidWZmZXIsIFsgdmFsIF0sIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCBkaXIpXG4gIH1cblxuICB0aHJvdyBuZXcgVHlwZUVycm9yKCd2YWwgbXVzdCBiZSBzdHJpbmcsIG51bWJlciBvciBCdWZmZXInKVxufVxuXG5mdW5jdGlvbiBhcnJheUluZGV4T2YgKGFyciwgdmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZywgZGlyKSB7XG4gIHZhciBpbmRleFNpemUgPSAxXG4gIHZhciBhcnJMZW5ndGggPSBhcnIubGVuZ3RoXG4gIHZhciB2YWxMZW5ndGggPSB2YWwubGVuZ3RoXG5cbiAgaWYgKGVuY29kaW5nICE9PSB1bmRlZmluZWQpIHtcbiAgICBlbmNvZGluZyA9IFN0cmluZyhlbmNvZGluZykudG9Mb3dlckNhc2UoKVxuICAgIGlmIChlbmNvZGluZyA9PT0gJ3VjczInIHx8IGVuY29kaW5nID09PSAndWNzLTInIHx8XG4gICAgICAgIGVuY29kaW5nID09PSAndXRmMTZsZScgfHwgZW5jb2RpbmcgPT09ICd1dGYtMTZsZScpIHtcbiAgICAgIGlmIChhcnIubGVuZ3RoIDwgMiB8fCB2YWwubGVuZ3RoIDwgMikge1xuICAgICAgICByZXR1cm4gLTFcbiAgICAgIH1cbiAgICAgIGluZGV4U2l6ZSA9IDJcbiAgICAgIGFyckxlbmd0aCAvPSAyXG4gICAgICB2YWxMZW5ndGggLz0gMlxuICAgICAgYnl0ZU9mZnNldCAvPSAyXG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVhZCAoYnVmLCBpKSB7XG4gICAgaWYgKGluZGV4U2l6ZSA9PT0gMSkge1xuICAgICAgcmV0dXJuIGJ1ZltpXVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gYnVmLnJlYWRVSW50MTZCRShpICogaW5kZXhTaXplKVxuICAgIH1cbiAgfVxuXG4gIHZhciBpXG4gIGlmIChkaXIpIHtcbiAgICB2YXIgZm91bmRJbmRleCA9IC0xXG4gICAgZm9yIChpID0gYnl0ZU9mZnNldDsgaSA8IGFyckxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAocmVhZChhcnIsIGkpID09PSByZWFkKHZhbCwgZm91bmRJbmRleCA9PT0gLTEgPyAwIDogaSAtIGZvdW5kSW5kZXgpKSB7XG4gICAgICAgIGlmIChmb3VuZEluZGV4ID09PSAtMSkgZm91bmRJbmRleCA9IGlcbiAgICAgICAgaWYgKGkgLSBmb3VuZEluZGV4ICsgMSA9PT0gdmFsTGVuZ3RoKSByZXR1cm4gZm91bmRJbmRleCAqIGluZGV4U2l6ZVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGZvdW5kSW5kZXggIT09IC0xKSBpIC09IGkgLSBmb3VuZEluZGV4XG4gICAgICAgIGZvdW5kSW5kZXggPSAtMVxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoYnl0ZU9mZnNldCArIHZhbExlbmd0aCA+IGFyckxlbmd0aCkgYnl0ZU9mZnNldCA9IGFyckxlbmd0aCAtIHZhbExlbmd0aFxuICAgIGZvciAoaSA9IGJ5dGVPZmZzZXQ7IGkgPj0gMDsgaS0tKSB7XG4gICAgICB2YXIgZm91bmQgPSB0cnVlXG4gICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbExlbmd0aDsgaisrKSB7XG4gICAgICAgIGlmIChyZWFkKGFyciwgaSArIGopICE9PSByZWFkKHZhbCwgaikpIHtcbiAgICAgICAgICBmb3VuZCA9IGZhbHNlXG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGZvdW5kKSByZXR1cm4gaVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAtMVxufVxuXG5CdWZmZXIucHJvdG90eXBlLmluY2x1ZGVzID0gZnVuY3Rpb24gaW5jbHVkZXMgKHZhbCwgYnl0ZU9mZnNldCwgZW5jb2RpbmcpIHtcbiAgcmV0dXJuIHRoaXMuaW5kZXhPZih2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nKSAhPT0gLTFcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5pbmRleE9mID0gZnVuY3Rpb24gaW5kZXhPZiAodmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZykge1xuICByZXR1cm4gYmlkaXJlY3Rpb25hbEluZGV4T2YodGhpcywgdmFsLCBieXRlT2Zmc2V0LCBlbmNvZGluZywgdHJ1ZSlcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5sYXN0SW5kZXhPZiA9IGZ1bmN0aW9uIGxhc3RJbmRleE9mICh2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nKSB7XG4gIHJldHVybiBiaWRpcmVjdGlvbmFsSW5kZXhPZih0aGlzLCB2YWwsIGJ5dGVPZmZzZXQsIGVuY29kaW5nLCBmYWxzZSlcbn1cblxuZnVuY3Rpb24gaGV4V3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICBvZmZzZXQgPSBOdW1iZXIob2Zmc2V0KSB8fCAwXG4gIHZhciByZW1haW5pbmcgPSBidWYubGVuZ3RoIC0gb2Zmc2V0XG4gIGlmICghbGVuZ3RoKSB7XG4gICAgbGVuZ3RoID0gcmVtYWluaW5nXG4gIH0gZWxzZSB7XG4gICAgbGVuZ3RoID0gTnVtYmVyKGxlbmd0aClcbiAgICBpZiAobGVuZ3RoID4gcmVtYWluaW5nKSB7XG4gICAgICBsZW5ndGggPSByZW1haW5pbmdcbiAgICB9XG4gIH1cblxuICB2YXIgc3RyTGVuID0gc3RyaW5nLmxlbmd0aFxuXG4gIGlmIChsZW5ndGggPiBzdHJMZW4gLyAyKSB7XG4gICAgbGVuZ3RoID0gc3RyTGVuIC8gMlxuICB9XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICB2YXIgcGFyc2VkID0gcGFyc2VJbnQoc3RyaW5nLnN1YnN0cihpICogMiwgMiksIDE2KVxuICAgIGlmIChudW1iZXJJc05hTihwYXJzZWQpKSByZXR1cm4gaVxuICAgIGJ1ZltvZmZzZXQgKyBpXSA9IHBhcnNlZFxuICB9XG4gIHJldHVybiBpXG59XG5cbmZ1bmN0aW9uIHV0ZjhXcml0ZSAoYnVmLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBibGl0QnVmZmVyKHV0ZjhUb0J5dGVzKHN0cmluZywgYnVmLmxlbmd0aCAtIG9mZnNldCksIGJ1Ziwgb2Zmc2V0LCBsZW5ndGgpXG59XG5cbmZ1bmN0aW9uIGFzY2lpV3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYmxpdEJ1ZmZlcihhc2NpaVRvQnl0ZXMoc3RyaW5nKSwgYnVmLCBvZmZzZXQsIGxlbmd0aClcbn1cblxuZnVuY3Rpb24gbGF0aW4xV3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYXNjaWlXcml0ZShidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG59XG5cbmZ1bmN0aW9uIGJhc2U2NFdyaXRlIChidWYsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgcmV0dXJuIGJsaXRCdWZmZXIoYmFzZTY0VG9CeXRlcyhzdHJpbmcpLCBidWYsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5mdW5jdGlvbiB1Y3MyV3JpdGUgKGJ1Ziwgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aCkge1xuICByZXR1cm4gYmxpdEJ1ZmZlcih1dGYxNmxlVG9CeXRlcyhzdHJpbmcsIGJ1Zi5sZW5ndGggLSBvZmZzZXQpLCBidWYsIG9mZnNldCwgbGVuZ3RoKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlID0gZnVuY3Rpb24gd3JpdGUgKHN0cmluZywgb2Zmc2V0LCBsZW5ndGgsIGVuY29kaW5nKSB7XG4gIC8vIEJ1ZmZlciN3cml0ZShzdHJpbmcpXG4gIGlmIChvZmZzZXQgPT09IHVuZGVmaW5lZCkge1xuICAgIGVuY29kaW5nID0gJ3V0ZjgnXG4gICAgbGVuZ3RoID0gdGhpcy5sZW5ndGhcbiAgICBvZmZzZXQgPSAwXG4gIC8vIEJ1ZmZlciN3cml0ZShzdHJpbmcsIGVuY29kaW5nKVxuICB9IGVsc2UgaWYgKGxlbmd0aCA9PT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvZmZzZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgZW5jb2RpbmcgPSBvZmZzZXRcbiAgICBsZW5ndGggPSB0aGlzLmxlbmd0aFxuICAgIG9mZnNldCA9IDBcbiAgLy8gQnVmZmVyI3dyaXRlKHN0cmluZywgb2Zmc2V0WywgbGVuZ3RoXVssIGVuY29kaW5nXSlcbiAgfSBlbHNlIGlmIChpc0Zpbml0ZShvZmZzZXQpKSB7XG4gICAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gICAgaWYgKGlzRmluaXRlKGxlbmd0aCkpIHtcbiAgICAgIGxlbmd0aCA9IGxlbmd0aCA+Pj4gMFxuICAgICAgaWYgKGVuY29kaW5nID09PSB1bmRlZmluZWQpIGVuY29kaW5nID0gJ3V0ZjgnXG4gICAgfSBlbHNlIHtcbiAgICAgIGVuY29kaW5nID0gbGVuZ3RoXG4gICAgICBsZW5ndGggPSB1bmRlZmluZWRcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0J1ZmZlci53cml0ZShzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXRbLCBsZW5ndGhdKSBpcyBubyBsb25nZXIgc3VwcG9ydGVkJ1xuICAgIClcbiAgfVxuXG4gIHZhciByZW1haW5pbmcgPSB0aGlzLmxlbmd0aCAtIG9mZnNldFxuICBpZiAobGVuZ3RoID09PSB1bmRlZmluZWQgfHwgbGVuZ3RoID4gcmVtYWluaW5nKSBsZW5ndGggPSByZW1haW5pbmdcblxuICBpZiAoKHN0cmluZy5sZW5ndGggPiAwICYmIChsZW5ndGggPCAwIHx8IG9mZnNldCA8IDApKSB8fCBvZmZzZXQgPiB0aGlzLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdBdHRlbXB0IHRvIHdyaXRlIG91dHNpZGUgYnVmZmVyIGJvdW5kcycpXG4gIH1cblxuICBpZiAoIWVuY29kaW5nKSBlbmNvZGluZyA9ICd1dGY4J1xuXG4gIHZhciBsb3dlcmVkQ2FzZSA9IGZhbHNlXG4gIGZvciAoOzspIHtcbiAgICBzd2l0Y2ggKGVuY29kaW5nKSB7XG4gICAgICBjYXNlICdoZXgnOlxuICAgICAgICByZXR1cm4gaGV4V3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgY2FzZSAndXRmOCc6XG4gICAgICBjYXNlICd1dGYtOCc6XG4gICAgICAgIHJldHVybiB1dGY4V3JpdGUodGhpcywgc3RyaW5nLCBvZmZzZXQsIGxlbmd0aClcblxuICAgICAgY2FzZSAnYXNjaWknOlxuICAgICAgICByZXR1cm4gYXNjaWlXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBjYXNlICdsYXRpbjEnOlxuICAgICAgY2FzZSAnYmluYXJ5JzpcbiAgICAgICAgcmV0dXJuIGxhdGluMVdyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG5cbiAgICAgIGNhc2UgJ2Jhc2U2NCc6XG4gICAgICAgIC8vIFdhcm5pbmc6IG1heExlbmd0aCBub3QgdGFrZW4gaW50byBhY2NvdW50IGluIGJhc2U2NFdyaXRlXG4gICAgICAgIHJldHVybiBiYXNlNjRXcml0ZSh0aGlzLCBzdHJpbmcsIG9mZnNldCwgbGVuZ3RoKVxuXG4gICAgICBjYXNlICd1Y3MyJzpcbiAgICAgIGNhc2UgJ3Vjcy0yJzpcbiAgICAgIGNhc2UgJ3V0ZjE2bGUnOlxuICAgICAgY2FzZSAndXRmLTE2bGUnOlxuICAgICAgICByZXR1cm4gdWNzMldyaXRlKHRoaXMsIHN0cmluZywgb2Zmc2V0LCBsZW5ndGgpXG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmIChsb3dlcmVkQ2FzZSkgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5rbm93biBlbmNvZGluZzogJyArIGVuY29kaW5nKVxuICAgICAgICBlbmNvZGluZyA9ICgnJyArIGVuY29kaW5nKS50b0xvd2VyQ2FzZSgpXG4gICAgICAgIGxvd2VyZWRDYXNlID0gdHJ1ZVxuICAgIH1cbiAgfVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnRvSlNPTiA9IGZ1bmN0aW9uIHRvSlNPTiAoKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogJ0J1ZmZlcicsXG4gICAgZGF0YTogQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodGhpcy5fYXJyIHx8IHRoaXMsIDApXG4gIH1cbn1cblxuZnVuY3Rpb24gYmFzZTY0U2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICBpZiAoc3RhcnQgPT09IDAgJiYgZW5kID09PSBidWYubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGJhc2U2NC5mcm9tQnl0ZUFycmF5KGJ1ZilcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gYmFzZTY0LmZyb21CeXRlQXJyYXkoYnVmLnNsaWNlKHN0YXJ0LCBlbmQpKVxuICB9XG59XG5cbmZ1bmN0aW9uIHV0ZjhTbGljZSAoYnVmLCBzdGFydCwgZW5kKSB7XG4gIGVuZCA9IE1hdGgubWluKGJ1Zi5sZW5ndGgsIGVuZClcbiAgdmFyIHJlcyA9IFtdXG5cbiAgdmFyIGkgPSBzdGFydFxuICB3aGlsZSAoaSA8IGVuZCkge1xuICAgIHZhciBmaXJzdEJ5dGUgPSBidWZbaV1cbiAgICB2YXIgY29kZVBvaW50ID0gbnVsbFxuICAgIHZhciBieXRlc1BlclNlcXVlbmNlID0gKGZpcnN0Qnl0ZSA+IDB4RUYpID8gNFxuICAgICAgOiAoZmlyc3RCeXRlID4gMHhERikgPyAzXG4gICAgICAgIDogKGZpcnN0Qnl0ZSA+IDB4QkYpID8gMlxuICAgICAgICAgIDogMVxuXG4gICAgaWYgKGkgKyBieXRlc1BlclNlcXVlbmNlIDw9IGVuZCkge1xuICAgICAgdmFyIHNlY29uZEJ5dGUsIHRoaXJkQnl0ZSwgZm91cnRoQnl0ZSwgdGVtcENvZGVQb2ludFxuXG4gICAgICBzd2l0Y2ggKGJ5dGVzUGVyU2VxdWVuY2UpIHtcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgIGlmIChmaXJzdEJ5dGUgPCAweDgwKSB7XG4gICAgICAgICAgICBjb2RlUG9pbnQgPSBmaXJzdEJ5dGVcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgIHNlY29uZEJ5dGUgPSBidWZbaSArIDFdXG4gICAgICAgICAgaWYgKChzZWNvbmRCeXRlICYgMHhDMCkgPT09IDB4ODApIHtcbiAgICAgICAgICAgIHRlbXBDb2RlUG9pbnQgPSAoZmlyc3RCeXRlICYgMHgxRikgPDwgMHg2IHwgKHNlY29uZEJ5dGUgJiAweDNGKVxuICAgICAgICAgICAgaWYgKHRlbXBDb2RlUG9pbnQgPiAweDdGKSB7XG4gICAgICAgICAgICAgIGNvZGVQb2ludCA9IHRlbXBDb2RlUG9pbnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgIHNlY29uZEJ5dGUgPSBidWZbaSArIDFdXG4gICAgICAgICAgdGhpcmRCeXRlID0gYnVmW2kgKyAyXVxuICAgICAgICAgIGlmICgoc2Vjb25kQnl0ZSAmIDB4QzApID09PSAweDgwICYmICh0aGlyZEJ5dGUgJiAweEMwKSA9PT0gMHg4MCkge1xuICAgICAgICAgICAgdGVtcENvZGVQb2ludCA9IChmaXJzdEJ5dGUgJiAweEYpIDw8IDB4QyB8IChzZWNvbmRCeXRlICYgMHgzRikgPDwgMHg2IHwgKHRoaXJkQnl0ZSAmIDB4M0YpXG4gICAgICAgICAgICBpZiAodGVtcENvZGVQb2ludCA+IDB4N0ZGICYmICh0ZW1wQ29kZVBvaW50IDwgMHhEODAwIHx8IHRlbXBDb2RlUG9pbnQgPiAweERGRkYpKSB7XG4gICAgICAgICAgICAgIGNvZGVQb2ludCA9IHRlbXBDb2RlUG9pbnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWtcbiAgICAgICAgY2FzZSA0OlxuICAgICAgICAgIHNlY29uZEJ5dGUgPSBidWZbaSArIDFdXG4gICAgICAgICAgdGhpcmRCeXRlID0gYnVmW2kgKyAyXVxuICAgICAgICAgIGZvdXJ0aEJ5dGUgPSBidWZbaSArIDNdXG4gICAgICAgICAgaWYgKChzZWNvbmRCeXRlICYgMHhDMCkgPT09IDB4ODAgJiYgKHRoaXJkQnl0ZSAmIDB4QzApID09PSAweDgwICYmIChmb3VydGhCeXRlICYgMHhDMCkgPT09IDB4ODApIHtcbiAgICAgICAgICAgIHRlbXBDb2RlUG9pbnQgPSAoZmlyc3RCeXRlICYgMHhGKSA8PCAweDEyIHwgKHNlY29uZEJ5dGUgJiAweDNGKSA8PCAweEMgfCAodGhpcmRCeXRlICYgMHgzRikgPDwgMHg2IHwgKGZvdXJ0aEJ5dGUgJiAweDNGKVxuICAgICAgICAgICAgaWYgKHRlbXBDb2RlUG9pbnQgPiAweEZGRkYgJiYgdGVtcENvZGVQb2ludCA8IDB4MTEwMDAwKSB7XG4gICAgICAgICAgICAgIGNvZGVQb2ludCA9IHRlbXBDb2RlUG9pbnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNvZGVQb2ludCA9PT0gbnVsbCkge1xuICAgICAgLy8gd2UgZGlkIG5vdCBnZW5lcmF0ZSBhIHZhbGlkIGNvZGVQb2ludCBzbyBpbnNlcnQgYVxuICAgICAgLy8gcmVwbGFjZW1lbnQgY2hhciAoVStGRkZEKSBhbmQgYWR2YW5jZSBvbmx5IDEgYnl0ZVxuICAgICAgY29kZVBvaW50ID0gMHhGRkZEXG4gICAgICBieXRlc1BlclNlcXVlbmNlID0gMVxuICAgIH0gZWxzZSBpZiAoY29kZVBvaW50ID4gMHhGRkZGKSB7XG4gICAgICAvLyBlbmNvZGUgdG8gdXRmMTYgKHN1cnJvZ2F0ZSBwYWlyIGRhbmNlKVxuICAgICAgY29kZVBvaW50IC09IDB4MTAwMDBcbiAgICAgIHJlcy5wdXNoKGNvZGVQb2ludCA+Pj4gMTAgJiAweDNGRiB8IDB4RDgwMClcbiAgICAgIGNvZGVQb2ludCA9IDB4REMwMCB8IGNvZGVQb2ludCAmIDB4M0ZGXG4gICAgfVxuXG4gICAgcmVzLnB1c2goY29kZVBvaW50KVxuICAgIGkgKz0gYnl0ZXNQZXJTZXF1ZW5jZVxuICB9XG5cbiAgcmV0dXJuIGRlY29kZUNvZGVQb2ludHNBcnJheShyZXMpXG59XG5cbi8vIEJhc2VkIG9uIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzIyNzQ3MjcyLzY4MDc0MiwgdGhlIGJyb3dzZXIgd2l0aFxuLy8gdGhlIGxvd2VzdCBsaW1pdCBpcyBDaHJvbWUsIHdpdGggMHgxMDAwMCBhcmdzLlxuLy8gV2UgZ28gMSBtYWduaXR1ZGUgbGVzcywgZm9yIHNhZmV0eVxudmFyIE1BWF9BUkdVTUVOVFNfTEVOR1RIID0gMHgxMDAwXG5cbmZ1bmN0aW9uIGRlY29kZUNvZGVQb2ludHNBcnJheSAoY29kZVBvaW50cykge1xuICB2YXIgbGVuID0gY29kZVBvaW50cy5sZW5ndGhcbiAgaWYgKGxlbiA8PSBNQVhfQVJHVU1FTlRTX0xFTkdUSCkge1xuICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZywgY29kZVBvaW50cykgLy8gYXZvaWQgZXh0cmEgc2xpY2UoKVxuICB9XG5cbiAgLy8gRGVjb2RlIGluIGNodW5rcyB0byBhdm9pZCBcImNhbGwgc3RhY2sgc2l6ZSBleGNlZWRlZFwiLlxuICB2YXIgcmVzID0gJydcbiAgdmFyIGkgPSAwXG4gIHdoaWxlIChpIDwgbGVuKSB7XG4gICAgcmVzICs9IFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoXG4gICAgICBTdHJpbmcsXG4gICAgICBjb2RlUG9pbnRzLnNsaWNlKGksIGkgKz0gTUFYX0FSR1VNRU5UU19MRU5HVEgpXG4gICAgKVxuICB9XG4gIHJldHVybiByZXNcbn1cblxuZnVuY3Rpb24gYXNjaWlTbGljZSAoYnVmLCBzdGFydCwgZW5kKSB7XG4gIHZhciByZXQgPSAnJ1xuICBlbmQgPSBNYXRoLm1pbihidWYubGVuZ3RoLCBlbmQpXG5cbiAgZm9yICh2YXIgaSA9IHN0YXJ0OyBpIDwgZW5kOyArK2kpIHtcbiAgICByZXQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShidWZbaV0gJiAweDdGKVxuICB9XG4gIHJldHVybiByZXRcbn1cblxuZnVuY3Rpb24gbGF0aW4xU2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICB2YXIgcmV0ID0gJydcbiAgZW5kID0gTWF0aC5taW4oYnVmLmxlbmd0aCwgZW5kKVxuXG4gIGZvciAodmFyIGkgPSBzdGFydDsgaSA8IGVuZDsgKytpKSB7XG4gICAgcmV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnVmW2ldKVxuICB9XG4gIHJldHVybiByZXRcbn1cblxuZnVuY3Rpb24gaGV4U2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICB2YXIgbGVuID0gYnVmLmxlbmd0aFxuXG4gIGlmICghc3RhcnQgfHwgc3RhcnQgPCAwKSBzdGFydCA9IDBcbiAgaWYgKCFlbmQgfHwgZW5kIDwgMCB8fCBlbmQgPiBsZW4pIGVuZCA9IGxlblxuXG4gIHZhciBvdXQgPSAnJ1xuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7ICsraSkge1xuICAgIG91dCArPSB0b0hleChidWZbaV0pXG4gIH1cbiAgcmV0dXJuIG91dFxufVxuXG5mdW5jdGlvbiB1dGYxNmxlU2xpY2UgKGJ1Ziwgc3RhcnQsIGVuZCkge1xuICB2YXIgYnl0ZXMgPSBidWYuc2xpY2Uoc3RhcnQsIGVuZClcbiAgdmFyIHJlcyA9ICcnXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYnl0ZXMubGVuZ3RoOyBpICs9IDIpIHtcbiAgICByZXMgKz0gU3RyaW5nLmZyb21DaGFyQ29kZShieXRlc1tpXSArIChieXRlc1tpICsgMV0gKiAyNTYpKVxuICB9XG4gIHJldHVybiByZXNcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5zbGljZSA9IGZ1bmN0aW9uIHNsaWNlIChzdGFydCwgZW5kKSB7XG4gIHZhciBsZW4gPSB0aGlzLmxlbmd0aFxuICBzdGFydCA9IH5+c3RhcnRcbiAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW4gOiB+fmVuZFxuXG4gIGlmIChzdGFydCA8IDApIHtcbiAgICBzdGFydCArPSBsZW5cbiAgICBpZiAoc3RhcnQgPCAwKSBzdGFydCA9IDBcbiAgfSBlbHNlIGlmIChzdGFydCA+IGxlbikge1xuICAgIHN0YXJ0ID0gbGVuXG4gIH1cblxuICBpZiAoZW5kIDwgMCkge1xuICAgIGVuZCArPSBsZW5cbiAgICBpZiAoZW5kIDwgMCkgZW5kID0gMFxuICB9IGVsc2UgaWYgKGVuZCA+IGxlbikge1xuICAgIGVuZCA9IGxlblxuICB9XG5cbiAgaWYgKGVuZCA8IHN0YXJ0KSBlbmQgPSBzdGFydFxuXG4gIHZhciBuZXdCdWYgPSB0aGlzLnN1YmFycmF5KHN0YXJ0LCBlbmQpXG4gIC8vIFJldHVybiBhbiBhdWdtZW50ZWQgYFVpbnQ4QXJyYXlgIGluc3RhbmNlXG4gIG5ld0J1Zi5fX3Byb3RvX18gPSBCdWZmZXIucHJvdG90eXBlXG4gIHJldHVybiBuZXdCdWZcbn1cblxuLypcbiAqIE5lZWQgdG8gbWFrZSBzdXJlIHRoYXQgYnVmZmVyIGlzbid0IHRyeWluZyB0byB3cml0ZSBvdXQgb2YgYm91bmRzLlxuICovXG5mdW5jdGlvbiBjaGVja09mZnNldCAob2Zmc2V0LCBleHQsIGxlbmd0aCkge1xuICBpZiAoKG9mZnNldCAlIDEpICE9PSAwIHx8IG9mZnNldCA8IDApIHRocm93IG5ldyBSYW5nZUVycm9yKCdvZmZzZXQgaXMgbm90IHVpbnQnKVxuICBpZiAob2Zmc2V0ICsgZXh0ID4gbGVuZ3RoKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignVHJ5aW5nIHRvIGFjY2VzcyBiZXlvbmQgYnVmZmVyIGxlbmd0aCcpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnRMRSA9IGZ1bmN0aW9uIHJlYWRVSW50TEUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgYnl0ZUxlbmd0aCwgdGhpcy5sZW5ndGgpXG5cbiAgdmFyIHZhbCA9IHRoaXNbb2Zmc2V0XVxuICB2YXIgbXVsID0gMVxuICB2YXIgaSA9IDBcbiAgd2hpbGUgKCsraSA8IGJ5dGVMZW5ndGggJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICB2YWwgKz0gdGhpc1tvZmZzZXQgKyBpXSAqIG11bFxuICB9XG5cbiAgcmV0dXJuIHZhbFxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50QkUgPSBmdW5jdGlvbiByZWFkVUludEJFIChvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aClcbiAgfVxuXG4gIHZhciB2YWwgPSB0aGlzW29mZnNldCArIC0tYnl0ZUxlbmd0aF1cbiAgdmFyIG11bCA9IDFcbiAgd2hpbGUgKGJ5dGVMZW5ndGggPiAwICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgdmFsICs9IHRoaXNbb2Zmc2V0ICsgLS1ieXRlTGVuZ3RoXSAqIG11bFxuICB9XG5cbiAgcmV0dXJuIHZhbFxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50OCA9IGZ1bmN0aW9uIHJlYWRVSW50OCAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAxLCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuIHRoaXNbb2Zmc2V0XVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MTZMRSA9IGZ1bmN0aW9uIHJlYWRVSW50MTZMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAyLCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuIHRoaXNbb2Zmc2V0XSB8ICh0aGlzW29mZnNldCArIDFdIDw8IDgpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQxNkJFID0gZnVuY3Rpb24gcmVhZFVJbnQxNkJFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDIsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gKHRoaXNbb2Zmc2V0XSA8PCA4KSB8IHRoaXNbb2Zmc2V0ICsgMV1cbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkVUludDMyTEUgPSBmdW5jdGlvbiByZWFkVUludDMyTEUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG5cbiAgcmV0dXJuICgodGhpc1tvZmZzZXRdKSB8XG4gICAgICAodGhpc1tvZmZzZXQgKyAxXSA8PCA4KSB8XG4gICAgICAodGhpc1tvZmZzZXQgKyAyXSA8PCAxNikpICtcbiAgICAgICh0aGlzW29mZnNldCArIDNdICogMHgxMDAwMDAwKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRVSW50MzJCRSA9IGZ1bmN0aW9uIHJlYWRVSW50MzJCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCA0LCB0aGlzLmxlbmd0aClcblxuICByZXR1cm4gKHRoaXNbb2Zmc2V0XSAqIDB4MTAwMDAwMCkgK1xuICAgICgodGhpc1tvZmZzZXQgKyAxXSA8PCAxNikgfFxuICAgICh0aGlzW29mZnNldCArIDJdIDw8IDgpIHxcbiAgICB0aGlzW29mZnNldCArIDNdKVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRJbnRMRSA9IGZ1bmN0aW9uIHJlYWRJbnRMRSAob2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCBieXRlTGVuZ3RoLCB0aGlzLmxlbmd0aClcblxuICB2YXIgdmFsID0gdGhpc1tvZmZzZXRdXG4gIHZhciBtdWwgPSAxXG4gIHZhciBpID0gMFxuICB3aGlsZSAoKytpIDwgYnl0ZUxlbmd0aCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHZhbCArPSB0aGlzW29mZnNldCArIGldICogbXVsXG4gIH1cbiAgbXVsICo9IDB4ODBcblxuICBpZiAodmFsID49IG11bCkgdmFsIC09IE1hdGgucG93KDIsIDggKiBieXRlTGVuZ3RoKVxuXG4gIHJldHVybiB2YWxcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50QkUgPSBmdW5jdGlvbiByZWFkSW50QkUgKG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgYnl0ZUxlbmd0aCwgdGhpcy5sZW5ndGgpXG5cbiAgdmFyIGkgPSBieXRlTGVuZ3RoXG4gIHZhciBtdWwgPSAxXG4gIHZhciB2YWwgPSB0aGlzW29mZnNldCArIC0taV1cbiAgd2hpbGUgKGkgPiAwICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgdmFsICs9IHRoaXNbb2Zmc2V0ICsgLS1pXSAqIG11bFxuICB9XG4gIG11bCAqPSAweDgwXG5cbiAgaWYgKHZhbCA+PSBtdWwpIHZhbCAtPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aClcblxuICByZXR1cm4gdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDggPSBmdW5jdGlvbiByZWFkSW50OCAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCAxLCB0aGlzLmxlbmd0aClcbiAgaWYgKCEodGhpc1tvZmZzZXRdICYgMHg4MCkpIHJldHVybiAodGhpc1tvZmZzZXRdKVxuICByZXR1cm4gKCgweGZmIC0gdGhpc1tvZmZzZXRdICsgMSkgKiAtMSlcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkSW50MTZMRSA9IGZ1bmN0aW9uIHJlYWRJbnQxNkxFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDIsIHRoaXMubGVuZ3RoKVxuICB2YXIgdmFsID0gdGhpc1tvZmZzZXRdIHwgKHRoaXNbb2Zmc2V0ICsgMV0gPDwgOClcbiAgcmV0dXJuICh2YWwgJiAweDgwMDApID8gdmFsIHwgMHhGRkZGMDAwMCA6IHZhbFxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRJbnQxNkJFID0gZnVuY3Rpb24gcmVhZEludDE2QkUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgMiwgdGhpcy5sZW5ndGgpXG4gIHZhciB2YWwgPSB0aGlzW29mZnNldCArIDFdIHwgKHRoaXNbb2Zmc2V0XSA8PCA4KVxuICByZXR1cm4gKHZhbCAmIDB4ODAwMCkgPyB2YWwgfCAweEZGRkYwMDAwIDogdmFsXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEludDMyTEUgPSBmdW5jdGlvbiByZWFkSW50MzJMRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCA0LCB0aGlzLmxlbmd0aClcblxuICByZXR1cm4gKHRoaXNbb2Zmc2V0XSkgfFxuICAgICh0aGlzW29mZnNldCArIDFdIDw8IDgpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAyXSA8PCAxNikgfFxuICAgICh0aGlzW29mZnNldCArIDNdIDw8IDI0KVxufVxuXG5CdWZmZXIucHJvdG90eXBlLnJlYWRJbnQzMkJFID0gZnVuY3Rpb24gcmVhZEludDMyQkUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgNCwgdGhpcy5sZW5ndGgpXG5cbiAgcmV0dXJuICh0aGlzW29mZnNldF0gPDwgMjQpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAxXSA8PCAxNikgfFxuICAgICh0aGlzW29mZnNldCArIDJdIDw8IDgpIHxcbiAgICAodGhpc1tvZmZzZXQgKyAzXSlcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkRmxvYXRMRSA9IGZ1bmN0aW9uIHJlYWRGbG9hdExFIChvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja09mZnNldChvZmZzZXQsIDQsIHRoaXMubGVuZ3RoKVxuICByZXR1cm4gaWVlZTc1NC5yZWFkKHRoaXMsIG9mZnNldCwgdHJ1ZSwgMjMsIDQpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUucmVhZEZsb2F0QkUgPSBmdW5jdGlvbiByZWFkRmxvYXRCRSAob2Zmc2V0LCBub0Fzc2VydCkge1xuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tPZmZzZXQob2Zmc2V0LCA0LCB0aGlzLmxlbmd0aClcbiAgcmV0dXJuIGllZWU3NTQucmVhZCh0aGlzLCBvZmZzZXQsIGZhbHNlLCAyMywgNClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkRG91YmxlTEUgPSBmdW5jdGlvbiByZWFkRG91YmxlTEUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgOCwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCB0cnVlLCA1MiwgOClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS5yZWFkRG91YmxlQkUgPSBmdW5jdGlvbiByZWFkRG91YmxlQkUgKG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrT2Zmc2V0KG9mZnNldCwgOCwgdGhpcy5sZW5ndGgpXG4gIHJldHVybiBpZWVlNzU0LnJlYWQodGhpcywgb2Zmc2V0LCBmYWxzZSwgNTIsIDgpXG59XG5cbmZ1bmN0aW9uIGNoZWNrSW50IChidWYsIHZhbHVlLCBvZmZzZXQsIGV4dCwgbWF4LCBtaW4pIHtcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoYnVmKSkgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJidWZmZXJcIiBhcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyIGluc3RhbmNlJylcbiAgaWYgKHZhbHVlID4gbWF4IHx8IHZhbHVlIDwgbWluKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignXCJ2YWx1ZVwiIGFyZ3VtZW50IGlzIG91dCBvZiBib3VuZHMnKVxuICBpZiAob2Zmc2V0ICsgZXh0ID4gYnVmLmxlbmd0aCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0luZGV4IG91dCBvZiByYW5nZScpXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50TEUgPSBmdW5jdGlvbiB3cml0ZVVJbnRMRSAodmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIHtcbiAgICB2YXIgbWF4Qnl0ZXMgPSBNYXRoLnBvdygyLCA4ICogYnl0ZUxlbmd0aCkgLSAxXG4gICAgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbWF4Qnl0ZXMsIDApXG4gIH1cblxuICB2YXIgbXVsID0gMVxuICB2YXIgaSA9IDBcbiAgdGhpc1tvZmZzZXRdID0gdmFsdWUgJiAweEZGXG4gIHdoaWxlICgrK2kgPCBieXRlTGVuZ3RoICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgdGhpc1tvZmZzZXQgKyBpXSA9ICh2YWx1ZSAvIG11bCkgJiAweEZGXG4gIH1cblxuICByZXR1cm4gb2Zmc2V0ICsgYnl0ZUxlbmd0aFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlVUludEJFID0gZnVuY3Rpb24gd3JpdGVVSW50QkUgKHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgdmFyIG1heEJ5dGVzID0gTWF0aC5wb3coMiwgOCAqIGJ5dGVMZW5ndGgpIC0gMVxuICAgIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG1heEJ5dGVzLCAwKVxuICB9XG5cbiAgdmFyIGkgPSBieXRlTGVuZ3RoIC0gMVxuICB2YXIgbXVsID0gMVxuICB0aGlzW29mZnNldCArIGldID0gdmFsdWUgJiAweEZGXG4gIHdoaWxlICgtLWkgPj0gMCAmJiAobXVsICo9IDB4MTAwKSkge1xuICAgIHRoaXNbb2Zmc2V0ICsgaV0gPSAodmFsdWUgLyBtdWwpICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIG9mZnNldCArIGJ5dGVMZW5ndGhcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZVVJbnQ4ID0gZnVuY3Rpb24gd3JpdGVVSW50OCAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDEsIDB4ZmYsIDApXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIHJldHVybiBvZmZzZXQgKyAxXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MTZMRSA9IGZ1bmN0aW9uIHdyaXRlVUludDE2TEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAyLCAweGZmZmYsIDApXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDgpXG4gIHJldHVybiBvZmZzZXQgKyAyXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MTZCRSA9IGZ1bmN0aW9uIHdyaXRlVUludDE2QkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAyLCAweGZmZmYsIDApXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSA+Pj4gOClcbiAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIHJldHVybiBvZmZzZXQgKyAyXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MzJMRSA9IGZ1bmN0aW9uIHdyaXRlVUludDMyTEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCA0LCAweGZmZmZmZmZmLCAwKVxuICB0aGlzW29mZnNldCArIDNdID0gKHZhbHVlID4+PiAyNClcbiAgdGhpc1tvZmZzZXQgKyAyXSA9ICh2YWx1ZSA+Pj4gMTYpXG4gIHRoaXNbb2Zmc2V0ICsgMV0gPSAodmFsdWUgPj4+IDgpXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIHJldHVybiBvZmZzZXQgKyA0XG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVVSW50MzJCRSA9IGZ1bmN0aW9uIHdyaXRlVUludDMyQkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCA0LCAweGZmZmZmZmZmLCAwKVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgPj4+IDI0KVxuICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiAxNilcbiAgdGhpc1tvZmZzZXQgKyAyXSA9ICh2YWx1ZSA+Pj4gOClcbiAgdGhpc1tvZmZzZXQgKyAzXSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIHJldHVybiBvZmZzZXQgKyA0XG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnRMRSA9IGZ1bmN0aW9uIHdyaXRlSW50TEUgKHZhbHVlLCBvZmZzZXQsIGJ5dGVMZW5ndGgsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgdmFyIGxpbWl0ID0gTWF0aC5wb3coMiwgKDggKiBieXRlTGVuZ3RoKSAtIDEpXG5cbiAgICBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBsaW1pdCAtIDEsIC1saW1pdClcbiAgfVxuXG4gIHZhciBpID0gMFxuICB2YXIgbXVsID0gMVxuICB2YXIgc3ViID0gMFxuICB0aGlzW29mZnNldF0gPSB2YWx1ZSAmIDB4RkZcbiAgd2hpbGUgKCsraSA8IGJ5dGVMZW5ndGggJiYgKG11bCAqPSAweDEwMCkpIHtcbiAgICBpZiAodmFsdWUgPCAwICYmIHN1YiA9PT0gMCAmJiB0aGlzW29mZnNldCArIGkgLSAxXSAhPT0gMCkge1xuICAgICAgc3ViID0gMVxuICAgIH1cbiAgICB0aGlzW29mZnNldCArIGldID0gKCh2YWx1ZSAvIG11bCkgPj4gMCkgLSBzdWIgJiAweEZGXG4gIH1cblxuICByZXR1cm4gb2Zmc2V0ICsgYnl0ZUxlbmd0aFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50QkUgPSBmdW5jdGlvbiB3cml0ZUludEJFICh2YWx1ZSwgb2Zmc2V0LCBieXRlTGVuZ3RoLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIHZhciBsaW1pdCA9IE1hdGgucG93KDIsICg4ICogYnl0ZUxlbmd0aCkgLSAxKVxuXG4gICAgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgYnl0ZUxlbmd0aCwgbGltaXQgLSAxLCAtbGltaXQpXG4gIH1cblxuICB2YXIgaSA9IGJ5dGVMZW5ndGggLSAxXG4gIHZhciBtdWwgPSAxXG4gIHZhciBzdWIgPSAwXG4gIHRoaXNbb2Zmc2V0ICsgaV0gPSB2YWx1ZSAmIDB4RkZcbiAgd2hpbGUgKC0taSA+PSAwICYmIChtdWwgKj0gMHgxMDApKSB7XG4gICAgaWYgKHZhbHVlIDwgMCAmJiBzdWIgPT09IDAgJiYgdGhpc1tvZmZzZXQgKyBpICsgMV0gIT09IDApIHtcbiAgICAgIHN1YiA9IDFcbiAgICB9XG4gICAgdGhpc1tvZmZzZXQgKyBpXSA9ICgodmFsdWUgLyBtdWwpID4+IDApIC0gc3ViICYgMHhGRlxuICB9XG5cbiAgcmV0dXJuIG9mZnNldCArIGJ5dGVMZW5ndGhcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDggPSBmdW5jdGlvbiB3cml0ZUludDggKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCAxLCAweDdmLCAtMHg4MClcbiAgaWYgKHZhbHVlIDwgMCkgdmFsdWUgPSAweGZmICsgdmFsdWUgKyAxXG4gIHRoaXNbb2Zmc2V0XSA9ICh2YWx1ZSAmIDB4ZmYpXG4gIHJldHVybiBvZmZzZXQgKyAxXG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVJbnQxNkxFID0gZnVuY3Rpb24gd3JpdGVJbnQxNkxFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkgY2hlY2tJbnQodGhpcywgdmFsdWUsIG9mZnNldCwgMiwgMHg3ZmZmLCAtMHg4MDAwKVxuICB0aGlzW29mZnNldF0gPSAodmFsdWUgJiAweGZmKVxuICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlID4+PiA4KVxuICByZXR1cm4gb2Zmc2V0ICsgMlxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50MTZCRSA9IGZ1bmN0aW9uIHdyaXRlSW50MTZCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDIsIDB4N2ZmZiwgLTB4ODAwMClcbiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlID4+PiA4KVxuICB0aGlzW29mZnNldCArIDFdID0gKHZhbHVlICYgMHhmZilcbiAgcmV0dXJuIG9mZnNldCArIDJcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUludDMyTEUgPSBmdW5jdGlvbiB3cml0ZUludDMyTEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSBjaGVja0ludCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCA0LCAweDdmZmZmZmZmLCAtMHg4MDAwMDAwMClcbiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlICYgMHhmZilcbiAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gOClcbiAgdGhpc1tvZmZzZXQgKyAyXSA9ICh2YWx1ZSA+Pj4gMTYpXG4gIHRoaXNbb2Zmc2V0ICsgM10gPSAodmFsdWUgPj4+IDI0KVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5CdWZmZXIucHJvdG90eXBlLndyaXRlSW50MzJCRSA9IGZ1bmN0aW9uIHdyaXRlSW50MzJCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgdmFsdWUgPSArdmFsdWVcbiAgb2Zmc2V0ID0gb2Zmc2V0ID4+PiAwXG4gIGlmICghbm9Bc3NlcnQpIGNoZWNrSW50KHRoaXMsIHZhbHVlLCBvZmZzZXQsIDQsIDB4N2ZmZmZmZmYsIC0weDgwMDAwMDAwKVxuICBpZiAodmFsdWUgPCAwKSB2YWx1ZSA9IDB4ZmZmZmZmZmYgKyB2YWx1ZSArIDFcbiAgdGhpc1tvZmZzZXRdID0gKHZhbHVlID4+PiAyNClcbiAgdGhpc1tvZmZzZXQgKyAxXSA9ICh2YWx1ZSA+Pj4gMTYpXG4gIHRoaXNbb2Zmc2V0ICsgMl0gPSAodmFsdWUgPj4+IDgpXG4gIHRoaXNbb2Zmc2V0ICsgM10gPSAodmFsdWUgJiAweGZmKVxuICByZXR1cm4gb2Zmc2V0ICsgNFxufVxuXG5mdW5jdGlvbiBjaGVja0lFRUU3NTQgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgZXh0LCBtYXgsIG1pbikge1xuICBpZiAob2Zmc2V0ICsgZXh0ID4gYnVmLmxlbmd0aCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0luZGV4IG91dCBvZiByYW5nZScpXG4gIGlmIChvZmZzZXQgPCAwKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW5kZXggb3V0IG9mIHJhbmdlJylcbn1cblxuZnVuY3Rpb24gd3JpdGVGbG9hdCAoYnVmLCB2YWx1ZSwgb2Zmc2V0LCBsaXR0bGVFbmRpYW4sIG5vQXNzZXJ0KSB7XG4gIHZhbHVlID0gK3ZhbHVlXG4gIG9mZnNldCA9IG9mZnNldCA+Pj4gMFxuICBpZiAoIW5vQXNzZXJ0KSB7XG4gICAgY2hlY2tJRUVFNzU0KGJ1ZiwgdmFsdWUsIG9mZnNldCwgNCwgMy40MDI4MjM0NjYzODUyODg2ZSszOCwgLTMuNDAyODIzNDY2Mzg1Mjg4NmUrMzgpXG4gIH1cbiAgaWVlZTc1NC53cml0ZShidWYsIHZhbHVlLCBvZmZzZXQsIGxpdHRsZUVuZGlhbiwgMjMsIDQpXG4gIHJldHVybiBvZmZzZXQgKyA0XG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVGbG9hdExFID0gZnVuY3Rpb24gd3JpdGVGbG9hdExFICh2YWx1ZSwgb2Zmc2V0LCBub0Fzc2VydCkge1xuICByZXR1cm4gd3JpdGVGbG9hdCh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCB0cnVlLCBub0Fzc2VydClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZUZsb2F0QkUgPSBmdW5jdGlvbiB3cml0ZUZsb2F0QkUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHJldHVybiB3cml0ZUZsb2F0KHRoaXMsIHZhbHVlLCBvZmZzZXQsIGZhbHNlLCBub0Fzc2VydClcbn1cblxuZnVuY3Rpb24gd3JpdGVEb3VibGUgKGJ1ZiwgdmFsdWUsIG9mZnNldCwgbGl0dGxlRW5kaWFuLCBub0Fzc2VydCkge1xuICB2YWx1ZSA9ICt2YWx1ZVxuICBvZmZzZXQgPSBvZmZzZXQgPj4+IDBcbiAgaWYgKCFub0Fzc2VydCkge1xuICAgIGNoZWNrSUVFRTc1NChidWYsIHZhbHVlLCBvZmZzZXQsIDgsIDEuNzk3NjkzMTM0ODYyMzE1N0UrMzA4LCAtMS43OTc2OTMxMzQ4NjIzMTU3RSszMDgpXG4gIH1cbiAgaWVlZTc1NC53cml0ZShidWYsIHZhbHVlLCBvZmZzZXQsIGxpdHRsZUVuZGlhbiwgNTIsIDgpXG4gIHJldHVybiBvZmZzZXQgKyA4XG59XG5cbkJ1ZmZlci5wcm90b3R5cGUud3JpdGVEb3VibGVMRSA9IGZ1bmN0aW9uIHdyaXRlRG91YmxlTEUgKHZhbHVlLCBvZmZzZXQsIG5vQXNzZXJ0KSB7XG4gIHJldHVybiB3cml0ZURvdWJsZSh0aGlzLCB2YWx1ZSwgb2Zmc2V0LCB0cnVlLCBub0Fzc2VydClcbn1cblxuQnVmZmVyLnByb3RvdHlwZS53cml0ZURvdWJsZUJFID0gZnVuY3Rpb24gd3JpdGVEb3VibGVCRSAodmFsdWUsIG9mZnNldCwgbm9Bc3NlcnQpIHtcbiAgcmV0dXJuIHdyaXRlRG91YmxlKHRoaXMsIHZhbHVlLCBvZmZzZXQsIGZhbHNlLCBub0Fzc2VydClcbn1cblxuLy8gY29weSh0YXJnZXRCdWZmZXIsIHRhcmdldFN0YXJ0PTAsIHNvdXJjZVN0YXJ0PTAsIHNvdXJjZUVuZD1idWZmZXIubGVuZ3RoKVxuQnVmZmVyLnByb3RvdHlwZS5jb3B5ID0gZnVuY3Rpb24gY29weSAodGFyZ2V0LCB0YXJnZXRTdGFydCwgc3RhcnQsIGVuZCkge1xuICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcih0YXJnZXQpKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBzaG91bGQgYmUgYSBCdWZmZXInKVxuICBpZiAoIXN0YXJ0KSBzdGFydCA9IDBcbiAgaWYgKCFlbmQgJiYgZW5kICE9PSAwKSBlbmQgPSB0aGlzLmxlbmd0aFxuICBpZiAodGFyZ2V0U3RhcnQgPj0gdGFyZ2V0Lmxlbmd0aCkgdGFyZ2V0U3RhcnQgPSB0YXJnZXQubGVuZ3RoXG4gIGlmICghdGFyZ2V0U3RhcnQpIHRhcmdldFN0YXJ0ID0gMFxuICBpZiAoZW5kID4gMCAmJiBlbmQgPCBzdGFydCkgZW5kID0gc3RhcnRcblxuICAvLyBDb3B5IDAgYnl0ZXM7IHdlJ3JlIGRvbmVcbiAgaWYgKGVuZCA9PT0gc3RhcnQpIHJldHVybiAwXG4gIGlmICh0YXJnZXQubGVuZ3RoID09PSAwIHx8IHRoaXMubGVuZ3RoID09PSAwKSByZXR1cm4gMFxuXG4gIC8vIEZhdGFsIGVycm9yIGNvbmRpdGlvbnNcbiAgaWYgKHRhcmdldFN0YXJ0IDwgMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCd0YXJnZXRTdGFydCBvdXQgb2YgYm91bmRzJylcbiAgfVxuICBpZiAoc3RhcnQgPCAwIHx8IHN0YXJ0ID49IHRoaXMubGVuZ3RoKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW5kZXggb3V0IG9mIHJhbmdlJylcbiAgaWYgKGVuZCA8IDApIHRocm93IG5ldyBSYW5nZUVycm9yKCdzb3VyY2VFbmQgb3V0IG9mIGJvdW5kcycpXG5cbiAgLy8gQXJlIHdlIG9vYj9cbiAgaWYgKGVuZCA+IHRoaXMubGVuZ3RoKSBlbmQgPSB0aGlzLmxlbmd0aFxuICBpZiAodGFyZ2V0Lmxlbmd0aCAtIHRhcmdldFN0YXJ0IDwgZW5kIC0gc3RhcnQpIHtcbiAgICBlbmQgPSB0YXJnZXQubGVuZ3RoIC0gdGFyZ2V0U3RhcnQgKyBzdGFydFxuICB9XG5cbiAgdmFyIGxlbiA9IGVuZCAtIHN0YXJ0XG5cbiAgaWYgKHRoaXMgPT09IHRhcmdldCAmJiB0eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIFVzZSBidWlsdC1pbiB3aGVuIGF2YWlsYWJsZSwgbWlzc2luZyBmcm9tIElFMTFcbiAgICB0aGlzLmNvcHlXaXRoaW4odGFyZ2V0U3RhcnQsIHN0YXJ0LCBlbmQpXG4gIH0gZWxzZSBpZiAodGhpcyA9PT0gdGFyZ2V0ICYmIHN0YXJ0IDwgdGFyZ2V0U3RhcnQgJiYgdGFyZ2V0U3RhcnQgPCBlbmQpIHtcbiAgICAvLyBkZXNjZW5kaW5nIGNvcHkgZnJvbSBlbmRcbiAgICBmb3IgKHZhciBpID0gbGVuIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgIHRhcmdldFtpICsgdGFyZ2V0U3RhcnRdID0gdGhpc1tpICsgc3RhcnRdXG4gICAgfVxuICB9IGVsc2Uge1xuICAgIFVpbnQ4QXJyYXkucHJvdG90eXBlLnNldC5jYWxsKFxuICAgICAgdGFyZ2V0LFxuICAgICAgdGhpcy5zdWJhcnJheShzdGFydCwgZW5kKSxcbiAgICAgIHRhcmdldFN0YXJ0XG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIGxlblxufVxuXG4vLyBVc2FnZTpcbi8vICAgIGJ1ZmZlci5maWxsKG51bWJlclssIG9mZnNldFssIGVuZF1dKVxuLy8gICAgYnVmZmVyLmZpbGwoYnVmZmVyWywgb2Zmc2V0WywgZW5kXV0pXG4vLyAgICBidWZmZXIuZmlsbChzdHJpbmdbLCBvZmZzZXRbLCBlbmRdXVssIGVuY29kaW5nXSlcbkJ1ZmZlci5wcm90b3R5cGUuZmlsbCA9IGZ1bmN0aW9uIGZpbGwgKHZhbCwgc3RhcnQsIGVuZCwgZW5jb2RpbmcpIHtcbiAgLy8gSGFuZGxlIHN0cmluZyBjYXNlczpcbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKHR5cGVvZiBzdGFydCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGVuY29kaW5nID0gc3RhcnRcbiAgICAgIHN0YXJ0ID0gMFxuICAgICAgZW5kID0gdGhpcy5sZW5ndGhcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBlbmQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBlbmNvZGluZyA9IGVuZFxuICAgICAgZW5kID0gdGhpcy5sZW5ndGhcbiAgICB9XG4gICAgaWYgKGVuY29kaW5nICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIGVuY29kaW5nICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZW5jb2RpbmcgbXVzdCBiZSBhIHN0cmluZycpXG4gICAgfVxuICAgIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnICYmICFCdWZmZXIuaXNFbmNvZGluZyhlbmNvZGluZykpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vua25vd24gZW5jb2Rpbmc6ICcgKyBlbmNvZGluZylcbiAgICB9XG4gICAgaWYgKHZhbC5sZW5ndGggPT09IDEpIHtcbiAgICAgIHZhciBjb2RlID0gdmFsLmNoYXJDb2RlQXQoMClcbiAgICAgIGlmICgoZW5jb2RpbmcgPT09ICd1dGY4JyAmJiBjb2RlIDwgMTI4KSB8fFxuICAgICAgICAgIGVuY29kaW5nID09PSAnbGF0aW4xJykge1xuICAgICAgICAvLyBGYXN0IHBhdGg6IElmIGB2YWxgIGZpdHMgaW50byBhIHNpbmdsZSBieXRlLCB1c2UgdGhhdCBudW1lcmljIHZhbHVlLlxuICAgICAgICB2YWwgPSBjb2RlXG4gICAgICB9XG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgdmFsID0gdmFsICYgMjU1XG4gIH1cblxuICAvLyBJbnZhbGlkIHJhbmdlcyBhcmUgbm90IHNldCB0byBhIGRlZmF1bHQsIHNvIGNhbiByYW5nZSBjaGVjayBlYXJseS5cbiAgaWYgKHN0YXJ0IDwgMCB8fCB0aGlzLmxlbmd0aCA8IHN0YXJ0IHx8IHRoaXMubGVuZ3RoIDwgZW5kKSB7XG4gICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ091dCBvZiByYW5nZSBpbmRleCcpXG4gIH1cblxuICBpZiAoZW5kIDw9IHN0YXJ0KSB7XG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIHN0YXJ0ID0gc3RhcnQgPj4+IDBcbiAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyB0aGlzLmxlbmd0aCA6IGVuZCA+Pj4gMFxuXG4gIGlmICghdmFsKSB2YWwgPSAwXG5cbiAgdmFyIGlcbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgZm9yIChpID0gc3RhcnQ7IGkgPCBlbmQ7ICsraSkge1xuICAgICAgdGhpc1tpXSA9IHZhbFxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgYnl0ZXMgPSBCdWZmZXIuaXNCdWZmZXIodmFsKVxuICAgICAgPyB2YWxcbiAgICAgIDogQnVmZmVyLmZyb20odmFsLCBlbmNvZGluZylcbiAgICB2YXIgbGVuID0gYnl0ZXMubGVuZ3RoXG4gICAgaWYgKGxlbiA9PT0gMCkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIHZhbHVlIFwiJyArIHZhbCArXG4gICAgICAgICdcIiBpcyBpbnZhbGlkIGZvciBhcmd1bWVudCBcInZhbHVlXCInKVxuICAgIH1cbiAgICBmb3IgKGkgPSAwOyBpIDwgZW5kIC0gc3RhcnQ7ICsraSkge1xuICAgICAgdGhpc1tpICsgc3RhcnRdID0gYnl0ZXNbaSAlIGxlbl1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpc1xufVxuXG4vLyBIRUxQRVIgRlVOQ1RJT05TXG4vLyA9PT09PT09PT09PT09PT09XG5cbnZhciBJTlZBTElEX0JBU0U2NF9SRSA9IC9bXisvMC05QS1aYS16LV9dL2dcblxuZnVuY3Rpb24gYmFzZTY0Y2xlYW4gKHN0cikge1xuICAvLyBOb2RlIHRha2VzIGVxdWFsIHNpZ25zIGFzIGVuZCBvZiB0aGUgQmFzZTY0IGVuY29kaW5nXG4gIHN0ciA9IHN0ci5zcGxpdCgnPScpWzBdXG4gIC8vIE5vZGUgc3RyaXBzIG91dCBpbnZhbGlkIGNoYXJhY3RlcnMgbGlrZSBcXG4gYW5kIFxcdCBmcm9tIHRoZSBzdHJpbmcsIGJhc2U2NC1qcyBkb2VzIG5vdFxuICBzdHIgPSBzdHIudHJpbSgpLnJlcGxhY2UoSU5WQUxJRF9CQVNFNjRfUkUsICcnKVxuICAvLyBOb2RlIGNvbnZlcnRzIHN0cmluZ3Mgd2l0aCBsZW5ndGggPCAyIHRvICcnXG4gIGlmIChzdHIubGVuZ3RoIDwgMikgcmV0dXJuICcnXG4gIC8vIE5vZGUgYWxsb3dzIGZvciBub24tcGFkZGVkIGJhc2U2NCBzdHJpbmdzIChtaXNzaW5nIHRyYWlsaW5nID09PSksIGJhc2U2NC1qcyBkb2VzIG5vdFxuICB3aGlsZSAoc3RyLmxlbmd0aCAlIDQgIT09IDApIHtcbiAgICBzdHIgPSBzdHIgKyAnPSdcbiAgfVxuICByZXR1cm4gc3RyXG59XG5cbmZ1bmN0aW9uIHRvSGV4IChuKSB7XG4gIGlmIChuIDwgMTYpIHJldHVybiAnMCcgKyBuLnRvU3RyaW5nKDE2KVxuICByZXR1cm4gbi50b1N0cmluZygxNilcbn1cblxuZnVuY3Rpb24gdXRmOFRvQnl0ZXMgKHN0cmluZywgdW5pdHMpIHtcbiAgdW5pdHMgPSB1bml0cyB8fCBJbmZpbml0eVxuICB2YXIgY29kZVBvaW50XG4gIHZhciBsZW5ndGggPSBzdHJpbmcubGVuZ3RoXG4gIHZhciBsZWFkU3Vycm9nYXRlID0gbnVsbFxuICB2YXIgYnl0ZXMgPSBbXVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICBjb2RlUG9pbnQgPSBzdHJpbmcuY2hhckNvZGVBdChpKVxuXG4gICAgLy8gaXMgc3Vycm9nYXRlIGNvbXBvbmVudFxuICAgIGlmIChjb2RlUG9pbnQgPiAweEQ3RkYgJiYgY29kZVBvaW50IDwgMHhFMDAwKSB7XG4gICAgICAvLyBsYXN0IGNoYXIgd2FzIGEgbGVhZFxuICAgICAgaWYgKCFsZWFkU3Vycm9nYXRlKSB7XG4gICAgICAgIC8vIG5vIGxlYWQgeWV0XG4gICAgICAgIGlmIChjb2RlUG9pbnQgPiAweERCRkYpIHtcbiAgICAgICAgICAvLyB1bmV4cGVjdGVkIHRyYWlsXG4gICAgICAgICAgaWYgKCh1bml0cyAtPSAzKSA+IC0xKSBieXRlcy5wdXNoKDB4RUYsIDB4QkYsIDB4QkQpXG4gICAgICAgICAgY29udGludWVcbiAgICAgICAgfSBlbHNlIGlmIChpICsgMSA9PT0gbGVuZ3RoKSB7XG4gICAgICAgICAgLy8gdW5wYWlyZWQgbGVhZFxuICAgICAgICAgIGlmICgodW5pdHMgLT0gMykgPiAtMSkgYnl0ZXMucHVzaCgweEVGLCAweEJGLCAweEJEKVxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cblxuICAgICAgICAvLyB2YWxpZCBsZWFkXG4gICAgICAgIGxlYWRTdXJyb2dhdGUgPSBjb2RlUG9pbnRcblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICAvLyAyIGxlYWRzIGluIGEgcm93XG4gICAgICBpZiAoY29kZVBvaW50IDwgMHhEQzAwKSB7XG4gICAgICAgIGlmICgodW5pdHMgLT0gMykgPiAtMSkgYnl0ZXMucHVzaCgweEVGLCAweEJGLCAweEJEKVxuICAgICAgICBsZWFkU3Vycm9nYXRlID0gY29kZVBvaW50XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIC8vIHZhbGlkIHN1cnJvZ2F0ZSBwYWlyXG4gICAgICBjb2RlUG9pbnQgPSAobGVhZFN1cnJvZ2F0ZSAtIDB4RDgwMCA8PCAxMCB8IGNvZGVQb2ludCAtIDB4REMwMCkgKyAweDEwMDAwXG4gICAgfSBlbHNlIGlmIChsZWFkU3Vycm9nYXRlKSB7XG4gICAgICAvLyB2YWxpZCBibXAgY2hhciwgYnV0IGxhc3QgY2hhciB3YXMgYSBsZWFkXG4gICAgICBpZiAoKHVuaXRzIC09IDMpID4gLTEpIGJ5dGVzLnB1c2goMHhFRiwgMHhCRiwgMHhCRClcbiAgICB9XG5cbiAgICBsZWFkU3Vycm9nYXRlID0gbnVsbFxuXG4gICAgLy8gZW5jb2RlIHV0ZjhcbiAgICBpZiAoY29kZVBvaW50IDwgMHg4MCkge1xuICAgICAgaWYgKCh1bml0cyAtPSAxKSA8IDApIGJyZWFrXG4gICAgICBieXRlcy5wdXNoKGNvZGVQb2ludClcbiAgICB9IGVsc2UgaWYgKGNvZGVQb2ludCA8IDB4ODAwKSB7XG4gICAgICBpZiAoKHVuaXRzIC09IDIpIDwgMCkgYnJlYWtcbiAgICAgIGJ5dGVzLnB1c2goXG4gICAgICAgIGNvZGVQb2ludCA+PiAweDYgfCAweEMwLFxuICAgICAgICBjb2RlUG9pbnQgJiAweDNGIHwgMHg4MFxuICAgICAgKVxuICAgIH0gZWxzZSBpZiAoY29kZVBvaW50IDwgMHgxMDAwMCkge1xuICAgICAgaWYgKCh1bml0cyAtPSAzKSA8IDApIGJyZWFrXG4gICAgICBieXRlcy5wdXNoKFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHhDIHwgMHhFMCxcbiAgICAgICAgY29kZVBvaW50ID4+IDB4NiAmIDB4M0YgfCAweDgwLFxuICAgICAgICBjb2RlUG9pbnQgJiAweDNGIHwgMHg4MFxuICAgICAgKVxuICAgIH0gZWxzZSBpZiAoY29kZVBvaW50IDwgMHgxMTAwMDApIHtcbiAgICAgIGlmICgodW5pdHMgLT0gNCkgPCAwKSBicmVha1xuICAgICAgYnl0ZXMucHVzaChcbiAgICAgICAgY29kZVBvaW50ID4+IDB4MTIgfCAweEYwLFxuICAgICAgICBjb2RlUG9pbnQgPj4gMHhDICYgMHgzRiB8IDB4ODAsXG4gICAgICAgIGNvZGVQb2ludCA+PiAweDYgJiAweDNGIHwgMHg4MCxcbiAgICAgICAgY29kZVBvaW50ICYgMHgzRiB8IDB4ODBcbiAgICAgIClcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGNvZGUgcG9pbnQnKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBieXRlc1xufVxuXG5mdW5jdGlvbiBhc2NpaVRvQnl0ZXMgKHN0cikge1xuICB2YXIgYnl0ZUFycmF5ID0gW11cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyArK2kpIHtcbiAgICAvLyBOb2RlJ3MgY29kZSBzZWVtcyB0byBiZSBkb2luZyB0aGlzIGFuZCBub3QgJiAweDdGLi5cbiAgICBieXRlQXJyYXkucHVzaChzdHIuY2hhckNvZGVBdChpKSAmIDB4RkYpXG4gIH1cbiAgcmV0dXJuIGJ5dGVBcnJheVxufVxuXG5mdW5jdGlvbiB1dGYxNmxlVG9CeXRlcyAoc3RyLCB1bml0cykge1xuICB2YXIgYywgaGksIGxvXG4gIHZhciBieXRlQXJyYXkgPSBbXVxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7ICsraSkge1xuICAgIGlmICgodW5pdHMgLT0gMikgPCAwKSBicmVha1xuXG4gICAgYyA9IHN0ci5jaGFyQ29kZUF0KGkpXG4gICAgaGkgPSBjID4+IDhcbiAgICBsbyA9IGMgJSAyNTZcbiAgICBieXRlQXJyYXkucHVzaChsbylcbiAgICBieXRlQXJyYXkucHVzaChoaSlcbiAgfVxuXG4gIHJldHVybiBieXRlQXJyYXlcbn1cblxuZnVuY3Rpb24gYmFzZTY0VG9CeXRlcyAoc3RyKSB7XG4gIHJldHVybiBiYXNlNjQudG9CeXRlQXJyYXkoYmFzZTY0Y2xlYW4oc3RyKSlcbn1cblxuZnVuY3Rpb24gYmxpdEJ1ZmZlciAoc3JjLCBkc3QsIG9mZnNldCwgbGVuZ3RoKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoKGkgKyBvZmZzZXQgPj0gZHN0Lmxlbmd0aCkgfHwgKGkgPj0gc3JjLmxlbmd0aCkpIGJyZWFrXG4gICAgZHN0W2kgKyBvZmZzZXRdID0gc3JjW2ldXG4gIH1cbiAgcmV0dXJuIGlcbn1cblxuLy8gQXJyYXlCdWZmZXIgb3IgVWludDhBcnJheSBvYmplY3RzIGZyb20gb3RoZXIgY29udGV4dHMgKGkuZS4gaWZyYW1lcykgZG8gbm90IHBhc3Ncbi8vIHRoZSBgaW5zdGFuY2VvZmAgY2hlY2sgYnV0IHRoZXkgc2hvdWxkIGJlIHRyZWF0ZWQgYXMgb2YgdGhhdCB0eXBlLlxuLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vZmVyb3NzL2J1ZmZlci9pc3N1ZXMvMTY2XG5mdW5jdGlvbiBpc0luc3RhbmNlIChvYmosIHR5cGUpIHtcbiAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIHR5cGUgfHxcbiAgICAob2JqICE9IG51bGwgJiYgb2JqLmNvbnN0cnVjdG9yICE9IG51bGwgJiYgb2JqLmNvbnN0cnVjdG9yLm5hbWUgIT0gbnVsbCAmJlxuICAgICAgb2JqLmNvbnN0cnVjdG9yLm5hbWUgPT09IHR5cGUubmFtZSlcbn1cbmZ1bmN0aW9uIG51bWJlcklzTmFOIChvYmopIHtcbiAgLy8gRm9yIElFMTEgc3VwcG9ydFxuICByZXR1cm4gb2JqICE9PSBvYmogLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1zZWxmLWNvbXBhcmVcbn1cbiIsInZhciBfJGVtcHR5XzYgPSBjcmVhdGVNb2R1bGVGYWN0b3J5KGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklpSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJYWDA9IiwidmFyIF8kc2hhXzI2ID0geyBleHBvcnRzOiB7fSB9O1xudmFyIG4scjtuPXRoaXMscj1mdW5jdGlvbigpe1widXNlIHN0cmljdFwiO3ZhciBuPVwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrL1wiO2Z1bmN0aW9uIHIobixyLHQsZSl7dmFyIGksbyx1LGY9cnx8WzBdLHc9KHQ9dHx8MCk+Pj4zLHM9LTE9PT1lPzM6MDtmb3IoaT0wO2k8bi5sZW5ndGg7aSs9MSlvPSh1PWkrdyk+Pj4yLGYubGVuZ3RoPD1vJiZmLnB1c2goMCksZltvXXw9bltpXTw8OCoocytlKih1JTQpKTtyZXR1cm57dmFsdWU6ZixiaW5MZW46OCpuLmxlbmd0aCt0fX1mdW5jdGlvbiB0KHQsZSxpKXtzd2l0Y2goZSl7Y2FzZVwiVVRGOFwiOmNhc2VcIlVURjE2QkVcIjpjYXNlXCJVVEYxNkxFXCI6YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJlbmNvZGluZyBtdXN0IGJlIFVURjgsIFVURjE2QkUsIG9yIFVURjE2TEVcIil9c3dpdGNoKHQpe2Nhc2VcIkhFWFwiOnJldHVybiBmdW5jdGlvbihuLHIsdCl7cmV0dXJuIGZ1bmN0aW9uKG4scix0LGUpe3ZhciBpLG8sdSxmO2lmKDAhPW4ubGVuZ3RoJTIpdGhyb3cgbmV3IEVycm9yKFwiU3RyaW5nIG9mIEhFWCB0eXBlIG11c3QgYmUgaW4gYnl0ZSBpbmNyZW1lbnRzXCIpO3ZhciB3PXJ8fFswXSxzPSh0PXR8fDApPj4+MyxhPS0xPT09ZT8zOjA7Zm9yKGk9MDtpPG4ubGVuZ3RoO2krPTIpe2lmKG89cGFyc2VJbnQobi5zdWJzdHIoaSwyKSwxNiksaXNOYU4obykpdGhyb3cgbmV3IEVycm9yKFwiU3RyaW5nIG9mIEhFWCB0eXBlIGNvbnRhaW5zIGludmFsaWQgY2hhcmFjdGVyc1wiKTtmb3IodT0oZj0oaT4+PjEpK3MpPj4+Mjt3Lmxlbmd0aDw9dTspdy5wdXNoKDApO3dbdV18PW88PDgqKGErZSooZiU0KSl9cmV0dXJue3ZhbHVlOncsYmluTGVuOjQqbi5sZW5ndGgrdH19KG4scix0LGkpfTtjYXNlXCJURVhUXCI6cmV0dXJuIGZ1bmN0aW9uKG4scix0KXtyZXR1cm4gZnVuY3Rpb24obixyLHQsZSxpKXt2YXIgbyx1LGYsdyxzLGEsaCxjLHY9MCxBPXR8fFswXSxFPShlPWV8fDApPj4+MztpZihcIlVURjhcIj09PXIpZm9yKGg9LTE9PT1pPzM6MCxmPTA7ZjxuLmxlbmd0aDtmKz0xKWZvcih1PVtdLDEyOD4obz1uLmNoYXJDb2RlQXQoZikpP3UucHVzaChvKToyMDQ4Pm8/KHUucHVzaCgxOTJ8bz4+PjYpLHUucHVzaCgxMjh8NjMmbykpOjU1Mjk2Pm98fDU3MzQ0PD1vP3UucHVzaCgyMjR8bz4+PjEyLDEyOHxvPj4+NiY2MywxMjh8NjMmbyk6KGYrPTEsbz02NTUzNisoKDEwMjMmbyk8PDEwfDEwMjMmbi5jaGFyQ29kZUF0KGYpKSx1LnB1c2goMjQwfG8+Pj4xOCwxMjh8bz4+PjEyJjYzLDEyOHxvPj4+NiY2MywxMjh8NjMmbykpLHc9MDt3PHUubGVuZ3RoO3crPTEpe2ZvcihzPShhPXYrRSk+Pj4yO0EubGVuZ3RoPD1zOylBLnB1c2goMCk7QVtzXXw9dVt3XTw8OCooaCtpKihhJTQpKSx2Kz0xfWVsc2UgZm9yKGg9LTE9PT1pPzI6MCxjPVwiVVRGMTZMRVwiPT09ciYmMSE9PWl8fFwiVVRGMTZMRVwiIT09ciYmMT09PWksZj0wO2Y8bi5sZW5ndGg7Zis9MSl7Zm9yKG89bi5jaGFyQ29kZUF0KGYpLCEwPT09YyYmKG89KHc9MjU1Jm8pPDw4fG8+Pj44KSxzPShhPXYrRSk+Pj4yO0EubGVuZ3RoPD1zOylBLnB1c2goMCk7QVtzXXw9bzw8OCooaCtpKihhJTQpKSx2Kz0yfXJldHVybnt2YWx1ZTpBLGJpbkxlbjo4KnYrZX19KG4sZSxyLHQsaSl9O2Nhc2VcIkI2NFwiOnJldHVybiBmdW5jdGlvbihyLHQsZSl7cmV0dXJuIGZ1bmN0aW9uKHIsdCxlLGkpe3ZhciBvLHUsZix3LHMsYSxoPTAsYz10fHxbMF0sdj0oZT1lfHwwKT4+PjMsQT0tMT09PWk/MzowLEU9ci5pbmRleE9mKFwiPVwiKTtpZigtMT09PXIuc2VhcmNoKC9eW2EtekEtWjAtOT0rXFwvXSskLykpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjaGFyYWN0ZXIgaW4gYmFzZS02NCBzdHJpbmdcIik7aWYocj1yLnJlcGxhY2UoLz0vZyxcIlwiKSwtMSE9PUUmJkU8ci5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCAnPScgZm91bmQgaW4gYmFzZS02NCBzdHJpbmdcIik7Zm9yKG89MDtvPHIubGVuZ3RoO28rPTQpe2Zvcih3PXIuc3Vic3RyKG8sNCksZj0wLHU9MDt1PHcubGVuZ3RoO3UrPTEpZnw9bi5pbmRleE9mKHcuY2hhckF0KHUpKTw8MTgtNip1O2Zvcih1PTA7dTx3Lmxlbmd0aC0xO3UrPTEpe2ZvcihzPShhPWgrdik+Pj4yO2MubGVuZ3RoPD1zOyljLnB1c2goMCk7Y1tzXXw9KGY+Pj4xNi04KnUmMjU1KTw8OCooQStpKihhJTQpKSxoKz0xfX1yZXR1cm57dmFsdWU6YyxiaW5MZW46OCpoK2V9fShyLHQsZSxpKX07Y2FzZVwiQllURVNcIjpyZXR1cm4gZnVuY3Rpb24obixyLHQpe3JldHVybiBmdW5jdGlvbihuLHIsdCxlKXt2YXIgaSxvLHUsZix3PXJ8fFswXSxzPSh0PXR8fDApPj4+MyxhPS0xPT09ZT8zOjA7Zm9yKG89MDtvPG4ubGVuZ3RoO28rPTEpaT1uLmNoYXJDb2RlQXQobyksdT0oZj1vK3MpPj4+Mix3Lmxlbmd0aDw9dSYmdy5wdXNoKDApLHdbdV18PWk8PDgqKGErZSooZiU0KSk7cmV0dXJue3ZhbHVlOncsYmluTGVuOjgqbi5sZW5ndGgrdH19KG4scix0LGkpfTtjYXNlXCJBUlJBWUJVRkZFUlwiOnRyeXtuZXcgQXJyYXlCdWZmZXIoMCl9Y2F0Y2gobil7dGhyb3cgbmV3IEVycm9yKFwiQVJSQVlCVUZGRVIgbm90IHN1cHBvcnRlZCBieSB0aGlzIGVudmlyb25tZW50XCIpfXJldHVybiBmdW5jdGlvbihuLHQsZSl7cmV0dXJuIGZ1bmN0aW9uKG4sdCxlLGkpe3JldHVybiByKG5ldyBVaW50OEFycmF5KG4pLHQsZSxpKX0obix0LGUsaSl9O2Nhc2VcIlVJTlQ4QVJSQVlcIjp0cnl7bmV3IFVpbnQ4QXJyYXkoMCl9Y2F0Y2gobil7dGhyb3cgbmV3IEVycm9yKFwiVUlOVDhBUlJBWSBub3Qgc3VwcG9ydGVkIGJ5IHRoaXMgZW52aXJvbm1lbnRcIil9cmV0dXJuIGZ1bmN0aW9uKG4sdCxlKXtyZXR1cm4gcihuLHQsZSxpKX07ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJmb3JtYXQgbXVzdCBiZSBIRVgsIFRFWFQsIEI2NCwgQllURVMsIEFSUkFZQlVGRkVSLCBvciBVSU5UOEFSUkFZXCIpfX1mdW5jdGlvbiBlKHIsdCxlLGkpe3N3aXRjaChyKXtjYXNlXCJIRVhcIjpyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIGZ1bmN0aW9uKG4scix0LGUpe3ZhciBpLG8sdT1cIlwiLGY9ci84LHc9LTE9PT10PzM6MDtmb3IoaT0wO2k8ZjtpKz0xKW89bltpPj4+Ml0+Pj44Kih3K3QqKGklNCkpLHUrPVwiMDEyMzQ1Njc4OWFiY2RlZlwiLmNoYXJBdChvPj4+NCYxNSkrXCIwMTIzNDU2Nzg5YWJjZGVmXCIuY2hhckF0KDE1Jm8pO3JldHVybiBlLm91dHB1dFVwcGVyP3UudG9VcHBlckNhc2UoKTp1fShuLHQsZSxpKX07Y2FzZVwiQjY0XCI6cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiBmdW5jdGlvbihyLHQsZSxpKXt2YXIgbyx1LGYsdyxzLGE9XCJcIixoPXQvOCxjPS0xPT09ZT8zOjA7Zm9yKG89MDtvPGg7bys9Mylmb3Iodz1vKzE8aD9yW28rMT4+PjJdOjAscz1vKzI8aD9yW28rMj4+PjJdOjAsZj0ocltvPj4+Ml0+Pj44KihjK2UqKG8lNCkpJjI1NSk8PDE2fCh3Pj4+OCooYytlKigobysxKSU0KSkmMjU1KTw8OHxzPj4+OCooYytlKigobysyKSU0KSkmMjU1LHU9MDt1PDQ7dSs9MSlhKz04Km8rNip1PD10P24uY2hhckF0KGY+Pj42KigzLXUpJjYzKTppLmI2NFBhZDtyZXR1cm4gYX0ocix0LGUsaSl9O2Nhc2VcIkJZVEVTXCI6cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbihuLHIsdCl7dmFyIGUsaSxvPVwiXCIsdT1yLzgsZj0tMT09PXQ/MzowO2ZvcihlPTA7ZTx1O2UrPTEpaT1uW2U+Pj4yXT4+PjgqKGYrdCooZSU0KSkmMjU1LG8rPVN0cmluZy5mcm9tQ2hhckNvZGUoaSk7cmV0dXJuIG99KG4sdCxlKX07Y2FzZVwiQVJSQVlCVUZGRVJcIjp0cnl7bmV3IEFycmF5QnVmZmVyKDApfWNhdGNoKG4pe3Rocm93IG5ldyBFcnJvcihcIkFSUkFZQlVGRkVSIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBlbnZpcm9ubWVudFwiKX1yZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIGZ1bmN0aW9uKG4scix0KXt2YXIgZSxpPXIvOCxvPW5ldyBBcnJheUJ1ZmZlcihpKSx1PW5ldyBVaW50OEFycmF5KG8pLGY9LTE9PT10PzM6MDtmb3IoZT0wO2U8aTtlKz0xKXVbZV09bltlPj4+Ml0+Pj44KihmK3QqKGUlNCkpJjI1NTtyZXR1cm4gb30obix0LGUpfTtjYXNlXCJVSU5UOEFSUkFZXCI6dHJ5e25ldyBVaW50OEFycmF5KDApfWNhdGNoKG4pe3Rocm93IG5ldyBFcnJvcihcIlVJTlQ4QVJSQVkgbm90IHN1cHBvcnRlZCBieSB0aGlzIGVudmlyb25tZW50XCIpfXJldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gZnVuY3Rpb24obixyLHQpe3ZhciBlLGk9ci84LG89LTE9PT10PzM6MCx1PW5ldyBVaW50OEFycmF5KGkpO2ZvcihlPTA7ZTxpO2UrPTEpdVtlXT1uW2U+Pj4yXT4+PjgqKG8rdCooZSU0KSkmMjU1O3JldHVybiB1fShuLHQsZSl9O2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwiZm9ybWF0IG11c3QgYmUgSEVYLCBCNjQsIEJZVEVTLCBBUlJBWUJVRkZFUiwgb3IgVUlOVDhBUlJBWVwiKX19dmFyIGk9WzExMTYzNTI0MDgsMTg5OTQ0NzQ0MSwzMDQ5MzIzNDcxLDM5MjEwMDk1NzMsOTYxOTg3MTYzLDE1MDg5NzA5OTMsMjQ1MzYzNTc0OCwyODcwNzYzMjIxLDM2MjQzODEwODAsMzEwNTk4NDAxLDYwNzIyNTI3OCwxNDI2ODgxOTg3LDE5MjUwNzgzODgsMjE2MjA3ODIwNiwyNjE0ODg4MTAzLDMyNDgyMjI1ODAsMzgzNTM5MDQwMSw0MDIyMjI0Nzc0LDI2NDM0NzA3OCw2MDQ4MDc2MjgsNzcwMjU1OTgzLDEyNDkxNTAxMjIsMTU1NTA4MTY5MiwxOTk2MDY0OTg2LDI1NTQyMjA4ODIsMjgyMTgzNDM0OSwyOTUyOTk2ODA4LDMyMTAzMTM2NzEsMzMzNjU3MTg5MSwzNTg0NTI4NzExLDExMzkyNjk5MywzMzgyNDE4OTUsNjY2MzA3MjA1LDc3MzUyOTkxMiwxMjk0NzU3MzcyLDEzOTYxODIyOTEsMTY5NTE4MzcwMCwxOTg2NjYxMDUxLDIxNzcwMjYzNTAsMjQ1Njk1NjAzNywyNzMwNDg1OTIxLDI4MjAzMDI0MTEsMzI1OTczMDgwMCwzMzQ1NzY0NzcxLDM1MTYwNjU4MTcsMzYwMDM1MjgwNCw0MDk0NTcxOTA5LDI3NTQyMzM0NCw0MzAyMjc3MzQsNTA2OTQ4NjE2LDY1OTA2MDU1Niw4ODM5OTc4NzcsOTU4MTM5NTcxLDEzMjI4MjIyMTgsMTUzNzAwMjA2MywxNzQ3ODczNzc5LDE5NTU1NjIyMjIsMjAyNDEwNDgxNSwyMjI3NzMwNDUyLDIzNjE4NTI0MjQsMjQyODQzNjQ3NCwyNzU2NzM0MTg3LDMyMDQwMzE0NzksMzMyOTMyNTI5OF0sbz1bMzIzODM3MTAzMiw5MTQxNTA2NjMsODEyNzAyOTk5LDQxNDQ5MTI2OTcsNDI5MDc3NTg1NywxNzUwNjAzMDI1LDE2OTQwNzY4MzksMzIwNDA3NTQyOF0sdT1bMTc3OTAzMzcwMywzMTQ0MTM0Mjc3LDEwMTM5MDQyNDIsMjc3MzQ4MDc2MiwxMzU5ODkzMTE5LDI2MDA4MjI5MjQsNTI4NzM0NjM1LDE1NDE0NTkyMjVdLGY9XCJDaG9zZW4gU0hBIHZhcmlhbnQgaXMgbm90IHN1cHBvcnRlZFwiO2Z1bmN0aW9uIHcobixyKXt2YXIgdCxlLGk9bi5iaW5MZW4+Pj4zLG89ci5iaW5MZW4+Pj4zLHU9aTw8MyxmPTQtaTw8MztpZihpJTQhPTApe2Zvcih0PTA7dDxvO3QrPTQpZT1pK3Q+Pj4yLG4udmFsdWVbZV18PXIudmFsdWVbdD4+PjJdPDx1LG4udmFsdWUucHVzaCgwKSxuLnZhbHVlW2UrMV18PXIudmFsdWVbdD4+PjJdPj4+ZjtyZXR1cm4obi52YWx1ZS5sZW5ndGg8PDIpLTQ+PW8raSYmbi52YWx1ZS5wb3AoKSx7dmFsdWU6bi52YWx1ZSxiaW5MZW46bi5iaW5MZW4rci5iaW5MZW59fXJldHVybnt2YWx1ZTpuLnZhbHVlLmNvbmNhdChyLnZhbHVlKSxiaW5MZW46bi5iaW5MZW4rci5iaW5MZW59fWZ1bmN0aW9uIHMobil7dmFyIHI9e291dHB1dFVwcGVyOiExLGI2NFBhZDpcIj1cIixvdXRwdXRMZW46LTF9LHQ9bnx8e30sZT1cIk91dHB1dCBsZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDhcIjtpZihyLm91dHB1dFVwcGVyPXQub3V0cHV0VXBwZXJ8fCExLHQuYjY0UGFkJiYoci5iNjRQYWQ9dC5iNjRQYWQpLHQub3V0cHV0TGVuKXtpZih0Lm91dHB1dExlbiU4IT0wKXRocm93IG5ldyBFcnJvcihlKTtyLm91dHB1dExlbj10Lm91dHB1dExlbn1lbHNlIGlmKHQuc2hha2VMZW4pe2lmKHQuc2hha2VMZW4lOCE9MCl0aHJvdyBuZXcgRXJyb3IoZSk7ci5vdXRwdXRMZW49dC5zaGFrZUxlbn1pZihcImJvb2xlYW5cIiE9dHlwZW9mIHIub3V0cHV0VXBwZXIpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBvdXRwdXRVcHBlciBmb3JtYXR0aW5nIG9wdGlvblwiKTtpZihcInN0cmluZ1wiIT10eXBlb2Ygci5iNjRQYWQpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBiNjRQYWQgZm9ybWF0dGluZyBvcHRpb25cIik7cmV0dXJuIHJ9ZnVuY3Rpb24gYShuLHIsZSxpKXt2YXIgbz1uK1wiIG11c3QgaW5jbHVkZSBhIHZhbHVlIGFuZCBmb3JtYXRcIjtpZighcil7aWYoIWkpdGhyb3cgbmV3IEVycm9yKG8pO3JldHVybiBpfWlmKHZvaWQgMD09PXIudmFsdWV8fCFyLmZvcm1hdCl0aHJvdyBuZXcgRXJyb3Iobyk7cmV0dXJuIHQoci5mb3JtYXQsci5lbmNvZGluZ3x8XCJVVEY4XCIsZSkoci52YWx1ZSl9dmFyIGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiBuKG4scix0KXt2YXIgZT10fHx7fTtpZih0aGlzLnQ9cix0aGlzLmk9ZS5lbmNvZGluZ3x8XCJVVEY4XCIsdGhpcy5udW1Sb3VuZHM9ZS5udW1Sb3VuZHN8fDEsaXNOYU4odGhpcy5udW1Sb3VuZHMpfHx0aGlzLm51bVJvdW5kcyE9PXBhcnNlSW50KHRoaXMubnVtUm91bmRzLDEwKXx8MT50aGlzLm51bVJvdW5kcyl0aHJvdyBuZXcgRXJyb3IoXCJudW1Sb3VuZHMgbXVzdCBhIGludGVnZXIgPj0gMVwiKTt0aGlzLm89bix0aGlzLnU9W10sdGhpcy5zPTAsdGhpcy5oPSExLHRoaXMudj0wLHRoaXMuQT0hMSx0aGlzLmw9W10sdGhpcy5IPVtdfXJldHVybiBuLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24obil7dmFyIHIsdD0wLGU9dGhpcy5TPj4+NSxpPXRoaXMubShuLHRoaXMudSx0aGlzLnMpLG89aS5iaW5MZW4sdT1pLnZhbHVlLGY9bz4+PjU7Zm9yKHI9MDtyPGY7cis9ZSl0K3RoaXMuUzw9byYmKHRoaXMucD10aGlzLlIodS5zbGljZShyLHIrZSksdGhpcy5wKSx0Kz10aGlzLlMpO3RoaXMudis9dCx0aGlzLnU9dS5zbGljZSh0Pj4+NSksdGhpcy5zPW8ldGhpcy5TLHRoaXMuaD0hMH0sbi5wcm90b3R5cGUuZ2V0SGFzaD1mdW5jdGlvbihuLHIpe3ZhciB0LGksbz10aGlzLlUsdT1zKHIpO2lmKHRoaXMuQyl7aWYoLTE9PT11Lm91dHB1dExlbil0aHJvdyBuZXcgRXJyb3IoXCJPdXRwdXQgbGVuZ3RoIG11c3QgYmUgc3BlY2lmaWVkIGluIG9wdGlvbnNcIik7bz11Lm91dHB1dExlbn12YXIgZj1lKG4sbyx0aGlzLlQsdSk7aWYodGhpcy5BJiZ0aGlzLkYpcmV0dXJuIGYodGhpcy5GKHUpKTtmb3IoaT10aGlzLksodGhpcy51LnNsaWNlKCksdGhpcy5zLHRoaXMudix0aGlzLkIodGhpcy5wKSxvKSx0PTE7dDx0aGlzLm51bVJvdW5kczt0Kz0xKXRoaXMuQyYmbyUzMiE9MCYmKGlbaS5sZW5ndGgtMV0mPTE2Nzc3MjE1Pj4+MjQtbyUzMiksaT10aGlzLksoaSxvLDAsdGhpcy5MKHRoaXMubyksbyk7cmV0dXJuIGYoaSl9LG4ucHJvdG90eXBlLnNldEhNQUNLZXk9ZnVuY3Rpb24obixyLGUpe2lmKCF0aGlzLmcpdGhyb3cgbmV3IEVycm9yKFwiVmFyaWFudCBkb2VzIG5vdCBzdXBwb3J0IEhNQUNcIik7aWYodGhpcy5oKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBzZXQgTUFDIGtleSBhZnRlciBjYWxsaW5nIHVwZGF0ZVwiKTt2YXIgaT10KHIsKGV8fHt9KS5lbmNvZGluZ3x8XCJVVEY4XCIsdGhpcy5UKTt0aGlzLmsoaShuKSl9LG4ucHJvdG90eXBlLms9ZnVuY3Rpb24obil7dmFyIHIsdD10aGlzLlM+Pj4zLGU9dC80LTE7aWYoMSE9PXRoaXMubnVtUm91bmRzKXRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBzZXQgbnVtUm91bmRzIHdpdGggTUFDXCIpO2lmKHRoaXMuQSl0aHJvdyBuZXcgRXJyb3IoXCJNQUMga2V5IGFscmVhZHkgc2V0XCIpO2Zvcih0PG4uYmluTGVuLzgmJihuLnZhbHVlPXRoaXMuSyhuLnZhbHVlLG4uYmluTGVuLDAsdGhpcy5MKHRoaXMubyksdGhpcy5VKSk7bi52YWx1ZS5sZW5ndGg8PWU7KW4udmFsdWUucHVzaCgwKTtmb3Iocj0wO3I8PWU7cis9MSl0aGlzLmxbcl09OTA5NTIyNDg2Xm4udmFsdWVbcl0sdGhpcy5IW3JdPTE1NDk1NTY4Mjhebi52YWx1ZVtyXTt0aGlzLnA9dGhpcy5SKHRoaXMubCx0aGlzLnApLHRoaXMudj10aGlzLlMsdGhpcy5BPSEwfSxuLnByb3RvdHlwZS5nZXRITUFDPWZ1bmN0aW9uKG4scil7dmFyIHQ9cyhyKTtyZXR1cm4gZShuLHRoaXMuVSx0aGlzLlQsdCkodGhpcy5ZKCkpfSxuLnByb3RvdHlwZS5ZPWZ1bmN0aW9uKCl7dmFyIG47aWYoIXRoaXMuQSl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY2FsbCBnZXRITUFDIHdpdGhvdXQgZmlyc3Qgc2V0dGluZyBNQUMga2V5XCIpO3ZhciByPXRoaXMuSyh0aGlzLnUuc2xpY2UoKSx0aGlzLnMsdGhpcy52LHRoaXMuQih0aGlzLnApLHRoaXMuVSk7cmV0dXJuIG49dGhpcy5SKHRoaXMuSCx0aGlzLkwodGhpcy5vKSksdGhpcy5LKHIsdGhpcy5VLHRoaXMuUyxuLHRoaXMuVSl9LG59KCksYz1mdW5jdGlvbihuLHIpe3JldHVybihjPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbihuLHIpe24uX19wcm90b19fPXJ9fHxmdW5jdGlvbihuLHIpe2Zvcih2YXIgdCBpbiByKXIuaGFzT3duUHJvcGVydHkodCkmJihuW3RdPXJbdF0pfSkobixyKX07ZnVuY3Rpb24gdihuLHIpe2Z1bmN0aW9uIHQoKXt0aGlzLmNvbnN0cnVjdG9yPW59YyhuLHIpLG4ucHJvdG90eXBlPW51bGw9PT1yP09iamVjdC5jcmVhdGUocik6KHQucHJvdG90eXBlPXIucHJvdG90eXBlLG5ldyB0KX1mdW5jdGlvbiBBKG4scil7cmV0dXJuIG48PHJ8bj4+PjMyLXJ9ZnVuY3Rpb24gRShuLHIpe3JldHVybiBuPj4+cnxuPDwzMi1yfWZ1bmN0aW9uIGwobixyKXtyZXR1cm4gbj4+PnJ9ZnVuY3Rpb24gYihuLHIsdCl7cmV0dXJuIG5ecl50fWZ1bmN0aW9uIEgobixyLHQpe3JldHVybiBuJnJefm4mdH1mdW5jdGlvbiBTKG4scix0KXtyZXR1cm4gbiZyXm4mdF5yJnR9ZnVuY3Rpb24gZChuKXtyZXR1cm4gRShuLDIpXkUobiwxMyleRShuLDIyKX1mdW5jdGlvbiBtKG4scil7dmFyIHQ9KDY1NTM1Jm4pKyg2NTUzNSZyKTtyZXR1cm4oNjU1MzUmKG4+Pj4xNikrKHI+Pj4xNikrKHQ+Pj4xNikpPDwxNnw2NTUzNSZ0fWZ1bmN0aW9uIHAobixyLHQsZSl7dmFyIGk9KDY1NTM1Jm4pKyg2NTUzNSZyKSsoNjU1MzUmdCkrKDY1NTM1JmUpO3JldHVybig2NTUzNSYobj4+PjE2KSsocj4+PjE2KSsodD4+PjE2KSsoZT4+PjE2KSsoaT4+PjE2KSk8PDE2fDY1NTM1Jml9ZnVuY3Rpb24geShuLHIsdCxlLGkpe3ZhciBvPSg2NTUzNSZuKSsoNjU1MzUmcikrKDY1NTM1JnQpKyg2NTUzNSZlKSsoNjU1MzUmaSk7cmV0dXJuKDY1NTM1JihuPj4+MTYpKyhyPj4+MTYpKyh0Pj4+MTYpKyhlPj4+MTYpKyhpPj4+MTYpKyhvPj4+MTYpKTw8MTZ8NjU1MzUmb31mdW5jdGlvbiBSKG4pe3JldHVybiBFKG4sNyleRShuLDE4KV5sKG4sMyl9ZnVuY3Rpb24gVShuKXtyZXR1cm4gRShuLDYpXkUobiwxMSleRShuLDI1KX1mdW5jdGlvbiBDKG4pe3JldHVyblsxNzMyNTg0MTkzLDQwMjMyMzM0MTcsMjU2MjM4MzEwMiwyNzE3MzM4NzgsMzI4NTM3NzUyMF19ZnVuY3Rpb24gVChuLHIpe3ZhciB0LGUsaSxvLHUsZix3LHM9W107Zm9yKHQ9clswXSxlPXJbMV0saT1yWzJdLG89clszXSx1PXJbNF0sdz0wO3c8ODA7dys9MSlzW3ddPXc8MTY/blt3XTpBKHNbdy0zXV5zW3ctOF1ec1t3LTE0XV5zW3ctMTZdLDEpLGY9dzwyMD95KEEodCw1KSxIKGUsaSxvKSx1LDE1MTg1MDAyNDksc1t3XSk6dzw0MD95KEEodCw1KSxiKGUsaSxvKSx1LDE4NTk3NzUzOTMsc1t3XSk6dzw2MD95KEEodCw1KSxTKGUsaSxvKSx1LDI0MDA5NTk3MDgsc1t3XSk6eShBKHQsNSksYihlLGksbyksdSwzMzk1NDY5NzgyLHNbd10pLHU9byxvPWksaT1BKGUsMzApLGU9dCx0PWY7cmV0dXJuIHJbMF09bSh0LHJbMF0pLHJbMV09bShlLHJbMV0pLHJbMl09bShpLHJbMl0pLHJbM109bShvLHJbM10pLHJbNF09bSh1LHJbNF0pLHJ9ZnVuY3Rpb24gRihuLHIsdCxlKXtmb3IodmFyIGksbz0xNSsocis2NT4+Pjk8PDQpLHU9cit0O24ubGVuZ3RoPD1vOyluLnB1c2goMCk7Zm9yKG5bcj4+PjVdfD0xMjg8PDI0LXIlMzIsbltvXT00Mjk0OTY3Mjk1JnUsbltvLTFdPXUvNDI5NDk2NzI5NnwwLGk9MDtpPG4ubGVuZ3RoO2krPTE2KWU9VChuLnNsaWNlKGksaSsxNiksZSk7cmV0dXJuIGV9dmFyIEs9ZnVuY3Rpb24obil7ZnVuY3Rpb24gcihyLGUsaSl7dmFyIG89dGhpcztpZihcIlNIQS0xXCIhPT1yKXRocm93IG5ldyBFcnJvcihmKTt2YXIgdT1pfHx7fTtyZXR1cm4obz1uLmNhbGwodGhpcyxyLGUsaSl8fHRoaXMpLmc9ITAsby5GPW8uWSxvLlQ9LTEsby5tPXQoby50LG8uaSxvLlQpLG8uUj1ULG8uQj1mdW5jdGlvbihuKXtyZXR1cm4gbi5zbGljZSgpfSxvLkw9QyxvLks9RixvLnA9WzE3MzI1ODQxOTMsNDAyMzIzMzQxNywyNTYyMzgzMTAyLDI3MTczMzg3OCwzMjg1Mzc3NTIwXSxvLlM9NTEyLG8uVT0xNjAsby5DPSExLHUuaG1hY0tleSYmby5rKGEoXCJobWFjS2V5XCIsdS5obWFjS2V5LG8uVCkpLG99cmV0dXJuIHYocixuKSxyfShoKTtmdW5jdGlvbiBCKG4pe3JldHVyblwiU0hBLTIyNFwiPT1uP28uc2xpY2UoKTp1LnNsaWNlKCl9ZnVuY3Rpb24gTChuLHIpe3ZhciB0LGUsbyx1LGYsdyxzLGEsaCxjLHYsQSxiPVtdO2Zvcih0PXJbMF0sZT1yWzFdLG89clsyXSx1PXJbM10sZj1yWzRdLHc9cls1XSxzPXJbNl0sYT1yWzddLHY9MDt2PDY0O3YrPTEpYlt2XT12PDE2P25bdl06cChFKEE9Ylt2LTJdLDE3KV5FKEEsMTkpXmwoQSwxMCksYlt2LTddLFIoYlt2LTE1XSksYlt2LTE2XSksaD15KGEsVShmKSxIKGYsdyxzKSxpW3ZdLGJbdl0pLGM9bShkKHQpLFModCxlLG8pKSxhPXMscz13LHc9ZixmPW0odSxoKSx1PW8sbz1lLGU9dCx0PW0oaCxjKTtyZXR1cm4gclswXT1tKHQsclswXSksclsxXT1tKGUsclsxXSksclsyXT1tKG8sclsyXSksclszXT1tKHUsclszXSkscls0XT1tKGYscls0XSkscls1XT1tKHcscls1XSkscls2XT1tKHMscls2XSkscls3XT1tKGEscls3XSkscn12YXIgZz1mdW5jdGlvbihuKXtmdW5jdGlvbiByKHIsZSxpKXt2YXIgbz10aGlzO2lmKFwiU0hBLTIyNFwiIT09ciYmXCJTSEEtMjU2XCIhPT1yKXRocm93IG5ldyBFcnJvcihmKTt2YXIgdT1pfHx7fTtyZXR1cm4obz1uLmNhbGwodGhpcyxyLGUsaSl8fHRoaXMpLkY9by5ZLG8uZz0hMCxvLlQ9LTEsby5tPXQoby50LG8uaSxvLlQpLG8uUj1MLG8uQj1mdW5jdGlvbihuKXtyZXR1cm4gbi5zbGljZSgpfSxvLkw9QixvLks9ZnVuY3Rpb24obix0LGUsaSl7cmV0dXJuIGZ1bmN0aW9uKG4scix0LGUsaSl7Zm9yKHZhciBvLHU9MTUrKHIrNjU+Pj45PDw0KSxmPXIrdDtuLmxlbmd0aDw9dTspbi5wdXNoKDApO2ZvcihuW3I+Pj41XXw9MTI4PDwyNC1yJTMyLG5bdV09NDI5NDk2NzI5NSZmLG5bdS0xXT1mLzQyOTQ5NjcyOTZ8MCxvPTA7bzxuLmxlbmd0aDtvKz0xNillPUwobi5zbGljZShvLG8rMTYpLGUpO3JldHVyblwiU0hBLTIyNFwiPT09aT9bZVswXSxlWzFdLGVbMl0sZVszXSxlWzRdLGVbNV0sZVs2XV06ZX0obix0LGUsaSxyKX0sby5wPUIociksby5TPTUxMixvLlU9XCJTSEEtMjI0XCI9PT1yPzIyNDoyNTYsby5DPSExLHUuaG1hY0tleSYmby5rKGEoXCJobWFjS2V5XCIsdS5obWFjS2V5LG8uVCkpLG99cmV0dXJuIHYocixuKSxyfShoKSxrPWZ1bmN0aW9uKG4scil7dGhpcy5OPW4sdGhpcy5JPXJ9O2Z1bmN0aW9uIFkobixyKXt2YXIgdDtyZXR1cm4gcj4zMj8odD02NC1yLG5ldyBrKG4uSTw8cnxuLk4+Pj50LG4uTjw8cnxuLkk+Pj50KSk6MCE9PXI/KHQ9MzItcixuZXcgayhuLk48PHJ8bi5JPj4+dCxuLkk8PHJ8bi5OPj4+dCkpOm59ZnVuY3Rpb24gTihuLHIpe3ZhciB0O3JldHVybiByPDMyPyh0PTMyLXIsbmV3IGsobi5OPj4+cnxuLkk8PHQsbi5JPj4+cnxuLk48PHQpKToodD02NC1yLG5ldyBrKG4uST4+PnJ8bi5OPDx0LG4uTj4+PnJ8bi5JPDx0KSl9ZnVuY3Rpb24gSShuLHIpe3JldHVybiBuZXcgayhuLk4+Pj5yLG4uST4+PnJ8bi5OPDwzMi1yKX1mdW5jdGlvbiBNKG4scix0KXtyZXR1cm4gbmV3IGsobi5OJnIuTl5+bi5OJnQuTixuLkkmci5JXn5uLkkmdC5JKX1mdW5jdGlvbiBYKG4scix0KXtyZXR1cm4gbmV3IGsobi5OJnIuTl5uLk4mdC5OXnIuTiZ0Lk4sbi5JJnIuSV5uLkkmdC5JXnIuSSZ0LkkpfWZ1bmN0aW9uIHoobil7dmFyIHI9TihuLDI4KSx0PU4obiwzNCksZT1OKG4sMzkpO3JldHVybiBuZXcgayhyLk5edC5OXmUuTixyLkledC5JXmUuSSl9ZnVuY3Rpb24gTyhuLHIpe3ZhciB0LGU7dD0oNjU1MzUmbi5JKSsoNjU1MzUmci5JKTt2YXIgaT0oNjU1MzUmKGU9KG4uST4+PjE2KSsoci5JPj4+MTYpKyh0Pj4+MTYpKSk8PDE2fDY1NTM1JnQ7cmV0dXJuIHQ9KDY1NTM1Jm4uTikrKDY1NTM1JnIuTikrKGU+Pj4xNiksZT0obi5OPj4+MTYpKyhyLk4+Pj4xNikrKHQ+Pj4xNiksbmV3IGsoKDY1NTM1JmUpPDwxNnw2NTUzNSZ0LGkpfWZ1bmN0aW9uIGoobixyLHQsZSl7dmFyIGksbztpPSg2NTUzNSZuLkkpKyg2NTUzNSZyLkkpKyg2NTUzNSZ0LkkpKyg2NTUzNSZlLkkpO3ZhciB1PSg2NTUzNSYobz0obi5JPj4+MTYpKyhyLkk+Pj4xNikrKHQuST4+PjE2KSsoZS5JPj4+MTYpKyhpPj4+MTYpKSk8PDE2fDY1NTM1Jmk7cmV0dXJuIGk9KDY1NTM1Jm4uTikrKDY1NTM1JnIuTikrKDY1NTM1JnQuTikrKDY1NTM1JmUuTikrKG8+Pj4xNiksbz0obi5OPj4+MTYpKyhyLk4+Pj4xNikrKHQuTj4+PjE2KSsoZS5OPj4+MTYpKyhpPj4+MTYpLG5ldyBrKCg2NTUzNSZvKTw8MTZ8NjU1MzUmaSx1KX1mdW5jdGlvbiBfKG4scix0LGUsaSl7dmFyIG8sdTtvPSg2NTUzNSZuLkkpKyg2NTUzNSZyLkkpKyg2NTUzNSZ0LkkpKyg2NTUzNSZlLkkpKyg2NTUzNSZpLkkpO3ZhciBmPSg2NTUzNSYodT0obi5JPj4+MTYpKyhyLkk+Pj4xNikrKHQuST4+PjE2KSsoZS5JPj4+MTYpKyhpLkk+Pj4xNikrKG8+Pj4xNikpKTw8MTZ8NjU1MzUmbztyZXR1cm4gbz0oNjU1MzUmbi5OKSsoNjU1MzUmci5OKSsoNjU1MzUmdC5OKSsoNjU1MzUmZS5OKSsoNjU1MzUmaS5OKSsodT4+PjE2KSx1PShuLk4+Pj4xNikrKHIuTj4+PjE2KSsodC5OPj4+MTYpKyhlLk4+Pj4xNikrKGkuTj4+PjE2KSsobz4+PjE2KSxuZXcgaygoNjU1MzUmdSk8PDE2fDY1NTM1Jm8sZil9ZnVuY3Rpb24gUChuLHIpe3JldHVybiBuZXcgayhuLk5eci5OLG4uSV5yLkkpfWZ1bmN0aW9uIHgobil7dmFyIHI9TihuLDEpLHQ9TihuLDgpLGU9SShuLDcpO3JldHVybiBuZXcgayhyLk5edC5OXmUuTixyLkledC5JXmUuSSl9ZnVuY3Rpb24gVihuKXt2YXIgcj1OKG4sMTQpLHQ9TihuLDE4KSxlPU4obiw0MSk7cmV0dXJuIG5ldyBrKHIuTl50Lk5eZS5OLHIuSV50LkleZS5JKX12YXIgWj1bbmV3IGsoaVswXSwzNjA5NzY3NDU4KSxuZXcgayhpWzFdLDYwMjg5MTcyNSksbmV3IGsoaVsyXSwzOTY0NDg0Mzk5KSxuZXcgayhpWzNdLDIxNzMyOTU1NDgpLG5ldyBrKGlbNF0sNDA4MTYyODQ3MiksbmV3IGsoaVs1XSwzMDUzODM0MjY1KSxuZXcgayhpWzZdLDI5Mzc2NzE1NzkpLG5ldyBrKGlbN10sMzY2NDYwOTU2MCksbmV3IGsoaVs4XSwyNzM0ODgzMzk0KSxuZXcgayhpWzldLDExNjQ5OTY1NDIpLG5ldyBrKGlbMTBdLDEzMjM2MTA3NjQpLG5ldyBrKGlbMTFdLDM1OTAzMDQ5OTQpLG5ldyBrKGlbMTJdLDQwNjgxODIzODMpLG5ldyBrKGlbMTNdLDk5MTMzNjExMyksbmV3IGsoaVsxNF0sNjMzODAzMzE3KSxuZXcgayhpWzE1XSwzNDc5Nzc0ODY4KSxuZXcgayhpWzE2XSwyNjY2NjEzNDU4KSxuZXcgayhpWzE3XSw5NDQ3MTExMzkpLG5ldyBrKGlbMThdLDIzNDEyNjI3NzMpLG5ldyBrKGlbMTldLDIwMDc4MDA5MzMpLG5ldyBrKGlbMjBdLDE0OTU5OTA5MDEpLG5ldyBrKGlbMjFdLDE4NTY0MzEyMzUpLG5ldyBrKGlbMjJdLDMxNzUyMTgxMzIpLG5ldyBrKGlbMjNdLDIxOTg5NTA4MzcpLG5ldyBrKGlbMjRdLDM5OTk3MTkzMzkpLG5ldyBrKGlbMjVdLDc2Njc4NDAxNiksbmV3IGsoaVsyNl0sMjU2NjU5NDg3OSksbmV3IGsoaVsyN10sMzIwMzMzNzk1NiksbmV3IGsoaVsyOF0sMTAzNDQ1NzAyNiksbmV3IGsoaVsyOV0sMjQ2Njk0ODkwMSksbmV3IGsoaVszMF0sMzc1ODMyNjM4MyksbmV3IGsoaVszMV0sMTY4NzE3OTM2KSxuZXcgayhpWzMyXSwxMTg4MTc5OTY0KSxuZXcgayhpWzMzXSwxNTQ2MDQ1NzM0KSxuZXcgayhpWzM0XSwxNTIyODA1NDg1KSxuZXcgayhpWzM1XSwyNjQzODMzODIzKSxuZXcgayhpWzM2XSwyMzQzNTI3MzkwKSxuZXcgayhpWzM3XSwxMDE0NDc3NDgwKSxuZXcgayhpWzM4XSwxMjA2NzU5MTQyKSxuZXcgayhpWzM5XSwzNDQwNzc2MjcpLG5ldyBrKGlbNDBdLDEyOTA4NjM0NjApLG5ldyBrKGlbNDFdLDMxNTg0NTQyNzMpLG5ldyBrKGlbNDJdLDM1MDU5NTI2NTcpLG5ldyBrKGlbNDNdLDEwNjIxNzAwOCksbmV3IGsoaVs0NF0sMzYwNjAwODM0NCksbmV3IGsoaVs0NV0sMTQzMjcyNTc3NiksbmV3IGsoaVs0Nl0sMTQ2NzAzMTU5NCksbmV3IGsoaVs0N10sODUxMTY5NzIwKSxuZXcgayhpWzQ4XSwzMTAwODIzNzUyKSxuZXcgayhpWzQ5XSwxMzYzMjU4MTk1KSxuZXcgayhpWzUwXSwzNzUwNjg1NTkzKSxuZXcgayhpWzUxXSwzNzg1MDUwMjgwKSxuZXcgayhpWzUyXSwzMzE4MzA3NDI3KSxuZXcgayhpWzUzXSwzODEyNzIzNDAzKSxuZXcgayhpWzU0XSwyMDAzMDM0OTk1KSxuZXcgayhpWzU1XSwzNjAyMDM2ODk5KSxuZXcgayhpWzU2XSwxNTc1OTkwMDEyKSxuZXcgayhpWzU3XSwxMTI1NTkyOTI4KSxuZXcgayhpWzU4XSwyNzE2OTA0MzA2KSxuZXcgayhpWzU5XSw0NDI3NzYwNDQpLG5ldyBrKGlbNjBdLDU5MzY5ODM0NCksbmV3IGsoaVs2MV0sMzczMzExMDI0OSksbmV3IGsoaVs2Ml0sMjk5OTM1MTU3MyksbmV3IGsoaVs2M10sMzgxNTkyMDQyNyksbmV3IGsoMzM5MTU2OTYxNCwzOTI4MzgzOTAwKSxuZXcgaygzNTE1MjY3MjcxLDU2NjI4MDcxMSksbmV3IGsoMzk0MDE4NzYwNiwzNDU0MDY5NTM0KSxuZXcgayg0MTE4NjMwMjcxLDQwMDAyMzk5OTIpLG5ldyBrKDExNjQxODQ3NCwxOTE0MTM4NTU0KSxuZXcgaygxNzQyOTI0MjEsMjczMTA1NTI3MCksbmV3IGsoMjg5MzgwMzU2LDMyMDM5OTMwMDYpLG5ldyBrKDQ2MDM5MzI2OSwzMjA2MjAzMTUpLG5ldyBrKDY4NTQ3MTczMyw1ODc0OTY4MzYpLG5ldyBrKDg1MjE0Mjk3MSwxMDg2NzkyODUxKSxuZXcgaygxMDE3MDM2Mjk4LDM2NTU0MzEwMCksbmV3IGsoMTEyNjAwMDU4MCwyNjE4Mjk3Njc2KSxuZXcgaygxMjg4MDMzNDcwLDM0MDk4NTUxNTgpLG5ldyBrKDE1MDE1MDU5NDgsNDIzNDUwOTg2NiksbmV3IGsoMTYwNzE2NzkxNSw5ODcxNjc0NjgpLG5ldyBrKDE4MTY0MDIzMTYsMTI0NjE4OTU5MSldO2Z1bmN0aW9uIHEobil7cmV0dXJuXCJTSEEtMzg0XCI9PT1uP1tuZXcgaygzNDE4MDcwMzY1LG9bMF0pLG5ldyBrKDE2NTQyNzAyNTAsb1sxXSksbmV3IGsoMjQzODUyOTM3MCxvWzJdKSxuZXcgaygzNTU0NjIzNjAsb1szXSksbmV3IGsoMTczMTQwNTQxNSxvWzRdKSxuZXcgayg0MTA0ODg4NTg5NSxvWzVdKSxuZXcgaygzNjc1MDA4NTI1LG9bNl0pLG5ldyBrKDEyMDMwNjI4MTMsb1s3XSldOltuZXcgayh1WzBdLDQwODkyMzU3MjApLG5ldyBrKHVbMV0sMjIyNzg3MzU5NSksbmV3IGsodVsyXSw0MjcxMTc1NzIzKSxuZXcgayh1WzNdLDE1OTU3NTAxMjkpLG5ldyBrKHVbNF0sMjkxNzU2NTEzNyksbmV3IGsodVs1XSw3MjU1MTExOTkpLG5ldyBrKHVbNl0sNDIxNTM4OTU0NyksbmV3IGsodVs3XSwzMjcwMzMyMDkpXX1mdW5jdGlvbiBEKG4scil7dmFyIHQsZSxpLG8sdSxmLHcscyxhLGgsYyx2LEEsRSxsLGIsSD1bXTtmb3IodD1yWzBdLGU9clsxXSxpPXJbMl0sbz1yWzNdLHU9cls0XSxmPXJbNV0sdz1yWzZdLHM9cls3XSxjPTA7Yzw4MDtjKz0xKWM8MTY/KHY9MipjLEhbY109bmV3IGsoblt2XSxuW3YrMV0pKTpIW2NdPWooKHZvaWQgMCx2b2lkIDAsdm9pZCAwLEU9TihBPUhbYy0yXSwxOSksbD1OKEEsNjEpLGI9SShBLDYpLG5ldyBrKEUuTl5sLk5eYi5OLEUuSV5sLkleYi5JKSksSFtjLTddLHgoSFtjLTE1XSksSFtjLTE2XSksYT1fKHMsVih1KSxNKHUsZix3KSxaW2NdLEhbY10pLGg9Tyh6KHQpLFgodCxlLGkpKSxzPXcsdz1mLGY9dSx1PU8obyxhKSxvPWksaT1lLGU9dCx0PU8oYSxoKTtyZXR1cm4gclswXT1PKHQsclswXSksclsxXT1PKGUsclsxXSksclsyXT1PKGksclsyXSksclszXT1PKG8sclszXSkscls0XT1PKHUscls0XSkscls1XT1PKGYscls1XSkscls2XT1PKHcscls2XSkscls3XT1PKHMscls3XSkscn12YXIgRz1mdW5jdGlvbihuKXtmdW5jdGlvbiByKHIsZSxpKXt2YXIgbz10aGlzO2lmKFwiU0hBLTM4NFwiIT09ciYmXCJTSEEtNTEyXCIhPT1yKXRocm93IG5ldyBFcnJvcihmKTt2YXIgdT1pfHx7fTtyZXR1cm4obz1uLmNhbGwodGhpcyxyLGUsaSl8fHRoaXMpLkY9by5ZLG8uZz0hMCxvLlQ9LTEsby5tPXQoby50LG8uaSxvLlQpLG8uUj1ELG8uQj1mdW5jdGlvbihuKXtyZXR1cm4gbi5zbGljZSgpfSxvLkw9cSxvLks9ZnVuY3Rpb24obix0LGUsaSl7cmV0dXJuIGZ1bmN0aW9uKG4scix0LGUsaSl7Zm9yKHZhciBvLHU9MzErKHIrMTI5Pj4+MTA8PDUpLGY9cit0O24ubGVuZ3RoPD11OyluLnB1c2goMCk7Zm9yKG5bcj4+PjVdfD0xMjg8PDI0LXIlMzIsblt1XT00Mjk0OTY3Mjk1JmYsblt1LTFdPWYvNDI5NDk2NzI5NnwwLG89MDtvPG4ubGVuZ3RoO28rPTMyKWU9RChuLnNsaWNlKG8sbyszMiksZSk7cmV0dXJuXCJTSEEtMzg0XCI9PT1pP1soZT1lKVswXS5OLGVbMF0uSSxlWzFdLk4sZVsxXS5JLGVbMl0uTixlWzJdLkksZVszXS5OLGVbM10uSSxlWzRdLk4sZVs0XS5JLGVbNV0uTixlWzVdLkldOltlWzBdLk4sZVswXS5JLGVbMV0uTixlWzFdLkksZVsyXS5OLGVbMl0uSSxlWzNdLk4sZVszXS5JLGVbNF0uTixlWzRdLkksZVs1XS5OLGVbNV0uSSxlWzZdLk4sZVs2XS5JLGVbN10uTixlWzddLkldfShuLHQsZSxpLHIpfSxvLnA9cShyKSxvLlM9MTAyNCxvLlU9XCJTSEEtMzg0XCI9PT1yPzM4NDo1MTIsby5DPSExLHUuaG1hY0tleSYmby5rKGEoXCJobWFjS2V5XCIsdS5obWFjS2V5LG8uVCkpLG99cmV0dXJuIHYocixuKSxyfShoKSxKPVtuZXcgaygwLDEpLG5ldyBrKDAsMzI4OTgpLG5ldyBrKDIxNDc0ODM2NDgsMzI5MDYpLG5ldyBrKDIxNDc0ODM2NDgsMjE0NzUxNjQxNiksbmV3IGsoMCwzMjkwNyksbmV3IGsoMCwyMTQ3NDgzNjQ5KSxuZXcgaygyMTQ3NDgzNjQ4LDIxNDc1MTY1NDUpLG5ldyBrKDIxNDc0ODM2NDgsMzI3NzcpLG5ldyBrKDAsMTM4KSxuZXcgaygwLDEzNiksbmV3IGsoMCwyMTQ3NTE2NDI1KSxuZXcgaygwLDIxNDc0ODM2NTgpLG5ldyBrKDAsMjE0NzUxNjU1NSksbmV3IGsoMjE0NzQ4MzY0OCwxMzkpLG5ldyBrKDIxNDc0ODM2NDgsMzI5MDUpLG5ldyBrKDIxNDc0ODM2NDgsMzI3NzEpLG5ldyBrKDIxNDc0ODM2NDgsMzI3NzApLG5ldyBrKDIxNDc0ODM2NDgsMTI4KSxuZXcgaygwLDMyNzc4KSxuZXcgaygyMTQ3NDgzNjQ4LDIxNDc0ODM2NTgpLG5ldyBrKDIxNDc0ODM2NDgsMjE0NzUxNjU0NSksbmV3IGsoMjE0NzQ4MzY0OCwzMjg5NiksbmV3IGsoMCwyMTQ3NDgzNjQ5KSxuZXcgaygyMTQ3NDgzNjQ4LDIxNDc1MTY0MjQpXSxRPVtbMCwzNiwzLDQxLDE4XSxbMSw0NCwxMCw0NSwyXSxbNjIsNiw0MywxNSw2MV0sWzI4LDU1LDI1LDIxLDU2XSxbMjcsMjAsMzksOCwxNF1dO2Z1bmN0aW9uIFcobil7dmFyIHIsdD1bXTtmb3Iocj0wO3I8NTtyKz0xKXRbcl09W25ldyBrKDAsMCksbmV3IGsoMCwwKSxuZXcgaygwLDApLG5ldyBrKDAsMCksbmV3IGsoMCwwKV07cmV0dXJuIHR9ZnVuY3Rpb24gJChuKXt2YXIgcix0PVtdO2ZvcihyPTA7cjw1O3IrPTEpdFtyXT1uW3JdLnNsaWNlKCk7cmV0dXJuIHR9ZnVuY3Rpb24gbm4obixyKXt2YXIgdCxlLGksbyx1LGYsdyxzLGEsaD1bXSxjPVtdO2lmKG51bGwhPT1uKWZvcihlPTA7ZTxuLmxlbmd0aDtlKz0yKXJbKGU+Pj4xKSU1XVsoZT4+PjEpLzV8MF09UChyWyhlPj4+MSklNV1bKGU+Pj4xKS81fDBdLG5ldyBrKG5bZSsxXSxuW2VdKSk7Zm9yKHQ9MDt0PDI0O3QrPTEpe2ZvcihvPVcoKSxlPTA7ZTw1O2UrPTEpaFtlXT0odT1yW2VdWzBdLGY9cltlXVsxXSx3PXJbZV1bMl0scz1yW2VdWzNdLGE9cltlXVs0XSxuZXcgayh1Lk5eZi5OXncuTl5zLk5eYS5OLHUuSV5mLkledy5JXnMuSV5hLkkpKTtmb3IoZT0wO2U8NTtlKz0xKWNbZV09UChoWyhlKzQpJTVdLFkoaFsoZSsxKSU1XSwxKSk7Zm9yKGU9MDtlPDU7ZSs9MSlmb3IoaT0wO2k8NTtpKz0xKXJbZV1baV09UChyW2VdW2ldLGNbZV0pO2ZvcihlPTA7ZTw1O2UrPTEpZm9yKGk9MDtpPDU7aSs9MSlvW2ldWygyKmUrMyppKSU1XT1ZKHJbZV1baV0sUVtlXVtpXSk7Zm9yKGU9MDtlPDU7ZSs9MSlmb3IoaT0wO2k8NTtpKz0xKXJbZV1baV09UChvW2VdW2ldLG5ldyBrKH5vWyhlKzEpJTVdW2ldLk4mb1soZSsyKSU1XVtpXS5OLH5vWyhlKzEpJTVdW2ldLkkmb1soZSsyKSU1XVtpXS5JKSk7clswXVswXT1QKHJbMF1bMF0sSlt0XSl9cmV0dXJuIHJ9ZnVuY3Rpb24gcm4obil7dmFyIHIsdCxlPTAsaT1bMCwwXSxvPVs0Mjk0OTY3Mjk1Jm4sbi80Mjk0OTY3Mjk2JjIwOTcxNTFdO2ZvcihyPTY7cj49MDtyLS0pMD09KHQ9b1tyPj4yXT4+PjgqciYyNTUpJiYwPT09ZXx8KGlbZSsxPj4yXXw9dDw8OCooZSsxKSxlKz0xKTtyZXR1cm4gZT0wIT09ZT9lOjEsaVswXXw9ZSx7dmFsdWU6ZSsxPjQ/aTpbaVswXV0sYmluTGVuOjgrOCplfX1mdW5jdGlvbiB0bihuKXtyZXR1cm4gdyhybihuLmJpbkxlbiksbil9ZnVuY3Rpb24gZW4obixyKXt2YXIgdCxlPXJuKHIpLGk9cj4+PjIsbz0oaS0oZT13KGUsbikpLnZhbHVlLmxlbmd0aCVpKSVpO2Zvcih0PTA7dDxvO3QrKyllLnZhbHVlLnB1c2goMCk7cmV0dXJuIGUudmFsdWV9dmFyIG9uPWZ1bmN0aW9uKG4pe2Z1bmN0aW9uIHIocixlLGkpe3ZhciBvPXRoaXMsdT02LHc9MCxzPWl8fHt9O2lmKDEhPT0obz1uLmNhbGwodGhpcyxyLGUsaSl8fHRoaXMpLm51bVJvdW5kcyl7aWYocy5rbWFjS2V5fHxzLmhtYWNLZXkpdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHNldCBudW1Sb3VuZHMgd2l0aCBNQUNcIik7aWYoXCJDU0hBS0UxMjhcIj09PW8ub3x8XCJDU0hBS0UyNTZcIj09PW8ubyl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3Qgc2V0IG51bVJvdW5kcyBmb3IgQ1NIQUtFIHZhcmlhbnRzXCIpfXN3aXRjaChvLlQ9MSxvLm09dChvLnQsby5pLG8uVCksby5SPW5uLG8uQj0kLG8uTD1XLG8ucD1XKCksby5DPSExLHIpe2Nhc2VcIlNIQTMtMjI0XCI6by5TPXc9MTE1MixvLlU9MjI0LG8uZz0hMCxvLkY9by5ZO2JyZWFrO2Nhc2VcIlNIQTMtMjU2XCI6by5TPXc9MTA4OCxvLlU9MjU2LG8uZz0hMCxvLkY9by5ZO2JyZWFrO2Nhc2VcIlNIQTMtMzg0XCI6by5TPXc9ODMyLG8uVT0zODQsby5nPSEwLG8uRj1vLlk7YnJlYWs7Y2FzZVwiU0hBMy01MTJcIjpvLlM9dz01NzYsby5VPTUxMixvLmc9ITAsby5GPW8uWTticmVhaztjYXNlXCJTSEFLRTEyOFwiOnU9MzEsby5TPXc9MTM0NCxvLlU9LTEsby5DPSEwLG8uZz0hMSxvLkY9bnVsbDticmVhaztjYXNlXCJTSEFLRTI1NlwiOnU9MzEsby5TPXc9MTA4OCxvLlU9LTEsby5DPSEwLG8uZz0hMSxvLkY9bnVsbDticmVhaztjYXNlXCJLTUFDMTI4XCI6dT00LG8uUz13PTEzNDQsby5NKGkpLG8uVT0tMSxvLkM9ITAsby5nPSExLG8uRj1vLlg7YnJlYWs7Y2FzZVwiS01BQzI1NlwiOnU9NCxvLlM9dz0xMDg4LG8uTShpKSxvLlU9LTEsby5DPSEwLG8uZz0hMSxvLkY9by5YO2JyZWFrO2Nhc2VcIkNTSEFLRTEyOFwiOm8uUz13PTEzNDQsdT1vLk8oaSksby5VPS0xLG8uQz0hMCxvLmc9ITEsby5GPW51bGw7YnJlYWs7Y2FzZVwiQ1NIQUtFMjU2XCI6by5TPXc9MTA4OCx1PW8uTyhpKSxvLlU9LTEsby5DPSEwLG8uZz0hMSxvLkY9bnVsbDticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcihmKX1yZXR1cm4gby5LPWZ1bmN0aW9uKG4scix0LGUsaSl7cmV0dXJuIGZ1bmN0aW9uKG4scix0LGUsaSxvLHUpe3ZhciBmLHcscz0wLGE9W10saD1pPj4+NSxjPXI+Pj41O2ZvcihmPTA7ZjxjJiZyPj1pO2YrPWgpZT1ubihuLnNsaWNlKGYsZitoKSxlKSxyLT1pO2ZvcihuPW4uc2xpY2UoZiksciU9aTtuLmxlbmd0aDxoOyluLnB1c2goMCk7Zm9yKG5bKGY9cj4+PjMpPj4yXV49bzw8ZiU0KjgsbltoLTFdXj0yMTQ3NDgzNjQ4LGU9bm4obixlKTszMiphLmxlbmd0aDx1JiYodz1lW3MlNV1bcy81fDBdLGEucHVzaCh3LkkpLCEoMzIqYS5sZW5ndGg+PXUpKTspYS5wdXNoKHcuTiksMD09NjQqKHMrPTEpJWkmJihubihudWxsLGUpLHM9MCk7cmV0dXJuIGF9KG4sciwwLGUsdyx1LGkpfSxzLmhtYWNLZXkmJm8uayhhKFwiaG1hY0tleVwiLHMuaG1hY0tleSxvLlQpKSxvfXJldHVybiB2KHIsbiksci5wcm90b3R5cGUuTz1mdW5jdGlvbihuLHIpe3ZhciB0PWZ1bmN0aW9uKG4pe3ZhciByPW58fHt9O3JldHVybntmdW5jTmFtZTphKFwiZnVuY05hbWVcIixyLmZ1bmNOYW1lLDEse3ZhbHVlOltdLGJpbkxlbjowfSksY3VzdG9taXphdGlvbjphKFwiQ3VzdG9taXphdGlvblwiLHIuY3VzdG9taXphdGlvbiwxLHt2YWx1ZTpbXSxiaW5MZW46MH0pfX0obnx8e30pO3ImJih0LmZ1bmNOYW1lPXIpO3ZhciBlPXcodG4odC5mdW5jTmFtZSksdG4odC5jdXN0b21pemF0aW9uKSk7aWYoMCE9PXQuY3VzdG9taXphdGlvbi5iaW5MZW58fDAhPT10LmZ1bmNOYW1lLmJpbkxlbil7Zm9yKHZhciBpPWVuKGUsdGhpcy5TPj4+Myksbz0wO288aS5sZW5ndGg7bys9dGhpcy5TPj4+NSl0aGlzLnA9dGhpcy5SKGkuc2xpY2UobyxvKyh0aGlzLlM+Pj41KSksdGhpcy5wKSx0aGlzLnYrPXRoaXMuUztyZXR1cm4gNH1yZXR1cm4gMzF9LHIucHJvdG90eXBlLk09ZnVuY3Rpb24obil7dmFyIHI9ZnVuY3Rpb24obil7dmFyIHI9bnx8e307cmV0dXJue2ttYWNLZXk6YShcImttYWNLZXlcIixyLmttYWNLZXksMSksZnVuY05hbWU6e3ZhbHVlOlsxMTI4MzUzMDk5XSxiaW5MZW46MzJ9LGN1c3RvbWl6YXRpb246YShcIkN1c3RvbWl6YXRpb25cIixyLmN1c3RvbWl6YXRpb24sMSx7dmFsdWU6W10sYmluTGVuOjB9KX19KG58fHt9KTt0aGlzLk8obixyLmZ1bmNOYW1lKTtmb3IodmFyIHQ9ZW4odG4oci5rbWFjS2V5KSx0aGlzLlM+Pj4zKSxlPTA7ZTx0Lmxlbmd0aDtlKz10aGlzLlM+Pj41KXRoaXMucD10aGlzLlIodC5zbGljZShlLGUrKHRoaXMuUz4+PjUpKSx0aGlzLnApLHRoaXMudis9dGhpcy5TO3RoaXMuQT0hMH0sci5wcm90b3R5cGUuWD1mdW5jdGlvbihuKXt2YXIgcj13KHt2YWx1ZTp0aGlzLnUuc2xpY2UoKSxiaW5MZW46dGhpcy5zfSxmdW5jdGlvbihuKXt2YXIgcix0LGU9MCxpPVswLDBdLG89WzQyOTQ5NjcyOTUmbixuLzQyOTQ5NjcyOTYmMjA5NzE1MV07Zm9yKHI9NjtyPj0wO3ItLSkwPT0odD1vW3I+PjJdPj4+OCpyJjI1NSkmJjA9PT1lfHwoaVtlPj4yXXw9dDw8OCplLGUrPTEpO3JldHVybiBpWyhlPTAhPT1lP2U6MSk+PjJdfD1lPDw4KmUse3ZhbHVlOmUrMT40P2k6W2lbMF1dLGJpbkxlbjo4KzgqZX19KG4ub3V0cHV0TGVuKSk7cmV0dXJuIHRoaXMuSyhyLnZhbHVlLHIuYmluTGVuLHRoaXMudix0aGlzLkIodGhpcy5wKSxuLm91dHB1dExlbil9LHJ9KGgpO3JldHVybiBmdW5jdGlvbigpe2Z1bmN0aW9uIG4obixyLHQpe2lmKFwiU0hBLTFcIj09bil0aGlzLmo9bmV3IEsobixyLHQpO2Vsc2UgaWYoXCJTSEEtMjI0XCI9PW58fFwiU0hBLTI1NlwiPT1uKXRoaXMuaj1uZXcgZyhuLHIsdCk7ZWxzZSBpZihcIlNIQS0zODRcIj09bnx8XCJTSEEtNTEyXCI9PW4pdGhpcy5qPW5ldyBHKG4scix0KTtlbHNle2lmKFwiU0hBMy0yMjRcIiE9biYmXCJTSEEzLTI1NlwiIT1uJiZcIlNIQTMtMzg0XCIhPW4mJlwiU0hBMy01MTJcIiE9biYmXCJTSEFLRTEyOFwiIT1uJiZcIlNIQUtFMjU2XCIhPW4mJlwiQ1NIQUtFMTI4XCIhPW4mJlwiQ1NIQUtFMjU2XCIhPW4mJlwiS01BQzEyOFwiIT1uJiZcIktNQUMyNTZcIiE9bil0aHJvdyBuZXcgRXJyb3IoZik7dGhpcy5qPW5ldyBvbihuLHIsdCl9fXJldHVybiBuLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24obil7dGhpcy5qLnVwZGF0ZShuKX0sbi5wcm90b3R5cGUuZ2V0SGFzaD1mdW5jdGlvbihuLHIpe3JldHVybiB0aGlzLmouZ2V0SGFzaChuLHIpfSxuLnByb3RvdHlwZS5zZXRITUFDS2V5PWZ1bmN0aW9uKG4scix0KXt0aGlzLmouc2V0SE1BQ0tleShuLHIsdCl9LG4ucHJvdG90eXBlLmdldEhNQUM9ZnVuY3Rpb24obixyKXtyZXR1cm4gdGhpcy5qLmdldEhNQUMobixyKX0sbn0oKX0sXCJvYmplY3RcIj09dHlwZW9mIF8kc2hhXzI2LmV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPVwib2JqZWN0XCI/XyRzaGFfMjYuZXhwb3J0cz1yKCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShyKToobj1ufHxzZWxmKS5qc1NIQT1yKCk7XG5cbl8kc2hhXzI2ID0gXyRzaGFfMjYuZXhwb3J0c1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5Ob1lTNXFjeUpkTENKdVlXMWxjeUk2V3lKdUlpd2ljaUlzSW5Sb2FYTWlMQ0owSWl3aVpTSXNJbWtpTENKdklpd2lkU0lzSW1ZaUxDSjNJaXdpY3lJc0lteGxibWQwYUNJc0luQjFjMmdpTENKMllXeDFaU0lzSW1KcGJreGxiaUlzSWtWeWNtOXlJaXdpWVNJc0luQmhjbk5sU1c1MElpd2ljM1ZpYzNSeUlpd2lhWE5PWVU0aUxDSm9JaXdpWXlJc0luWWlMQ0pCSWl3aVJTSXNJbU5vWVhKRGIyUmxRWFFpTENKcGJtUmxlRTltSWl3aWMyVmhjbU5vSWl3aWNtVndiR0ZqWlNJc0ltTm9ZWEpCZENJc0lrRnljbUY1UW5WbVptVnlJaXdpVldsdWREaEJjbkpoZVNJc0ltOTFkSEIxZEZWd2NHVnlJaXdpZEc5VmNIQmxja05oYzJVaUxDSmlOalJRWVdRaUxDSlRkSEpwYm1jaUxDSm1jbTl0UTJoaGNrTnZaR1VpTENKd2IzQWlMQ0pqYjI1allYUWlMQ0p2ZFhSd2RYUk1aVzRpTENKemFHRnJaVXhsYmlJc0ltWnZjbTFoZENJc0ltVnVZMjlrYVc1bklpd2liblZ0VW05MWJtUnpJaXdpYkNJc0lrZ2lMQ0p3Y205MGIzUjVjR1VpTENKMWNHUmhkR1VpTENKVElpd2liU0lzSW5BaUxDSlNJaXdpYzJ4cFkyVWlMQ0puWlhSSVlYTm9JaXdpVlNJc0lrTWlMQ0pVSWl3aVJpSXNJa3NpTENKQ0lpd2lUQ0lzSW5ObGRFaE5RVU5MWlhraUxDSm5JaXdpYXlJc0ltZGxkRWhOUVVNaUxDSlpJaXdpVDJKcVpXTjBJaXdpYzJWMFVISnZkRzkwZVhCbFQyWWlMQ0pmWDNCeWIzUnZYMThpTENKQmNuSmhlU0lzSW1oaGMwOTNibEJ5YjNCbGNuUjVJaXdpWTI5dWMzUnlkV04wYjNJaUxDSmpjbVZoZEdVaUxDSmlJaXdpWkNJc0lua2lMQ0pqWVd4c0lpd2lhRzFoWTB0bGVTSXNJazRpTENKSklpd2lUU0lzSWxnaUxDSjZJaXdpVHlJc0ltb2lMQ0pmSWl3aVVDSXNJbmdpTENKV0lpd2lXaUlzSW5FaUxDSkVJaXdpUnlJc0lrb2lMQ0pSSWl3aVZ5SXNJaVFpTENKdWJpSXNJbkp1SWl3aWRHNGlMQ0psYmlJc0ltOXVJaXdpYTIxaFkwdGxlU0lzSW1aMWJtTk9ZVzFsSWl3aVkzVnpkRzl0YVhwaGRHbHZiaUlzSW1WNGNHOXlkSE1pTENKdGIyUjFiR1VpTENKa1pXWnBibVVpTENKaGJXUWlMQ0p6Wld4bUlpd2lhbk5UU0VFaVhTd2liV0Z3Y0dsdVozTWlPaUk3UVVGdlFrTXNTVUZCVTBFc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSa1FzUTBGQlFVRXNRMEZCYjBwRkxFbEJRVUZCTEVOQlFXeEtSQ3hEUVVGQlFTeERRVUYxU2l4VlFVRkJMRU5CUVZrc1dVRkJRU3hEUVVGaExFbEJRVWxFTEVOQlFVRkJMRU5CUVVVc2EwVkJRVUVzUTBGQmJVVXNVMEZCVTBNc1EwRkJRVUVzUTBGQlJVUXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlVVc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlVDeERRVUZCUVN4RlFVRkhMRU5CUVVNc1EwRkJRU3hEUVVGQkxFTkJRVWRSTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRPTEVOQlFVRkJMRU5CUVVWQkxFTkJRVUZCTEVWQlFVY3NRMEZCUVN4SlFVRkxMRU5CUVVFc1EwRkJSVThzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFZEJRVWxPTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJTeEpRVUZKUXl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJVRXNRMEZCUVVFc1EwRkJSVXdzUTBGQlFVRXNRMEZCUlZjc1RVRkJRVUVzUTBGQlQwNHNRMEZCUVVFc1JVRkJSeXhEUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVWR0xFTkJRVUZCTEVOQlFVVkpMRU5CUVVGQkxFbEJRVXNzUTBGQlFTeERRVUZGUkN4RFFVRkJRU3hEUVVGRlJ5eE5RVUZCUVN4RlFVRlJUQ3hEUVVGQlFTeEZRVUZIUlN4RFFVRkJRU3hEUVVGRlNTeEpRVUZCUVN4RFFVRkxMRU5CUVVFc1EwRkJRU3hEUVVGSFNpeERRVUZCUVN4RFFVRkZSaXhEUVVGQlFTeERRVUZCUVN4RlFVRkpUaXhEUVVGQlFTeERRVUZGU3l4RFFVRkJRU3hEUVVGQlFTeEZRVUZKTEVOQlFVRXNSVUZCUjBzc1EwRkJRVUVzUTBGQlJVNHNRMEZCUVVFc1JVRkJSMGNzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGSkxFMUJRVTBzUTBGQlEwMHNTMEZCUVVFc1EwRkJUVXdzUTBGQlFVRXNRMEZCUlUwc1RVRkJRVUVzUTBGQlR5eERRVUZCTEVOQlFVVmtMRU5CUVVGQkxFTkJRVVZYTEUxQlFVRkJMRU5CUVU5U0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1UwRkJVMEVzUTBGQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhQUVVGUFJDeERRVUZCUVN4RlFVRkhMRWxCUVVrc1RVRkJRU3hEUVVGUExFbEJRVWtzVTBGQlFTeERRVUZWTEVsQlFVa3NVMEZCUVN4RFFVRlZMRTFCUVUwc1VVRkJVU3hOUVVGTkxFbEJRVWxYTEV0QlFVRkJMRU5CUVUwc05FTkJRVUVzUTBGQlFTeERRVUU0UXl4UFFVRlBXaXhEUVVGQlFTeEZRVUZITEVsQlFVa3NTMEZCUVN4RFFVRk5MRTlCUVU4c1UwRkJVMGdzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eFBRVUZQTEZOQlFWTklMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVWRkxFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NTVUZCU1VNc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJTeEhRVUZITEVOQlFVRXNSVUZCUjFJc1EwRkJRVUVzUTBGQlJWY3NUVUZCUVVFc1EwRkJUeXhEUVVGQkxFTkJRVVVzVFVGQlRTeEpRVUZKU1N4TFFVRkJRU3hEUVVGTkxDdERRVUZCTEVOQlFVRXNRMEZCYVVRc1NVRkJTVTRzUTBGQlFVRXNRMEZCUlZJc1EwRkJRVUVzUlVGQlJ5eERRVUZETEVOQlFVRXNRMEZCUVN4RFFVRkhVeXhEUVVGQlFTeERRVUZCUVN4RFFVRkhVQ3hEUVVGQlFTeERRVUZGUVN4RFFVRkJRU3hGUVVGSExFTkJRVUVzU1VGQlN5eERRVUZCTEVOQlFVVmhMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4SFFVRkpXaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVVc1NVRkJTVU1zUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVk1MRU5CUVVGQkxFTkJRVVZYTEUxQlFVRkJMRU5CUVU5T0xFTkJRVUZCTEVWQlFVY3NRMEZCUVN4RFFVRkZMRU5CUVVNc1IwRkJSME1zUTBGQlFVRXNRMEZCUlZjc1VVRkJRVUVzUTBGQlUycENMRU5CUVVGQkxFTkJRVVZyUWl4TlFVRkJRU3hEUVVGUFlpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSExFVkJRVUVzUTBGQlFTeERRVUZKWXl4TFFVRkJRU3hEUVVGTllpeERRVUZCUVN4RFFVRkJRU3hEUVVGSExFMUJRVTBzU1VGQlNWTXNTMEZCUVVFc1EwRkJUU3huUkVGQlFTeERRVUZCTEVOQlFXdEVMRWxCUVVsU0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkSUxFTkJRVUZCTEVkQlFVa3NRMEZCUVN4RlFVRkhTeXhEUVVGQlFTeEpRVUZMTEVOQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJVVXNUVUZCUVVFc1JVRkJVVW9zUTBGQlFVRXNSVUZCUjBVc1EwRkJRVUVzUTBGQlJVY3NTVUZCUVVFc1EwRkJTeXhEUVVGQkxFTkJRVUVzUTBGQlIwZ3NRMEZCUVVFc1EwRkJSVVlzUTBGQlFVRXNRMEZCUVVFc1JVRkJTVVFzUTBGQlFVRXNSVUZCUnl4RFFVRkJMRVZCUVVkVkxFTkJRVUZCTEVOQlFVVmFMRU5CUVVGQkxFVkJRVWRKTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlNTeE5RVUZOTEVOQlFVTkxMRXRCUVVGQkxFTkJRVTFLTEVOQlFVRkJMRU5CUVVWTExFMUJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVRkZaQ3hEUVVGQlFTeERRVUZGVnl4TlFVRkJRU3hEUVVGUFVpeERRVUZCUVN4RFFVRkJRU3hEUVVGd1dTeERRVUYzV1Vnc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUlVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJTU3hKUVVGSkxFMUJRVUVzUTBGQlR5eFBRVUZQTEZOQlFWTk1MRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVWRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1QwRkJUeXhUUVVGVFNDeERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUlN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhMRWxCUVVsRExFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZOTEVOQlFVRkJMRU5CUVVWSkxFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZjRUlzUTBGQlFVRXNSVUZCUnl4RFFVRkRMRU5CUVVFc1EwRkJRU3hEUVVGSGNVSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIzQkNMRU5CUVVGQkxFTkJRVVZCTEVOQlFVRkJMRVZCUVVjc1EwRkJRU3hKUVVGTExFTkJRVUVzUTBGQlJTeEhRVUZITEUxQlFVRXNSMEZCVTBnc1EwRkJRVUVzUTBGQlJTeEpRVUZKYlVJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRWRCUVVsbUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSVWNzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVlNMRU5CUVVGQkxFTkJRVVZYTEUxQlFVRkJMRU5CUVU5SUxFTkJRVUZCTEVWQlFVY3NRMEZCUVN4RFFVRkZMRWxCUVVsRUxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkhMRWRCUVVFc1JVRkJTMFFzUTBGQlFVRXNRMEZCUlU0c1EwRkJRVUVzUTBGQlJYbENMRlZCUVVGQkxFTkJRVmRxUWl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkpSQ3hEUVVGQlFTeERRVUZGU3l4SlFVRkJRU3hEUVVGTFRpeERRVUZCUVN4RFFVRkJRU3hEUVVGSExFbEJRVUVzUTBGQlMwRXNRMEZCUVVFc1JVRkJSME1zUTBGQlFVRXNRMEZCUlVzc1NVRkJRVUVzUTBGQlN5eEhRVUZCTEVOQlFVbE9MRU5CUVVGQkxFZEJRVWtzUTBGQlFTeERRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVVZMTEVsQlFVRkJMRU5CUVVzc1IwRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlIwNHNRMEZCUVVFc1EwRkJRVUVzUlVGQlNTeExRVUZCTEVOQlFVMUJMRU5CUVVGQkxFVkJRVWNzUzBGQlFTeEZRVUZQUVN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZTeXhKUVVGQlFTeERRVUZMTEVkQlFVRXNRMEZCU1U0c1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlFVY3NSMEZCUVN4RFFVRkpRU3hEUVVGQlFTeEhRVUZKTEVOQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVjc1IwRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJRVUVzUlVGQlNVVXNRMEZCUVVFc1JVRkJSeXhEUVVGQkxFTkJRVVZHTEVOQlFVRkJMRU5CUVVVc1MwRkJRU3hGUVVGQkxFTkJRVkVzU1VGQlFTeERRVUZMUVN4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUTBGQlJ5eEpRVUZCTEVOQlFVdE9MRU5CUVVGQkxFTkJRVVY1UWl4VlFVRkJRU3hEUVVGWGFrSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCU1VRc1EwRkJRVUVzUTBGQlJVc3NTVUZCUVVFc1EwRkJTeXhIUVVGQkxFTkJRVWxPTEVOQlFVRkJMRWRCUVVrc1JVRkJRU3hEUVVGSExFZEJRVUVzUTBGQlNVRXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFTkJRVWNzUlVGQlFTeERRVUZITEVkQlFVRXNRMEZCU1VFc1EwRkJRVUVzUjBGQlNTeERRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkhMRWRCUVVFc1EwRkJTU3hGUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVbEhMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGUVN4RFFVRkJRU3hEUVVGRlJpeERRVUZCUVN4RFFVRkZTU3hOUVVGQlFTeERRVUZQUml4RFFVRkJRU3hGUVVGSExFTkJRVUVzUTBGQlJTeERRVUZETEVsQlFVbERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZE5MRU5CUVVGQkxFTkJRVVZOTEVOQlFVRkJMRU5CUVVWRkxFTkJRVUZCTEVsQlFVc3NRMEZCUVN4RFFVRkZSQ3hEUVVGQlFTeERRVUZGV2l4TlFVRkJRU3hGUVVGUlJDeERRVUZCUVN4RlFVRkhZU3hEUVVGQlFTeERRVUZGV0N4SlFVRkJRU3hEUVVGTExFTkJRVUVzUTBGQlFTeERRVUZIVnl4RFFVRkJRU3hEUVVGRllpeERRVUZCUVN4RFFVRkJRU3hGUVVGSlNDeERRVUZCUVN4RFFVRkZSU3hEUVVGQlFTeERRVUZCUVN4RlFVRkpMRU5CUVVFc1JVRkJSMWNzUTBGQlFVRXNRMEZCUldZc1EwRkJRVUVzUlVGQlIxY3NRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZKVFN4RFFVRkJRU3hGUVVGSExFTkJRVUVzUTBGQlFTeExRVUZQTEVsQlFVbEdMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4SFFVRkpaaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWblFpeERRVUZCUVN4RFFVRkZMRk5CUVVFc1IwRkJXWEJDTEVOQlFVRkJMRVZCUVVjc1EwRkJRU3hIUVVGSlNTeERRVUZCUVN4RlFVRkhMRk5CUVVFc1IwRkJXVW9zUTBGQlFVRXNSVUZCUnl4RFFVRkJMRWRCUVVsSkxFTkJRVUZCTEVOQlFVVkhMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGUVN4RFFVRkJRU3hEUVVGRlVpeERRVUZCUVN4RFFVRkZWeXhOUVVGQlFTeERRVUZQU0N4RFFVRkJRU3hGUVVGSExFTkJRVUVzUTBGQlJTeERRVUZETEVsQlFVbEdMRU5CUVVGQkxFTkJRVVZPTEVOQlFVRkJMRU5CUVVWNVFpeFZRVUZCUVN4RFFVRlhha0lzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVkQlFVdGhMRU5CUVVGQkxFZEJRVWxtTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRITEVOQlFVRkJMRU5CUVVVc1IwRkJRU3hEUVVGSlNDeERRVUZCUVN4SFFVRkpMRU5CUVVFc1EwRkJSVUVzUTBGQlFVRXNSMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJSMGtzUTBGQlFVRXNRMEZCUVVFc1EwRkJSMDBzUTBGQlFVRXNRMEZCUlUwc1EwRkJRVUVzUTBGQlJVVXNRMEZCUVVFc1NVRkJTeXhEUVVGQkxFTkJRVVZFTEVOQlFVRkJMRU5CUVVWYUxFMUJRVUZCTEVWQlFWRkVMRU5CUVVGQkxFVkJRVWRoTEVOQlFVRkJMRU5CUVVWWUxFbEJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVRkJMRU5CUVVkWExFTkJRVUZCTEVOQlFVVmlMRU5CUVVGQkxFTkJRVUZCTEVWQlFVbEtMRU5CUVVGQkxFVkJRVWNzUTBGQlFTeEZRVUZIWXl4RFFVRkJRU3hEUVVGRlppeERRVUZCUVN4RlFVRkhWeXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVsTkxFTkJRVUZCTEVWQlFVY3NRMEZCUVN4RFFVRkZMRTFCUVUwc1EwRkJRMVFzUzBGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUTBGQlJWUXNUVUZCUVVFc1EwRkJUeXhEUVVGQkxFTkJRVVZSTEVOQlFVRkJMRU5CUVVWc1FpeERRVUZCUVN4RFFVRkJRU3hEUVVGNGNrSXNRMEZCTkhKQ1NpeERRVUZCUVN4RFFVRkZTU3hEUVVGQlFTeERRVUZGU0N4RFFVRkJRU3hEUVVGRlJTeERRVUZCUVN4RFFVRkZSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGSkxFbEJRVWtzUzBGQlFTeERRVUZOTEU5QlFVOHNVMEZCVTBvc1EwRkJRVUVzUTBGQlJVVXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhQUVVGUExGTkJRVk5JTEVOQlFVRkJMRU5CUVVWRkxFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzU1VGQlNVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlUwc1EwRkJRVUVzUTBGQlJVa3NRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVWc1FpeERRVUZCUVN4RlFVRkhMRU5CUVVNc1EwRkJRU3hEUVVGQkxFTkJRVWR0UWl4RFFVRkJRU3hEUVVGQlFTeERRVUZIYkVJc1EwRkJRVUVzUTBGQlJVRXNRMEZCUVVFc1JVRkJSeXhEUVVGQkxFbEJRVXNzUTBGQlFTeERRVUZGYlVJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRWRCUVVsc1FpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVZ0UWl4RFFVRkJRU3hEUVVGRmRrSXNRMEZCUVVFc1EwRkJSWGxDTEU5QlFVRkJMRU5CUVZFc1IwRkJRU3hEUVVGQkxFTkJRVXNzUjBGQlFTeERRVUZKTEVOQlFVRXNSMEZCU1hwQ0xFTkJRVUZCTEVOQlFVVXdRaXhOUVVGQlFTeERRVUZQTEc5Q1FVRkJMRU5CUVVFc1EwRkJjVUlzVFVGQlRTeEpRVUZKV2l4TFFVRkJRU3hEUVVGTkxIRkRRVUZCTEVOQlFVRXNRMEZCZFVNc1IwRkJSMlFzUTBGQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJUSkNMRTlCUVVGQkxFTkJRVkVzU1VGQlFTeERRVUZMTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVzc1EwRkJRU3hIUVVGSlNpeERRVUZCUVN4RlFVRkhRU3hEUVVGQlFTeERRVUZGZGtJc1EwRkJRVUVzUTBGQlJWVXNUVUZCUVVFc1EwRkJUeXhOUVVGTkxFbEJRVWxKTEV0QlFVRkJMRU5CUVUwc2NVTkJRVUVzUTBGQlFTeERRVUYxUXl4SlFVRkpWQ3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJVd3NRMEZCUVVFc1EwRkJSVlVzVFVGQlFVRXNRMEZCVDB3c1EwRkJRVUVzUlVGQlJ5eERRVUZCTEVOQlFVVXNRMEZCUXl4SlFVRkpSeXhEUVVGQlFTeERRVUZGVWl4RFFVRkJRU3hEUVVGRmFVSXNUVUZCUVVFc1EwRkJUMW9zUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSMFVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWRUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZRU3hEUVVGQlFTeERRVUZGUlN4RFFVRkJRU3hEUVVGRlJTeE5RVUZCUVN4RFFVRlBTaXhEUVVGQlFTeEZRVUZITEVOQlFVRXNRMEZCUlVNc1EwRkJRVUVzUlVGQlIxSXNRMEZCUVVFc1EwRkJSVEJDTEU5QlFVRkJMRU5CUVZGcVFpeERRVUZCUVN4RFFVRkZiMElzVFVGQlFVRXNRMEZCVDNSQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVXNzUlVGQlFTeERRVUZITEVOQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJTeEpRVUZKUVN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJVRXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUlVVc1RVRkJRVUVzUTBGQlR5eERRVUZCTEVOQlFVVktMRU5CUVVGQkxFVkJRVWNzUTBGQlFTeERRVUZGTEVOQlFVTXNTVUZCU1Vjc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjAwc1EwRkJRVUVzUTBGQlJVa3NRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNTVUZCU3l4RFFVRkJMRU5CUVVWRUxFTkJRVUZCTEVOQlFVVldMRTFCUVVGQkxFVkJRVkZFTEVOQlFVRkJMRVZCUVVkWExFTkJRVUZCTEVOQlFVVlVMRWxCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVOQlFVZFRMRU5CUVVGQkxFTkJRVVZZTEVOQlFVRkJMRU5CUVVGQkxFVkJRVUZCTEVOQlFVdEdMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeERRVUZITEVOQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJTeEhRVUZCTEVkQlFVMHNRMEZCUVN4RlFVRkhaMElzUTBGQlFVRXNRMEZCUld4Q0xFTkJRVUZCTEVWQlFVZFhMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCU1Vrc1EwRkJRVUVzUlVGQlJ5eERRVUZCTEVOQlFVRXNRMEZCUnl4TlFVRk5MRU5CUVVOUUxFdEJRVUZCTEVOQlFVMVJMRU5CUVVGQkxFTkJRVVZRTEUxQlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVGRlRTeERRVUZCUVN4RFFVRkZhRUlzUTBGQlFVRXNRMEZCUVVFc1EwRkJOV2RDTEVOQlFXZG9Ra2dzUTBGQlFVRXNRMEZCUlVVc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNTeEpRVUZKTEU5QlFVRXNRMEZCVVN4UFFVRlBMRk5CUVZOTUxFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzVDBGQlR5eFRRVUZUU0N4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZSU3hEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVsQlFVbERMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVWU0xFTkJRVUZCTEVWQlFVY3NRMEZCUXl4RFFVRkJMRU5CUVVFc1EwRkJSMU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSMUFzUTBGQlFVRXNRMEZCUlVFc1EwRkJRVUVzUlVGQlJ5eERRVUZCTEVsQlFVc3NRMEZCUVN4RFFVRkZZU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhMRU5CUVVFc1IwRkJTVm9zUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRkxFbEJRVWxGTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRlFTeERRVUZCUVN4RFFVRkZUaXhEUVVGQlFTeERRVUZGVnl4TlFVRkJRU3hEUVVGUFRDeERRVUZCUVN4RlFVRkhMRU5CUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlV3c1EwRkJRVUVzUTBGQlJYbENMRlZCUVVGQkxFTkJRVmR1UWl4RFFVRkJRU3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGRlJpeERRVUZCUVN4RFFVRkZTU3hEUVVGQlFTeEpRVUZMTEVOQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJVVXNUVUZCUVVFc1JVRkJVVW9zUTBGQlFVRXNSVUZCUjBVc1EwRkJRVUVzUTBGQlJVY3NTVUZCUVVFc1EwRkJTeXhEUVVGQkxFTkJRVUVzUTBGQlIwZ3NRMEZCUVVFc1EwRkJSVVlzUTBGQlFVRXNRMEZCUVVFc1JVRkJTVVlzUTBGQlFVRXNSVUZCUnl4RFFVRkJMRVZCUVVkWExFTkJRVUZCTEVOQlFVVmFMRU5CUVVGQkxFVkJRVWRKTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlNTeE5RVUZOTEVOQlFVTkxMRXRCUVVGQkxFTkJRVTFLTEVOQlFVRkJMRU5CUVVWTExFMUJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVRkZaQ3hEUVVGQlFTeERRVUZGVnl4TlFVRkJRU3hEUVVGUFVpeERRVUZCUVN4RFFVRkJRU3hEUVVFeFRTeERRVUU0VFVnc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUlVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJTU3hKUVVGSkxHRkJRVUVzUTBGQll5eEhRVUZCTEVOQlFVa3NTVUZCU1hsQ0xGZEJRVUZCTEVOQlFWa3NRMEZCUVN4RFFVRkJMRU5CUVVjc1RVRkJUVGxDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzVFVGQlRTeEpRVUZKWlN4TFFVRkJRU3hEUVVGTkxDdERRVUZCTEVOQlFVRXNRMEZCYVVRc1QwRkJUeXhUUVVGVFppeERRVUZCUVN4RFFVRkZSeXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEU5QlFVOHNVMEZCVTBvc1EwRkJRVUVzUTBGQlJVY3NRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4UFFVRlBTaXhEUVVGQlFTeERRVUZGTEVsQlFVazRRaXhWUVVGQlFTeERRVUZYTDBJc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBjc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJha1FzUTBGQmNVUk1MRU5CUVVGQkxFTkJRVVZITEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVrc1NVRkJTU3haUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZKTEVsQlFVa3dRaXhWUVVGQlFTeERRVUZYTEVOQlFVRXNRMEZCUVN4RFFVRkhMRTFCUVUwdlFpeERRVUZCUVN4RFFVRkJRU3hEUVVGSExFMUJRVTBzU1VGQlNXVXNTMEZCUVVFc1EwRkJUU3c0UTBGQlFTeERRVUZCTEVOQlFXZEVMRTlCUVU4c1UwRkJVMllzUTBGQlFVRXNRMEZCUlVjc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eFBRVUZQU0N4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkZSeXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZKTEZGQlFWRXNUVUZCVFN4SlFVRkpWU3hMUVVGQlFTeERRVUZOTEd0RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGeFJTeFRRVUZUV0N4RFFVRkJRU3hEUVVGRlNDeERRVUZCUVN4RFFVRkZSU3hEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSExFOUJRVTlLTEVOQlFVRkJMRVZCUVVjc1NVRkJTU3hMUVVGQkxFTkJRVTBzVDBGQlR5eFRRVUZUUkN4RFFVRkJRU3hEUVVGQlFTeERRVUZITEU5QlFVOHNVMEZCVTBFc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4SlFVRkpReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUlZBc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVlJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4SFFVRkpUaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVVc1NVRkJTVVVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVkhMRU5CUVVGQkxFTkJRVVZJTEVOQlFVRkJMRVZCUVVjc1EwRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZUaXhEUVVGQlFTeERRVUZGU3l4RFFVRkJRU3hIUVVGSkxFTkJRVUVzUTBGQlFTeEhRVUZMTEVOQlFVRXNSVUZCUjBrc1EwRkJRVUVzUTBGQlJVNHNRMEZCUVVFc1JVRkJSMFVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGSlJTeERRVUZCUVN4RlFVRkhMR3RDUVVGQkxFTkJRVzFDYzBJc1RVRkJRVUVzUTBGQlQzWkNMRU5CUVVGQkxFZEJRVWtzUTBGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRkpMR3RDUVVGQkxFTkJRVzFDZFVJc1RVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlFVZDJRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkhMRTlCUVU5R0xFTkJRVUZCTEVOQlFVVTBRaXhYUVVGQlFTeERRVUZaZWtJc1EwRkJRVUVzUTBGQlJUQkNMRmRCUVVGQkxFVkJRVUZCTEVOQlFXTXhRaXhEUVVGQlFTeERRVUV4VFN4RFFVRTJUVkFzUTBGQlFVRXNRMEZCUlVjc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNTeEpRVUZKTEV0QlFVRXNRMEZCVFN4UFFVRlBMRk5CUVZOS0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1QwRkJUeXhUUVVGVFFTeERRVUZCUVN4RFFVRkZSU3hEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSExFbEJRVWxETEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVk5MRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZIU1N4RFFVRkJRU3hEUVVGRmFrSXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVZyUWl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVOQlFVRXNSMEZCU1dwQ0xFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSU3hKUVVGSlJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUldNc1EwRkJRVUVzUTBGQlJXUXNRMEZCUVVFc1JVRkJSeXhEUVVGQkxFTkJRVVVzU1VGQlNVY3NRMEZCUVVFc1EwRkJSVWdzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWakxFTkJRVUZCTEVOQlFVVnVRaXhEUVVGQlFTeERRVUZGU3l4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUjBGQlNTeERRVUZCTEVOQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVWSkxFTkJRVUZCTEVOQlFVVktMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGWXl4RFFVRkJRU3hEUVVGRmJrSXNRMEZCUVVFc1EwRkJSVXNzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRWRCUVVrc1EwRkJRU3hEUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZGUlN4RFFVRkJRU3hEUVVGQlFTeERRVUZIVUN4RFFVRkJRU3hEUVVGRlN5eERRVUZCUVN4SFFVRkpMRU5CUVVFc1EwRkJRU3hIUVVGTExFTkJRVUVzUlVGQlIyVXNRMEZCUVVFc1EwRkJSV3BDTEVOQlFVRkJMRVZCUVVkRkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJTU3hIUVVGQkxFZEJRVTBzUlVGQlFTeERRVUZCTEVOQlFVbEhMRU5CUVVGQkxFZEJRVWtzUTBGQlFTeEZRVUZIV1N4RFFVRkJRU3hEUVVGRmFrSXNRMEZCUVVFc1JVRkJRVUVzUTBGQlNVVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFVkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCU1N4SFFVRkJMRWRCUVUwc1EwRkJRU3hEUVVGRlNTeERRVUZCUVN4SFFVRkpMRU5CUVVFc1JVRkJSMWNzUTBGQlFVRXNRMEZCUldwQ0xFTkJRVUZCTEVWQlFVRkJMRU5CUVVsRkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RlFVRkhMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVWtzUjBGQlFTeERRVUZKUXl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJVRXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVZCTEVOQlFVRkJMRVZCUVVjc1EwRkJRU3hEUVVGRlV5eERRVUZCUVN4RlFVRkhMRU5CUVVFc1EwRkJSVllzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWRExFTkJRVUZCTEVWQlFVZEtMRU5CUVVGQkxFTkJRVVZJTEVOQlFVRkJMRU5CUVVVMlFpeE5RVUZCUVN4RFFVRlBja0lzUTBGQlFVRXNSMEZCU1N4RFFVRkJMRVZCUVVjc1EwRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkJRU3hEUVVGSExFVkJRVUVzUTBGQlFTeERRVUZKUml4RFFVRkJRU3hEUVVGRk5rSXNUVUZCUVVFc1EwRkJUeXhQUVVGUGJFSXNRMEZCUVVFc1EwRkJlbElzUTBGQk5GSm1MRU5CUVVGQkxFTkJRVVZGTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVrc1NVRkJTU3hQUVVGQkxFTkJRVkVzVDBGQlR5eFRRVUZUVEN4RFFVRkJRU3hEUVVGQlFTeERRVUZITEU5QlFVOHNVMEZCVTBFc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhKUVVGSlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJSVTRzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWUExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1EwRkJRU3hIUVVGSlRDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVVzU1VGQlNVTXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVZCTEVOQlFVRkJMRU5CUVVWSExFTkJRVUZCTEVOQlFVVklMRU5CUVVGQkxFVkJRVWNzUTBGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlRDeERRVUZCUVN4RFFVRkZTU3hEUVVGQlFTeEhRVUZKTEVOQlFVRXNRMEZCUVN4SFFVRkxMRU5CUVVFc1JVRkJSMGtzUTBGQlFVRXNRMEZCUlV3c1EwRkJRVUVzUlVGQlIwTXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZKTEVkQlFVRXNRMEZCU1VVc1EwRkJRVUVzUlVGQlJ6WkNMRTFCUVVGQkxFTkJRVTlETEZsQlFVRkJMRU5CUVdFdlFpeERRVUZCUVN4RFFVRkJRU3hEUVVGSExFOUJRVTlETEVOQlFVRkJMRU5CUVdwSkxFTkJRVzlKVGl4RFFVRkJRU3hEUVVGRlJ5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGSkxFbEJRVWtzWVVGQlFTeERRVUZqTEVkQlFVRXNRMEZCU1N4SlFVRkpNRUlzVjBGQlFVRXNRMEZCV1N4RFFVRkJMRU5CUVVFc1EwRkJSeXhOUVVGTk9VSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eE5RVUZOTEVsQlFVbGxMRXRCUVVGQkxFTkJRVTBzSzBOQlFVRXNRMEZCUVN4RFFVRnBSQ3hQUVVGUExGTkJRVk5tTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzVDBGQlR5eFRRVUZUUVN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhMRWxCUVVsRExFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZLTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRlN5eERRVUZCUVN4RFFVRkZMRWxCUVVsM1FpeFhRVUZCUVN4RFFVRlpla0lzUTBGQlFVRXNRMEZCUVVFc1EwRkJSMFVzUTBGQlFVRXNRMEZCUlN4SlFVRkpkMElzVlVGQlFVRXNRMEZCVjNwQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1EwRkJRU3hIUVVGSlRDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVVzU1VGQlNVTXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVZCTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkVMRU5CUVVGQkxFVkJRVWNzUTBGQlFTeERRVUZGUnl4RFFVRkJRU3hEUVVGRlNDeERRVUZCUVN4RFFVRkJRU3hEUVVGSFNpeERRVUZCUVN4RFFVRkZTU3hEUVVGQlFTeEhRVUZKTEVOQlFVRXNRMEZCUVN4SFFVRkxMRU5CUVVFc1JVRkJSMGtzUTBGQlFVRXNRMEZCUlV3c1EwRkJRVUVzUlVGQlIwTXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZKTEVkQlFVRXNRMEZCU1N4UFFVRlBSU3hEUVVGQlFTeERRVUUxU1N4RFFVRXJTVTRzUTBGQlFVRXNRMEZCUlVjc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCU1N4SlFVRkpMRmxCUVVFc1EwRkJZU3hIUVVGQkxFTkJRVWtzU1VGQlNUSkNMRlZCUVVGQkxFTkJRVmNzUTBGQlFTeERRVUZCTEVOQlFVY3NUVUZCVFM5Q0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1RVRkJUU3hKUVVGSlpTeExRVUZCUVN4RFFVRk5MRGhEUVVGQkxFTkJRVUVzUTBGQlowUXNUMEZCVHl4VFFVRlRaaXhEUVVGQlFTeERRVUZCUVN4RFFVRkhMRTlCUVU4c1UwRkJVMEVzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZTaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUlVzc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRWRCUVVsSUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSVWtzUTBGQlFVRXNRMEZCUlN4SlFVRkpkMElzVlVGQlFVRXNRMEZCVnpGQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1NVRkJTVVFzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZFTEVOQlFVRkJMRVZCUVVjc1EwRkJRU3hEUVVGRlJ5eERRVUZCUVN4RFFVRkZTQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkhTaXhEUVVGQlFTeERRVUZGU1N4RFFVRkJRU3hIUVVGSkxFTkJRVUVzUTBGQlFTeEhRVUZMTEVOQlFVRXNSVUZCUjBVc1EwRkJRVUVzUTBGQlJVZ3NRMEZCUVVFc1JVRkJSME1zUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGSkxFZEJRVUVzUTBGQlNTeFBRVUZQUnl4RFFVRkJRU3hEUVVGMlNDeERRVUV3U0ZBc1EwRkJRVUVzUTBGQlJVY3NRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNTeFJRVUZSTEUxQlFVMHNTVUZCU1Zjc1MwRkJRVUVzUTBGQlRTdzBSRUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJLMFFzU1VGQlNWWXNRMEZCUVVFc1EwRkJSU3hEUVVGRExGVkJRVUVzUTBGQlZ5eFZRVUZCTEVOQlFWY3NWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJWeXhUUVVGQkxFTkJRVlVzVlVGQlFTeERRVUZYTEZWQlFVRXNRMEZCVnl4VlFVRkJMRU5CUVZjc1ZVRkJRU3hEUVVGWExGTkJRVUVzUTBGQlZTeFRRVUZCTEVOQlFWVXNWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJWeXhWUVVGQkxFTkJRVmNzVlVGQlFTeERRVUZYTEZWQlFVRXNRMEZCVnl4VlFVRkJMRU5CUVZjc1ZVRkJRU3hEUVVGWExGTkJRVUVzUTBGQlZTeFRRVUZCTEVOQlFWVXNVMEZCUVN4RFFVRlZMRlZCUVVFc1EwRkJWeXhWUVVGQkxFTkJRVmNzVlVGQlFTeERRVUZYTEZWQlFVRXNRMEZCVnl4VlFVRkJMRU5CUVZjc1ZVRkJRU3hEUVVGWExGVkJRVUVzUTBGQlZ5eFZRVUZCTEVOQlFWY3NWVUZCUVN4RFFVRlhMRk5CUVVFc1EwRkJWU3hUUVVGQkxFTkJRVlVzVTBGQlFTeERRVUZWTEZOQlFVRXNRMEZCVlN4VlFVRkJMRU5CUVZjc1ZVRkJRU3hEUVVGWExGVkJRVUVzUTBGQlZ5eFZRVUZCTEVOQlFWY3NWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJWeXhWUVVGQkxFTkJRVmNzVlVGQlFTeERRVUZYTEZWQlFVRXNRMEZCVnl4VlFVRkJMRU5CUVZjc1ZVRkJRU3hEUVVGWExGVkJRVUVzUTBGQlZ5eFZRVUZCTEVOQlFWY3NVMEZCUVN4RFFVRlZMRk5CUVVFc1EwRkJWU3hUUVVGQkxFTkJRVlVzVTBGQlFTeERRVUZWTEZOQlFVRXNRMEZCVlN4VFFVRkJMRU5CUVZVc1ZVRkJRU3hEUVVGWExGVkJRVUVzUTBGQlZ5eFZRVUZCTEVOQlFWY3NWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJWeXhWUVVGQkxFTkJRVmNzVlVGQlFTeERRVUZYTEZWQlFVRXNRMEZCVnl4VlFVRkJMRU5CUVZjc1ZVRkJRU3hEUVVGWExGVkJRVUVzUTBGQlFTeERRVUZaUXl4RFFVRkJRU3hEUVVGRkxFTkJRVU1zVlVGQlFTeERRVUZYTEZOQlFVRXNRMEZCVlN4VFFVRkJMRU5CUVZVc1ZVRkJRU3hEUVVGWExGVkJRVUVzUTBGQlZ5eFZRVUZCTEVOQlFWY3NWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJRU3hEUVVGWlF5eERRVUZCUVN4RFFVRkZMRU5CUVVNc1ZVRkJRU3hEUVVGWExGVkJRVUVzUTBGQlZ5eFZRVUZCTEVOQlFWY3NWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJWeXhWUVVGQkxFTkJRVmNzVTBGQlFTeERRVUZWTEZWQlFVRXNRMEZCUVN4RFFVRlpReXhEUVVGQlFTeERRVUZGTEhGRFFVRkJMRU5CUVhORExGTkJRVk5ETEVOQlFVRkJMRU5CUVVWVUxFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NTVUZCU1VVc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlV3c1EwRkJRVUVzUTBGQlJXTXNUVUZCUVVFc1IwRkJVeXhEUVVGQkxFTkJRVVZTTEVOQlFVRkJMRU5CUVVWTUxFTkJRVUZCTEVOQlFVVmhMRTFCUVVGQkxFZEJRVk1zUTBGQlFTeERRVUZGVUN4RFFVRkJRU3hEUVVGRlJpeERRVUZCUVN4RlFVRkhMRU5CUVVFc1EwRkJSVWNzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWSUxFTkJRVUZCTEVWQlFVY3NRMEZCUVN4RFFVRkZMRWRCUVVkQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RlFVRkhMRU5CUVVFc1EwRkJSU3hEUVVGRExFbEJRVWxHTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRlFTeERRVUZCUVN4RFFVRkZSeXhEUVVGQlFTeERRVUZGU0N4RFFVRkJRU3hGUVVGSExFTkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlVZc1EwRkJRVUVzUjBGQlNTeERRVUZCTEVOQlFVVklMRU5CUVVGQkxFTkJRVVZoTEV0QlFVRkJMRU5CUVUxVUxFTkJRVUZCTEVOQlFVRkJMRVZCUVVsSUxFTkJRVUZCTEVOQlFVVlpMRXRCUVVGQkxFTkJRVTFXTEVOQlFVRkJMRWRCUVVrc1EwRkJRU3hEUVVGQkxFVkJRVWxKTEVOQlFVRkJMRU5CUVVWUUxFTkJRVUZCTEVOQlFVVmhMRXRCUVVGQkxFTkJRVTFFTEVsQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJRVWRhTEVOQlFVRkJMRU5CUVVWaExFdEJRVUZCTEVOQlFVMVVMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVWQlFVbElMRU5CUVVGQkxFTkJRVVZaTEV0QlFVRkJMRU5CUVUxV0xFTkJRVUZCTEVkQlFVa3NRMEZCUVN4RFFVRkJMRWRCUVV0TExFTkJRVUZCTEVOQlFVVXNUVUZCUVN4RFFVRlBVaXhEUVVGQlFTeERRVUZGWVN4TFFVRkJRU3hEUVVGTlJpeE5RVUZCUVN4RlFVRlJMRU5CUVVFc1JVRkJSeXhEUVVGQkxFVkJRVWRNTEVOQlFVRkJMRU5CUVVWRUxFTkJRVUZCTEVWQlFVZE1MRU5CUVVGQkxFTkJRVVZoTEV0QlFVRkJMRU5CUVUxM1FpeEhRVUZCUVN4RlFVRkJRU3hEUVVGTkxFTkJRVU40UWl4TFFVRkJRU3hEUVVGTllpeERRVUZCUVN4RFFVRkZZU3hMUVVGQlFTeERRVUZOUXl4TlFVRkJRU3hEUVVGUFpDeERRVUZCUVN4RFFVRkZZeXhOUVVGQlFTeERRVUZQWWl4RFFVRkJRU3hEUVVGRllTeE5RVUZCUVN4RFFVRkJRU3hEUVVGUkxFMUJRVTBzUTBGQlEwUXNTMEZCUVVFc1EwRkJUV0lzUTBGQlFVRXNRMEZCUldFc1MwRkJRVUVzUTBGQlRYbENMRTFCUVVGQkxFTkJRVTl5UXl4RFFVRkJRU3hEUVVGRldTeExRVUZCUVN4RFFVRkJRU3hEUVVGUFF5eE5RVUZCUVN4RFFVRlBaQ3hEUVVGQlFTeERRVUZGWXl4TlFVRkJRU3hEUVVGUFlpeERRVUZCUVN4RFFVRkZZU3hOUVVGQlFTeERRVUZCUVN4RFFVRlJMRk5CUVZOS0xFTkJRVUZCTEVOQlFVVldMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NTVUZCU1VNc1EwRkJRVUVzUTBGQlJTeERRVUZESzBJc1YwRkJRVUVzUTBGQlFVRXNRMEZCV1N4RFFVRkJMRU5CUVVkRkxFMUJRVUZCTEVOQlFVOHNSMEZCUVN4RFFVRkpTeXhUUVVGQlFTeERRVUZCUVN4RFFVRlhMRU5CUVVFc1EwRkJRU3hEUVVGSGNFTXNRMEZCUVVFc1EwRkJSVWdzUTBGQlFVRXNSVUZCUnl4RlFVRkJMRU5CUVVkSkxFTkJRVUZCTEVOQlFVVXNkVU5CUVVFc1EwRkJkME1zUjBGQlIwZ3NRMEZCUVVFc1EwRkJSU3RDTEZkQlFVRkJMRU5CUVZrM1FpeERRVUZCUVN4RFFVRkZOa0lzVjBGQlFVRXNSVUZCUVVFc1EwRkJZU3hEUVVGQkxFTkJRVWMzUWl4RFFVRkJRU3hEUVVGRkswSXNUVUZCUVVFc1IwRkJVMnBETEVOQlFVRkJMRU5CUVVWcFF5eE5RVUZCUVN4RFFVRlBMMElzUTBGQlFVRXNRMEZCUlN0Q0xFMUJRVUZCTEVOQlFVRkJMRU5CUVZFdlFpeERRVUZCUVN4RFFVRkZiME1zVTBGQlFVRXNRMEZCVlN4RFFVRkRMRWRCUVVkd1F5eERRVUZCUVN4RFFVRkZiME1zVTBGQlFVRXNRMEZCVlN4RFFVRkJMRVZCUVVjc1EwRkJRU3hEUVVGRkxFMUJRVTBzU1VGQlNYaENMRXRCUVVGQkxFTkJRVTFZTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRJTEVOQlFVRkJMRU5CUVVWelF5eFRRVUZCUVN4RFFVRlZjRU1zUTBGQlFVRXNRMEZCUlc5RExGTkJRVUZCTEVOQlFVRkJMRXRCUVdVc1IwRkJSM0JETEVOQlFVRkJMRU5CUVVWeFF5eFJRVUZCUVN4RFFVRlRMRU5CUVVNc1IwRkJSM0pETEVOQlFVRkJMRU5CUVVWeFF5eFJRVUZCUVN4RFFVRlRMRU5CUVVFc1JVRkJSeXhEUVVGQkxFTkJRVVVzVFVGQlRTeEpRVUZKZWtJc1MwRkJRVUVzUTBGQlRWZ3NRMEZCUVVFc1EwRkJRVUVzUTBGQlIwZ3NRMEZCUVVFc1EwRkJSWE5ETEZOQlFVRkJMRU5CUVZWd1F5eERRVUZCUVN4RFFVRkZjVU1zVVVGQlFVRXNRMEZCVXl4SFFVRkhMRk5CUVVFc1JVRkJRU3hQUVVGclFuWkRMRU5CUVVGQkxFTkJRVVVyUWl4WFFVRkJRU3hEUVVGWkxFMUJRVTBzU1VGQlNXcENMRXRCUVVGQkxFTkJRVTBzZFVOQlFVRXNRMEZCUVN4RFFVRjVReXhIUVVGSExGRkJRVUVzUlVGQlFTeFBRVUZwUW1Rc1EwRkJRVUVzUTBGQlJXbERMRTFCUVVGQkxFTkJRVThzVFVGQlRTeEpRVUZKYmtJc1MwRkJRVUVzUTBGQlRTeHJRMEZCUVN4RFFVRkJMRU5CUVc5RExFOUJRVTlrTEVOQlFVRkJMRU5CUVVVc1UwRkJVMlVzUTBGQlFVRXNRMEZCUldoQ0xFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZITEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1NVRkJTVU1zUTBGQlFVRXNRMEZCUlU0c1EwRkJRVUVzUTBGQlJTeHJRMEZCUVN4RFFVRnRReXhIUVVGQkxFTkJRVWxETEVOQlFVRkJMRU5CUVVVc1EwRkJReXhIUVVGQkxFTkJRVWxKTEVOQlFVRkJMRU5CUVVVc1RVRkJUU3hKUVVGSlZTeExRVUZCUVN4RFFVRk5WQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkhMRTlCUVU5RUxFTkJRVUZCTEVOQlFVVXNSMEZCUVN4TFFVRkhMRU5CUVVFc1IwRkJVMG9zUTBGQlFVRXNRMEZCUlZrc1MwRkJRVUVzUlVGQlFVRXNRMEZCVVZvc1EwRkJRVUVzUTBGQlJYZERMRTFCUVVGQkxFTkJRVThzVFVGQlRTeEpRVUZKTVVJc1MwRkJRVUVzUTBGQlRWUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eFBRVUZQU0N4RFFVRkJRU3hEUVVGRlJpeERRVUZCUVN4RFFVRkZkME1zVFVGQlFVRXNRMEZCVDNoRExFTkJRVUZCTEVOQlFVVjVReXhSUVVGQlFTeEZRVUZWTEUxQlFVRXNRMEZCVDNSRExFTkJRVUZCTEVOQlFUbENSQ3hEUVVGcFEwWXNRMEZCUVVFc1EwRkJSVmtzUzBGQlFVRXNRMEZCUVVFc1EwRkJUeXhKUVVGSlR5eERRVUZCUVN4RFFVRkZMRlZCUVVFc1EwRkJWeXhUUVVGVGNFSXNRMEZCUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKUXl4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RlFVRkhMRVZCUVVFc1EwRkJSeXhIUVVGSFJDeEpRVUZCUVN4RFFVRkxReXhEUVVGQlFTeERRVUZGUml4RFFVRkJRU3hEUVVGRlF5eEpRVUZCUVN4RFFVRkxSeXhEUVVGQlFTeERRVUZGUkN4RFFVRkJRU3hEUVVGRmMwTXNVVUZCUVVFc1JVRkJWU3hOUVVGQkxFTkJRVTk0UXl4SlFVRkJRU3hEUVVGTGVVTXNVMEZCUVVFc1EwRkJWWFpETEVOQlFVRkJMRU5CUVVWMVF5eFRRVUZCUVN4RlFVRlhMRU5CUVVFc1EwRkJSWGhDTEV0QlFVRkJMRU5CUVUxcVFpeEpRVUZCUVN4RFFVRkxlVU1zVTBGQlFVRXNRMEZCUVVFc1JVRkJXWHBETEVsQlFVRkJMRU5CUVV0NVF5eFRRVUZCUVN4SFFVRlpNVUlzVVVGQlFVRXNRMEZCVTJZc1NVRkJRVUVzUTBGQlMzbERMRk5CUVVGQkxFTkJRVlVzUlVGQlFTeERRVUZCTEVWQlFVc3NRMEZCUVN4RFFVRkZla01zU1VGQlFVRXNRMEZCUzNsRExGTkJRVUZCTEVOQlFWVXNUVUZCVFN4SlFVRkpOVUlzUzBGQlFVRXNRMEZCVFN3clFrRkJRU3hEUVVGQkxFTkJRV2xEWWl4SlFVRkJRU3hEUVVGTFNTeERRVUZCUVN4RFFVRkZUaXhEUVVGQlFTeERRVUZGUlN4SlFVRkJRU3hEUVVGTFN5eERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJSMHdzU1VGQlFVRXNRMEZCUzFFc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVlNMRWxCUVVGQkxFTkJRVXRyUWl4RFFVRkJRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUjJ4Q0xFbEJRVUZCTEVOQlFVdHZRaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUlhCQ0xFbEJRVUZCTEVOQlFVdHhRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSM0pDTEVsQlFVRkJMRU5CUVVzd1F5eERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJSekZETEVsQlFVRkJMRU5CUVVzeVF5eERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJSeXhQUVVGUE4wTXNRMEZCUVVFc1EwRkJSVGhETEZOQlFVRkJMRU5CUVZWRExFMUJRVUZCTEVOQlFVOHNVMEZCVXk5RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1NVRkJTVU1zUTBGQlFVRXNRMEZCUlVVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZHTEVsQlFVRkJMRU5CUVVzNFF5eERRVUZCUVN4SFFVRkpMRU5CUVVFc1EwRkJSVE5ETEVOQlFVRkJMRU5CUVVWSUxFbEJRVUZCTEVOQlFVc3JReXhEUVVGQlFTeERRVUZGYWtRc1EwRkJRVUVzUTBGQlJVVXNTVUZCUVVFc1EwRkJTMHNzUTBGQlFVRXNRMEZCUlV3c1NVRkJRVUVzUTBGQlMxRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwb3NRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlZNc1RVRkJRVUVzUTBGQlQxQXNRMEZCUVVFc1EwRkJSVVlzUTBGQlFVRXNRMEZCUlZFc1MwRkJRVUVzUTBGQlRVd3NRMEZCUVVFc1EwRkJSVVlzUTBGQlFVRXNSMEZCU1N4RFFVRkJMRU5CUVVVc1NVRkJTVXdzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVlBMRU5CUVVGQkxFTkJRVVZRTEVOQlFVRkJMRVZCUVVkSExFTkJRVUZCTEVOQlFVVkVMRU5CUVVGQkxFTkJRVVZFTEVsQlFVRkJMRU5CUVVzNFF5eERRVUZCUVN4RlFVRkhNVU1zUTBGQlFVRXNSMEZCU1Vvc1NVRkJRVUVzUTBGQlMyZEVMRU5CUVVGQkxFTkJRVVZvUkN4SlFVRkJRU3hEUVVGTGFVUXNRMEZCUVVFc1EwRkJSVFZETEVOQlFVRkJMRU5CUVVVMlF5eExRVUZCUVN4RFFVRk5ia1FzUTBGQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJVY3NRMEZCUVVFc1EwRkJRVUVzUTBGQlIwWXNTVUZCUVVFc1EwRkJTMmRFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWN2UXl4RFFVRkJRU3hGUVVGSFJDeEpRVUZCUVN4RFFVRkxPRU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSemxETEVsQlFVRkJMRU5CUVV0dlFpeERRVUZCUVN4RlFVRkhia0lzUTBGQlFVRXNRMEZCUlVRc1NVRkJRVUVzUTBGQlMwc3NRMEZCUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUlRaRExFdEJRVUZCTEVOQlFVMXFSQ3hEUVVGQlFTeEhRVUZKTEVOQlFVRXNRMEZCUVN4RFFVRkhSQ3hKUVVGQlFTeERRVUZMVVN4RFFVRkJRU3hEUVVGRlNpeERRVUZCUVN4RFFVRkZTaXhKUVVGQlFTeERRVUZMT0VNc1EwRkJRVUVzUTBGQlJUbERMRWxCUVVGQkxFTkJRVXRyUWl4RFFVRkJRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkpjRUlzUTBGQlFVRXNRMEZCUlRoRExGTkJRVUZCTEVOQlFWVlBMRTlCUVVGQkxFTkJRVkVzVTBGQlUzSkVMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzU1VGQlNVVXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVb3NTVUZCUVVFc1EwRkJTMjlFTEVOQlFVRkJMRU5CUVVVdlF5eERRVUZCUVN4RFFVRkZSeXhEUVVGQlFTeERRVUZGVkN4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVkQlFVZERMRWxCUVVGQkxFTkJRVXR4UkN4RFFVRkJRU3hEUVVGRkxFTkJRVU1zUjBGQlFTeERRVUZKTEVOQlFVRXNSMEZCU1doRUxFTkJRVUZCTEVOQlFVVm5ReXhUUVVGQlFTeERRVUZWTEUxQlFVMHNTVUZCU1hoQ0xFdEJRVUZCTEVOQlFVMHNORU5CUVVFc1EwRkJRU3hEUVVFNFExUXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUldkRExGTkJRVUZCTEVOQlFWVXNTVUZCU1M5Q0xFTkJRVUZCTEVOQlFVVktMRU5CUVVGQkxFTkJRVVZLTEVOQlFVRkJMRU5CUVVWTkxFTkJRVUZCTEVOQlFVVktMRWxCUVVGQkxFTkJRVXR6UkN4RFFVRkJRU3hEUVVGRmFrUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEhRVUZIVEN4SlFVRkJRU3hEUVVGTGNVSXNRMEZCUVVFc1JVRkJSM0pDTEVsQlFVRkJMRU5CUVV0MVJDeERRVUZCUVN4RFFVRkZMRTlCUVU5cVJDeERRVUZCUVN4RFFVRkZUaXhKUVVGQlFTeERRVUZMZFVRc1EwRkJRVUVzUTBGQlJXeEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVrc1NVRkJTVVlzUTBGQlFVRXNRMEZCUlVnc1NVRkJRVUVzUTBGQlMzZEVMRU5CUVVGQkxFTkJRVVY0UkN4SlFVRkJRU3hEUVVGTFN5eERRVUZCUVN4RFFVRkZOa01zUzBGQlFVRXNSVUZCUVVFc1EwRkJVV3hFTEVsQlFVRkJMRU5CUVV0UkxFTkJRVUZCTEVOQlFVVlNMRWxCUVVGQkxFTkJRVXR2UWl4RFFVRkJRU3hEUVVGRmNFSXNTVUZCUVVFc1EwRkJTM2xFTEVOQlFVRkJMRU5CUVVWNlJDeEpRVUZCUVN4RFFVRkxaMFFzUTBGQlFVRXNRMEZCUVVFc1EwRkJSelZETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRJTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRlFTeERRVUZCUVN4RFFVRkZSQ3hKUVVGQlFTeERRVUZMZVVNc1UwRkJRVUVzUTBGQlZYaERMRU5CUVVGQkxFVkJRVWNzUTBGQlFTeERRVUZGUkN4SlFVRkJRU3hEUVVGTGNVUXNRMEZCUVVFc1JVRkJSMnBFTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hGUVVGSkxFTkJRVUVzUjBGQlNVUXNRMEZCUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUlUwc1RVRkJRVUVzUTBGQlR5eERRVUZCTEVOQlFVRXNSVUZCU1N4UlFVRkJMRWRCUVZjc1JVRkJRU3hEUVVGSFRDeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGSlJDeERRVUZCUVN4RFFVRkZTQ3hKUVVGQlFTeERRVUZMZDBRc1EwRkJRVUVzUTBGQlJYSkVMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRlNpeEpRVUZCUVN4RFFVRkxNRVFzUTBGQlFVRXNRMEZCUlRGRUxFbEJRVUZCTEVOQlFVdEpMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NUMEZCVDBVc1EwRkJRVUVzUTBGQlJVZ3NRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCU1V3c1EwRkJRVUVzUTBGQlJUaERMRk5CUVVGQkxFTkJRVlZsTEZWQlFVRkJMRU5CUVZjc1UwRkJVemRFTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkhMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NSMEZCUVN4RFFVRkpSaXhKUVVGQlFTeERRVUZMTkVRc1EwRkJRVUVzUTBGQlJTeE5RVUZOTEVsQlFVa3ZReXhMUVVGQlFTeERRVUZOTEN0Q1FVRkJMRU5CUVVFc1EwRkJhVU1zUjBGQlIySXNTVUZCUVVFc1EwRkJTMnRDTEVOQlFVRkJMRU5CUVVVc1RVRkJUU3hKUVVGSlRDeExRVUZCUVN4RFFVRk5MSGxEUVVGQkxFTkJRVUVzUTBGQk1rTXNTVUZCU1ZZc1EwRkJRVUVzUTBGQlJVWXNRMEZCUVVFc1EwRkJSVVlzUTBGQlFVRXNRMEZCUVVFc1EwRkJSMGNzUTBGQlFVRXNSVUZCUnl4RlFVRkJMRVZCUVVselF5eFJRVUZCUVN4RlFVRlZMRTFCUVVFc1EwRkJUM2hETEVsQlFVRkJMRU5CUVV0elJDeERRVUZCUVN4RFFVRkJRU3hEUVVGSGRFUXNTVUZCUVVFc1EwRkJTelpFTEVOQlFVRkJMRU5CUVVVeFJDeERRVUZCUVN4RFFVRkZUQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZMUVN4RFFVRkJRU3hEUVVGRk9FTXNVMEZCUVVFc1EwRkJWV2xDTEVOQlFVRkJMRU5CUVVVc1UwRkJVeTlFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzU1VGQlNVTXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUlVRc1NVRkJRVUVzUTBGQlN6aERMRU5CUVVGQkxFZEJRVWtzUTBGQlFTeERRVUZGTlVNc1EwRkJRVUVzUTBGQlJVUXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGTEVkQlFVY3NRMEZCUVN4SFFVRkpSQ3hKUVVGQlFTeERRVUZMZVVNc1UwRkJRVUVzUTBGQlZTeE5RVUZOTEVsQlFVazFRaXhMUVVGQlFTeERRVUZOTEN0Q1FVRkJMRU5CUVVFc1EwRkJhVU1zUjBGQlIySXNTVUZCUVVFc1EwRkJTM0ZDTEVOQlFVRkJMRU5CUVVVc1RVRkJUU3hKUVVGSlVpeExRVUZCUVN4RFFVRk5MSEZDUVVGQkxFTkJRVUVzUTBGQmRVSXNTVUZCU1Zvc1EwRkJRVUVzUTBGQlJVZ3NRMEZCUVVFc1EwRkJSV01zVFVGQlFVRXNRMEZCVHl4RFFVRkJMRWRCUVVsa0xFTkJRVUZCTEVOQlFVVmhMRXRCUVVGQkxFTkJRVTFZTEVsQlFVRkJMRU5CUVV0M1JDeERRVUZCUVN4RFFVRkZNVVFzUTBGQlFVRXNRMEZCUldFc1MwRkJRVUVzUTBGQlRXSXNRMEZCUVVFc1EwRkJSV01zVFVGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVVWYUxFbEJRVUZCTEVOQlFVc3dSQ3hEUVVGQlFTeERRVUZGTVVRc1NVRkJRVUVzUTBGQlMwa3NRMEZCUVVFc1EwRkJRVUVzUTBGQlIwb3NTVUZCUVVFc1EwRkJTMjlFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVbDBSQ3hEUVVGQlFTeERRVUZGWVN4TFFVRkJRU3hEUVVGTlJpeE5RVUZCUVN4RlFVRlJVQ3hEUVVGQlFTeEZRVUZIU2l4RFFVRkJRU3hEUVVGRllTeExRVUZCUVN4RFFVRk5SQ3hKUVVGQlFTeERRVUZMTEVOQlFVRXNRMEZCUVN4RFFVRkhMRWxCUVVsWUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZRU3hEUVVGQlFTeEZRVUZIUnl4RFFVRkJRU3hEUVVGRlNDeERRVUZCUVN4RlFVRkhMRU5CUVVFc1EwRkJSVU1zU1VGQlFVRXNRMEZCU3pCRExFTkJRVUZCTEVOQlFVVXpReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhMRk5CUVVFc1EwRkJWVVFzUTBGQlFVRXNRMEZCUldFc1MwRkJRVUVzUTBGQlRWb3NRMEZCUVVFc1EwRkJRVUVzUTBGQlIwTXNTVUZCUVVFc1EwRkJTekpETEVOQlFVRkJMRU5CUVVVMVF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSExGVkJRVUVzUTBGQlYwUXNRMEZCUVVFc1EwRkJSV0VzUzBGQlFVRXNRMEZCVFZvc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBNc1NVRkJRVUVzUTBGQlMyZEVMRU5CUVVGQkxFTkJRVVZvUkN4SlFVRkJRU3hEUVVGTGFVUXNRMEZCUVVFc1EwRkJSV3BFTEVsQlFVRkJMRU5CUVVzd1F5eERRVUZCUVN4RFFVRkZNVU1zU1VGQlFVRXNRMEZCUzJkRUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVkb1JDeEpRVUZCUVN4RFFVRkxiMElzUTBGQlFVRXNRMEZCUlhCQ0xFbEJRVUZCTEVOQlFVczRReXhEUVVGQlFTeERRVUZGT1VNc1NVRkJRVUVzUTBGQlMzRkNMRU5CUVVGQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVsMlFpeERRVUZCUVN4RFFVRkZPRU1zVTBGQlFVRXNRMEZCVld0Q0xFOUJRVUZCTEVOQlFWRXNVMEZCVTJoRkxFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NTVUZCU1VVc1EwRkJRVUVzUTBGQlJVOHNRMEZCUVVFc1EwRkJSVlFzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhQUVVGUFJ5eERRVUZCUVN4RFFVRkZTaXhEUVVGQlFTeERRVUZGUlN4SlFVRkJRU3hEUVVGTGIwUXNRMEZCUVVFc1EwRkJSWEJFTEVsQlFVRkJMRU5CUVV0elJDeERRVUZCUVN4RFFVRkZja1FzUTBGQlFVRXNRMEZCYkVKRExFTkJRWEZDUml4SlFVRkJRU3hEUVVGTEswUXNRMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJUV3BGTEVOQlFVRkJMRU5CUVVVNFF5eFRRVUZCUVN4RFFVRlZiVUlzUTBGQlFVRXNRMEZCUlN4VlFVRkJMRU5CUVZjc1NVRkJTV3BGTEVOQlFVRkJMRU5CUVVVc1IwRkJRU3hEUVVGSlJTeEpRVUZCUVN4RFFVRkxjVUlzUTBGQlFVRXNRMEZCUlN4TlFVRk5MRWxCUVVsU0xFdEJRVUZCTEVOQlFVMHNiVVJCUVVFc1EwRkJRU3hEUVVGeFJDeEpRVUZKWkN4RFFVRkJRU3hEUVVGRlF5eEpRVUZCUVN4RFFVRkxkMFFzUTBGQlFVRXNRMEZCUlhoRUxFbEJRVUZCTEVOQlFVdExMRU5CUVVGQkxFTkJRVVUyUXl4TFFVRkJRU3hGUVVGQlFTeERRVUZSYkVRc1NVRkJRVUVzUTBGQlMxRXNRMEZCUVVFc1EwRkJSVklzU1VGQlFVRXNRMEZCUzI5Q0xFTkJRVUZCTEVOQlFVVndRaXhKUVVGQlFTeERRVUZMZVVRc1EwRkJRVUVzUTBGQlJYcEVMRWxCUVVGQkxFTkJRVXRuUkN4RFFVRkJRU3hEUVVGQlFTeERRVUZIYUVRc1NVRkJRVUVzUTBGQlMyOUVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NUMEZCVDNSRUxFTkJRVUZCTEVOQlFVVkZMRWxCUVVGQkxFTkJRVXRwUkN4RFFVRkJRU3hEUVVGRmFrUXNTVUZCUVVFc1EwRkJTekpETEVOQlFVRkJMRU5CUVVVelF5eEpRVUZCUVN4RFFVRkxNRVFzUTBGQlFVRXNRMEZCUlRGRUxFbEJRVUZCTEVOQlFVdEpMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVUxS0xFbEJRVUZCTEVOQlFVdDNSQ3hEUVVGQlFTeERRVUZGZWtRc1EwRkJRVUVzUTBGQlJVTXNTVUZCUVVFc1EwRkJTMjlFTEVOQlFVRkJMRU5CUVVWd1JDeEpRVUZCUVN4RFFVRkxPRU1zUTBGQlFVRXNRMEZCUldoRUxFTkJRVUZCTEVOQlFVVkZMRWxCUVVGQkxFTkJRVXR2UkN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkpkRVFzUTBGQlFVRXNRMEZCTnpaRUxFVkJRVUVzUTBGQmF6ZEVjVUlzUTBGQlFVRXNRMEZCUlN4VFFVRlRja0lzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4TlFVRkJMRU5CUVU5dlFpeERRVUZCUVN4RFFVRkZOa01zVFVGQlFVRXNRMEZCVDBNc1kwRkJRVUVzUlVGQlowSXNRMEZCUTBNc1UwRkJRVUVzUTBGQlZTeEZRVUZCTEVOQlFVRXNWMEZCWTBNc1MwRkJRVUVzUlVGQlR5eFRRVUZUY2tVc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwUXNRMEZCUVVFc1EwRkJSVzlGTEZOQlFVRkJMRU5CUVZWdVJTeERRVUZCUVN4RFFVRkJRU3hGUVVGSkxGTkJRVk5FTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1NVRkJTU3hKUVVGSlJTeERRVUZCUVN4SlFVRkxSaXhEUVVGQlFTeERRVUZGUVN4RFFVRkJRU3hEUVVGRmNVVXNZMEZCUVVFc1EwRkJaVzVGTEVOQlFVRkJMRU5CUVVGQkxFZEJRVXRJTEVOQlFVRkJMRU5CUVVWSExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkR0xFTkJRVUZCTEVOQlFVVkZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVTFJTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWtzVTBGQlUzRkNMRU5CUVVGQkxFTkJRVVYwUWl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSExGTkJRVk5GTEVOQlFVRkJMRVZCUVVGQkxFTkJRVWxFTEVsQlFVRkJMRU5CUVV0eFJTeFhRVUZCUVN4RFFVRlpka1VzUTBGQlFVRXNRMEZCUlhGQ0xFTkJRVUZCTEVOQlFVVnlRaXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZIUkN4RFFVRkJRU3hEUVVGRk9FTXNVMEZCUVVFc1EwRkJWU3hKUVVGQkxFZEJRVTgzUXl4RFFVRkJRU3hEUVVGRmFVVXNUVUZCUVVFc1EwRkJUMDBzVFVGQlFVRXNRMEZCVDNaRkxFTkJRVUZCTEVOQlFVRkJMRVZCUVVsRkxFTkJRVUZCTEVOQlFVVXlReXhUUVVGQlFTeERRVUZWTjBNc1EwRkJRVUVzUTBGQlJUWkRMRk5CUVVGQkxFTkJRVlVzU1VGQlNUTkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NVMEZCVTI5Q0xFTkJRVUZCTEVOQlFVVjJRaXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEU5QlFVOUVMRU5CUVVGQkxFVkJRVWRETEVOQlFVRkJMRU5CUVVWRUxFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZGTEZOQlFWTjFRaXhEUVVGQlFTeERRVUZGZUVJc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eFBRVUZQUkN4RFFVRkJRU3hIUVVGSlF5eERRVUZCUVN4RFFVRkZSQ3hEUVVGQlFTeEZRVUZITEVWQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlJTeFRRVUZUTWtNc1EwRkJRVUVzUTBGQlJUVkRMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzVDBGQlQwUXNRMEZCUVVFc1IwRkJTVU1zUTBGQlFVRXNRMEZCUlN4VFFVRlRkMFVzUTBGQlFVRXNRMEZCUlhwRkxFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzVDBGQlQwZ3NRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlVVc1EwRkJRVUVzUTBGQlJTeFRRVUZUTUVNc1EwRkJRVUVzUTBGQlJUZERMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVWRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1QwRkJUMGdzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBRc1EwRkJRVUVzUTBGQlJVY3NRMEZCUVVFc1EwRkJSU3hUUVVGVE5rTXNRMEZCUVVFc1EwRkJSV2hFTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NUMEZCVDBnc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlVjc1EwRkJRVUVzUTBGQlJVWXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUlN4VFFVRlRkVVVzUTBGQlFVRXNRMEZCUlRGRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1QwRkJUM2RDTEVOQlFVRkJMRU5CUVVWNFFpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSGQwSXNRMEZCUVVFc1EwRkJSWGhDTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVWwzUWl4RFFVRkJRU3hEUVVGRmVFSXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlNTeFRRVUZUYVVRc1EwRkJRVUVzUTBGQlJXcEVMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzU1VGQlNVVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eExRVUZCTEVOQlFVMUlMRU5CUVVGQkxFZEJRVWtzUzBGQlFTeERRVUZOUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEUxQlFVRXNRMEZCVHl4TFFVRkJMRU5CUVVFc1EwRkJUMFFzUTBGQlFVRXNSMEZCU1N4RlFVRkJMRWRCUVV0RExFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RFFVRkJMRVZCUVV0RkxFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RFFVRkJMRWRCUVUwc1JVRkJRU3hEUVVGSExFdEJRVUVzUTBGQlRVRXNRMEZCUVVFc1EwRkJSU3hUUVVGVEswTXNRMEZCUVVFc1EwRkJSV3hFTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkZMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzU1VGQlNVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eExRVUZCTEVOQlFVMU1MRU5CUVVGQkxFZEJRVWtzUzBGQlFTeERRVUZOUXl4RFFVRkJRU3hEUVVGQlFTeEZRVUZKTEV0QlFVRXNRMEZCVFVVc1EwRkJRVUVzUTBGQlFVRXNSVUZCU1N4TFFVRkJMRU5CUVUxRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1RVRkJRU3hEUVVGUExFdEJRVUVzUTBGQlFTeERRVUZQU2l4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUjBGQlMwTXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFTkJRVUVzUlVGQlMwVXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFTkJRVUVzUlVGQlMwTXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFTkJRVUVzUlVGQlMwTXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFTkJRVUVzUjBGQlRTeEZRVUZCTEVOQlFVY3NTMEZCUVN4RFFVRk5RU3hEUVVGQlFTeERRVUZGTEZOQlFWTnpSU3hEUVVGQlFTeERRVUZGTTBVc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEV0QlFVRXNRMEZCVFU0c1EwRkJRVUVzUjBGQlNTeExRVUZCTEVOQlFVMURMRU5CUVVGQkxFTkJRVUZCTEVWQlFVa3NTMEZCUVN4RFFVRk5SU3hEUVVGQlFTeERRVUZCUVN4RlFVRkpMRXRCUVVFc1EwRkJUVU1zUTBGQlFVRXNRMEZCUVVFc1JVRkJTU3hMUVVGQkxFTkJRVTFETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzVFVGQlFTeERRVUZQTEV0QlFVRXNRMEZCUVN4RFFVRlBUQ3hEUVVGQlFTeEhRVUZKTEVWQlFVRXNSMEZCUzBNc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlFVRXNSVUZCUzBVc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlFVRXNSVUZCUzBNc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlFVRXNSVUZCUzBNc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlFVRXNSVUZCUzBNc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlFVRXNSMEZCVFN4RlFVRkJMRU5CUVVjc1MwRkJRU3hEUVVGTlFTeERRVUZCUVN4RFFVRkZMRk5CUVZNMlF5eERRVUZCUVN4RFFVRkZia1FzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhQUVVGUGQwSXNRMEZCUVVFc1EwRkJSWGhDTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWQzUWl4RFFVRkJRU3hEUVVGRmVFSXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlNUUkRMRU5CUVVGQkxFTkJRVVUxUXl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZITEZOQlFWTnpSQ3hEUVVGQlFTeERRVUZGZEVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4UFFVRlBkMElzUTBGQlFVRXNRMEZCUlhoQ0xFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVkM1FpeERRVUZCUVN4RFFVRkZlRUlzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJTWGRDTEVOQlFVRkJMRU5CUVVWNFFpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGSkxGTkJRVk4xUkN4RFFVRkJRU3hEUVVGRmRrUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eE5RVUZOTEVOQlFVTXNWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJWeXhWUVVGQkxFTkJRVmNzVTBGQlFTeERRVUZWTEZWQlFVRXNRMEZCUVN4RFFVRlpMRk5CUVZOM1JDeERRVUZCUVN4RFFVRkZlRVFzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4SlFVRkpSU3hEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlJ5eEpRVUZKVUN4RFFVRkJRU3hEUVVGRlJpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSFJ5eERRVUZCUVN4RFFVRkZTQ3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhTU3hEUVVGQlFTeERRVUZGU2l4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZIU3l4RFFVRkJRU3hEUVVGRlRDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSFRTeERRVUZCUVN4RFFVRkZUaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhVU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVZEJMRU5CUVVGQkxFVkJRVWNzUTBGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJSMVFzUTBGQlFVRXNRMEZCUlZNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjJNc1EwRkJRVUVzUTBGQlJXSXNRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlJVUXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlNVTXNRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGQlIwUXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVkclJTeERRVUZCUVN4RFFVRkZjRVFzUTBGQlFVRXNRMEZCUlhCQ0xFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVjd1F5eERRVUZCUVN4RFFVRkZla01zUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJSU3hWUVVGQkxFTkJRVmRITEVOQlFVRkJMRU5CUVVWRUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWxCTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGSGEwVXNRMEZCUVVFc1EwRkJSWEJFTEVOQlFVRkJMRU5CUVVWd1FpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSGMwVXNRMEZCUVVFc1EwRkJSWEpGTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVVVzVlVGQlFTeERRVUZYUnl4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlIydEZMRU5CUVVGQkxFTkJRVVZ3UkN4RFFVRkJRU3hEUVVGRmNFSXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlJ6WkRMRU5CUVVGQkxFTkJRVVUxUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZGTEZWQlFVRXNRMEZCVjBjc1EwRkJRVUVzUTBGQlJVUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCU1d0RkxFTkJRVUZCTEVOQlFVVndSQ3hEUVVGQlFTeERRVUZGY0VJc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUjNORkxFTkJRVUZCTEVOQlFVVnlSU3hEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkZMRlZCUVVFc1EwRkJWMGNzUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJTVVlzUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJVRXNRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJXdENMRU5CUVVGQkxFTkJRVVZ1UWl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkZRU3hEUVVGQlFTeERRVUZGU3l4RFFVRkJRU3hEUVVGRkxFOUJRVTlRTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWRuUkN4RFFVRkJRU3hEUVVGRk9VTXNRMEZCUVVFc1EwRkJSVVlzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGSlFTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSFowUXNRMEZCUVVFc1EwRkJSVGRETEVOQlFVRkJMRU5CUVVWSUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJTVUVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSMmRFTEVOQlFVRkJMRU5CUVVVMVF5eERRVUZCUVN4RFFVRkZTaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVsQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVkblJDeERRVUZCUVN4RFFVRkZNME1zUTBGQlFVRXNRMEZCUlV3c1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhaMFFzUTBGQlFVRXNRMEZCUlRGRExFTkJRVUZCTEVOQlFVVk9MRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCU1VFc1EwRkJRVUVzUTBGQlJTeFRRVUZUZDBRc1EwRkJRVUVzUTBGQlJYcEVMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVWRkxFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NTVUZCU1N4SlFVRkpReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUlVGQlNVd3NRMEZCUVVFc1EwRkJSU3hGUVVGQkxFZEJRVXNzUTBGQlFTeEZRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkhUU3hEUVVGQlFTeERRVUZGVGl4RFFVRkJRU3hEUVVGRlJTeERRVUZCUVN4RFFVRkZTQ3hEUVVGQlFTeERRVUZGVnl4TlFVRkJRU3hGUVVGUlRDeERRVUZCUVN4RlFVRkhUaXhEUVVGQlFTeERRVUZGV1N4SlFVRkJRU3hEUVVGTExFTkJRVUVzUTBGQlFTeERRVUZITEVsQlFVbGFMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRWRCUVVrc1EwRkJRU3hEUVVGQkxFVkJRVWtzUjBGQlFTeEZRVUZMTEVWQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVZEVMRU5CUVVGQkxFTkJRVVZOTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzVlVGQlFTeERRVUZYUXl4RFFVRkJRU3hEUVVGRlVDeERRVUZCUVN4RFFVRkZUU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZGTEZWQlFVRXNRMEZCVnl4RFFVRkJMRU5CUVVWR0xFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZRU3hEUVVGQlFTeERRVUZGVEN4RFFVRkJRU3hEUVVGRlZ5eE5RVUZCUVN4RFFVRlBUaXhEUVVGQlFTeEZRVUZITEVWQlFVRXNRMEZCUjBRc1EwRkJRVUVzUTBGQlJXOUVMRU5CUVVGQkxFTkJRVVY0UkN4RFFVRkJRU3hEUVVGRmIwUXNTMEZCUVVFc1EwRkJUUzlETEVOQlFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVVsRUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1QwRkJUMEVzUTBGQlFVRXNRMEZCUlN4SlFVRkpjMFFzUTBGQlFVRXNRMEZCUlN4VFFVRlRNVVFzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhUUVVGVFF5eERRVUZCUVN4RFFVRkZRU3hEUVVGQlFTeERRVUZGUnl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSExFbEJRVWxETEVOQlFVRkJMRU5CUVVWS0xFbEJRVUZCTEVOQlFVc3NSMEZCUnl4UFFVRkJMRWRCUVZWRUxFTkJRVUZCTEVOQlFVVXNUVUZCVFN4SlFVRkpZeXhMUVVGQlFTeERRVUZOVUN4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVsQlFVbEVMRU5CUVVGQkxFTkJRVVZHTEVOQlFVRkJMRVZCUVVjc1JVRkJRU3hEUVVGSExFMUJRVUVzUTBGQlQwTXNRMEZCUVVFc1EwRkJSVTRzUTBGQlFVRXNRMEZCUlRSRkxFbEJRVUZCTEVOQlFVc3hSU3hKUVVGQlFTeERRVUZMUkN4RFFVRkJRU3hEUVVGRlJ5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZCUVN4RlFVRkpTQ3hKUVVGQlFTeEZRVUZOTkVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVkNFJDeERRVUZCUVN4RFFVRkZiVVFzUTBGQlFVRXNRMEZCUlc1RUxFTkJRVUZCTEVOQlFVVXlSQ3hEUVVGQlFTeERRVUZGTTBRc1EwRkJRVUVzUTBGQlJXdEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkZiRVFzUTBGQlFVRXNRMEZCUlRKRExFTkJRVUZCTEVOQlFVVTVReXhEUVVGQlFTeERRVUZGUnl4RFFVRkJRU3hEUVVGRlNDeERRVUZCUVN4RFFVRkZSeXhEUVVGQlFTeERRVUZGUkN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZhMFFzUTBGQlFVRXNRMEZCUVVFc1EwRkJSMnhFTEVOQlFVRkJMRU5CUVVVMlF5eERRVUZCUVN4RFFVRkZTeXhEUVVGQlFTeERRVUZGYkVRc1EwRkJRVUVzUTBGQlJYRkVMRU5CUVVGQkxFTkJRVVVzVTBGQlV6TkVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NUMEZCVDBFc1EwRkJRVUVzUTBGQlJXOUVMRXRCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVZNNVF5eERRVUZCUVN4RFFVRkZjMFFzUTBGQlFVRXNRMEZCUlV3c1EwRkJRVUVzUTBGQlJXcEVMRU5CUVVGQkxFTkJRVVZ2UkN4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkZia1FzUTBGQlFVRXNRMEZCUlRSRExFTkJRVUZCTEVOQlFVVXNRMEZCUXl4VlFVRkJMRU5CUVZjc1ZVRkJRU3hEUVVGWExGVkJRVUVzUTBGQlZ5eFRRVUZCTEVOQlFWVXNWVUZCUVN4RFFVRkJMRU5CUVZrMVF5eERRVUZCUVN4RFFVRkZNRU1zUTBGQlFVRXNRMEZCUlN4SFFVRkJMRU5CUVVreFF5eERRVUZCUVN4RFFVRkZaMFFzUTBGQlFVRXNRMEZCUlN4SFFVRkJMRU5CUVVsb1JDeERRVUZCUVN4RFFVRkZhVVFzUTBGQlFVRXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVWRvUkN4RFFVRkJRU3hEUVVGRmMwVXNUMEZCUVVFc1JVRkJVM1pGTEVOQlFVRkJMRU5CUVVWNVJDeERRVUZCUVN4RFFVRkZMME1zUTBGQlFVRXNRMEZCUlN4VFFVRkJMRU5CUVZWVUxFTkJRVUZCTEVOQlFVVnpSU3hQUVVGQlFTeERRVUZSZGtVc1EwRkJRVUVzUTBGQlJXdEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVsc1JDeERRVUZCUVN4RFFVRkZMRTlCUVU5blFpeERRVUZCUVN4RFFVRkZja0lzUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQmJsY3NRMEZCYzFkdFFpeERRVUZCUVN4RFFVRkJRU3hEUVVGSExGTkJRVk4xUXl4RFFVRkJRU3hEUVVGRk0wUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eE5RVUZOTEZOQlFVRXNSVUZCVjBFc1EwRkJRVUVzUTBGQlJVMHNRMEZCUVVFc1EwRkJSVGhETEV0QlFVRkJMRVZCUVVGQkxFTkJRVkUzUXl4RFFVRkJRU3hEUVVGRk5rTXNTMEZCUVVFc1JVRkJRVUVzUTBGQlVTeFRRVUZUVVN4RFFVRkJRU3hEUVVGRk5VUXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhKUVVGSlJTeERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUlN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZUU3hEUVVGQlFTeERRVUZGU1N4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRmEwUXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVWNzU1VGQlNYUkZMRU5CUVVGQkxFTkJRVVZHTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWRITEVOQlFVRkJMRU5CUVVWSUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVkTExFTkJRVUZCTEVOQlFVVk1MRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVZE5MRU5CUVVGQkxFTkJRVVZPTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWRQTEVOQlFVRkJMRU5CUVVWUUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVkUkxFTkJRVUZCTEVOQlFVVlNMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVZFRMRU5CUVVGQkxFTkJRVVZVTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWRsTEVOQlFVRkJMRU5CUVVWbUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVkeFFpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVkQkxFTkJRVUZCTEVWQlFVY3NRMEZCUVN4RFFVRkZiVVFzUTBGQlFVRXNRMEZCUlc1RUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkhkRUlzUTBGQlFVRXNRMEZCUlhOQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVjMFFpeERRVUZCUVN4RFFVRkZNVUlzUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJXdEVMRU5CUVVGQkxFTkJRVVZ1UkN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZITEVWQlFVRXNRMEZCUVN4RFFVRkpSU3hEUVVGQlFTeERRVUZGUkN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZKY1VJc1EwRkJRVUVzUTBGQlJYSkNMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVbHJSQ3hEUVVGQlFTeERRVUZGYmtRc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUnpaQ0xFTkJRVUZCTEVOQlFVVnpRaXhEUVVGQlFTeERRVUZGYmtRc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkxiVVFzUTBGQlFVRXNRMEZCUlc1RUxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJTMFlzUTBGQlFVRXNRMEZCUlhWRUxFTkJRVUZCTEVOQlFVVXpSQ3hEUVVGQlFTeERRVUZGYzBNc1EwRkJRVUVzUTBGQlJUbERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZHhReXhEUVVGQlFTeERRVUZGY2tNc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSMHdzUTBGQlFVRXNRMEZCUldsQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVkdFJDeERRVUZCUVN4RFFVRkZia1FzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNVUXNRMEZCUVVFc1EwRkJSVFJDTEVOQlFVRkJMRU5CUVVWNVFpeERRVUZCUVN4RFFVRkZka1VzUTBGQlFVRXNRMEZCUVVFc1EwRkJSelpETEVOQlFVRkJMRU5CUVVVM1F5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUlN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkpWU3hEUVVGQlFTeERRVUZGVGl4RFFVRkJRU3hEUVVGRlFTeERRVUZCUVN4RFFVRkZSQ3hEUVVGQlFTeERRVUZGUVN4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkZRU3hEUVVGQlFTeERRVUZGZVVNc1EwRkJRVUVzUTBGQlJURkRMRU5CUVVGQkxFTkJRVVZoTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRpTEVOQlFVRkJMRU5CUVVWRUxFTkJRVUZCTEVOQlFVVkJMRU5CUVVGQkxFTkJRVVZHTEVOQlFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVkVMRU5CUVVGQkxFTkJRVVZCTEVOQlFVRkJMRU5CUVVVNFF5eERRVUZCUVN4RFFVRkZOMElzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4UFFVRlBjRUlzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSMmRFTEVOQlFVRkJMRU5CUVVVNVF5eERRVUZCUVN4RFFVRkZSaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVsQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVkblJDeERRVUZCUVN4RFFVRkZOME1zUTBGQlFVRXNRMEZCUlVnc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhaMFFzUTBGQlFVRXNRMEZCUlRORExFTkJRVUZCTEVOQlFVVk1MRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCU1VFc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUjJkRUxFTkJRVUZCTEVOQlFVVXhReXhEUVVGQlFTeERRVUZGVGl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVbEJMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVZG5SQ3hEUVVGQlFTeERRVUZGZWtNc1EwRkJRVUVzUTBGQlJWQXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZIWjBRc1EwRkJRVUVzUTBGQlJYaERMRU5CUVVGQkxFTkJRVVZTTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlNVRXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlIyZEVMRU5CUVVGQkxFTkJRVVYyUXl4RFFVRkJRU3hEUVVGRlZDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVWxCTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWRuUkN4RFFVRkJRU3hEUVVGRmFrTXNRMEZCUVVFc1EwRkJSV1lzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGSlFTeERRVUZCUVN4RFFVRkZMRWxCUVVrMlJDeERRVUZCUVN4RFFVRkZMRk5CUVZNNVJDeERRVUZCUVN4RFFVRkJRU3hEUVVGSExGTkJRVk5ETEVOQlFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVkhMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzU1VGQlNVTXNRMEZCUVVFc1EwRkJSVW9zU1VGQlFVRXNRMEZCU3l4SFFVRkhMRk5CUVVFc1IwRkJXVVFzUTBGQlFVRXNSVUZCUnl4VFFVRkJMRWRCUVZsQkxFTkJRVUZCTEVOQlFVVXNUVUZCVFN4SlFVRkpZeXhMUVVGQlFTeERRVUZOVUN4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVsQlFVbEVMRU5CUVVGQkxFTkJRVVZHTEVOQlFVRkJMRVZCUVVjc1JVRkJRU3hEUVVGSExFMUJRVUVzUTBGQlQwTXNRMEZCUVVFc1EwRkJSVTRzUTBGQlFVRXNRMEZCUlRSRkxFbEJRVUZCTEVOQlFVc3hSU3hKUVVGQlFTeERRVUZMUkN4RFFVRkJRU3hEUVVGRlJ5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZCUVN4RlFVRkpTQ3hKUVVGQlFTeEZRVUZOZFVRc1EwRkJRVUVzUTBGQlJXNUVMRU5CUVVGQkxFTkJRVVV5UkN4RFFVRkJRU3hEUVVGRk0wUXNRMEZCUVVFc1EwRkJSWGRFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZIZUVRc1EwRkJRVUVzUTBGQlJXdEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkZiRVFzUTBGQlFVRXNRMEZCUlRKRExFTkJRVUZCTEVOQlFVVTVReXhEUVVGQlFTeERRVUZGUnl4RFFVRkJRU3hEUVVGRlNDeERRVUZCUVN4RFFVRkZSeXhEUVVGQlFTeERRVUZGUkN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZhMFFzUTBGQlFVRXNRMEZCUVVFc1EwRkJSMnhFTEVOQlFVRkJMRU5CUVVVMlF5eERRVUZCUVN4RFFVRkZVeXhEUVVGQlFTeERRVUZGZEVRc1EwRkJRVUVzUTBGQlJYRkVMRU5CUVVGQkxFTkJRVVVzVTBGQlV6TkVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NUMEZCVDBFc1EwRkJRVUVzUTBGQlJXOUVMRXRCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUVZNNVF5eERRVUZCUVN4RFFVRkZjMFFzUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJYSkVMRU5CUVVGQkxFTkJRVVZ2UkN4RFFVRkJRU3hEUVVGRkxGTkJRVk14UkN4RFFVRkJRU3hEUVVGRlJ5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEU5QlFVOHNVMEZCVTB3c1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKTEVsQlFVbERMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hGUVVGSlRpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1IwRkJTeXhEUVVGQkxFVkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVZFBMRU5CUVVGQkxFTkJRVVZRTEVOQlFVRkJMRU5CUVVWRkxFTkJRVUZCTEVOQlFVVklMRU5CUVVGQkxFTkJRVVZYTEUxQlFVRkJMRVZCUVZGS0xFTkJRVUZCTEVWQlFVZFFMRU5CUVVGQkxFTkJRVVZaTEVsQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJRVWNzU1VGQlNWb3NRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNSMEZCU1N4RFFVRkJMRU5CUVVFc1JVRkJTU3hIUVVGQkxFVkJRVXNzUlVGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlIwUXNRMEZCUVVFc1EwRkJSVThzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhWUVVGQkxFTkJRVmRETEVOQlFVRkJMRU5CUVVWU0xFTkJRVUZCTEVOQlFVVlBMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVVVzVlVGQlFTeERRVUZYTEVOQlFVRXNRMEZCUlVZc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVkJMRU5CUVVGQkxFTkJRVVZPTEVOQlFVRkJMRU5CUVVWWExFMUJRVUZCTEVOQlFVOU1MRU5CUVVGQkxFVkJRVWNzUlVGQlFTeERRVUZIUml4RFFVRkJRU3hEUVVGRmQwUXNRMEZCUVVFc1EwRkJSVFZFTEVOQlFVRkJMRU5CUVVWdlJDeExRVUZCUVN4RFFVRk5PVU1zUTBGQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCU1VZc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4TlFVRk5MRk5CUVVFc1IwRkJXVU1zUTBGQlFVRXNRMEZCUlN4RFFVRkRSQ3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVsQkxFTkJRVUZCTEVOQlFYUlFMRU5CUVhsUVNpeERRVUZCUVN4RFFVRkZSeXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZTaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGSlN5eERRVUZCUVN4RFFVRkZORU1zUTBGQlFVRXNRMEZCUlZNc1EwRkJRVUVzUTBGQlJURkVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZExMRU5CUVVGQkxFTkJRVVV3UXl4RFFVRkJRU3hEUVVGRkxFZEJRVUVzUTBGQlNURkRMRU5CUVVGQkxFTkJRVVZuUkN4RFFVRkJRU3hEUVVGRkxGTkJRVUVzUjBGQldYSkVMRU5CUVVGQkxFTkJRVVVzUjBGQlFTeERRVUZKTEVkQlFVRXNRMEZCU1Vzc1EwRkJRVUVzUTBGQlJXbEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkhhRVFzUTBGQlFVRXNRMEZCUlhORkxFOUJRVUZCTEVWQlFWTjJSU3hEUVVGQlFTeERRVUZGZVVRc1EwRkJRVUVzUTBGQlJTOURMRU5CUVVGQkxFTkJRVVVzVTBGQlFTeERRVUZWVkN4RFFVRkJRU3hEUVVGRmMwVXNUMEZCUVVFc1EwRkJVWFpGTEVOQlFVRkJMRU5CUVVWclJDeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZKYkVRc1EwRkJRVUVzUTBGQlJTeFBRVUZQWjBJc1EwRkJRVUVzUTBGQlJYSkNMRU5CUVVGQkxFTkJRVVZFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVM5dFFpeERRVUZyYmtKdFFpeERRVUZCUVN4RFFVRkJRU3hEUVVGSE1rTXNRMEZCUVVFc1EwRkJSU3hUUVVGVEwwUXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSME1zU1VGQlFVRXNRMEZCU3pSRkxFTkJRVUZCTEVOQlFVVTVSU3hEUVVGQlFTeERRVUZGUlN4SlFVRkJRU3hEUVVGTE5rVXNRMEZCUVVFc1EwRkJSVGxGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzVTBGQlUyZEZMRU5CUVVGQkxFTkJRVVZxUlN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSExFbEJRVWxGTEVOQlFVRkJMRU5CUVVVc1QwRkJUMFlzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRVZCUVVsRkxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkhSaXhEUVVGQlFTeERRVUZGTEVsQlFVazRSQ3hEUVVGQlFTeERRVUZGTDBRc1EwRkJRVUVzUTBGQlJTdEZMRU5CUVVGQkxFVkJRVWM1UlN4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkZPRVVzUTBGQlFVRXNSMEZCU1RORkxFTkJRVUZCTEVOQlFVVklMRU5CUVVGQkxFTkJRVVU0UlN4RFFVRkJRU3hGUVVGSE4wVXNRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlN0RkxFTkJRVUZCTEVkQlFVazFSU3hEUVVGQlFTeERRVUZCUVN4RlFVRkpMRU5CUVVFc1IwRkJTVVlzUTBGQlFVRXNSVUZCUjBVc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVZEdMRU5CUVVGQkxFTkJRVVVzU1VGQlNUaEVMRU5CUVVGQkxFTkJRVVV2UkN4RFFVRkJRU3hEUVVGRk9FVXNRMEZCUVVFc1JVRkJSemRGTEVOQlFVRkJMRU5CUVVWRUxFTkJRVUZCTEVOQlFVVXJSU3hEUVVGQlFTeEhRVUZKTlVVc1EwRkJRVUVzUTBGQlJVZ3NRMEZCUVVFc1EwRkJSU3RGTEVOQlFVRkJMRVZCUVVjNVJTeERRVUZCUVN4RFFVRkZSQ3hEUVVGQlFTeERRVUZGT0VVc1EwRkJRVUVzUjBGQlNUTkZMRU5CUVVGQkxFTkJRVUZCTEVWQlFVbElMRU5CUVVGQkxFTkJRVVVzVTBGQlV6aEZMRU5CUVVGQkxFTkJRVVU1UlN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSExFbEJRVWxGTEVOQlFVRkJMRU5CUVVVc1QwRkJUMFlzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRVZCUVVsRkxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkhSaXhEUVVGQlFTeERRVUZGTEVsQlFVazRSQ3hEUVVGQlFTeERRVUZGTDBRc1EwRkJRVUVzUTBGQlJUaEZMRU5CUVVGQkxFZEJRVWszUlN4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkZLMFVzUTBGQlFVRXNSVUZCUnpWRkxFTkJRVUZCTEVOQlFVVklMRU5CUVVGQkxFTkJRVVVyUlN4RFFVRkJRU3hIUVVGSk9VVXNRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlRoRkxFTkJRVUZCTEVWQlFVY3pSU3hEUVVGQlFTeERRVUZCUVN4SFFVRkxRU3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUjBZc1EwRkJRVUVzUTBGQlJTeEpRVUZKT0VRc1EwRkJRVUVzUTBGQlJTOUVMRU5CUVVGQkxFTkJRVVVyUlN4RFFVRkJRU3hIUVVGSk9VVXNRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlRoRkxFTkJRVUZCTEVWQlFVY3pSU3hEUVVGQlFTeERRVUZGU0N4RFFVRkJRU3hEUVVGRk9FVXNRMEZCUVVFc1IwRkJTVGRGTEVOQlFVRkJMRU5CUVVWRUxFTkJRVUZCTEVOQlFVVXJSU3hEUVVGQlFTeEZRVUZITlVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJTU3hUUVVGVE5FVXNRMEZCUVVFc1EwRkJSUzlGTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1QwRkJUeXhKUVVGSk9FUXNRMEZCUVVFc1EwRkJSUzlFTEVOQlFVRkJMRU5CUVVVNFJTeERRVUZCUVN4SFFVRkpOMFVzUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJTdEZMRU5CUVVGQkxFZEJRVWs1UlN4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkZPRVVzUTBGQlFVRXNSVUZCUnl4RlFVRkJMRU5CUVVjM1JTeERRVUZCUVN4RFFVRkJRU3hEUVVGSExGTkJRVk1yUlN4RFFVRkJRU3hEUVVGRmFFWXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4UFFVRlBMRWxCUVVrMFJDeERRVUZCUVN4RFFVRkZMMFFzUTBGQlFVRXNRMEZCUlRoRkxFTkJRVUZCTEVOQlFVVTNSU3hEUVVGQlFTeERRVUZGTmtVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnpsRkxFTkJRVUZCTEVOQlFVVTRSU3hEUVVGQlFTeERRVUZGTTBVc1EwRkJRVUVzUTBGQlJUSkZMRU5CUVVGQkxFTkJRVVU1UlN4RFFVRkJRU3hEUVVGRkswVXNRMEZCUVVFc1EwRkJSVGxGTEVOQlFVRkJMRU5CUVVVNFJTeERRVUZCUVN4RFFVRkJRU3hEUVVGSEwwVXNRMEZCUVVFc1EwRkJSU3RGTEVOQlFVRkJMRU5CUVVVMVJTeERRVUZCUVN4RFFVRkZORVVzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhUUVVGVFJTeERRVUZCUVN4RFFVRkZha1lzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eFBRVUZQTEVsQlFVazBSQ3hEUVVGQlFTeERRVUZGTDBRc1EwRkJRVUVzUTBGQlJUaEZMRU5CUVVGQkxFTkJRVVUzUlN4RFFVRkJRU3hEUVVGRk5rVXNRMEZCUVVFc1EwRkJSVGxGTEVOQlFVRkJMRU5CUVVVNFJTeERRVUZCUVN4RFFVRkZNMFVzUTBGQlFVRXNRMEZCUlRKRkxFTkJRVUZCTEVOQlFVVTNSU3hEUVVGQlFTeERRVUZGTmtVc1EwRkJRVUVzUTBGQlJUTkZMRU5CUVVGQkxFTkJRVVV5UlN4RFFVRkJRU3hEUVVGRk9VVXNRMEZCUVVFc1EwRkJSU3RGTEVOQlFVRkJMRU5CUVVVNVJTeERRVUZCUVN4RFFVRkZPRVVzUTBGQlFVRXNRMEZCUlM5RkxFTkJRVUZCTEVOQlFVVXJSU3hEUVVGQlFTeERRVUZGTlVVc1EwRkJRVUVzUTBGQlJUUkZMRU5CUVVGQkxFTkJRVVU1UlN4RFFVRkJRU3hEUVVGRk9FVXNRMEZCUVVFc1EwRkJSVFZGTEVOQlFVRkJMRU5CUVVVMFJTeERRVUZCUVN4RFFVRkJRU3hEUVVGSExGTkJRVk5ITEVOQlFVRkJMRU5CUVVWc1JpeERRVUZCUVN4RFFVRkJRU3hEUVVGSExFbEJRVWxETEVOQlFVRkJMRU5CUVVVMlJTeERRVUZCUVN4RFFVRkZPVVVzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJTVWNzUTBGQlFVRXNRMEZCUlRKRkxFTkJRVUZCTEVOQlFVVTVSU3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRkpTU3hEUVVGQlFTeERRVUZGTUVVc1EwRkJRVUVzUTBGQlJUbEZMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVa3NUMEZCVHl4SlFVRkpLMFFzUTBGQlFVRXNRMEZCUlRsRUxFTkJRVUZCTEVOQlFVVTJSU3hEUVVGQlFTeERRVUZGTTBVc1EwRkJRVUVzUTBGQlJUSkZMRU5CUVVGQkxFTkJRVVV4UlN4RFFVRkJRU3hEUVVGRk1FVXNRMEZCUVVFc1EwRkJSVGRGTEVOQlFVRkJMRU5CUVVVNFJTeERRVUZCUVN4RFFVRkZOVVVzUTBGQlFVRXNRMEZCUlRSRkxFTkJRVUZCTEVOQlFVVXpSU3hEUVVGQlFTeERRVUZGTWtVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4VFFVRlRTU3hEUVVGQlFTeERRVUZGYmtZc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKUlN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZSQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkhMRXRCUVVFc1EwRkJUVWdzUTBGQlFVRXNRMEZCUlN0RkxFTkJRVUZCTEVkQlFVa3NTMEZCUVN4RFFVRk5PVVVzUTBGQlFVRXNRMEZCUlRoRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1NVRkJTVEZGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzUzBGQlFTeEZRVUZQUkN4RFFVRkJRU3hEUVVGQlFTeERRVUZIU2l4RFFVRkJRU3hEUVVGRkswVXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFZEJRVXM1UlN4RFFVRkJRU3hEUVVGRk9FVXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFTkJRVUVzUlVGQlN6VkZMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeERRVUZCTEVOQlFVRXNSMEZCVHl4RlFVRkJMRU5CUVVjc1MwRkJRU3hEUVVGTlFTeERRVUZCUVN4RFFVRkZMRTlCUVU5QkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1MwRkJRU3hEUVVGTlNDeERRVUZCUVN4RFFVRkZPRVVzUTBGQlFVRXNSMEZCU1N4TFFVRkJMRU5CUVUwM1JTeERRVUZCUVN4RFFVRkZOa1VzUTBGQlFVRXNRMEZCUVVFc1JVRkJTVEZGTEVOQlFVRkJMRWRCUVVrc1JVRkJRU3hEUVVGQkxFTkJRVWxCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRLTEVOQlFVRkJMRU5CUVVVNFJTeERRVUZCUVN4SFFVRkpMRVZCUVVFc1IwRkJTemRGTEVOQlFVRkJMRU5CUVVVMlJTeERRVUZCUVN4SFFVRkpMRVZCUVVFc1EwRkJRU3hGUVVGTE0wVXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFTkJRVUVzUTBGQlNTeEpRVUZKTkVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4TFFVRkJMRU5CUVUwelJDeERRVUZCUVN4SFFVRkpMRVZCUVVFc1EwRkJSeXhMUVVGQkxFTkJRVTFFTEVOQlFVRkJMRU5CUVVWRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1UwRkJVeXRGTEVOQlFVRkJMRU5CUVVWd1JpeERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUlN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSExFbEJRVWxETEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NTMEZCUVN4RFFVRk5UQ3hEUVVGQlFTeERRVUZGSzBVc1EwRkJRVUVzUjBGQlNTeExRVUZCTEVOQlFVMDVSU3hEUVVGQlFTeERRVUZGT0VVc1EwRkJRVUVzUTBGQlFVRXNSVUZCU1N4TFFVRkJMRU5CUVUwMVJTeERRVUZCUVN4RFFVRkZORVVzUTBGQlFVRXNRMEZCUVVFc1JVRkJTU3hMUVVGQkxFTkJRVTB6UlN4RFFVRkJRU3hEUVVGRk1rVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKZUVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4TFFVRkJMRVZCUVU5RUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVkT0xFTkJRVUZCTEVOQlFVVXJSU3hEUVVGQlFTeEhRVUZKTEVWQlFVRXNSMEZCU3psRkxFTkJRVUZCTEVOQlFVVTRSU3hEUVVGQlFTeEhRVUZKTEVWQlFVRXNRMEZCUVN4RlFVRkxOVVVzUTBGQlFVRXNRMEZCUlRSRkxFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RFFVRkJMRVZCUVVzelJTeERRVUZCUVN4RFFVRkZNa1VzUTBGQlFVRXNSMEZCU1N4RlFVRkJMRU5CUVVFc1JVRkJTekZGTEVOQlFVRkJMRWRCUVVrc1JVRkJRU3hEUVVGQkxFTkJRVUVzUjBGQlR5eEZRVUZCTEVOQlFVY3NTMEZCUVN4RFFVRk5RU3hEUVVGQlFTeERRVUZGTEU5QlFVOUJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NTMEZCUVN4RFFVRk5UQ3hEUVVGQlFTeERRVUZGT0VVc1EwRkJRVUVzUjBGQlNTeExRVUZCTEVOQlFVMDNSU3hEUVVGQlFTeERRVUZGTmtVc1EwRkJRVUVzUTBGQlFVRXNSVUZCU1N4TFFVRkJMRU5CUVUwelJTeERRVUZCUVN4RFFVRkZNa1VzUTBGQlFVRXNRMEZCUVVFc1JVRkJTU3hMUVVGQkxFTkJRVTB4UlN4RFFVRkJRU3hEUVVGRk1FVXNRMEZCUVVFc1EwRkJRVUVzUlVGQlNYaEZMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeERRVUZCTEVOQlFVbEJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZE9MRU5CUVVGQkxFTkJRVVU0UlN4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUjBGQlN6ZEZMRU5CUVVGQkxFTkJRVVUyUlN4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUTBGQlFTeEZRVUZMTTBVc1EwRkJRVUVzUTBGQlJUSkZMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeERRVUZCTEVWQlFVc3hSU3hEUVVGQlFTeERRVUZGTUVVc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlFVRXNSVUZCUzNwRkxFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RFFVRkJMRU5CUVVrc1NVRkJTVEJFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzUzBGQlFTeERRVUZOZWtRc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlFVY3NTMEZCUVN4RFFVRk5SQ3hEUVVGQlFTeERRVUZGUlN4RFFVRkJRU3hEUVVGQlFTeERRVUZITEZOQlFWTTRSU3hEUVVGQlFTeERRVUZGY2tZc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZSQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkhMRXRCUVVFc1EwRkJUVTRzUTBGQlFVRXNRMEZCUlN0RkxFTkJRVUZCTEVkQlFVa3NTMEZCUVN4RFFVRk5PVVVzUTBGQlFVRXNRMEZCUlRoRkxFTkJRVUZCTEVOQlFVRkJMRVZCUVVrc1MwRkJRU3hEUVVGTk5VVXNRMEZCUVVFc1EwRkJSVFJGTEVOQlFVRkJMRU5CUVVGQkxFVkJRVWtzUzBGQlFTeERRVUZOTTBVc1EwRkJRVUVzUTBGQlJUSkZMRU5CUVVGQkxFTkJRVUZCTEVWQlFVa3NTMEZCUVN4RFFVRk5NVVVzUTBGQlFVRXNRMEZCUlRCRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1NVRkJTWFpGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzUzBGQlFTeEZRVUZQUkN4RFFVRkJRU3hEUVVGQlFTeERRVUZIVUN4RFFVRkJRU3hEUVVGRkswVXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFZEJRVXM1UlN4RFFVRkJRU3hEUVVGRk9FVXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFTkJRVUVzUlVGQlN6VkZMRU5CUVVGQkxFTkJRVVUwUlN4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUTBGQlFTeEZRVUZMTTBVc1EwRkJRVUVzUTBGQlJUSkZMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeERRVUZCTEVWQlFVc3hSU3hEUVVGQlFTeERRVUZGTUVVc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlFVRXNSVUZCUzNwRkxFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RFFVRkJMRU5CUVVFc1IwRkJUeXhGUVVGQkxFTkJRVWNzUzBGQlFTeERRVUZOUVN4RFFVRkJRU3hEUVVGRkxFOUJRVTlCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzUzBGQlFTeERRVUZOVGl4RFFVRkJRU3hEUVVGRk9FVXNRMEZCUVVFc1IwRkJTU3hMUVVGQkxFTkJRVTAzUlN4RFFVRkJRU3hEUVVGRk5rVXNRMEZCUVVFc1EwRkJRVUVzUlVGQlNTeExRVUZCTEVOQlFVMHpSU3hEUVVGQlFTeERRVUZGTWtVc1EwRkJRVUVzUTBGQlFVRXNSVUZCU1N4TFFVRkJMRU5CUVUweFJTeERRVUZCUVN4RFFVRkZNRVVzUTBGQlFVRXNRMEZCUVVFc1JVRkJTU3hMUVVGQkxFTkJRVTE2UlN4RFFVRkJRU3hEUVVGRmVVVXNRMEZCUVVFc1EwRkJRVUVzUlVGQlNYWkZMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeERRVUZCTEVOQlFVbEJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZFFMRU5CUVVGQkxFTkJRVVU0UlN4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUjBGQlN6ZEZMRU5CUVVGQkxFTkJRVVUyUlN4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUTBGQlFTeEZRVUZMTTBVc1EwRkJRVUVzUTBGQlJUSkZMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeERRVUZCTEVWQlFVc3hSU3hEUVVGQlFTeERRVUZGTUVVc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlFVRXNSVUZCUzNwRkxFTkJRVUZCTEVOQlFVVjVSU3hEUVVGQlFTeEhRVUZKTEVWQlFVRXNRMEZCUVN4RlFVRkxlRVVzUTBGQlFVRXNSMEZCU1N4RlFVRkJMRU5CUVVFc1EwRkJTU3hKUVVGSmVVUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eExRVUZCTEVOQlFVMTRSQ3hEUVVGQlFTeEhRVUZKTEVWQlFVRXNRMEZCUnl4TFFVRkJMRU5CUVUxRUxFTkJRVUZCTEVOQlFVVkZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NVMEZCVXpoRkxFTkJRVUZCTEVOQlFVVjBSaXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEU5QlFVOHNTVUZCU1RoRUxFTkJRVUZCTEVOQlFVVXZSQ3hEUVVGQlFTeERRVUZGT0VVc1EwRkJRVUVzUTBGQlJUZEZMRU5CUVVGQkxFTkJRVVUyUlN4RFFVRkJRU3hEUVVGRk9VVXNRMEZCUVVFc1EwRkJSU3RGTEVOQlFVRkJMRU5CUVVVNVJTeERRVUZCUVN4RFFVRkZPRVVzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhUUVVGVFVTeERRVUZCUVN4RFFVRkZka1lzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhKUVVGSlF5eERRVUZCUVN4RFFVRkZOa1VzUTBGQlFVRXNRMEZCUlRsRkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVkSExFTkJRVUZCTEVOQlFVVXlSU3hEUVVGQlFTeERRVUZGT1VVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUjBrc1EwRkJRVUVzUTBGQlJUSkZMRU5CUVVGQkxFTkJRVVV2UlN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZITEU5QlFVOHNTVUZCU1N0RUxFTkJRVUZCTEVOQlFVVTVSQ3hEUVVGQlFTeERRVUZGTmtVc1EwRkJRVUVzUTBGQlJUTkZMRU5CUVVGQkxFTkJRVVV5UlN4RFFVRkJRU3hEUVVGRk1VVXNRMEZCUVVFc1EwRkJSVEJGTEVOQlFVRkJMRU5CUVVVM1JTeERRVUZCUVN4RFFVRkZPRVVzUTBGQlFVRXNRMEZCUlRWRkxFTkJRVUZCTEVOQlFVVTBSU3hEUVVGQlFTeERRVUZGTTBVc1EwRkJRVUVzUTBGQlJUSkZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NVMEZCVTFNc1EwRkJRVUVzUTBGQlJYaEdMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NTVUZCU1VNc1EwRkJRVUVzUTBGQlJUWkZMRU5CUVVGQkxFTkJRVVU1UlN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZKUnl4RFFVRkJRU3hEUVVGRk1rVXNRMEZCUVVFc1EwRkJSVGxGTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVWxKTEVOQlFVRkJMRU5CUVVVd1JTeERRVUZCUVN4RFFVRkZPVVVzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJTU3hQUVVGUExFbEJRVWtyUkN4RFFVRkJRU3hEUVVGRk9VUXNRMEZCUVVFc1EwRkJSVFpGTEVOQlFVRkJMRU5CUVVVelJTeERRVUZCUVN4RFFVRkZNa1VzUTBGQlFVRXNRMEZCUlRGRkxFTkJRVUZCTEVOQlFVVXdSU3hEUVVGQlFTeERRVUZGTjBVc1EwRkJRVUVzUTBGQlJUaEZMRU5CUVVGQkxFTkJRVVUxUlN4RFFVRkJRU3hEUVVGRk5FVXNRMEZCUVVFc1EwRkJSVE5GTEVOQlFVRkJMRU5CUVVVeVJTeERRVUZCUVN4RFFVRkJRU3hEUVVGSExFbEJRVWxWTEVOQlFVRkJMRU5CUVVVc1EwRkJReXhKUVVGSk1VSXNRMEZCUVVFc1EwRkJSVEZFTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWNzVlVGQlFTeERRVUZCTEVOQlFWa3NTVUZCU1RCRUxFTkJRVUZCTEVOQlFVVXhSQ3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhMRk5CUVVFc1EwRkJRU3hEUVVGWExFbEJRVWt3UkN4RFFVRkJRU3hEUVVGRk1VUXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlJ5eFZRVUZCTEVOQlFVRXNRMEZCV1N4SlFVRkpNRVFzUTBGQlFVRXNRMEZCUlRGRUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVjc1ZVRkJRU3hEUVVGQkxFTkJRVmtzU1VGQlNUQkVMRU5CUVVGQkxFTkJRVVV4UkN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZITEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVrd1JDeERRVUZCUVN4RFFVRkZNVVFzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSeXhWUVVGQkxFTkJRVUVzUTBGQldTeEpRVUZKTUVRc1EwRkJRVUVzUTBGQlJURkVMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVY3NWVUZCUVN4RFFVRkJMRU5CUVZrc1NVRkJTVEJFTEVOQlFVRkJMRU5CUVVVeFJDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSExGVkJRVUVzUTBGQlFTeERRVUZaTEVsQlFVa3dSQ3hEUVVGQlFTeERRVUZGTVVRc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUnl4VlFVRkJMRU5CUVVFc1EwRkJXU3hKUVVGSk1FUXNRMEZCUVVFc1EwRkJSVEZFTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWNzVlVGQlFTeERRVUZCTEVOQlFWa3NTVUZCU1RCRUxFTkJRVUZCTEVOQlFVVXhSQ3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRkpMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWt3UkN4RFFVRkJRU3hEUVVGRk1VUXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlNTeFZRVUZCTEVOQlFVRXNRMEZCV1N4SlFVRkpNRVFzUTBGQlFVRXNRMEZCUlRGRUxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVVrc1ZVRkJRU3hEUVVGQkxFTkJRVmtzU1VGQlNUQkVMRU5CUVVGQkxFTkJRVVV4UkN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZKTEZOQlFVRXNRMEZCUVN4RFFVRlhMRWxCUVVrd1JDeERRVUZCUVN4RFFVRkZNVVFzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJTU3hUUVVGQkxFTkJRVUVzUTBGQlZ5eEpRVUZKTUVRc1EwRkJRVUVzUTBGQlJURkVMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVa3NWVUZCUVN4RFFVRkJMRU5CUVZrc1NVRkJTVEJFTEVOQlFVRkJMRU5CUVVVeFJDeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGSkxGVkJRVUVzUTBGQlFTeERRVUZaTEVsQlFVa3dSQ3hEUVVGQlFTeERRVUZGTVVRc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCU1N4VFFVRkJMRU5CUVVFc1EwRkJWeXhKUVVGSk1FUXNRMEZCUVVFc1EwRkJSVEZFTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVWtzVlVGQlFTeERRVUZCTEVOQlFWa3NTVUZCU1RCRUxFTkJRVUZCTEVOQlFVVXhSQ3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRkpMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWt3UkN4RFFVRkJRU3hEUVVGRk1VUXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlNTeFZRVUZCTEVOQlFVRXNRMEZCV1N4SlFVRkpNRVFzUTBGQlFVRXNRMEZCUlRGRUxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVVrc1ZVRkJRU3hEUVVGQkxFTkJRVmtzU1VGQlNUQkVMRU5CUVVGQkxFTkJRVVV4UkN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZKTEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVrd1JDeERRVUZCUVN4RFFVRkZNVVFzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJTU3hWUVVGQkxFTkJRVUVzUTBGQldTeEpRVUZKTUVRc1EwRkJRVUVzUTBGQlJURkVMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVa3NWVUZCUVN4RFFVRkJMRU5CUVZrc1NVRkJTVEJFTEVOQlFVRkJMRU5CUVVVeFJDeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGSkxGTkJRVUVzUTBGQlFTeERRVUZYTEVsQlFVa3dSQ3hEUVVGQlFTeERRVUZGTVVRc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCU1N4VlFVRkJMRU5CUVVFc1EwRkJXU3hKUVVGSk1FUXNRMEZCUVVFc1EwRkJSVEZFTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVWtzVlVGQlFTeERRVUZCTEVOQlFWa3NTVUZCU1RCRUxFTkJRVUZCTEVOQlFVVXhSQ3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRkpMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWt3UkN4RFFVRkJRU3hEUVVGRk1VUXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlNTeFZRVUZCTEVOQlFVRXNRMEZCV1N4SlFVRkpNRVFzUTBGQlFVRXNRMEZCUlRGRUxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVVrc1ZVRkJRU3hEUVVGQkxFTkJRVmtzU1VGQlNUQkVMRU5CUVVGQkxFTkJRVVV4UkN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZKTEZOQlFVRXNRMEZCUVN4RFFVRlhMRWxCUVVrd1JDeERRVUZCUVN4RFFVRkZNVVFzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJTU3hWUVVGQkxFTkJRVUVzUTBGQldTeEpRVUZKTUVRc1EwRkJRVUVzUTBGQlJURkVMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVa3NWVUZCUVN4RFFVRkJMRU5CUVZrc1NVRkJTVEJFTEVOQlFVRkJMRU5CUVVVeFJDeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGSkxGVkJRVUVzUTBGQlFTeERRVUZaTEVsQlFVa3dSQ3hEUVVGQlFTeERRVUZGTVVRc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCU1N4VlFVRkJMRU5CUVVFc1EwRkJXU3hKUVVGSk1FUXNRMEZCUVVFc1EwRkJSVEZFTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVWtzVlVGQlFTeERRVUZCTEVOQlFWa3NTVUZCU1RCRUxFTkJRVUZCTEVOQlFVVXhSQ3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRkpMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWt3UkN4RFFVRkJRU3hEUVVGRk1VUXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlNTeFZRVUZCTEVOQlFVRXNRMEZCV1N4SlFVRkpNRVFzUTBGQlFVRXNRMEZCUlRGRUxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVVrc1UwRkJRU3hEUVVGQkxFTkJRVmNzU1VGQlNUQkVMRU5CUVVGQkxFTkJRVVV4UkN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZKTEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVrd1JDeERRVUZCUVN4RFFVRkZNVVFzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJTU3hWUVVGQkxFTkJRVUVzUTBGQldTeEpRVUZKTUVRc1EwRkJRVUVzUTBGQlJURkVMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVa3NWVUZCUVN4RFFVRkJMRU5CUVZrc1NVRkJTVEJFTEVOQlFVRkJMRU5CUVVVeFJDeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGSkxGTkJRVUVzUTBGQlFTeERRVUZYTEVsQlFVa3dSQ3hEUVVGQlFTeERRVUZGTVVRc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCU1N4VlFVRkJMRU5CUVVFc1EwRkJXU3hKUVVGSk1FUXNRMEZCUVVFc1EwRkJSVEZFTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVWtzVlVGQlFTeERRVUZCTEVOQlFWa3NTVUZCU1RCRUxFTkJRVUZCTEVOQlFVVXhSQ3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRkpMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWt3UkN4RFFVRkJRU3hEUVVGRk1VUXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlNTeFRRVUZCTEVOQlFVRXNRMEZCVnl4SlFVRkpNRVFzUTBGQlFVRXNRMEZCUlRGRUxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVVrc1ZVRkJRU3hEUVVGQkxFTkJRVmtzU1VGQlNUQkVMRU5CUVVGQkxFTkJRVVV4UkN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZKTEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVrd1JDeERRVUZCUVN4RFFVRkZNVVFzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJTU3hWUVVGQkxFTkJRVUVzUTBGQldTeEpRVUZKTUVRc1EwRkJRVUVzUTBGQlJURkVMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVa3NWVUZCUVN4RFFVRkJMRU5CUVZrc1NVRkJTVEJFTEVOQlFVRkJMRU5CUVVVeFJDeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGSkxGVkJRVUVzUTBGQlFTeERRVUZaTEVsQlFVa3dSQ3hEUVVGQlFTeERRVUZGTVVRc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCU1N4VlFVRkJMRU5CUVVFc1EwRkJXU3hKUVVGSk1FUXNRMEZCUVVFc1EwRkJSVEZFTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVWtzVlVGQlFTeERRVUZCTEVOQlFWa3NTVUZCU1RCRUxFTkJRVUZCTEVOQlFVVXhSQ3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRkpMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWt3UkN4RFFVRkJRU3hEUVVGRk1VUXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlNTeFZRVUZCTEVOQlFVRXNRMEZCV1N4SlFVRkpNRVFzUTBGQlFVRXNRMEZCUlRGRUxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVVrc1ZVRkJRU3hEUVVGQkxFTkJRVmtzU1VGQlNUQkVMRU5CUVVGQkxFTkJRVVV4UkN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZKTEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVrd1JDeERRVUZCUVN4RFFVRkZNVVFzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJTU3hUUVVGQkxFTkJRVUVzUTBGQlZ5eEpRVUZKTUVRc1EwRkJRVUVzUTBGQlJURkVMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVa3NVMEZCUVN4RFFVRkJMRU5CUVZjc1NVRkJTVEJFTEVOQlFVRkJMRU5CUVVVeFJDeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGSkxGVkJRVUVzUTBGQlFTeERRVUZaTEVsQlFVa3dSQ3hEUVVGQlFTeERRVUZGTVVRc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCU1N4VlFVRkJMRU5CUVVFc1EwRkJXU3hKUVVGSk1FUXNRMEZCUVVFc1EwRkJSVEZFTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVWtzVlVGQlFTeERRVUZCTEVOQlFWa3NTVUZCU1RCRUxFTkJRVUZCTEVOQlFVVXNWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1ZVRkJRU3hEUVVGWExGTkJRVUVzUTBGQlFTeERRVUZYTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzVlVGQlFTeERRVUZYTEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1UwRkJRU3hEUVVGVkxGVkJRVUVzUTBGQlFTeERRVUZaTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzVTBGQlFTeERRVUZWTEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNVMEZCUVN4RFFVRlZMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1UwRkJRU3hEUVVGVkxGTkJRVUVzUTBGQlFTeERRVUZYTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzVTBGQlFTeERRVUZWTEZOQlFVRXNRMEZCUVN4RFFVRlhMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNVMEZCUVN4RFFVRlZMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1ZVRkJRU3hEUVVGWExGTkJRVUVzUTBGQlFTeERRVUZYTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzVlVGQlFTeERRVUZYTEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1ZVRkJRU3hEUVVGWExGVkJRVUVzUTBGQlFTeERRVUZaTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzVlVGQlFTeERRVUZYTEZOQlFVRXNRMEZCUVN4RFFVRlhMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRV0VzVTBGQlV6SkNMRU5CUVVGQkxFTkJRVVV4Uml4RFFVRkJRU3hEUVVGQlFTeERRVUZITEUxQlFVMHNVMEZCUVN4SFFVRlpRU3hEUVVGQlFTeERRVUZGTEVOQlFVTXNTVUZCU1N0RUxFTkJRVUZCTEVOQlFVVXNWVUZCUVN4RFFVRlhla1FzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGSkxFbEJRVWw1UkN4RFFVRkJRU3hEUVVGRkxGVkJRVUVzUTBGQlYzcEVMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCU1N4SlFVRkplVVFzUTBGQlFVRXNRMEZCUlN4VlFVRkJMRU5CUVZkNlJDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVWtzU1VGQlNYbEVMRU5CUVVGQkxFTkJRVVVzVTBGQlFTeERRVUZWZWtRc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkpMRWxCUVVsNVJDeERRVUZCUVN4RFFVRkZMRlZCUVVFc1EwRkJWM3BFTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlNTeEpRVUZKZVVRc1EwRkJRVUVzUTBGQlJTeFhRVUZCTEVOQlFWbDZSQ3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVrc1NVRkJTWGxFTEVOQlFVRkJMRU5CUVVVc1ZVRkJRU3hEUVVGWGVrUXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZKTEVsQlFVbDVSQ3hEUVVGQlFTeERRVUZGTEZWQlFVRXNRMEZCVjNwRUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGTExFTkJRVU1zU1VGQlNYbEVMRU5CUVVGQkxFTkJRVVY0UkN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZITEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVsM1JDeERRVUZCUVN4RFFVRkZlRVFzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSeXhWUVVGQkxFTkJRVUVzUTBGQldTeEpRVUZKZDBRc1EwRkJRVUVzUTBGQlJYaEVMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVY3NWVUZCUVN4RFFVRkJMRU5CUVZrc1NVRkJTWGRFTEVOQlFVRkJMRU5CUVVWNFJDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSExGVkJRVUVzUTBGQlFTeERRVUZaTEVsQlFVbDNSQ3hEUVVGQlFTeERRVUZGZUVRc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUnl4VlFVRkJMRU5CUVVFc1EwRkJXU3hKUVVGSmQwUXNRMEZCUVVFc1EwRkJSWGhFTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWNzVTBGQlFTeERRVUZCTEVOQlFWY3NTVUZCU1hkRUxFTkJRVUZCTEVOQlFVVjRSQ3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWwzUkN4RFFVRkJRU3hEUVVGRmVFUXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlJ5eFRRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRlpMRk5CUVZOdlJpeERRVUZCUVN4RFFVRkZNMFlzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4SlFVRkpSU3hEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlRTeERRVUZCUVN4RFFVRkZTU3hEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRmIwSXNRMEZCUVVFc1EwRkJSVFpDTEVOQlFVRkJMRU5CUVVVMVFpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJSeXhKUVVGSk1VTXNRMEZCUVVFc1EwRkJSVVlzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSMGNzUTBGQlFVRXNRMEZCUlVnc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUjBrc1EwRkJRVUVzUTBGQlJVb3NRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlIwc3NRMEZCUVVFc1EwRkJSVXdzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSMDBzUTBGQlFVRXNRMEZCUlU0c1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUjA4c1EwRkJRVUVzUTBGQlJWQXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlIxRXNRMEZCUVVFc1EwRkJSVklzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSMU1zUTBGQlFVRXNRMEZCUlZRc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUjI5Q0xFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZRU3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUjBFc1EwRkJRVUVzUlVGQlJ5eERRVUZCTEVOQlFVVkJMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeEZRVUZKUXl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJVUXNRMEZCUVVFc1EwRkJSWGRDTEVOQlFVRkJMRU5CUVVWNFFpeERRVUZCUVN4RFFVRkJRU3hEUVVGSExFbEJRVWt3UXl4RFFVRkJRU3hEUVVGRkwwUXNRMEZCUVVFc1EwRkJSWE5DTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWQwUWl4RFFVRkJRU3hEUVVGRmMwSXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlFTeEZRVUZMZFVJc1EwRkJRVUVzUTBGQlJYaENMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3JSQ3hEUVVGQlFTeEZRVUZCUVN4TFFVRmpMRU5CUVVFc1EwRkJRU3hMUVVGVExFTkJRVUVzUTBGQlFTeExRVUZUTEVOQlFVRXNRMEZCVHpWRUxFTkJRVUZCTEVOQlFVVnpSQ3hEUVVGQlFTeERRVUYwUTNaRUxFTkJRVUZCTEVOQlFVVnpRaXhEUVVGQlFTeERRVUZGZUVJc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCYjBNc1JVRkJRU3hEUVVGQkxFTkJRVWwxUWl4RFFVRkJRU3hEUVVGRmEwTXNRMEZCUVVFc1EwRkJSWFpFTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVWxyUkN4RFFVRkJRU3hEUVVGRlRTeERRVUZCUVN4RFFVRkZlRVFzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSeXhKUVVGSmQwTXNRMEZCUVVFc1EwRkJSWFpETEVOQlFVRkJMRU5CUVVWelJDeERRVUZCUVN4RFFVRkZiRU1zUTBGQlFVRXNRMEZCUld0RExFTkJRVUZCTEVOQlFVVk1MRU5CUVVGQkxFTkJRVVZMTEVOQlFVRkJMRU5CUVVWMFJDeERRVUZCUVN4RFFVRkZkVVFzUTBGQlFVRXNRMEZCUlc1RExFTkJRVUZCTEVOQlFVVnRReXhEUVVGQlFTeERRVUZGVGl4RFFVRkJRU3hEUVVGRlRTeERRVUZCUVN4RFFVRkJRU3hGUVVGSmJFTXNRMEZCUVVFc1EwRkJSWGhDTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWRyUlN4RFFVRkJRU3hEUVVGRk1VTXNRMEZCUVVFc1EwRkJSWGhDTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlMzZENMRU5CUVVGQkxFTkJRVVY0UWl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVdE1MRU5CUVVGQkxFTkJRVVZ4UlN4RFFVRkJRU3hEUVVGRk0wVXNRMEZCUVVFc1EwRkJSVGhGTEVOQlFVRkJMRU5CUVVWcVJpeERRVUZCUVN4RFFVRkJRU3hEUVVGSGVVVXNRMEZCUVVFc1EwRkJSWHBGTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZG5SaXhEUVVGQlFTeERRVUZGY0VVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjNkQ0xFTkJRVUZCTEVOQlFVVjRRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGSlJDeERRVUZCUVN4RFFVRkZLMFFzUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJTOUZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVYzRSU3hEUVVGQlFTeERRVUZGT1VVc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNVc3NRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJVUXNRMEZCUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJVRXNRMEZCUVVFc1EwRkJSVFJGTEVOQlFVRkJMRU5CUVVVM1JTeERRVUZCUVN4RFFVRkZWU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhWaXhEUVVGQlFTeERRVUZGUkN4RFFVRkJRU3hEUVVGRlFTeERRVUZCUVN4RFFVRkZSQ3hEUVVGQlFTeERRVUZGUVN4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkZRU3hEUVVGQlFTeERRVUZGWjBZc1EwRkJRVUVzUTBGQlJXNUZMRU5CUVVGQkxFTkJRVVZKTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzVDBGQlQyNUNMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVZHJSaXhEUVVGQlFTeERRVUZGYUVZc1EwRkJRVUVzUTBGQlJVWXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZIYTBZc1EwRkJRVUVzUTBGQlJTOUZMRU5CUVVGQkxFTkJRVVZJTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlNVRXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlIydEdMRU5CUVVGQkxFTkJRVVU1UlN4RFFVRkJRU3hEUVVGRlNpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVWxCTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWRyUml4RFFVRkJRU3hEUVVGRk4wVXNRMEZCUVVFc1EwRkJSVXdzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGSlFTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSGEwWXNRMEZCUVVFc1EwRkJSVFZGTEVOQlFVRkJMRU5CUVVWT0xFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJTVUVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSMnRHTEVOQlFVRkJMRU5CUVVVelJTeERRVUZCUVN4RFFVRkZVQ3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVsQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVkclJpeERRVUZCUVN4RFFVRkZNVVVzUTBGQlFVRXNRMEZCUlZJc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhhMFlzUTBGQlFVRXNRMEZCUlhwRkxFTkJRVUZCTEVOQlFVVlVMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCU1VFc1EwRkJRVUVzUTBGQlJTeEpRVUZKTWtZc1EwRkJRVUVzUTBGQlJTeFRRVUZUTlVZc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4VFFVRlRReXhEUVVGQlFTeERRVUZGUVN4RFFVRkJRU3hEUVVGRlJ5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhMRWxCUVVsRExFTkJRVUZCTEVOQlFVVktMRWxCUVVGQkxFTkJRVXNzUjBGQlJ5eFRRVUZCTEVkQlFWbEVMRU5CUVVGQkxFVkJRVWNzVTBGQlFTeEhRVUZaUVN4RFFVRkJRU3hEUVVGRkxFMUJRVTBzU1VGQlNXTXNTMEZCUVVFc1EwRkJUVkFzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhKUVVGSlJDeERRVUZCUVN4RFFVRkZSaXhEUVVGQlFTeEZRVUZITEVWQlFVRXNRMEZCUnl4TlFVRkJMRU5CUVU5RExFTkJRVUZCTEVOQlFVVk9MRU5CUVVGQkxFTkJRVVUwUlN4SlFVRkJRU3hEUVVGTE1VVXNTVUZCUVVFc1EwRkJTMFFzUTBGQlFVRXNRMEZCUlVjc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUlVGQlNVZ3NTVUZCUVVFc1JVRkJUWFZFTEVOQlFVRkJMRU5CUVVWdVJDeERRVUZCUVN4RFFVRkZNa1FzUTBGQlFVRXNRMEZCUlRORUxFTkJRVUZCTEVOQlFVVjNSQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSM2hFTEVOQlFVRkJMRU5CUVVWclJDeERRVUZCUVN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlJXeEVMRU5CUVVGQkxFTkJRVVV5UXl4RFFVRkJRU3hEUVVGRk9VTXNRMEZCUVVFc1EwRkJSVWNzUTBGQlFVRXNRMEZCUlVnc1EwRkJRVUVzUTBGQlJVY3NRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJXdEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZHNSQ3hEUVVGQlFTeERRVUZGTmtNc1EwRkJRVUVzUTBGQlJYZERMRU5CUVVGQkxFTkJRVVZ5Uml4RFFVRkJRU3hEUVVGRmNVUXNRMEZCUVVFc1EwRkJSU3hUUVVGVE0wUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eFBRVUZQUVN4RFFVRkJRU3hEUVVGRmIwUXNTMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCVXpsRExFTkJRVUZCTEVOQlFVVnpSQ3hEUVVGQlFTeERRVUZGT0VJc1EwRkJRVUVzUTBGQlJYQkdMRU5CUVVGQkxFTkJRVVZ2UkN4RFFVRkJRU3hEUVVGRkxGTkJRVk14UkN4RFFVRkJRU3hEUVVGRlJ5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEU5QlFVOHNVMEZCVTB3c1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVVVzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKTEVsQlFVbERMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hGUVVGSlRpeERRVUZCUVN4RFFVRkZMRWRCUVVFc1IwRkJUU3hGUVVGQkxFVkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVZFBMRU5CUVVGQkxFTkJRVVZRTEVOQlFVRkJMRU5CUVVWRkxFTkJRVUZCTEVOQlFVVklMRU5CUVVGQkxFTkJRVVZYTEUxQlFVRkJMRVZCUVZGS0xFTkJRVUZCTEVWQlFVZFFMRU5CUVVGQkxFTkJRVVZaTEVsQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJRVWNzU1VGQlNWb3NRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNSMEZCU1N4RFFVRkJMRU5CUVVFc1JVRkJTU3hIUVVGQkxFVkJRVXNzUlVGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlIwUXNRMEZCUVVFc1EwRkJSVThzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhWUVVGQkxFTkJRVmRETEVOQlFVRkJMRU5CUVVWU0xFTkJRVUZCTEVOQlFVVlBMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVVVzVlVGQlFTeERRVUZYTEVOQlFVRXNRMEZCUlVZc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVkJMRU5CUVVGQkxFTkJRVVZPTEVOQlFVRkJMRU5CUVVWWExFMUJRVUZCTEVOQlFVOU1MRU5CUVVGQkxFVkJRVWNzUlVGQlFTeERRVUZIUml4RFFVRkJRU3hEUVVGRmRVWXNRMEZCUVVFc1EwRkJSVE5HTEVOQlFVRkJMRU5CUVVWdlJDeExRVUZCUVN4RFFVRk5PVU1zUTBGQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCU1VZc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4TlFVRk5MRk5CUVVFc1IwRkJXVU1zUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWRUxFTkJRVUZCTEVOQlFVVkJMRU5CUVVGQkxFVkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVY3dSU3hEUVVGQlFTeERRVUZGTVVVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUnpKRkxFTkJRVUZCTEVOQlFVVXpSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhNRVVzUTBGQlFVRXNRMEZCUlRGRkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVjeVJTeERRVUZCUVN4RFFVRkZNMFVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSekJGTEVOQlFVRkJMRU5CUVVVeFJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSE1rVXNRMEZCUVVFc1EwRkJSVE5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWN3UlN4RFFVRkJRU3hEUVVGRk1VVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlJ6SkZMRU5CUVVGQkxFTkJRVVV6UlN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZITUVVc1EwRkJRVUVzUTBGQlJURkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVY3lSU3hEUVVGQlFTeERRVUZGTTBVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUnpCRkxFTkJRVUZCTEVOQlFVVXhSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhNa1VzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhEUVVGRE0wVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlJ6QkZMRU5CUVVGQkxFTkJRVVV4UlN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZITWtVc1EwRkJRVUVzUTBGQlJUTkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVY3dSU3hEUVVGQlFTeERRVUZGTVVVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUnpKRkxFTkJRVUZCTEVOQlFVVXpSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhNRVVzUTBGQlFVRXNRMEZCUlRGRkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVjeVJTeERRVUZCUVN4RFFVRkZNMFVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSekJGTEVOQlFVRkJMRU5CUVVVeFJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSE1rVXNRMEZCUVVFc1EwRkJSVE5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWN3UlN4RFFVRkJRU3hEUVVGRk1VVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlJ6SkZMRU5CUVVGQkxFTkJRVVV6UlN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZITUVVc1EwRkJRVUVzUTBGQlJURkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVY3lSU3hEUVVGQlFTeERRVUZGTTBVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUnpCRkxFTkJRVUZCTEVOQlFVVXhSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhNa1VzUTBGQlFVRXNRMEZCUlRORkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVjd1JTeERRVUZCUVN4RFFVRkZNVVVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSekpGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVFZhTEVOQlFXZGhMMFVzUTBGQlFVRXNRMEZCUlVjc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlVvc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJTVXNzUTBGQlFVRXNRMEZCUlRSRExFTkJRVUZCTEVOQlFVVjNReXhEUVVGQlFTeERRVUZGZWtZc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBzc1EwRkJRVUVzUTBGQlJUQkRMRU5CUVVGQkxFTkJRVVVzU1VGQlFTeERRVUZMTVVNc1EwRkJRVUVzUTBGQlJXZEVMRU5CUVVGQkxFTkJRVVVzVTBGQlFTeEhRVUZaY2tRc1EwRkJRVUVzUTBGQlJTeEhRVUZCTEVOQlFVa3NSMEZCUVN4RFFVRkpTeXhEUVVGQlFTeERRVUZGYVVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVkb1JDeERRVUZCUVN4RFFVRkZjMFVzVDBGQlFVRXNSVUZCVTNaRkxFTkJRVUZCTEVOQlFVVjVSQ3hEUVVGQlFTeERRVUZGTDBNc1EwRkJRVUVzUTBGQlJTeFRRVUZCTEVOQlFWVlVMRU5CUVVGQkxFTkJRVVZ6UlN4UFFVRkJRU3hEUVVGUmRrVXNRMEZCUVVFc1EwRkJSV3RFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVbHNSQ3hEUVVGQlFTeERRVUZGTEU5QlFVOW5RaXhEUVVGQlFTeERRVUZGY2tJc1EwRkJRVUVzUTBGQlJVUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJkbmhDTEVOQlFUQjRRbTFDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWQ1UlN4RFFVRkJRU3hEUVVGRkxFTkJRVU1zU1VGQlNUbENMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZMRXRCUVVFc1EwRkJRU3hEUVVGUExFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1ZVRkJRU3hEUVVGWExFdEJRVUVzUTBGQlFTeERRVUZQTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzVlVGQlFTeERRVUZYTEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZMRXRCUVVFc1EwRkJRU3hEUVVGUExFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRkxGVkJRVUVzUTBGQlFTeERRVUZaTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzVlVGQlFTeERRVUZYTEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNWVUZCUVN4RFFVRlhMRXRCUVVFc1EwRkJRU3hEUVVGUExFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRkxFZEJRVUVzUTBGQlFTeERRVUZMTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGTEVkQlFVRXNRMEZCUVN4RFFVRkxMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRkxGVkJRVUVzUTBGQlFTeERRVUZaTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGTEZWQlFVRXNRMEZCUVN4RFFVRlpMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNWVUZCUVN4RFFVRlhMRWRCUVVFc1EwRkJRU3hEUVVGTExFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1ZVRkJRU3hEUVVGWExFdEJRVUVzUTBGQlFTeERRVUZQTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzVlVGQlFTeERRVUZYTEV0QlFVRXNRMEZCUVN4RFFVRlBMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNWVUZCUVN4RFFVRlhMRXRCUVVFc1EwRkJRU3hEUVVGUExFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1ZVRkJRU3hEUVVGWExFZEJRVUVzUTBGQlFTeERRVUZMTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGTEV0QlFVRXNRMEZCUVN4RFFVRlBMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNWVUZCUVN4RFFVRlhMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1ZVRkJRU3hEUVVGWExGVkJRVUVzUTBGQlFTeERRVUZaTEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzVlVGQlFTeERRVUZYTEV0QlFVRXNRMEZCUVN4RFFVRlBMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZMRlZCUVVFc1EwRkJRU3hEUVVGWkxFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1ZVRkJRU3hEUVVGWExGVkJRVUVzUTBGQlFTeERRVUZCTEVOQlFXRXJRaXhEUVVGQlFTeERRVUZGTEVOQlFVTXNRMEZCUXl4RFFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVY3NSVUZCUVN4RFFVRkJMRU5CUVVrc1EwRkJReXhEUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZITEVWQlFVRXNRMEZCUnl4RlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVWNzUTBGQlF5eEZRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkZMRVZCUVVFc1EwRkJSeXhGUVVGQkxFTkJRVWNzUlVGQlFTeERRVUZCTEVOQlFVa3NRMEZCUXl4RlFVRkJMRU5CUVVjc1JVRkJRU3hEUVVGSExFVkJRVUVzUTBGQlJ5eEZRVUZCTEVOQlFVY3NSVUZCUVN4RFFVRkJMRU5CUVVrc1EwRkJReXhGUVVGQkxFTkJRVWNzUlVGQlFTeERRVUZITEVWQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlN5eFRRVUZUUXl4RFFVRkJRU3hEUVVGRkwwWXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKUXl4RFFVRkJRU3hEUVVGRlJTeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJSeXhKUVVGSlJpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWQkxFTkJRVUZCTEVWQlFVY3NRMEZCUVN4RFFVRkZSU3hEUVVGQlFTeERRVUZGUml4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVOQlFVTXNTVUZCU1RoRUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSExFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZITEVsQlFVbEJMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkhMRWxCUVVsQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSExFbEJRVWxCTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVa3NUMEZCVHpWRUxFTkJRVUZCTEVOQlFVVXNVMEZCVXpaR0xFTkJRVUZCTEVOQlFVVm9SeXhEUVVGQlFTeERRVUZCUVN4RFFVRkhMRWxCUVVsRExFTkJRVUZCTEVOQlFVVkZMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZITEVsQlFVbEdMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGUVN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJVRXNRMEZCUVVFc1JVRkJSeXhEUVVGQkxFTkJRVVZGTEVOQlFVRkJMRU5CUVVWR0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRUxFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZHRSQ3hMUVVGQlFTeEZRVUZCUVN4RFFVRlJMRTlCUVU5cVJDeERRVUZCUVN4RFFVRkZMRk5CUVZNNFJpeEZRVUZCUVN4RFFVRkhha2NzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUnl4SlFVRkpSU3hEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlRTeERRVUZCUVN4RFFVRkZTU3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVY3NSMEZCUnl4SlFVRkJMRWRCUVU5eVFpeERRVUZCUVN4RFFVRkZMRWxCUVVsSkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZRU3hEUVVGQlFTeERRVUZGU2l4RFFVRkJRU3hEUVVGRlZ5eE5RVUZCUVN4RFFVRlBVQ3hEUVVGQlFTeEZRVUZITEVOQlFVRXNRMEZCUlVnc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBjc1EwRkJRVUVzUjBGQlNTeERRVUZCTEVWQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJTVUVzUTBGQlFVRXNSMEZCU1N4RFFVRkJMRVZCUVVjc1EwRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZIYTBZc1EwRkJRVUVzUTBGQlJYSkdMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZEhMRU5CUVVGQkxFZEJRVWtzUTBGQlFTeEZRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVsQkxFTkJRVUZCTEVkQlFVa3NRMEZCUVN4RlFVRkhMRU5CUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlJ5eEpRVUZKTWtRc1EwRkJRVUVzUTBGQlJTOUVMRU5CUVVGQkxFTkJRVVZKTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWRLTEVOQlFVRkJMRU5CUVVWSkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVc3NTVUZCU1VRc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVkJMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZIUVN4RFFVRkJRU3hGUVVGSExFTkJRVUVzUTBGQlJTeERRVUZETEVsQlFVbEhMRU5CUVVGQkxFTkJRVVY1Uml4RFFVRkJRU3hGUVVGQlFTeERRVUZKTTBZc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVkJMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGUVN4RFFVRkJRU3hGUVVGSExFTkJRVUVzUTBGQlJXZENMRU5CUVVGQkxFTkJRVVZvUWl4RFFVRkJRU3hEUVVGQlFTeEZRVUZKUnl4RFFVRkJRU3hEUVVGRlRpeERRVUZCUVN4RFFVRkZSeXhEUVVGQlFTeERRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJRU3hEUVVGSFNTeERRVUZCUVN4RFFVRkZVQ3hEUVVGQlFTeERRVUZGUnl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkhTeXhEUVVGQlFTeERRVUZGVWl4RFFVRkJRU3hEUVVGRlJ5eERRVUZCUVN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVUZIVFN4RFFVRkJRU3hEUVVGRlZDeERRVUZCUVN4RFFVRkZSeXhEUVVGQlFTeERRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJRU3hEUVVGSFdTeERRVUZCUVN4RFFVRkZaaXhEUVVGQlFTeERRVUZGUnl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkhMRWxCUVVreVJDeERRVUZCUVN4RFFVRkZlRVFzUTBGQlFVRXNRMEZCUlhWRkxFTkJRVUZCTEVOQlFVVjBSU3hEUVVGQlFTeERRVUZGYzBVc1EwRkJRVUVzUTBGQlJYSkZMRU5CUVVGQkxFTkJRVVZ4UlN4RFFVRkJRU3hEUVVGRmNFVXNRMEZCUVVFc1EwRkJSVzlGTEVOQlFVRkJMRU5CUVVVNVJDeERRVUZCUVN4RFFVRkZPRVFzUTBGQlFVRXNRMEZCUlhaRkxFTkJRVUZCTEVOQlFVVjNSU3hEUVVGQlFTeERRVUZGZGtVc1EwRkJRVUVzUTBGQlJYVkZMRU5CUVVGQkxFTkJRVVYwUlN4RFFVRkJRU3hEUVVGRmMwVXNRMEZCUVVFc1EwRkJSWEpGTEVOQlFVRkJMRU5CUVVWeFJTeERRVUZCUVN4RFFVRkZMMFFzUTBGQlFVRXNRMEZCUlN0RUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWtzU1VGQlNUTkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGUVN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJVRXNRMEZCUVVFc1JVRkJSeXhEUVVGQkxFTkJRVVZwUWl4RFFVRkJRU3hEUVVGRmFrSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIydEdMRU5CUVVGQkxFTkJRVVZzUlN4RFFVRkJRU3hEUVVGQlFTeERRVUZIYUVJc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVWQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVVjMlJDeERRVUZCUVN4RFFVRkZOME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSMmhDTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hGUVVGSExFTkJRVUVzUTBGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVrc1NVRkJTVUVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZRU3hEUVVGQlFTeEZRVUZITEVOQlFVRXNRMEZCUlN4SlFVRkpReXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVkJMRU5CUVVGQkxFVkJRVWNzUTBGQlFTeERRVUZGU2l4RFFVRkJRU3hEUVVGRlJ5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSGFVWXNRMEZCUVVFc1EwRkJSWEpHTEVOQlFVRkJMRU5CUVVWSExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVkblFpeERRVUZCUVN4RFFVRkZha0lzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNTeEpRVUZKUVN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJVRXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVZCTEVOQlFVRkJMRVZCUVVjc1EwRkJRU3hEUVVGRkxFbEJRVWxETEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRlFTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSVUVzUTBGQlFVRXNSVUZCUnl4RFFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSVU1zUTBGQlFVRXNSVUZCUnl4RFFVRkJMRU5CUVVFc1EwRkJSelJFTEVOQlFVRkJMRU5CUVVWb1JTeERRVUZCUVN4RFFVRkZSeXhEUVVGQlFTeERRVUZCUVN4RFFVRkhReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhlVVlzUTBGQlFVRXNRMEZCUlRGR0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVkRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWtzU1VGQlNVUXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVZCTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRlFTeERRVUZCUVN4RlFVRkhMRU5CUVVFc1EwRkJSU3hKUVVGSlF5eERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWQkxFTkJRVUZCTEVWQlFVY3NRMEZCUVN4RFFVRkZTaXhEUVVGQlFTeERRVUZGUnl4RFFVRkJRU3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZIYVVZc1EwRkJRVUVzUTBGQlJXaEdMRU5CUVVGQkxFTkJRVVZHTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzU1VGQlNUQkVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZDZSQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkhSaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNSVUZCUnl4RFFVRkJMRU5CUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSM2xGTEVOQlFVRkJMRU5CUVVWNFJTeERRVUZCUVN4RFFVRkJRU3hEUVVGSFJpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1JVRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIzbEZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZDRSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhSaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNSVUZCUnl4RFFVRkJMRU5CUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSekJGTEVOQlFVRkJMRU5CUVVWNlJTeERRVUZCUVN4RFFVRkJRU3hEUVVGSFJpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1JVRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ6QkZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVrNVJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVUZIY1VZc1EwRkJRVUVzUTBGQlJYSkdMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVVjMFJpeERRVUZCUVN4RFFVRkZNVVlzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNTeFBRVUZQUml4RFFVRkJRU3hEUVVGRkxGTkJRVk5wUnl4RlFVRkJRU3hEUVVGSGJFY3NRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKUXl4RFFVRkJRU3hEUVVGRlJTeERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJTeERRVUZETEVOQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUlN4RFFVRkRMRlZCUVVFc1EwRkJWMDRzUTBGQlFVRXNRMEZCUlVFc1EwRkJRVUVzUTBGQlJTeFZRVUZCTEVOQlFWY3NUMEZCUVN4RFFVRkJMRU5CUVZNc1NVRkJTVU1zUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWQkxFTkJRVUZCTEVWQlFVY3NRMEZCUVN4RFFVRkZRU3hEUVVGQlFTeEZRVUZCUVN4RFFVRkpMRU5CUVVFc1IwRkJTMFVzUTBGQlFVRXNRMEZCUlVjc1EwRkJRVUVzUTBGQlJVd3NRMEZCUVVFc1JVRkJSeXhEUVVGQkxFTkJRVUVzUjBGQlN5eERRVUZCTEVOQlFVVkJMRU5CUVVGQkxFTkJRVVVzUjBGQlFTeERRVUZCTEVWQlFVMHNRMEZCUVN4SFFVRkpSeXhEUVVGQlFTeEhRVUZKUXl4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1JVRkJSeXhEUVVGQkxFTkJRVUVzUlVGQlNVUXNRMEZCUVVFc1JVRkJSeXhEUVVGQkxFVkJRVWRETEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRVZCUVVjc1EwRkJRU3hEUVVGQkxFTkJRVWNzVDBGQlQwRXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFZEJRVWxCTEVOQlFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RlFVRkpSQ3hEUVVGQlFTeERRVUZGTEVOQlFVTlRMRXRCUVVGQkxFTkJRVTFVTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSU3hEUVVGRFFTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVWxUTEUxQlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJWWXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eFRRVUZUSzBZc1JVRkJRVUVzUTBGQlIyNUhMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NUMEZCVDFNc1EwRkJRVUVzUTBGQlJYbEdMRVZCUVVGQkxFTkJRVWRzUnl4RFFVRkJRU3hEUVVGRll5eE5RVUZCUVN4RFFVRkJRU3hEUVVGUlpDeERRVUZCUVN4RFFVRkJRU3hEUVVGSExGTkJRVk52Unl4RlFVRkJRU3hEUVVGSGNFY3NRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhKUVVGSlJTeERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGT0VZc1JVRkJRVUVzUTBGQlIycEhMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZEpMRU5CUVVGQkxFTkJRVVZLTEVOQlFVRkJMRWRCUVVrc1EwRkJRU3hEUVVGRlN5eERRVUZCUVN4RFFVRkJRU3hEUVVGSFJDeERRVUZCUVN4RFFVRkJRU3hEUVVGSFJDeERRVUZCUVN4RFFVRkZTeXhEUVVGQlFTeERRVUZGVEN4RFFVRkJRU3hEUVVGRlNpeERRVUZCUVN4RFFVRkJRU3hGUVVGSllTeExRVUZCUVN4RFFVRk5SaXhOUVVGQlFTeERRVUZQVGl4RFFVRkJRU3hGUVVGSFFTeERRVUZCUVN4RFFVRkZMRWxCUVVsR0xFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkZRU3hEUVVGQlFTeERRVUZGUnl4RFFVRkJRU3hEUVVGRlNDeERRVUZCUVN4RlFVRkJRU3hEUVVGSlF5eERRVUZCUVN4RFFVRkZVeXhMUVVGQlFTeERRVUZOUkN4SlFVRkJRU3hEUVVGTExFTkJRVUVzUTBGQlFTeERRVUZITEU5QlFVOVNMRU5CUVVGQkxFTkJRVVZUTEV0QlFVRkJMRU5CUVUwc1NVRkJTWGRHTEVWQlFVRkJMRU5CUVVjc1UwRkJVM0pITEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzVTBGQlUwTXNRMEZCUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUlVjc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eEpRVUZKUXl4RFFVRkJRU3hEUVVGRlNpeEpRVUZCUVN4RFFVRkxTeXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUlVVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZNTEVOQlFVRkJMRVZCUVVjc1JVRkJRU3hEUVVGSExFZEJRVWNzUTBGQlFTeEhRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVVZPTEVOQlFVRkJMRU5CUVVVMFJTeEpRVUZCUVN4RFFVRkxNVVVzU1VGQlFVRXNRMEZCUzBRc1EwRkJRVUVzUTBGQlJVY3NRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1JVRkJTVWdzU1VGQlFVRXNSVUZCVFhsRExGTkJRVUZCTEVOQlFWVXNRMEZCUXl4SFFVRkhha01zUTBGQlFVRXNRMEZCUlRSR0xFOUJRVUZCTEVWQlFWTTFSaXhEUVVGQlFTeERRVUZGYlVVc1QwRkJRVUVzUTBGQlVTeE5RVUZOTEVsQlFVazVSQ3hMUVVGQlFTeERRVUZOTEN0Q1FVRkJMRU5CUVVFc1EwRkJhVU1zUjBGQlJ5eFhRVUZCTEVkQlFXTlVMRU5CUVVGQkxFTkJRVVZCTEVOQlFVRkJMRVZCUVVjc1YwRkJRU3hIUVVGalFTeERRVUZCUVN4RFFVRkZRU3hEUVVGQlFTeERRVUZGTEUxQlFVMHNTVUZCU1ZNc1MwRkJRVUVzUTBGQlRTd3dRMEZCUVN4RFFVRkJMRU5CUVRSRExFOUJRVTlVTEVOQlFVRkJMRU5CUVVWclJDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSV3hFTEVOQlFVRkJMRU5CUVVVeVF5eERRVUZCUVN4RFFVRkZPVU1zUTBGQlFVRXNRMEZCUlVjc1EwRkJRVUVzUTBGQlJVZ3NRMEZCUVVFc1EwRkJSVWNzUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSV3RFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRzUkN4RFFVRkJRU3hEUVVGRk5rTXNRMEZCUVVFc1EwRkJSVGhETEVWQlFVRkJMRU5CUVVjelJpeERRVUZCUVN4RFFVRkZjVVFzUTBGQlFVRXNRMEZCUlhGRExFTkJRVUZCTEVOQlFVVXhSaXhEUVVGQlFTeERRVUZGYzBRc1EwRkJRVUVzUTBGQlJXMURMRU5CUVVGQkxFTkJRVVY2Uml4RFFVRkJRU3hEUVVGRk5FTXNRMEZCUVVFc1EwRkJSVFpETEVOQlFVRkJMRVZCUVVGQkxFTkJRVWw2Uml4RFFVRkJRU3hEUVVGRmFVUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVZDBSQ3hEUVVGQlFTeEZRVUZITEVsQlFVa3NWVUZCUVN4RFFVRlhTeXhEUVVGQlFTeERRVUZGTUVNc1EwRkJRVUVzUTBGQlJYWkRMRU5CUVVGQkxFTkJRVVVzU1VGQlFTeERRVUZMU0N4RFFVRkJRU3hEUVVGRlowUXNRMEZCUVVFc1EwRkJSU3hIUVVGQkxFTkJRVWxvUkN4RFFVRkJRU3hEUVVGRmQwUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVZDRSQ3hEUVVGQlFTeERRVUZGYlVRc1EwRkJRVUVzUTBGQlJXNUVMRU5CUVVGQkxFTkJRVVV5UkN4RFFVRkJRU3hEUVVGRkxFMUJRVTBzU1VGQlNTeFZRVUZCTEVOQlFWY3pSQ3hEUVVGQlFTeERRVUZGTUVNc1EwRkJRVUVzUTBGQlJYWkRMRU5CUVVGQkxFTkJRVVVzU1VGQlFTeERRVUZMU0N4RFFVRkJRU3hEUVVGRlowUXNRMEZCUVVFc1EwRkJSU3hIUVVGQkxFTkJRVWxvUkN4RFFVRkJRU3hEUVVGRmQwUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVZDRSQ3hEUVVGQlFTeERRVUZGYlVRc1EwRkJRVUVzUTBGQlJXNUVMRU5CUVVGQkxFTkJRVVV5UkN4RFFVRkJRU3hEUVVGRkxFMUJRVTBzU1VGQlNTeFZRVUZCTEVOQlFWY3pSQ3hEUVVGQlFTeERRVUZGTUVNc1EwRkJRVUVzUTBGQlJYWkRMRU5CUVVGQkxFTkJRVVVzUjBGQlFTeERRVUZKU0N4RFFVRkJRU3hEUVVGRlowUXNRMEZCUVVFc1EwRkJSU3hIUVVGQkxFTkJRVWxvUkN4RFFVRkJRU3hEUVVGRmQwUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVZDRSQ3hEUVVGQlFTeERRVUZGYlVRc1EwRkJRVUVzUTBGQlJXNUVMRU5CUVVGQkxFTkJRVVV5UkN4RFFVRkJRU3hEUVVGRkxFMUJRVTBzU1VGQlNTeFZRVUZCTEVOQlFWY3pSQ3hEUVVGQlFTeERRVUZGTUVNc1EwRkJRVUVzUTBGQlJYWkRMRU5CUVVGQkxFTkJRVVVzUjBGQlFTeERRVUZKU0N4RFFVRkJRU3hEUVVGRlowUXNRMEZCUVVFc1EwRkJSU3hIUVVGQkxFTkJRVWxvUkN4RFFVRkJRU3hEUVVGRmQwUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVZDRSQ3hEUVVGQlFTeERRVUZGYlVRc1EwRkJRVUVzUTBGQlJXNUVMRU5CUVVGQkxFTkJRVVV5UkN4RFFVRkJRU3hEUVVGRkxFMUJRVTBzU1VGQlNTeFZRVUZCTEVOQlFWY3hSQ3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUjBRc1EwRkJRVUVzUTBGQlJUQkRMRU5CUVVGQkxFTkJRVVYyUXl4RFFVRkJRU3hEUVVGRkxFbEJRVUVzUTBGQlMwZ3NRMEZCUVVFc1EwRkJSV2RFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZGYUVRc1EwRkJRVUVzUTBGQlJXbEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkhha1FzUTBGQlFVRXNRMEZCUlhkRUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGSGVFUXNRMEZCUVVFc1EwRkJSVzFFTEVOQlFVRkJMRU5CUVVVc1NVRkJRU3hEUVVGTExFMUJRVTBzU1VGQlNTeFZRVUZCTEVOQlFWZHNSQ3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUjBRc1EwRkJRVUVzUTBGQlJUQkRMRU5CUVVGQkxFTkJRVVYyUXl4RFFVRkJRU3hEUVVGRkxFbEJRVUVzUTBGQlMwZ3NRMEZCUVVFc1EwRkJSV2RFTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZGYUVRc1EwRkJRVUVzUTBGQlJXbEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkhha1FzUTBGQlFVRXNRMEZCUlhkRUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGSGVFUXNRMEZCUVVFc1EwRkJSVzFFTEVOQlFVRkJMRU5CUVVVc1NVRkJRU3hEUVVGTExFMUJRVTBzU1VGQlNTeFRRVUZCTEVOQlFWVnNSQ3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJUQkRMRU5CUVVGQkxFTkJRVVYyUXl4RFFVRkJRU3hEUVVGRkxFbEJRVUVzUTBGQlMwZ3NRMEZCUVVFc1EwRkJSVEJGTEVOQlFVRkJMRU5CUVVVelJTeERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkZaMFFzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVVZvUkN4RFFVRkJRU3hEUVVGRmFVUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVZHFSQ3hEUVVGQlFTeERRVUZGZDBRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVkNFJDeERRVUZCUVN4RFFVRkZiVVFzUTBGQlFVRXNRMEZCUlc1RUxFTkJRVUZCTEVOQlFVVXlSU3hEUVVGQlFTeERRVUZGTEUxQlFVMHNTVUZCU1N4VFFVRkJMRU5CUVZVeFJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlRCRExFTkJRVUZCTEVOQlFVVjJReXhEUVVGQlFTeERRVUZGTEVsQlFVRXNRMEZCUzBnc1EwRkJRVUVzUTBGQlJUQkZMRU5CUVVGQkxFTkJRVVV6UlN4RFFVRkJRU3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGRlowUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVVm9SQ3hEUVVGQlFTeERRVUZGYVVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVkcVJDeERRVUZCUVN4RFFVRkZkMFFzUTBGQlFVRXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVWQ0UkN4RFFVRkJRU3hEUVVGRmJVUXNRMEZCUVVFc1EwRkJSVzVFTEVOQlFVRkJMRU5CUVVVeVJTeERRVUZCUVN4RFFVRkZMRTFCUVUwc1NVRkJTU3hYUVVGQkxFTkJRVmt6UlN4RFFVRkJRU3hEUVVGRk1FTXNRMEZCUVVFc1EwRkJSWFpETEVOQlFVRkJMRU5CUVVVc1NVRkJRU3hEUVVGTFJpeERRVUZCUVN4RFFVRkZSQ3hEUVVGQlFTeERRVUZGTmtVc1EwRkJRVUVzUTBGQlJUbEZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVVZuUkN4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUldoRUxFTkJRVUZCTEVOQlFVVnBSQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSMnBFTEVOQlFVRkJMRU5CUVVWM1JDeERRVUZCUVN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlIzaEVMRU5CUVVGQkxFTkJRVVZ0UkN4RFFVRkJRU3hEUVVGRkxFbEJRVUVzUTBGQlN5eE5RVUZOTEVsQlFVa3NWMEZCUVN4RFFVRlpia1FzUTBGQlFVRXNRMEZCUlRCRExFTkJRVUZCTEVOQlFVVjJReXhEUVVGQlFTeERRVUZGTEVsQlFVRXNRMEZCUzBZc1EwRkJRVUVzUTBGQlJVUXNRMEZCUVVFc1EwRkJSVFpGTEVOQlFVRkJMRU5CUVVVNVJTeERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkZaMFFzUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVVZvUkN4RFFVRkJRU3hEUVVGRmFVUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVZHFSQ3hEUVVGQlFTeERRVUZGZDBRc1EwRkJRVUVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVkNFJDeERRVUZCUVN4RFFVRkZiVVFzUTBGQlFVRXNRMEZCUlN4SlFVRkJMRU5CUVVzc1RVRkJUU3hSUVVGUkxFMUJRVTBzU1VGQlNURkRMRXRCUVVGQkxFTkJRVTFRTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWNzVDBGQlQwWXNRMEZCUVVFc1EwRkJSVzlFTEVOQlFVRkJMRU5CUVVVc1UwRkJVekZFTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkZMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1QwRkJUeXhUUVVGVFRDeERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUlN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVVGSExFbEJRVWxETEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGVFN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlIwa3NRMEZCUVVFc1EwRkJSV1lzUTBGQlFVRXNSMEZCU1N4RFFVRkJMRU5CUVVWblFpeERRVUZCUVN4RFFVRkZjRUlzUTBGQlFVRXNSMEZCU1N4RFFVRkJMRU5CUVVVc1NVRkJTVThzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVmhMRU5CUVVGQkxFVkJRVWR3UWl4RFFVRkJRU3hGUVVGSFNTeERRVUZCUVN4RFFVRkZSeXhEUVVGQlFTeEZRVUZIV1N4RFFVRkJRU3hEUVVGRmFFSXNRMEZCUVVFc1EwRkJSVFpHTEVWQlFVRkJMRU5CUVVkcVJ5eERRVUZCUVN4RFFVRkZiMFFzUzBGQlFVRXNRMEZCVFRWRExFTkJRVUZCTEVOQlFVVkJMRU5CUVVGQkxFTkJRVVZaTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWRvUWl4RFFVRkJRU3hEUVVGQlFTeERRVUZIU0N4RFFVRkJRU3hGUVVGSFNTeERRVUZCUVN4RFFVRkZMRWxCUVVsTUxFTkJRVUZCTEVOQlFVVkJMRU5CUVVGQkxFTkJRVVZ2UkN4TFFVRkJRU3hEUVVGTk5VTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIxQXNRMEZCUVVFc1JVRkJSMGtzUTBGQlFVRXNRMEZCUlV3c1EwRkJRVUVzUTBGQlJWY3NUVUZCUVVFc1EwRkJUMU1zUTBGQlFVRXNSVUZCUjNCQ0xFTkJRVUZCTEVOQlFVVlpMRWxCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVOQlFVY3NTVUZCU1Zvc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjFFc1EwRkJRVUVzUTBGQlJWQXNRMEZCUVVFc1IwRkJTU3hEUVVGQkxFZEJRVWtzUTBGQlFTeERRVUZCTEVWQlFVbExMRU5CUVVGQkxFVkJRVWRGTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJWSXNRMEZCUVVFc1EwRkJSVzlDTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFVkJRVWtzVlVGQlFTeERRVUZYYUVJc1EwRkJRVUVzUTBGQlJUWkdMRVZCUVVGQkxFTkJRVWRxUnl4RFFVRkJRU3hEUVVGRlNTeERRVUZCUVN4RFFVRkJRU3hEUVVGSExFVkJRVUVzUTBGQlIxa3NRMEZCUVVFc1EwRkJSVXdzVFVGQlFVRXNRMEZCVDBvc1EwRkJRVUVzUjBGQlNVVXNRMEZCUVVFc1EwRkJSVXdzUTBGQlFVRXNRMEZCUlUwc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVkTkxFTkJRVUZCTEVOQlFVVktMRWxCUVVGQkxFTkJRVXRJTEVOQlFVRkJMRU5CUVVWelJTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeEZRVUZMTEVWQlFVRXNRMEZCUnk5RUxFTkJRVUZCTEVOQlFVVk1MRTFCUVVGQkxFVkJRVkZLTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFVdFRMRU5CUVVGQkxFTkJRVVZLTEVsQlFVRkJMRU5CUVV0SUxFTkJRVUZCTEVOQlFVVnhSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhMRU5CUVVFc1JVRkJSeXhGUVVGQkxFVkJRVWx3UlN4RFFVRkJRU3hGUVVGSExFTkJRVUVzUTBGQlFTeERRVUZIVEN4RFFVRkJRU3hIUVVGSk5FWXNSVUZCUVVFc1EwRkJSeXhKUVVGQkxFTkJRVXMzUml4RFFVRkJRU3hEUVVGQlFTeERRVUZIVFN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZITEU5QlFVOU5MRU5CUVVGQkxFTkJRWFpWTEVOQlFUQlZhRUlzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVkhMRU5CUVVGQkxFTkJRVVZMTEVOQlFVRkJMRU5CUVVWR0xFTkJRVUZCTEVOQlFVVkdMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVsTExFTkJRVUZCTEVOQlFVVnRSU3hQUVVGQlFTeEZRVUZUZGtVc1EwRkJRVUVzUTBGQlJYbEVMRU5CUVVGQkxFTkJRVVV2UXl4RFFVRkJRU3hEUVVGRkxGTkJRVUVzUTBGQlZVNHNRMEZCUVVFc1EwRkJSVzFGTEU5QlFVRkJMRU5CUVZGMlJTeERRVUZCUVN4RFFVRkZhMFFzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlNXeEVMRU5CUVVGQkxFTkJRVVVzVDBGQlQyZENMRU5CUVVGQkxFTkJRVVZ5UWl4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkZOa01zVTBGQlFVRXNRMEZCVlhGRExFTkJRVUZCTEVOQlFVVXNVMEZCVTI1R0xFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVUZCTEVOQlFVY3NTVUZCU1VVc1EwRkJRVUVzUTBGQlJTeFRRVUZUU0N4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVsQlFVbERMRU5CUVVGQkxFTkJRVVZFTEVOQlFVRkJMRVZCUVVjc1JVRkJRU3hEUVVGSExFMUJRVTBzUTBGQlEzVkhMRkZCUVVGQkxFTkJRVk4yUml4RFFVRkJRU3hEUVVGRkxGVkJRVUVzUTBGQlYyWXNRMEZCUVVFc1EwRkJSWE5ITEZGQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVGRkxFTkJRVU14Uml4TFFVRkJRU3hEUVVGTkxFVkJRVUVzUTBGQlIwTXNUVUZCUVVFc1EwRkJUeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZKTUVZc1lVRkJRVUVzUTBGQlkzaEdMRU5CUVVGQkxFTkJRVVVzWlVGQlFTeERRVUZuUW1Zc1EwRkJRVUVzUTBGQlJYVkhMR0ZCUVVGQkxFTkJRV01zUTBGQlFTeERRVUZGTEVOQlFVTXpSaXhMUVVGQlFTeERRVUZOTEVWQlFVRXNRMEZCUjBNc1RVRkJRVUVzUTBGQlR5eERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVRGS0xFTkJRV2RMWkN4RFFVRkJRU3hGUVVGSExFVkJRVUVzUTBGQlFTeERRVUZKUXl4RFFVRkJRU3hIUVVGSlJTeERRVUZCUVN4RFFVRkZiMGNzVVVGQlFVRXNRMEZCVTNSSExFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1NVRkJTVWNzUTBGQlFVRXNRMEZCUlVzc1EwRkJRVUVzUTBGQlJUQkdMRVZCUVVGQkxFTkJRVWRvUnl4RFFVRkJRU3hEUVVGRmIwY3NVVUZCUVVFc1EwRkJRVUVzUTBGQlZVb3NSVUZCUVVFc1EwRkJSMmhITEVOQlFVRkJMRU5CUVVWeFJ5eGhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZuUWl4SFFVRkhMRU5CUVVFc1IwRkJTWEpITEVOQlFVRkJMRU5CUVVWeFJ5eGhRVUZCUVN4RFFVRmpNVVlzVFVGQlFVRXNSVUZCVVN4RFFVRkJMRWRCUVVsWUxFTkJRVUZCTEVOQlFVVnZSeXhSUVVGQlFTeERRVUZUZWtZc1RVRkJRVUVzUTBGQlR5eERRVUZETEVsQlFVa3NTVUZCU1ZRc1EwRkJRVUVzUTBGQlJTdEdMRVZCUVVGQkxFTkJRVWRvUnl4RFFVRkJRU3hEUVVGRlJpeEpRVUZCUVN4RFFVRkxPRU1zUTBGQlFVRXNSMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJSekZETEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGRlFTeERRVUZCUVN4RFFVRkZSQ3hEUVVGQlFTeERRVUZGVFN4TlFVRkJRU3hEUVVGUFRDeERRVUZCUVN4RlFVRkhTaXhKUVVGQlFTeERRVUZMT0VNc1EwRkJRVUVzUjBGQlNTeERRVUZCTEVOQlFVVTVReXhKUVVGQlFTeERRVUZMWjBRc1EwRkJRVUVzUTBGQlJXaEVMRWxCUVVGQkxFTkJRVXRwUkN4RFFVRkJRU3hEUVVGRk9VTXNRMEZCUVVFc1EwRkJSU3RETEV0QlFVRkJMRU5CUVUwNVF5eERRVUZCUVN4RFFVRkZRU3hEUVVGQlFTeEZRVUZIU2l4SlFVRkJRU3hEUVVGTE9FTXNRMEZCUVVFc1IwRkJTU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZKT1VNc1NVRkJRVUVzUTBGQlMyZEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZG9SQ3hKUVVGQlFTeERRVUZMYjBJc1EwRkJRVUVzUlVGQlIzQkNMRWxCUVVGQkxFTkJRVXM0UXl4RFFVRkJRU3hEUVVGRkxFOUJRVThzUTBGQlFTeERRVUZGTEU5QlFVOHNSVUZCUVN4RFFVRkJMRU5CUVVrdlF5eERRVUZCUVN4RFFVRkZOa01zVTBGQlFVRXNRMEZCVld0RExFTkJRVUZCTEVOQlFVVXNVMEZCVTJoR0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1NVRkJTVU1zUTBGQlFVRXNRMEZCUlN4VFFVRlRSQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkhMRWxCUVVsRExFTkJRVUZCTEVOQlFVVkVMRU5CUVVGQkxFVkJRVWNzUlVGQlFTeERRVUZITEUxQlFVMHNRMEZCUTNOSExFOUJRVUZCTEVOQlFWRjBSaXhEUVVGQlFTeERRVUZGTEZOQlFVRXNRMEZCVldZc1EwRkJRVUVzUTBGQlJYRkhMRTlCUVVGQkxFTkJRVkVzUTBGQlFTeERRVUZCTEVOQlFVZERMRkZCUVVGQkxFTkJRVk1zUTBGQlF6RkdMRXRCUVVGQkxFTkJRVTBzUTBGQlF5eFZRVUZCTEVOQlFVRXNRMEZCV1VNc1RVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlFVRXNRMEZCU1RCR0xHRkJRVUZCTEVOQlFXTjRSaXhEUVVGQlFTeERRVUZGTEdWQlFVRXNRMEZCWjBKbUxFTkJRVUZCTEVOQlFVVjFSeXhoUVVGQlFTeERRVUZqTEVOQlFVRXNRMEZCUlN4RFFVRkRNMFlzUzBGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUVVkRExFMUJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVFelN5eERRVUZwVEdRc1EwRkJRVUVzUlVGQlJ5eEZRVUZCTEVOQlFVRXNRMEZCU1VVc1NVRkJRVUVzUTBGQlMybEdMRU5CUVVGQkxFTkJRVVZ1Uml4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZjMGNzVVVGQlFVRXNRMEZCUVVFc1EwRkJWU3hKUVVGSkxFbEJRVWx3Unl4RFFVRkJRU3hEUVVGRmFVY3NSVUZCUVVFc1EwRkJSMFFzUlVGQlFVRXNRMEZCUjJ4SExFTkJRVUZCTEVOQlFVVnhSeXhQUVVGQlFTeERRVUZCUVN4RFFVRlRjRWNzU1VGQlFVRXNRMEZCU3poRExFTkJRVUZCTEVkQlFVa3NRMEZCUVN4RFFVRkJMRU5CUVVjMVF5eERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlJWRXNUVUZCUVVFc1EwRkJUMUFzUTBGQlFVRXNSVUZCUjBZc1NVRkJRVUVzUTBGQlN6aERMRU5CUVVGQkxFZEJRVWtzUTBGQlFTeERRVUZGT1VNc1NVRkJRVUVzUTBGQlMyZEVMRU5CUVVGQkxFTkJRVVZvUkN4SlFVRkJRU3hEUVVGTGFVUXNRMEZCUVVFc1EwRkJSV2hFTEVOQlFVRkJMRU5CUVVWcFJDeExRVUZCUVN4RFFVRk5hRVFzUTBGQlFVRXNRMEZCUlVFc1EwRkJRVUVzUlVGQlIwWXNTVUZCUVVFc1EwRkJTemhETEVOQlFVRkJMRWRCUVVrc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlNUbERMRWxCUVVGQkxFTkJRVXRuUkN4RFFVRkJRU3hEUVVGQlFTeERRVUZIYUVRc1NVRkJRVUVzUTBGQlMyOUNMRU5CUVVGQkxFVkJRVWR3UWl4SlFVRkJRU3hEUVVGTE9FTXNRMEZCUVVFc1EwRkJSVGxETEVsQlFVRkJMRU5CUVV0eFFpeERRVUZCUVN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZKZEVJc1EwRkJRVUVzUTBGQlJUWkRMRk5CUVVGQkxFTkJRVlZ0UXl4RFFVRkJRU3hEUVVGRkxGTkJRVk5xUml4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVsQlFVbERMRU5CUVVGQkxFTkJRVVZSTEVOQlFVRkJMRU5CUVVVc1EwRkJRMGtzUzBGQlFVRXNRMEZCVFZnc1NVRkJRVUVzUTBGQlMwc3NRMEZCUVVFc1EwRkJSVFpETEV0QlFVRkJMRVZCUVVGQkxFTkJRVkYwUXl4TlFVRkJRU3hEUVVGUFdpeEpRVUZCUVN4RFFVRkxVU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhMRk5CUVZOV0xFTkJRVUZCTEVOQlFVRkJMRU5CUVVjc1NVRkJTVU1zUTBGQlFVRXNRMEZCUlVVc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVVc1EwRkJReXhEUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVVVzUTBGQlF5eFZRVUZCTEVOQlFWZE9MRU5CUVVGQkxFTkJRVVZCTEVOQlFVRkJMRU5CUVVVc1ZVRkJRU3hEUVVGWExFOUJRVUVzUTBGQlFTeERRVUZUTEVsQlFVbERMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGUVN4RFFVRkJRU3hGUVVGSExFTkJRVUVzUTBGQlJVRXNRMEZCUVVFc1JVRkJRVUVzUTBGQlNTeERRVUZCTEVkQlFVdEZMRU5CUVVGQkxFTkJRVVZITEVOQlFVRkJMRU5CUVVWTUxFTkJRVUZCTEVWQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVVzc1EwRkJRU3hEUVVGRlFTeERRVUZCUVN4RFFVRkZMRWRCUVVFc1EwRkJRU3hGUVVGTkxFTkJRVUVzUjBGQlNVY3NRMEZCUVVFc1IwRkJTVU1zUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUlVGQlJ5eERRVUZCTEVOQlFVRXNSVUZCU1VRc1EwRkJRVUVzUlVGQlJ5eERRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZCTEVOQlFVRkJMRVZCUVVjc1EwRkJRU3hEUVVGQkxFTkJRVWNzVDBGQlQwTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlIwUXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFZEJRVWxCTEVOQlFVRkJMRU5CUVVWQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4SFFVRkpMRU5CUVVFc1EwRkJRU3hGUVVGSlFTeERRVUZCUVN4RlFVRkhMRU5CUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUlN4RFFVRkRVeXhMUVVGQlFTeERRVUZOVkN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVVzUTBGQlEwRXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZKVXl4TlFVRkJRU3hEUVVGUExFTkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVldMRU5CUVVGQkxFTkJRVUZCTEVOQlFYQk9MRU5CUVhkT1NpeERRVUZCUVN4RFFVRkZkVU1zVTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQldTeFBRVUZQY2tNc1NVRkJRVUVzUTBGQlMzZEVMRU5CUVVGQkxFTkJRVVY2UkN4RFFVRkJRU3hEUVVGRldTeExRVUZCUVN4RFFVRk5XaXhEUVVGQlFTeERRVUZGWVN4TlFVRkJRU3hEUVVGUFdpeEpRVUZCUVN4RFFVRkxiMElzUTBGQlFVRXNRMEZCUlhCQ0xFbEJRVUZCTEVOQlFVdDVSQ3hEUVVGQlFTeERRVUZGZWtRc1NVRkJRVUVzUTBGQlMyZEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVZHNSQ3hEUVVGQlFTeERRVUZGZFVNc1UwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJXWFJETEVOQlFVRkJMRU5CUVdwdFJpeERRVUZ2YlVadFFpeERRVUZCUVN4RFFVRkJRU3hEUVVGSExFOUJRVThzVlVGQlFTeERRVUZYTEZOQlFWTndRaXhEUVVGQlFTeERRVUZGUVN4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkhMRWRCUVVjc1QwRkJRU3hGUVVGVFNDeERRVUZCUVN4RFFVRkZSU3hKUVVGQlFTeERRVUZMYTBZc1EwRkJRVUVzUTBGQlJTeEpRVUZKTVVJc1EwRkJRVUVzUTBGQlJURkVMRU5CUVVGQkxFTkJRVVZETEVOQlFVRkJMRU5CUVVWRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJRVkVzUjBGQlJ5eFRRVUZCTEVWQlFWZElMRU5CUVVGQkxFVkJRVWNzVTBGQlFTeEZRVUZYUVN4RFFVRkJRU3hEUVVGRlJTeEpRVUZCUVN4RFFVRkxhMFlzUTBGQlFVRXNRMEZCUlN4SlFVRkpkRUlzUTBGQlFVRXNRMEZCUlRsRUxFTkJRVUZCTEVOQlFVVkRMRU5CUVVGQkxFTkJRVVZGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlFWRXNSMEZCUnl4VFFVRkJMRVZCUVZkSUxFTkJRVUZCTEVWQlFVY3NVMEZCUVN4RlFVRlhRU3hEUVVGQlFTeERRVUZGUlN4SlFVRkJRU3hEUVVGTGEwWXNRMEZCUVVFc1EwRkJSU3hKUVVGSlVTeERRVUZCUVN4RFFVRkZOVVlzUTBGQlFVRXNRMEZCUlVNc1EwRkJRVUVzUTBGQlJVVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNTVUZCVHl4RFFVRkRMRWRCUVVjc1ZVRkJRU3hGUVVGWlNDeERRVUZCUVN4RlFVRkhMRlZCUVVFc1JVRkJXVUVzUTBGQlFVRXNSVUZCUnl4VlFVRkJMRVZCUVZsQkxFTkJRVUZCTEVWQlFVY3NWVUZCUVN4RlFVRlpRU3hEUVVGQlFTeEZRVUZITEZWQlFVRXNSVUZCV1VFc1EwRkJRVUVzUlVGQlJ5eFZRVUZCTEVWQlFWbEJMRU5CUVVGQkxFVkJRVWNzVjBGQlFTeEZRVUZoUVN4RFFVRkJRU3hGUVVGSExGZEJRVUVzUlVGQllVRXNRMEZCUVVFc1JVRkJSeXhUUVVGQkxFVkJRVmRCTEVOQlFVRkJMRVZCUVVjc1UwRkJRU3hGUVVGWFFTeERRVUZCUVN4RFFVRkZMRTFCUVUwc1NVRkJTV1VzUzBGQlFVRXNRMEZCVFZBc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjA0c1NVRkJRVUVzUTBGQlMydEdMRU5CUVVGQkxFTkJRVVVzU1VGQlNXbENMRVZCUVVGQkxFTkJRVWR5Unl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkZSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGSkxFOUJRVTlJTEVOQlFVRkJMRU5CUVVVNFF5eFRRVUZCUVN4RFFVRlZReXhOUVVGQlFTeERRVUZQTEZOQlFWTXZReXhEUVVGQlFTeERRVUZCUVN4RFFVRkhSU3hKUVVGQlFTeERRVUZMYTBZc1EwRkJRVUVzUTBGQlJYSkRMRTFCUVVGQkxFTkJRVTh2UXl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZGT0VNc1UwRkJRVUVzUTBGQlZVOHNUMEZCUVVFc1EwRkJVU3hUUVVGVGNrUXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJSeXhQUVVGUFF5eEpRVUZCUVN4RFFVRkxhMFlzUTBGQlFVRXNRMEZCUlM5Q0xFOUJRVUZCTEVOQlFWRnlSQ3hEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkpSQ3hEUVVGQlFTeERRVUZGT0VNc1UwRkJRVUVzUTBGQlZXVXNWVUZCUVVFc1EwRkJWeXhUUVVGVE4wUXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUjBRc1NVRkJRVUVzUTBGQlMydEdMRU5CUVVGQkxFTkJRVVYyUWl4VlFVRkJRU3hEUVVGWE4wUXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUlVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJTVWdzUTBGQlFVRXNRMEZCUlRoRExGTkJRVUZCTEVOQlFWVnJRaXhQUVVGQlFTeERRVUZSTEZOQlFWTm9SU3hEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEU5QlFVOURMRWxCUVVGQkxFTkJRVXRyUml4RFFVRkJRU3hEUVVGRmNFSXNUMEZCUVVFc1EwRkJVV2hGTEVOQlFVRkJMRU5CUVVWRExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWxFTEVOQlFVRkJMRU5CUVhodFFpeEZRVUZCTEVOQlFVRXNRMEZCTldoeFFpeFJRVUZCTEVWQlFVRXNUMEZCYVVKNVJ5eG5Ra0ZCUVVFc1JVRkJVeXhYUVVGQkxFVkJRVUVzVVVGQmIwSkRMRU5CUVU5QkxHZENRVUZQUkN4RFFVRlJlRWNzUTBGQlFVRXNSVUZCUVVFc1EwRkJTU3hWUVVGQkxFVkJRVUVzVDBGQmJVSXdSeXhOUVVGQlFTeEZRVUZSUVN4TlFVRkJRU3hEUVVGUFF5eEhRVUZCUVN4RFFVRkpSQ3hOUVVGQlFTeERRVUZQTVVjc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJTVVFzUTBGQlFVRXNRMEZCUlVFc1EwRkJRVUVzUlVGQlJ6WkhMRWxCUVVGQkxFVkJRVTFETEV0QlFVRkJMRU5CUVUwM1J5eERRVUZCUVN4RlFVRkJRU3hEUVVGQlFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJiblZzYkYxOSIsInZhciBfJG5hY2xGYXN0XzY1ID0geyBleHBvcnRzOiB7fSB9O1xuIWZ1bmN0aW9uKG5hY2wpe1widXNlIHN0cmljdFwiO3ZhciBnZj1mdW5jdGlvbihpbml0KXt2YXIgaSxyPW5ldyBGbG9hdDY0QXJyYXkoMTYpO2lmKGluaXQpZm9yKGk9MDtpPGluaXQubGVuZ3RoO2krKylyW2ldPWluaXRbaV07cmV0dXJuIHJ9LHJhbmRvbWJ5dGVzPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwibm8gUFJOR1wiKX0sXzA9bmV3IFVpbnQ4QXJyYXkoMTYpLF85PW5ldyBVaW50OEFycmF5KDMyKTtfOVswXT05O3ZhciBnZjA9Z2YoKSxnZjE9Z2YoWzFdKSxfMTIxNjY1PWdmKFs1NjEyOSwxXSksRD1nZihbMzA4ODMsNDk1MywxOTkxNCwzMDE4Nyw1NTQ2NywxNjcwNSwyNjM3LDExMiw1OTU0NCwzMDU4NSwxNjUwNSwzNjAzOSw2NTEzOSwxMTExOSwyNzg4NiwyMDk5NV0pLEQyPWdmKFs2MTc4NSw5OTA2LDM5ODI4LDYwMzc0LDQ1Mzk4LDMzNDExLDUyNzQsMjI0LDUzNTUyLDYxMTcxLDMzMDEwLDY1NDIsNjQ3NDMsMjIyMzksNTU3NzIsOTIyMl0pLFg9Z2YoWzU0NTU0LDM2NjQ1LDExNjE2LDUxNTQyLDQyOTMwLDM4MTgxLDUxMDQwLDI2OTI0LDU2NDEyLDY0OTgyLDU3OTA1LDQ5MzE2LDIxNTAyLDUyNTkwLDE0MDM1LDg1NTNdKSxZPWdmKFsyNjIwMCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNCwyNjIxNF0pLEk9Z2YoWzQxMTM2LDE4OTU4LDY5NTEsNTA0MTQsNTg0ODgsNDQzMzUsNjE1MCwxMjA5OSw1NTIwNywxNTg2NywxNTMsMTEwODUsNTcwOTksMjA0MTcsOTM0NCwxMTEzOV0pO2Z1bmN0aW9uIHRzNjQoeCxpLGgsbCl7eFtpXT1oPj4yNCYyNTUseFtpKzFdPWg+PjE2JjI1NSx4W2krMl09aD4+OCYyNTUseFtpKzNdPTI1NSZoLHhbaSs0XT1sPj4yNCYyNTUseFtpKzVdPWw+PjE2JjI1NSx4W2krNl09bD4+OCYyNTUseFtpKzddPTI1NSZsfWZ1bmN0aW9uIHZuKHgseGkseSx5aSxuKXt2YXIgaSxkPTA7Zm9yKGk9MDtpPG47aSsrKWR8PXhbeGkraV1eeVt5aStpXTtyZXR1cm4oMSZkLTE+Pj44KS0xfWZ1bmN0aW9uIGNyeXB0b192ZXJpZnlfMTYoeCx4aSx5LHlpKXtyZXR1cm4gdm4oeCx4aSx5LHlpLDE2KX1mdW5jdGlvbiBjcnlwdG9fdmVyaWZ5XzMyKHgseGkseSx5aSl7cmV0dXJuIHZuKHgseGkseSx5aSwzMil9ZnVuY3Rpb24gY3J5cHRvX2NvcmVfc2Fsc2EyMChvdXQsaW5wLGssYyl7IWZ1bmN0aW9uKG8scCxrLGMpe2Zvcih2YXIgdSxqMD0yNTUmY1swXXwoMjU1JmNbMV0pPDw4fCgyNTUmY1syXSk8PDE2fCgyNTUmY1szXSk8PDI0LGoxPTI1NSZrWzBdfCgyNTUma1sxXSk8PDh8KDI1NSZrWzJdKTw8MTZ8KDI1NSZrWzNdKTw8MjQsajI9MjU1JmtbNF18KDI1NSZrWzVdKTw8OHwoMjU1JmtbNl0pPDwxNnwoMjU1JmtbN10pPDwyNCxqMz0yNTUma1s4XXwoMjU1JmtbOV0pPDw4fCgyNTUma1sxMF0pPDwxNnwoMjU1JmtbMTFdKTw8MjQsajQ9MjU1JmtbMTJdfCgyNTUma1sxM10pPDw4fCgyNTUma1sxNF0pPDwxNnwoMjU1JmtbMTVdKTw8MjQsajU9MjU1JmNbNF18KDI1NSZjWzVdKTw8OHwoMjU1JmNbNl0pPDwxNnwoMjU1JmNbN10pPDwyNCxqNj0yNTUmcFswXXwoMjU1JnBbMV0pPDw4fCgyNTUmcFsyXSk8PDE2fCgyNTUmcFszXSk8PDI0LGo3PTI1NSZwWzRdfCgyNTUmcFs1XSk8PDh8KDI1NSZwWzZdKTw8MTZ8KDI1NSZwWzddKTw8MjQsajg9MjU1JnBbOF18KDI1NSZwWzldKTw8OHwoMjU1JnBbMTBdKTw8MTZ8KDI1NSZwWzExXSk8PDI0LGo5PTI1NSZwWzEyXXwoMjU1JnBbMTNdKTw8OHwoMjU1JnBbMTRdKTw8MTZ8KDI1NSZwWzE1XSk8PDI0LGoxMD0yNTUmY1s4XXwoMjU1JmNbOV0pPDw4fCgyNTUmY1sxMF0pPDwxNnwoMjU1JmNbMTFdKTw8MjQsajExPTI1NSZrWzE2XXwoMjU1JmtbMTddKTw8OHwoMjU1JmtbMThdKTw8MTZ8KDI1NSZrWzE5XSk8PDI0LGoxMj0yNTUma1syMF18KDI1NSZrWzIxXSk8PDh8KDI1NSZrWzIyXSk8PDE2fCgyNTUma1syM10pPDwyNCxqMTM9MjU1JmtbMjRdfCgyNTUma1syNV0pPDw4fCgyNTUma1syNl0pPDwxNnwoMjU1JmtbMjddKTw8MjQsajE0PTI1NSZrWzI4XXwoMjU1JmtbMjldKTw8OHwoMjU1JmtbMzBdKTw8MTZ8KDI1NSZrWzMxXSk8PDI0LGoxNT0yNTUmY1sxMl18KDI1NSZjWzEzXSk8PDh8KDI1NSZjWzE0XSk8PDE2fCgyNTUmY1sxNV0pPDwyNCx4MD1qMCx4MT1qMSx4Mj1qMix4Mz1qMyx4ND1qNCx4NT1qNSx4Nj1qNix4Nz1qNyx4OD1qOCx4OT1qOSx4MTA9ajEwLHgxMT1qMTEseDEyPWoxMix4MTM9ajEzLHgxND1qMTQseDE1PWoxNSxpPTA7aTwyMDtpKz0yKXgwXj0odT0oeDEyXj0odT0oeDhePSh1PSh4NF49KHU9eDAreDEyfDApPDw3fHU+Pj4yNSkreDB8MCk8PDl8dT4+PjIzKSt4NHwwKTw8MTN8dT4+PjE5KSt4OHwwKTw8MTh8dT4+PjE0LHg1Xj0odT0oeDFePSh1PSh4MTNePSh1PSh4OV49KHU9eDUreDF8MCk8PDd8dT4+PjI1KSt4NXwwKTw8OXx1Pj4+MjMpK3g5fDApPDwxM3x1Pj4+MTkpK3gxM3wwKTw8MTh8dT4+PjE0LHgxMF49KHU9KHg2Xj0odT0oeDJePSh1PSh4MTRePSh1PXgxMCt4NnwwKTw8N3x1Pj4+MjUpK3gxMHwwKTw8OXx1Pj4+MjMpK3gxNHwwKTw8MTN8dT4+PjE5KSt4MnwwKTw8MTh8dT4+PjE0LHgxNV49KHU9KHgxMV49KHU9KHg3Xj0odT0oeDNePSh1PXgxNSt4MTF8MCk8PDd8dT4+PjI1KSt4MTV8MCk8PDl8dT4+PjIzKSt4M3wwKTw8MTN8dT4+PjE5KSt4N3wwKTw8MTh8dT4+PjE0LHgwXj0odT0oeDNePSh1PSh4Ml49KHU9KHgxXj0odT14MCt4M3wwKTw8N3x1Pj4+MjUpK3gwfDApPDw5fHU+Pj4yMykreDF8MCk8PDEzfHU+Pj4xOSkreDJ8MCk8PDE4fHU+Pj4xNCx4NV49KHU9KHg0Xj0odT0oeDdePSh1PSh4Nl49KHU9eDUreDR8MCk8PDd8dT4+PjI1KSt4NXwwKTw8OXx1Pj4+MjMpK3g2fDApPDwxM3x1Pj4+MTkpK3g3fDApPDwxOHx1Pj4+MTQseDEwXj0odT0oeDlePSh1PSh4OF49KHU9KHgxMV49KHU9eDEwK3g5fDApPDw3fHU+Pj4yNSkreDEwfDApPDw5fHU+Pj4yMykreDExfDApPDwxM3x1Pj4+MTkpK3g4fDApPDwxOHx1Pj4+MTQseDE1Xj0odT0oeDE0Xj0odT0oeDEzXj0odT0oeDEyXj0odT14MTUreDE0fDApPDw3fHU+Pj4yNSkreDE1fDApPDw5fHU+Pj4yMykreDEyfDApPDwxM3x1Pj4+MTkpK3gxM3wwKTw8MTh8dT4+PjE0O3gwPXgwK2owfDAseDE9eDErajF8MCx4Mj14MitqMnwwLHgzPXgzK2ozfDAseDQ9eDQrajR8MCx4NT14NStqNXwwLHg2PXg2K2o2fDAseDc9eDcrajd8MCx4OD14OCtqOHwwLHg5PXg5K2o5fDAseDEwPXgxMCtqMTB8MCx4MTE9eDExK2oxMXwwLHgxMj14MTIrajEyfDAseDEzPXgxMytqMTN8MCx4MTQ9eDE0K2oxNHwwLHgxNT14MTUrajE1fDAsb1swXT14MD4+PjAmMjU1LG9bMV09eDA+Pj44JjI1NSxvWzJdPXgwPj4+MTYmMjU1LG9bM109eDA+Pj4yNCYyNTUsb1s0XT14MT4+PjAmMjU1LG9bNV09eDE+Pj44JjI1NSxvWzZdPXgxPj4+MTYmMjU1LG9bN109eDE+Pj4yNCYyNTUsb1s4XT14Mj4+PjAmMjU1LG9bOV09eDI+Pj44JjI1NSxvWzEwXT14Mj4+PjE2JjI1NSxvWzExXT14Mj4+PjI0JjI1NSxvWzEyXT14Mz4+PjAmMjU1LG9bMTNdPXgzPj4+OCYyNTUsb1sxNF09eDM+Pj4xNiYyNTUsb1sxNV09eDM+Pj4yNCYyNTUsb1sxNl09eDQ+Pj4wJjI1NSxvWzE3XT14ND4+PjgmMjU1LG9bMThdPXg0Pj4+MTYmMjU1LG9bMTldPXg0Pj4+MjQmMjU1LG9bMjBdPXg1Pj4+MCYyNTUsb1syMV09eDU+Pj44JjI1NSxvWzIyXT14NT4+PjE2JjI1NSxvWzIzXT14NT4+PjI0JjI1NSxvWzI0XT14Nj4+PjAmMjU1LG9bMjVdPXg2Pj4+OCYyNTUsb1syNl09eDY+Pj4xNiYyNTUsb1syN109eDY+Pj4yNCYyNTUsb1syOF09eDc+Pj4wJjI1NSxvWzI5XT14Nz4+PjgmMjU1LG9bMzBdPXg3Pj4+MTYmMjU1LG9bMzFdPXg3Pj4+MjQmMjU1LG9bMzJdPXg4Pj4+MCYyNTUsb1szM109eDg+Pj44JjI1NSxvWzM0XT14OD4+PjE2JjI1NSxvWzM1XT14OD4+PjI0JjI1NSxvWzM2XT14OT4+PjAmMjU1LG9bMzddPXg5Pj4+OCYyNTUsb1szOF09eDk+Pj4xNiYyNTUsb1szOV09eDk+Pj4yNCYyNTUsb1s0MF09eDEwPj4+MCYyNTUsb1s0MV09eDEwPj4+OCYyNTUsb1s0Ml09eDEwPj4+MTYmMjU1LG9bNDNdPXgxMD4+PjI0JjI1NSxvWzQ0XT14MTE+Pj4wJjI1NSxvWzQ1XT14MTE+Pj44JjI1NSxvWzQ2XT14MTE+Pj4xNiYyNTUsb1s0N109eDExPj4+MjQmMjU1LG9bNDhdPXgxMj4+PjAmMjU1LG9bNDldPXgxMj4+PjgmMjU1LG9bNTBdPXgxMj4+PjE2JjI1NSxvWzUxXT14MTI+Pj4yNCYyNTUsb1s1Ml09eDEzPj4+MCYyNTUsb1s1M109eDEzPj4+OCYyNTUsb1s1NF09eDEzPj4+MTYmMjU1LG9bNTVdPXgxMz4+PjI0JjI1NSxvWzU2XT14MTQ+Pj4wJjI1NSxvWzU3XT14MTQ+Pj44JjI1NSxvWzU4XT14MTQ+Pj4xNiYyNTUsb1s1OV09eDE0Pj4+MjQmMjU1LG9bNjBdPXgxNT4+PjAmMjU1LG9bNjFdPXgxNT4+PjgmMjU1LG9bNjJdPXgxNT4+PjE2JjI1NSxvWzYzXT14MTU+Pj4yNCYyNTV9KG91dCxpbnAsayxjKX1mdW5jdGlvbiBjcnlwdG9fY29yZV9oc2Fsc2EyMChvdXQsaW5wLGssYyl7IWZ1bmN0aW9uKG8scCxrLGMpe2Zvcih2YXIgdSx4MD0yNTUmY1swXXwoMjU1JmNbMV0pPDw4fCgyNTUmY1syXSk8PDE2fCgyNTUmY1szXSk8PDI0LHgxPTI1NSZrWzBdfCgyNTUma1sxXSk8PDh8KDI1NSZrWzJdKTw8MTZ8KDI1NSZrWzNdKTw8MjQseDI9MjU1JmtbNF18KDI1NSZrWzVdKTw8OHwoMjU1JmtbNl0pPDwxNnwoMjU1JmtbN10pPDwyNCx4Mz0yNTUma1s4XXwoMjU1JmtbOV0pPDw4fCgyNTUma1sxMF0pPDwxNnwoMjU1JmtbMTFdKTw8MjQseDQ9MjU1JmtbMTJdfCgyNTUma1sxM10pPDw4fCgyNTUma1sxNF0pPDwxNnwoMjU1JmtbMTVdKTw8MjQseDU9MjU1JmNbNF18KDI1NSZjWzVdKTw8OHwoMjU1JmNbNl0pPDwxNnwoMjU1JmNbN10pPDwyNCx4Nj0yNTUmcFswXXwoMjU1JnBbMV0pPDw4fCgyNTUmcFsyXSk8PDE2fCgyNTUmcFszXSk8PDI0LHg3PTI1NSZwWzRdfCgyNTUmcFs1XSk8PDh8KDI1NSZwWzZdKTw8MTZ8KDI1NSZwWzddKTw8MjQseDg9MjU1JnBbOF18KDI1NSZwWzldKTw8OHwoMjU1JnBbMTBdKTw8MTZ8KDI1NSZwWzExXSk8PDI0LHg5PTI1NSZwWzEyXXwoMjU1JnBbMTNdKTw8OHwoMjU1JnBbMTRdKTw8MTZ8KDI1NSZwWzE1XSk8PDI0LHgxMD0yNTUmY1s4XXwoMjU1JmNbOV0pPDw4fCgyNTUmY1sxMF0pPDwxNnwoMjU1JmNbMTFdKTw8MjQseDExPTI1NSZrWzE2XXwoMjU1JmtbMTddKTw8OHwoMjU1JmtbMThdKTw8MTZ8KDI1NSZrWzE5XSk8PDI0LHgxMj0yNTUma1syMF18KDI1NSZrWzIxXSk8PDh8KDI1NSZrWzIyXSk8PDE2fCgyNTUma1syM10pPDwyNCx4MTM9MjU1JmtbMjRdfCgyNTUma1syNV0pPDw4fCgyNTUma1syNl0pPDwxNnwoMjU1JmtbMjddKTw8MjQseDE0PTI1NSZrWzI4XXwoMjU1JmtbMjldKTw8OHwoMjU1JmtbMzBdKTw8MTZ8KDI1NSZrWzMxXSk8PDI0LHgxNT0yNTUmY1sxMl18KDI1NSZjWzEzXSk8PDh8KDI1NSZjWzE0XSk8PDE2fCgyNTUmY1sxNV0pPDwyNCxpPTA7aTwyMDtpKz0yKXgwXj0odT0oeDEyXj0odT0oeDhePSh1PSh4NF49KHU9eDAreDEyfDApPDw3fHU+Pj4yNSkreDB8MCk8PDl8dT4+PjIzKSt4NHwwKTw8MTN8dT4+PjE5KSt4OHwwKTw8MTh8dT4+PjE0LHg1Xj0odT0oeDFePSh1PSh4MTNePSh1PSh4OV49KHU9eDUreDF8MCk8PDd8dT4+PjI1KSt4NXwwKTw8OXx1Pj4+MjMpK3g5fDApPDwxM3x1Pj4+MTkpK3gxM3wwKTw8MTh8dT4+PjE0LHgxMF49KHU9KHg2Xj0odT0oeDJePSh1PSh4MTRePSh1PXgxMCt4NnwwKTw8N3x1Pj4+MjUpK3gxMHwwKTw8OXx1Pj4+MjMpK3gxNHwwKTw8MTN8dT4+PjE5KSt4MnwwKTw8MTh8dT4+PjE0LHgxNV49KHU9KHgxMV49KHU9KHg3Xj0odT0oeDNePSh1PXgxNSt4MTF8MCk8PDd8dT4+PjI1KSt4MTV8MCk8PDl8dT4+PjIzKSt4M3wwKTw8MTN8dT4+PjE5KSt4N3wwKTw8MTh8dT4+PjE0LHgwXj0odT0oeDNePSh1PSh4Ml49KHU9KHgxXj0odT14MCt4M3wwKTw8N3x1Pj4+MjUpK3gwfDApPDw5fHU+Pj4yMykreDF8MCk8PDEzfHU+Pj4xOSkreDJ8MCk8PDE4fHU+Pj4xNCx4NV49KHU9KHg0Xj0odT0oeDdePSh1PSh4Nl49KHU9eDUreDR8MCk8PDd8dT4+PjI1KSt4NXwwKTw8OXx1Pj4+MjMpK3g2fDApPDwxM3x1Pj4+MTkpK3g3fDApPDwxOHx1Pj4+MTQseDEwXj0odT0oeDlePSh1PSh4OF49KHU9KHgxMV49KHU9eDEwK3g5fDApPDw3fHU+Pj4yNSkreDEwfDApPDw5fHU+Pj4yMykreDExfDApPDwxM3x1Pj4+MTkpK3g4fDApPDwxOHx1Pj4+MTQseDE1Xj0odT0oeDE0Xj0odT0oeDEzXj0odT0oeDEyXj0odT14MTUreDE0fDApPDw3fHU+Pj4yNSkreDE1fDApPDw5fHU+Pj4yMykreDEyfDApPDwxM3x1Pj4+MTkpK3gxM3wwKTw8MTh8dT4+PjE0O29bMF09eDA+Pj4wJjI1NSxvWzFdPXgwPj4+OCYyNTUsb1syXT14MD4+PjE2JjI1NSxvWzNdPXgwPj4+MjQmMjU1LG9bNF09eDU+Pj4wJjI1NSxvWzVdPXg1Pj4+OCYyNTUsb1s2XT14NT4+PjE2JjI1NSxvWzddPXg1Pj4+MjQmMjU1LG9bOF09eDEwPj4+MCYyNTUsb1s5XT14MTA+Pj44JjI1NSxvWzEwXT14MTA+Pj4xNiYyNTUsb1sxMV09eDEwPj4+MjQmMjU1LG9bMTJdPXgxNT4+PjAmMjU1LG9bMTNdPXgxNT4+PjgmMjU1LG9bMTRdPXgxNT4+PjE2JjI1NSxvWzE1XT14MTU+Pj4yNCYyNTUsb1sxNl09eDY+Pj4wJjI1NSxvWzE3XT14Nj4+PjgmMjU1LG9bMThdPXg2Pj4+MTYmMjU1LG9bMTldPXg2Pj4+MjQmMjU1LG9bMjBdPXg3Pj4+MCYyNTUsb1syMV09eDc+Pj44JjI1NSxvWzIyXT14Nz4+PjE2JjI1NSxvWzIzXT14Nz4+PjI0JjI1NSxvWzI0XT14OD4+PjAmMjU1LG9bMjVdPXg4Pj4+OCYyNTUsb1syNl09eDg+Pj4xNiYyNTUsb1syN109eDg+Pj4yNCYyNTUsb1syOF09eDk+Pj4wJjI1NSxvWzI5XT14OT4+PjgmMjU1LG9bMzBdPXg5Pj4+MTYmMjU1LG9bMzFdPXg5Pj4+MjQmMjU1fShvdXQsaW5wLGssYyl9dmFyIHNpZ21hPW5ldyBVaW50OEFycmF5KFsxMDEsMTIwLDExMiw5NywxMTAsMTAwLDMyLDUxLDUwLDQ1LDk4LDEyMSwxMTYsMTAxLDMyLDEwN10pO2Z1bmN0aW9uIGNyeXB0b19zdHJlYW1fc2Fsc2EyMF94b3IoYyxjcG9zLG0sbXBvcyxiLG4sayl7dmFyIHUsaSx6PW5ldyBVaW50OEFycmF5KDE2KSx4PW5ldyBVaW50OEFycmF5KDY0KTtmb3IoaT0wO2k8MTY7aSsrKXpbaV09MDtmb3IoaT0wO2k8ODtpKyspeltpXT1uW2ldO2Zvcig7Yj49NjQ7KXtmb3IoY3J5cHRvX2NvcmVfc2Fsc2EyMCh4LHosayxzaWdtYSksaT0wO2k8NjQ7aSsrKWNbY3BvcytpXT1tW21wb3MraV1eeFtpXTtmb3IodT0xLGk9ODtpPDE2O2krKyl1PXUrKDI1NSZ6W2ldKXwwLHpbaV09MjU1JnUsdT4+Pj04O2ItPTY0LGNwb3MrPTY0LG1wb3MrPTY0fWlmKGI+MClmb3IoY3J5cHRvX2NvcmVfc2Fsc2EyMCh4LHosayxzaWdtYSksaT0wO2k8YjtpKyspY1tjcG9zK2ldPW1bbXBvcytpXV54W2ldO3JldHVybiAwfWZ1bmN0aW9uIGNyeXB0b19zdHJlYW1fc2Fsc2EyMChjLGNwb3MsYixuLGspe3ZhciB1LGksej1uZXcgVWludDhBcnJheSgxNikseD1uZXcgVWludDhBcnJheSg2NCk7Zm9yKGk9MDtpPDE2O2krKyl6W2ldPTA7Zm9yKGk9MDtpPDg7aSsrKXpbaV09bltpXTtmb3IoO2I+PTY0Oyl7Zm9yKGNyeXB0b19jb3JlX3NhbHNhMjAoeCx6LGssc2lnbWEpLGk9MDtpPDY0O2krKyljW2Nwb3MraV09eFtpXTtmb3IodT0xLGk9ODtpPDE2O2krKyl1PXUrKDI1NSZ6W2ldKXwwLHpbaV09MjU1JnUsdT4+Pj04O2ItPTY0LGNwb3MrPTY0fWlmKGI+MClmb3IoY3J5cHRvX2NvcmVfc2Fsc2EyMCh4LHosayxzaWdtYSksaT0wO2k8YjtpKyspY1tjcG9zK2ldPXhbaV07cmV0dXJuIDB9ZnVuY3Rpb24gY3J5cHRvX3N0cmVhbShjLGNwb3MsZCxuLGspe3ZhciBzPW5ldyBVaW50OEFycmF5KDMyKTtjcnlwdG9fY29yZV9oc2Fsc2EyMChzLG4sayxzaWdtYSk7Zm9yKHZhciBzbj1uZXcgVWludDhBcnJheSg4KSxpPTA7aTw4O2krKylzbltpXT1uW2krMTZdO3JldHVybiBjcnlwdG9fc3RyZWFtX3NhbHNhMjAoYyxjcG9zLGQsc24scyl9ZnVuY3Rpb24gY3J5cHRvX3N0cmVhbV94b3IoYyxjcG9zLG0sbXBvcyxkLG4sayl7dmFyIHM9bmV3IFVpbnQ4QXJyYXkoMzIpO2NyeXB0b19jb3JlX2hzYWxzYTIwKHMsbixrLHNpZ21hKTtmb3IodmFyIHNuPW5ldyBVaW50OEFycmF5KDgpLGk9MDtpPDg7aSsrKXNuW2ldPW5baSsxNl07cmV0dXJuIGNyeXB0b19zdHJlYW1fc2Fsc2EyMF94b3IoYyxjcG9zLG0sbXBvcyxkLHNuLHMpfXZhciBwb2x5MTMwNT1mdW5jdGlvbihrZXkpe3ZhciB0MCx0MSx0Mix0Myx0NCx0NSx0Nix0Nzt0aGlzLmJ1ZmZlcj1uZXcgVWludDhBcnJheSgxNiksdGhpcy5yPW5ldyBVaW50MTZBcnJheSgxMCksdGhpcy5oPW5ldyBVaW50MTZBcnJheSgxMCksdGhpcy5wYWQ9bmV3IFVpbnQxNkFycmF5KDgpLHRoaXMubGVmdG92ZXI9MCx0aGlzLmZpbj0wLHQwPTI1NSZrZXlbMF18KDI1NSZrZXlbMV0pPDw4LHRoaXMuclswXT04MTkxJnQwLHQxPTI1NSZrZXlbMl18KDI1NSZrZXlbM10pPDw4LHRoaXMuclsxXT04MTkxJih0MD4+PjEzfHQxPDwzKSx0Mj0yNTUma2V5WzRdfCgyNTUma2V5WzVdKTw8OCx0aGlzLnJbMl09NzkzOSYodDE+Pj4xMHx0Mjw8NiksdDM9MjU1JmtleVs2XXwoMjU1JmtleVs3XSk8PDgsdGhpcy5yWzNdPTgxOTEmKHQyPj4+N3x0Mzw8OSksdDQ9MjU1JmtleVs4XXwoMjU1JmtleVs5XSk8PDgsdGhpcy5yWzRdPTI1NSYodDM+Pj40fHQ0PDwxMiksdGhpcy5yWzVdPXQ0Pj4+MSY4MTkwLHQ1PTI1NSZrZXlbMTBdfCgyNTUma2V5WzExXSk8PDgsdGhpcy5yWzZdPTgxOTEmKHQ0Pj4+MTR8dDU8PDIpLHQ2PTI1NSZrZXlbMTJdfCgyNTUma2V5WzEzXSk8PDgsdGhpcy5yWzddPTgwNjUmKHQ1Pj4+MTF8dDY8PDUpLHQ3PTI1NSZrZXlbMTRdfCgyNTUma2V5WzE1XSk8PDgsdGhpcy5yWzhdPTgxOTEmKHQ2Pj4+OHx0Nzw8OCksdGhpcy5yWzldPXQ3Pj4+NSYxMjcsdGhpcy5wYWRbMF09MjU1JmtleVsxNl18KDI1NSZrZXlbMTddKTw8OCx0aGlzLnBhZFsxXT0yNTUma2V5WzE4XXwoMjU1JmtleVsxOV0pPDw4LHRoaXMucGFkWzJdPTI1NSZrZXlbMjBdfCgyNTUma2V5WzIxXSk8PDgsdGhpcy5wYWRbM109MjU1JmtleVsyMl18KDI1NSZrZXlbMjNdKTw8OCx0aGlzLnBhZFs0XT0yNTUma2V5WzI0XXwoMjU1JmtleVsyNV0pPDw4LHRoaXMucGFkWzVdPTI1NSZrZXlbMjZdfCgyNTUma2V5WzI3XSk8PDgsdGhpcy5wYWRbNl09MjU1JmtleVsyOF18KDI1NSZrZXlbMjldKTw8OCx0aGlzLnBhZFs3XT0yNTUma2V5WzMwXXwoMjU1JmtleVszMV0pPDw4fTtmdW5jdGlvbiBjcnlwdG9fb25ldGltZWF1dGgob3V0LG91dHBvcyxtLG1wb3MsbixrKXt2YXIgcz1uZXcgcG9seTEzMDUoayk7cmV0dXJuIHMudXBkYXRlKG0sbXBvcyxuKSxzLmZpbmlzaChvdXQsb3V0cG9zKSwwfWZ1bmN0aW9uIGNyeXB0b19vbmV0aW1lYXV0aF92ZXJpZnkoaCxocG9zLG0sbXBvcyxuLGspe3ZhciB4PW5ldyBVaW50OEFycmF5KDE2KTtyZXR1cm4gY3J5cHRvX29uZXRpbWVhdXRoKHgsMCxtLG1wb3MsbixrKSxjcnlwdG9fdmVyaWZ5XzE2KGgsaHBvcyx4LDApfWZ1bmN0aW9uIGNyeXB0b19zZWNyZXRib3goYyxtLGQsbixrKXt2YXIgaTtpZihkPDMyKXJldHVybi0xO2ZvcihjcnlwdG9fc3RyZWFtX3hvcihjLDAsbSwwLGQsbixrKSxjcnlwdG9fb25ldGltZWF1dGgoYywxNixjLDMyLGQtMzIsYyksaT0wO2k8MTY7aSsrKWNbaV09MDtyZXR1cm4gMH1mdW5jdGlvbiBjcnlwdG9fc2VjcmV0Ym94X29wZW4obSxjLGQsbixrKXt2YXIgaSx4PW5ldyBVaW50OEFycmF5KDMyKTtpZihkPDMyKXJldHVybi0xO2lmKGNyeXB0b19zdHJlYW0oeCwwLDMyLG4sayksMCE9PWNyeXB0b19vbmV0aW1lYXV0aF92ZXJpZnkoYywxNixjLDMyLGQtMzIseCkpcmV0dXJuLTE7Zm9yKGNyeXB0b19zdHJlYW1feG9yKG0sMCxjLDAsZCxuLGspLGk9MDtpPDMyO2krKyltW2ldPTA7cmV0dXJuIDB9ZnVuY3Rpb24gc2V0MjU1MTkocixhKXt2YXIgaTtmb3IoaT0wO2k8MTY7aSsrKXJbaV09MHxhW2ldfWZ1bmN0aW9uIGNhcjI1NTE5KG8pe3ZhciBpLHYsYz0xO2ZvcihpPTA7aTwxNjtpKyspdj1vW2ldK2MrNjU1MzUsYz1NYXRoLmZsb29yKHYvNjU1MzYpLG9baV09di02NTUzNipjO29bMF0rPWMtMSszNyooYy0xKX1mdW5jdGlvbiBzZWwyNTUxOShwLHEsYil7Zm9yKHZhciB0LGM9fihiLTEpLGk9MDtpPDE2O2krKyl0PWMmKHBbaV1ecVtpXSkscFtpXV49dCxxW2ldXj10fWZ1bmN0aW9uIHBhY2syNTUxOShvLG4pe3ZhciBpLGosYixtPWdmKCksdD1nZigpO2ZvcihpPTA7aTwxNjtpKyspdFtpXT1uW2ldO2ZvcihjYXIyNTUxOSh0KSxjYXIyNTUxOSh0KSxjYXIyNTUxOSh0KSxqPTA7ajwyO2orKyl7Zm9yKG1bMF09dFswXS02NTUxNyxpPTE7aTwxNTtpKyspbVtpXT10W2ldLTY1NTM1LShtW2ktMV0+PjE2JjEpLG1baS0xXSY9NjU1MzU7bVsxNV09dFsxNV0tMzI3NjctKG1bMTRdPj4xNiYxKSxiPW1bMTVdPj4xNiYxLG1bMTRdJj02NTUzNSxzZWwyNTUxOSh0LG0sMS1iKX1mb3IoaT0wO2k8MTY7aSsrKW9bMippXT0yNTUmdFtpXSxvWzIqaSsxXT10W2ldPj44fWZ1bmN0aW9uIG5lcTI1NTE5KGEsYil7dmFyIGM9bmV3IFVpbnQ4QXJyYXkoMzIpLGQ9bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBwYWNrMjU1MTkoYyxhKSxwYWNrMjU1MTkoZCxiKSxjcnlwdG9fdmVyaWZ5XzMyKGMsMCxkLDApfWZ1bmN0aW9uIHBhcjI1NTE5KGEpe3ZhciBkPW5ldyBVaW50OEFycmF5KDMyKTtyZXR1cm4gcGFjazI1NTE5KGQsYSksMSZkWzBdfWZ1bmN0aW9uIHVucGFjazI1NTE5KG8sbil7dmFyIGk7Zm9yKGk9MDtpPDE2O2krKylvW2ldPW5bMippXSsoblsyKmkrMV08PDgpO29bMTVdJj0zMjc2N31mdW5jdGlvbiBBKG8sYSxiKXtmb3IodmFyIGk9MDtpPDE2O2krKylvW2ldPWFbaV0rYltpXX1mdW5jdGlvbiBaKG8sYSxiKXtmb3IodmFyIGk9MDtpPDE2O2krKylvW2ldPWFbaV0tYltpXX1mdW5jdGlvbiBNKG8sYSxiKXt2YXIgdixjLHQwPTAsdDE9MCx0Mj0wLHQzPTAsdDQ9MCx0NT0wLHQ2PTAsdDc9MCx0OD0wLHQ5PTAsdDEwPTAsdDExPTAsdDEyPTAsdDEzPTAsdDE0PTAsdDE1PTAsdDE2PTAsdDE3PTAsdDE4PTAsdDE5PTAsdDIwPTAsdDIxPTAsdDIyPTAsdDIzPTAsdDI0PTAsdDI1PTAsdDI2PTAsdDI3PTAsdDI4PTAsdDI5PTAsdDMwPTAsYjA9YlswXSxiMT1iWzFdLGIyPWJbMl0sYjM9YlszXSxiND1iWzRdLGI1PWJbNV0sYjY9Yls2XSxiNz1iWzddLGI4PWJbOF0sYjk9Yls5XSxiMTA9YlsxMF0sYjExPWJbMTFdLGIxMj1iWzEyXSxiMTM9YlsxM10sYjE0PWJbMTRdLGIxNT1iWzE1XTt0MCs9KHY9YVswXSkqYjAsdDErPXYqYjEsdDIrPXYqYjIsdDMrPXYqYjMsdDQrPXYqYjQsdDUrPXYqYjUsdDYrPXYqYjYsdDcrPXYqYjcsdDgrPXYqYjgsdDkrPXYqYjksdDEwKz12KmIxMCx0MTErPXYqYjExLHQxMis9dipiMTIsdDEzKz12KmIxMyx0MTQrPXYqYjE0LHQxNSs9dipiMTUsdDErPSh2PWFbMV0pKmIwLHQyKz12KmIxLHQzKz12KmIyLHQ0Kz12KmIzLHQ1Kz12KmI0LHQ2Kz12KmI1LHQ3Kz12KmI2LHQ4Kz12KmI3LHQ5Kz12KmI4LHQxMCs9dipiOSx0MTErPXYqYjEwLHQxMis9dipiMTEsdDEzKz12KmIxMix0MTQrPXYqYjEzLHQxNSs9dipiMTQsdDE2Kz12KmIxNSx0Mis9KHY9YVsyXSkqYjAsdDMrPXYqYjEsdDQrPXYqYjIsdDUrPXYqYjMsdDYrPXYqYjQsdDcrPXYqYjUsdDgrPXYqYjYsdDkrPXYqYjcsdDEwKz12KmI4LHQxMSs9dipiOSx0MTIrPXYqYjEwLHQxMys9dipiMTEsdDE0Kz12KmIxMix0MTUrPXYqYjEzLHQxNis9dipiMTQsdDE3Kz12KmIxNSx0Mys9KHY9YVszXSkqYjAsdDQrPXYqYjEsdDUrPXYqYjIsdDYrPXYqYjMsdDcrPXYqYjQsdDgrPXYqYjUsdDkrPXYqYjYsdDEwKz12KmI3LHQxMSs9dipiOCx0MTIrPXYqYjksdDEzKz12KmIxMCx0MTQrPXYqYjExLHQxNSs9dipiMTIsdDE2Kz12KmIxMyx0MTcrPXYqYjE0LHQxOCs9dipiMTUsdDQrPSh2PWFbNF0pKmIwLHQ1Kz12KmIxLHQ2Kz12KmIyLHQ3Kz12KmIzLHQ4Kz12KmI0LHQ5Kz12KmI1LHQxMCs9dipiNix0MTErPXYqYjcsdDEyKz12KmI4LHQxMys9dipiOSx0MTQrPXYqYjEwLHQxNSs9dipiMTEsdDE2Kz12KmIxMix0MTcrPXYqYjEzLHQxOCs9dipiMTQsdDE5Kz12KmIxNSx0NSs9KHY9YVs1XSkqYjAsdDYrPXYqYjEsdDcrPXYqYjIsdDgrPXYqYjMsdDkrPXYqYjQsdDEwKz12KmI1LHQxMSs9dipiNix0MTIrPXYqYjcsdDEzKz12KmI4LHQxNCs9dipiOSx0MTUrPXYqYjEwLHQxNis9dipiMTEsdDE3Kz12KmIxMix0MTgrPXYqYjEzLHQxOSs9dipiMTQsdDIwKz12KmIxNSx0Nis9KHY9YVs2XSkqYjAsdDcrPXYqYjEsdDgrPXYqYjIsdDkrPXYqYjMsdDEwKz12KmI0LHQxMSs9dipiNSx0MTIrPXYqYjYsdDEzKz12KmI3LHQxNCs9dipiOCx0MTUrPXYqYjksdDE2Kz12KmIxMCx0MTcrPXYqYjExLHQxOCs9dipiMTIsdDE5Kz12KmIxMyx0MjArPXYqYjE0LHQyMSs9dipiMTUsdDcrPSh2PWFbN10pKmIwLHQ4Kz12KmIxLHQ5Kz12KmIyLHQxMCs9dipiMyx0MTErPXYqYjQsdDEyKz12KmI1LHQxMys9dipiNix0MTQrPXYqYjcsdDE1Kz12KmI4LHQxNis9dipiOSx0MTcrPXYqYjEwLHQxOCs9dipiMTEsdDE5Kz12KmIxMix0MjArPXYqYjEzLHQyMSs9dipiMTQsdDIyKz12KmIxNSx0OCs9KHY9YVs4XSkqYjAsdDkrPXYqYjEsdDEwKz12KmIyLHQxMSs9dipiMyx0MTIrPXYqYjQsdDEzKz12KmI1LHQxNCs9dipiNix0MTUrPXYqYjcsdDE2Kz12KmI4LHQxNys9dipiOSx0MTgrPXYqYjEwLHQxOSs9dipiMTEsdDIwKz12KmIxMix0MjErPXYqYjEzLHQyMis9dipiMTQsdDIzKz12KmIxNSx0OSs9KHY9YVs5XSkqYjAsdDEwKz12KmIxLHQxMSs9dipiMix0MTIrPXYqYjMsdDEzKz12KmI0LHQxNCs9dipiNSx0MTUrPXYqYjYsdDE2Kz12KmI3LHQxNys9dipiOCx0MTgrPXYqYjksdDE5Kz12KmIxMCx0MjArPXYqYjExLHQyMSs9dipiMTIsdDIyKz12KmIxMyx0MjMrPXYqYjE0LHQyNCs9dipiMTUsdDEwKz0odj1hWzEwXSkqYjAsdDExKz12KmIxLHQxMis9dipiMix0MTMrPXYqYjMsdDE0Kz12KmI0LHQxNSs9dipiNSx0MTYrPXYqYjYsdDE3Kz12KmI3LHQxOCs9dipiOCx0MTkrPXYqYjksdDIwKz12KmIxMCx0MjErPXYqYjExLHQyMis9dipiMTIsdDIzKz12KmIxMyx0MjQrPXYqYjE0LHQyNSs9dipiMTUsdDExKz0odj1hWzExXSkqYjAsdDEyKz12KmIxLHQxMys9dipiMix0MTQrPXYqYjMsdDE1Kz12KmI0LHQxNis9dipiNSx0MTcrPXYqYjYsdDE4Kz12KmI3LHQxOSs9dipiOCx0MjArPXYqYjksdDIxKz12KmIxMCx0MjIrPXYqYjExLHQyMys9dipiMTIsdDI0Kz12KmIxMyx0MjUrPXYqYjE0LHQyNis9dipiMTUsdDEyKz0odj1hWzEyXSkqYjAsdDEzKz12KmIxLHQxNCs9dipiMix0MTUrPXYqYjMsdDE2Kz12KmI0LHQxNys9dipiNSx0MTgrPXYqYjYsdDE5Kz12KmI3LHQyMCs9dipiOCx0MjErPXYqYjksdDIyKz12KmIxMCx0MjMrPXYqYjExLHQyNCs9dipiMTIsdDI1Kz12KmIxMyx0MjYrPXYqYjE0LHQyNys9dipiMTUsdDEzKz0odj1hWzEzXSkqYjAsdDE0Kz12KmIxLHQxNSs9dipiMix0MTYrPXYqYjMsdDE3Kz12KmI0LHQxOCs9dipiNSx0MTkrPXYqYjYsdDIwKz12KmI3LHQyMSs9dipiOCx0MjIrPXYqYjksdDIzKz12KmIxMCx0MjQrPXYqYjExLHQyNSs9dipiMTIsdDI2Kz12KmIxMyx0MjcrPXYqYjE0LHQyOCs9dipiMTUsdDE0Kz0odj1hWzE0XSkqYjAsdDE1Kz12KmIxLHQxNis9dipiMix0MTcrPXYqYjMsdDE4Kz12KmI0LHQxOSs9dipiNSx0MjArPXYqYjYsdDIxKz12KmI3LHQyMis9dipiOCx0MjMrPXYqYjksdDI0Kz12KmIxMCx0MjUrPXYqYjExLHQyNis9dipiMTIsdDI3Kz12KmIxMyx0MjgrPXYqYjE0LHQyOSs9dipiMTUsdDE1Kz0odj1hWzE1XSkqYjAsdDErPTM4Kih0MTcrPXYqYjIpLHQyKz0zOCoodDE4Kz12KmIzKSx0Mys9MzgqKHQxOSs9dipiNCksdDQrPTM4Kih0MjArPXYqYjUpLHQ1Kz0zOCoodDIxKz12KmI2KSx0Nis9MzgqKHQyMis9dipiNyksdDcrPTM4Kih0MjMrPXYqYjgpLHQ4Kz0zOCoodDI0Kz12KmI5KSx0OSs9MzgqKHQyNSs9dipiMTApLHQxMCs9MzgqKHQyNis9dipiMTEpLHQxMSs9MzgqKHQyNys9dipiMTIpLHQxMis9MzgqKHQyOCs9dipiMTMpLHQxMys9MzgqKHQyOSs9dipiMTQpLHQxNCs9MzgqKHQzMCs9dipiMTUpLHQwPSh2PSh0MCs9MzgqKHQxNis9dipiMSkpKyhjPTEpKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0MT0odj10MStjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0Mj0odj10MitjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0Mz0odj10MytjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0ND0odj10NCtjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0NT0odj10NStjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0Nj0odj10NitjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0Nz0odj10NytjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0OD0odj10OCtjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0OT0odj10OStjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0MTA9KHY9dDEwK2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQxMT0odj10MTErYys2NTUzNSktNjU1MzYqKGM9TWF0aC5mbG9vcih2LzY1NTM2KSksdDEyPSh2PXQxMitjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0MTM9KHY9dDEzK2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQxND0odj10MTQrYys2NTUzNSktNjU1MzYqKGM9TWF0aC5mbG9vcih2LzY1NTM2KSksdDE1PSh2PXQxNStjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0MD0odj0odDArPWMtMSszNyooYy0xKSkrKGM9MSkrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQxPSh2PXQxK2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQyPSh2PXQyK2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQzPSh2PXQzK2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQ0PSh2PXQ0K2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQ1PSh2PXQ1K2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQ2PSh2PXQ2K2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQ3PSh2PXQ3K2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQ4PSh2PXQ4K2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQ5PSh2PXQ5K2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQxMD0odj10MTArYys2NTUzNSktNjU1MzYqKGM9TWF0aC5mbG9vcih2LzY1NTM2KSksdDExPSh2PXQxMStjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0MTI9KHY9dDEyK2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQxMz0odj10MTMrYys2NTUzNSktNjU1MzYqKGM9TWF0aC5mbG9vcih2LzY1NTM2KSksdDE0PSh2PXQxNCtjKzY1NTM1KS02NTUzNiooYz1NYXRoLmZsb29yKHYvNjU1MzYpKSx0MTU9KHY9dDE1K2MrNjU1MzUpLTY1NTM2KihjPU1hdGguZmxvb3Iodi82NTUzNikpLHQwKz1jLTErMzcqKGMtMSksb1swXT10MCxvWzFdPXQxLG9bMl09dDIsb1szXT10MyxvWzRdPXQ0LG9bNV09dDUsb1s2XT10NixvWzddPXQ3LG9bOF09dDgsb1s5XT10OSxvWzEwXT10MTAsb1sxMV09dDExLG9bMTJdPXQxMixvWzEzXT10MTMsb1sxNF09dDE0LG9bMTVdPXQxNX1mdW5jdGlvbiBTKG8sYSl7TShvLGEsYSl9ZnVuY3Rpb24gaW52MjU1MTkobyxpKXt2YXIgYSxjPWdmKCk7Zm9yKGE9MDthPDE2O2ErKyljW2FdPWlbYV07Zm9yKGE9MjUzO2E+PTA7YS0tKVMoYyxjKSwyIT09YSYmNCE9PWEmJk0oYyxjLGkpO2ZvcihhPTA7YTwxNjthKyspb1thXT1jW2FdfWZ1bmN0aW9uIHBvdzI1MjMobyxpKXt2YXIgYSxjPWdmKCk7Zm9yKGE9MDthPDE2O2ErKyljW2FdPWlbYV07Zm9yKGE9MjUwO2E+PTA7YS0tKVMoYyxjKSwxIT09YSYmTShjLGMsaSk7Zm9yKGE9MDthPDE2O2ErKylvW2FdPWNbYV19ZnVuY3Rpb24gY3J5cHRvX3NjYWxhcm11bHQocSxuLHApe3ZhciByLGksej1uZXcgVWludDhBcnJheSgzMikseD1uZXcgRmxvYXQ2NEFycmF5KDgwKSxhPWdmKCksYj1nZigpLGM9Z2YoKSxkPWdmKCksZT1nZigpLGY9Z2YoKTtmb3IoaT0wO2k8MzE7aSsrKXpbaV09bltpXTtmb3IoelszMV09MTI3Jm5bMzFdfDY0LHpbMF0mPTI0OCx1bnBhY2syNTUxOSh4LHApLGk9MDtpPDE2O2krKyliW2ldPXhbaV0sZFtpXT1hW2ldPWNbaV09MDtmb3IoYVswXT1kWzBdPTEsaT0yNTQ7aT49MDstLWkpc2VsMjU1MTkoYSxiLHI9eltpPj4+M10+Pj4oNyZpKSYxKSxzZWwyNTUxOShjLGQsciksQShlLGEsYyksWihhLGEsYyksQShjLGIsZCksWihiLGIsZCksUyhkLGUpLFMoZixhKSxNKGEsYyxhKSxNKGMsYixlKSxBKGUsYSxjKSxaKGEsYSxjKSxTKGIsYSksWihjLGQsZiksTShhLGMsXzEyMTY2NSksQShhLGEsZCksTShjLGMsYSksTShhLGQsZiksTShkLGIseCksUyhiLGUpLHNlbDI1NTE5KGEsYixyKSxzZWwyNTUxOShjLGQscik7Zm9yKGk9MDtpPDE2O2krKyl4W2krMTZdPWFbaV0seFtpKzMyXT1jW2ldLHhbaSs0OF09YltpXSx4W2krNjRdPWRbaV07dmFyIHgzMj14LnN1YmFycmF5KDMyKSx4MTY9eC5zdWJhcnJheSgxNik7cmV0dXJuIGludjI1NTE5KHgzMix4MzIpLE0oeDE2LHgxNix4MzIpLHBhY2syNTUxOShxLHgxNiksMH1mdW5jdGlvbiBjcnlwdG9fc2NhbGFybXVsdF9iYXNlKHEsbil7cmV0dXJuIGNyeXB0b19zY2FsYXJtdWx0KHEsbixfOSl9ZnVuY3Rpb24gY3J5cHRvX2JveF9rZXlwYWlyKHkseCl7cmV0dXJuIHJhbmRvbWJ5dGVzKHgsMzIpLGNyeXB0b19zY2FsYXJtdWx0X2Jhc2UoeSx4KX1mdW5jdGlvbiBjcnlwdG9fYm94X2JlZm9yZW5tKGsseSx4KXt2YXIgcz1uZXcgVWludDhBcnJheSgzMik7cmV0dXJuIGNyeXB0b19zY2FsYXJtdWx0KHMseCx5KSxjcnlwdG9fY29yZV9oc2Fsc2EyMChrLF8wLHMsc2lnbWEpfXBvbHkxMzA1LnByb3RvdHlwZS5ibG9ja3M9ZnVuY3Rpb24obSxtcG9zLGJ5dGVzKXtmb3IodmFyIHQwLHQxLHQyLHQzLHQ0LHQ1LHQ2LHQ3LGMsZDAsZDEsZDIsZDMsZDQsZDUsZDYsZDcsZDgsZDksaGliaXQ9dGhpcy5maW4/MDoyMDQ4LGgwPXRoaXMuaFswXSxoMT10aGlzLmhbMV0saDI9dGhpcy5oWzJdLGgzPXRoaXMuaFszXSxoND10aGlzLmhbNF0saDU9dGhpcy5oWzVdLGg2PXRoaXMuaFs2XSxoNz10aGlzLmhbN10saDg9dGhpcy5oWzhdLGg5PXRoaXMuaFs5XSxyMD10aGlzLnJbMF0scjE9dGhpcy5yWzFdLHIyPXRoaXMuclsyXSxyMz10aGlzLnJbM10scjQ9dGhpcy5yWzRdLHI1PXRoaXMucls1XSxyNj10aGlzLnJbNl0scjc9dGhpcy5yWzddLHI4PXRoaXMucls4XSxyOT10aGlzLnJbOV07Ynl0ZXM+PTE2OylkMD1jPTAsZDArPShoMCs9ODE5MSYodDA9MjU1Jm1bbXBvcyswXXwoMjU1Jm1bbXBvcysxXSk8PDgpKSpyMCxkMCs9KGgxKz04MTkxJih0MD4+PjEzfCh0MT0yNTUmbVttcG9zKzJdfCgyNTUmbVttcG9zKzNdKTw8OCk8PDMpKSooNSpyOSksZDArPShoMis9ODE5MSYodDE+Pj4xMHwodDI9MjU1Jm1bbXBvcys0XXwoMjU1Jm1bbXBvcys1XSk8PDgpPDw2KSkqKDUqcjgpLGQwKz0oaDMrPTgxOTEmKHQyPj4+N3wodDM9MjU1Jm1bbXBvcys2XXwoMjU1Jm1bbXBvcys3XSk8PDgpPDw5KSkqKDUqcjcpLGM9KGQwKz0oaDQrPTgxOTEmKHQzPj4+NHwodDQ9MjU1Jm1bbXBvcys4XXwoMjU1Jm1bbXBvcys5XSk8PDgpPDwxMikpKig1KnI2KSk+Pj4xMyxkMCY9ODE5MSxkMCs9KGg1Kz10ND4+PjEmODE5MSkqKDUqcjUpLGQwKz0oaDYrPTgxOTEmKHQ0Pj4+MTR8KHQ1PTI1NSZtW21wb3MrMTBdfCgyNTUmbVttcG9zKzExXSk8PDgpPDwyKSkqKDUqcjQpLGQwKz0oaDcrPTgxOTEmKHQ1Pj4+MTF8KHQ2PTI1NSZtW21wb3MrMTJdfCgyNTUmbVttcG9zKzEzXSk8PDgpPDw1KSkqKDUqcjMpLGQwKz0oaDgrPTgxOTEmKHQ2Pj4+OHwodDc9MjU1Jm1bbXBvcysxNF18KDI1NSZtW21wb3MrMTVdKTw8OCk8PDgpKSooNSpyMiksZDE9Yys9KGQwKz0oaDkrPXQ3Pj4+NXxoaWJpdCkqKDUqcjEpKT4+PjEzLGQxKz1oMCpyMSxkMSs9aDEqcjAsZDErPWgyKig1KnI5KSxkMSs9aDMqKDUqcjgpLGM9KGQxKz1oNCooNSpyNykpPj4+MTMsZDEmPTgxOTEsZDErPWg1Kig1KnI2KSxkMSs9aDYqKDUqcjUpLGQxKz1oNyooNSpyNCksZDErPWg4Kig1KnIzKSxjKz0oZDErPWg5Kig1KnIyKSk+Pj4xMyxkMSY9ODE5MSxkMj1jLGQyKz1oMCpyMixkMis9aDEqcjEsZDIrPWgyKnIwLGQyKz1oMyooNSpyOSksYz0oZDIrPWg0Kig1KnI4KSk+Pj4xMyxkMiY9ODE5MSxkMis9aDUqKDUqcjcpLGQyKz1oNiooNSpyNiksZDIrPWg3Kig1KnI1KSxkMis9aDgqKDUqcjQpLGQzPWMrPShkMis9aDkqKDUqcjMpKT4+PjEzLGQzKz1oMCpyMyxkMys9aDEqcjIsZDMrPWgyKnIxLGQzKz1oMypyMCxjPShkMys9aDQqKDUqcjkpKT4+PjEzLGQzJj04MTkxLGQzKz1oNSooNSpyOCksZDMrPWg2Kig1KnI3KSxkMys9aDcqKDUqcjYpLGQzKz1oOCooNSpyNSksZDQ9Yys9KGQzKz1oOSooNSpyNCkpPj4+MTMsZDQrPWgwKnI0LGQ0Kz1oMSpyMyxkNCs9aDIqcjIsZDQrPWgzKnIxLGM9KGQ0Kz1oNCpyMCk+Pj4xMyxkNCY9ODE5MSxkNCs9aDUqKDUqcjkpLGQ0Kz1oNiooNSpyOCksZDQrPWg3Kig1KnI3KSxkNCs9aDgqKDUqcjYpLGQ1PWMrPShkNCs9aDkqKDUqcjUpKT4+PjEzLGQ1Kz1oMCpyNSxkNSs9aDEqcjQsZDUrPWgyKnIzLGQ1Kz1oMypyMixjPShkNSs9aDQqcjEpPj4+MTMsZDUmPTgxOTEsZDUrPWg1KnIwLGQ1Kz1oNiooNSpyOSksZDUrPWg3Kig1KnI4KSxkNSs9aDgqKDUqcjcpLGQ2PWMrPShkNSs9aDkqKDUqcjYpKT4+PjEzLGQ2Kz1oMCpyNixkNis9aDEqcjUsZDYrPWgyKnI0LGQ2Kz1oMypyMyxjPShkNis9aDQqcjIpPj4+MTMsZDYmPTgxOTEsZDYrPWg1KnIxLGQ2Kz1oNipyMCxkNis9aDcqKDUqcjkpLGQ2Kz1oOCooNSpyOCksZDc9Yys9KGQ2Kz1oOSooNSpyNykpPj4+MTMsZDcrPWgwKnI3LGQ3Kz1oMSpyNixkNys9aDIqcjUsZDcrPWgzKnI0LGM9KGQ3Kz1oNCpyMyk+Pj4xMyxkNyY9ODE5MSxkNys9aDUqcjIsZDcrPWg2KnIxLGQ3Kz1oNypyMCxkNys9aDgqKDUqcjkpLGQ4PWMrPShkNys9aDkqKDUqcjgpKT4+PjEzLGQ4Kz1oMCpyOCxkOCs9aDEqcjcsZDgrPWgyKnI2LGQ4Kz1oMypyNSxjPShkOCs9aDQqcjQpPj4+MTMsZDgmPTgxOTEsZDgrPWg1KnIzLGQ4Kz1oNipyMixkOCs9aDcqcjEsZDgrPWg4KnIwLGQ5PWMrPShkOCs9aDkqKDUqcjkpKT4+PjEzLGQ5Kz1oMCpyOSxkOSs9aDEqcjgsZDkrPWgyKnI3LGQ5Kz1oMypyNixjPShkOSs9aDQqcjUpPj4+MTMsZDkmPTgxOTEsZDkrPWg1KnI0LGQ5Kz1oNipyMyxkOSs9aDcqcjIsZDkrPWg4KnIxLGgwPWQwPTgxOTEmKGM9KGM9KChjKz0oZDkrPWg5KnIwKT4+PjEzKTw8MikrY3wwKSsoZDAmPTgxOTEpfDApLGgxPWQxKz1jPj4+PTEzLGgyPWQyJj04MTkxLGgzPWQzJj04MTkxLGg0PWQ0Jj04MTkxLGg1PWQ1Jj04MTkxLGg2PWQ2Jj04MTkxLGg3PWQ3Jj04MTkxLGg4PWQ4Jj04MTkxLGg5PWQ5Jj04MTkxLG1wb3MrPTE2LGJ5dGVzLT0xNjt0aGlzLmhbMF09aDAsdGhpcy5oWzFdPWgxLHRoaXMuaFsyXT1oMix0aGlzLmhbM109aDMsdGhpcy5oWzRdPWg0LHRoaXMuaFs1XT1oNSx0aGlzLmhbNl09aDYsdGhpcy5oWzddPWg3LHRoaXMuaFs4XT1oOCx0aGlzLmhbOV09aDl9LHBvbHkxMzA1LnByb3RvdHlwZS5maW5pc2g9ZnVuY3Rpb24obWFjLG1hY3Bvcyl7dmFyIGMsbWFzayxmLGksZz1uZXcgVWludDE2QXJyYXkoMTApO2lmKHRoaXMubGVmdG92ZXIpe2ZvcihpPXRoaXMubGVmdG92ZXIsdGhpcy5idWZmZXJbaSsrXT0xO2k8MTY7aSsrKXRoaXMuYnVmZmVyW2ldPTA7dGhpcy5maW49MSx0aGlzLmJsb2Nrcyh0aGlzLmJ1ZmZlciwwLDE2KX1mb3IoYz10aGlzLmhbMV0+Pj4xMyx0aGlzLmhbMV0mPTgxOTEsaT0yO2k8MTA7aSsrKXRoaXMuaFtpXSs9YyxjPXRoaXMuaFtpXT4+PjEzLHRoaXMuaFtpXSY9ODE5MTtmb3IodGhpcy5oWzBdKz01KmMsYz10aGlzLmhbMF0+Pj4xMyx0aGlzLmhbMF0mPTgxOTEsdGhpcy5oWzFdKz1jLGM9dGhpcy5oWzFdPj4+MTMsdGhpcy5oWzFdJj04MTkxLHRoaXMuaFsyXSs9YyxnWzBdPXRoaXMuaFswXSs1LGM9Z1swXT4+PjEzLGdbMF0mPTgxOTEsaT0xO2k8MTA7aSsrKWdbaV09dGhpcy5oW2ldK2MsYz1nW2ldPj4+MTMsZ1tpXSY9ODE5MTtmb3IoZ1s5XS09ODE5MixtYXNrPSgxXmMpLTEsaT0wO2k8MTA7aSsrKWdbaV0mPW1hc2s7Zm9yKG1hc2s9fm1hc2ssaT0wO2k8MTA7aSsrKXRoaXMuaFtpXT10aGlzLmhbaV0mbWFza3xnW2ldO2Zvcih0aGlzLmhbMF09NjU1MzUmKHRoaXMuaFswXXx0aGlzLmhbMV08PDEzKSx0aGlzLmhbMV09NjU1MzUmKHRoaXMuaFsxXT4+PjN8dGhpcy5oWzJdPDwxMCksdGhpcy5oWzJdPTY1NTM1Jih0aGlzLmhbMl0+Pj42fHRoaXMuaFszXTw8NyksdGhpcy5oWzNdPTY1NTM1Jih0aGlzLmhbM10+Pj45fHRoaXMuaFs0XTw8NCksdGhpcy5oWzRdPTY1NTM1Jih0aGlzLmhbNF0+Pj4xMnx0aGlzLmhbNV08PDF8dGhpcy5oWzZdPDwxNCksdGhpcy5oWzVdPTY1NTM1Jih0aGlzLmhbNl0+Pj4yfHRoaXMuaFs3XTw8MTEpLHRoaXMuaFs2XT02NTUzNSYodGhpcy5oWzddPj4+NXx0aGlzLmhbOF08PDgpLHRoaXMuaFs3XT02NTUzNSYodGhpcy5oWzhdPj4+OHx0aGlzLmhbOV08PDUpLGY9dGhpcy5oWzBdK3RoaXMucGFkWzBdLHRoaXMuaFswXT02NTUzNSZmLGk9MTtpPDg7aSsrKWY9KHRoaXMuaFtpXSt0aGlzLnBhZFtpXXwwKSsoZj4+PjE2KXwwLHRoaXMuaFtpXT02NTUzNSZmO21hY1ttYWNwb3MrMF09dGhpcy5oWzBdPj4+MCYyNTUsbWFjW21hY3BvcysxXT10aGlzLmhbMF0+Pj44JjI1NSxtYWNbbWFjcG9zKzJdPXRoaXMuaFsxXT4+PjAmMjU1LG1hY1ttYWNwb3MrM109dGhpcy5oWzFdPj4+OCYyNTUsbWFjW21hY3Bvcys0XT10aGlzLmhbMl0+Pj4wJjI1NSxtYWNbbWFjcG9zKzVdPXRoaXMuaFsyXT4+PjgmMjU1LG1hY1ttYWNwb3MrNl09dGhpcy5oWzNdPj4+MCYyNTUsbWFjW21hY3Bvcys3XT10aGlzLmhbM10+Pj44JjI1NSxtYWNbbWFjcG9zKzhdPXRoaXMuaFs0XT4+PjAmMjU1LG1hY1ttYWNwb3MrOV09dGhpcy5oWzRdPj4+OCYyNTUsbWFjW21hY3BvcysxMF09dGhpcy5oWzVdPj4+MCYyNTUsbWFjW21hY3BvcysxMV09dGhpcy5oWzVdPj4+OCYyNTUsbWFjW21hY3BvcysxMl09dGhpcy5oWzZdPj4+MCYyNTUsbWFjW21hY3BvcysxM109dGhpcy5oWzZdPj4+OCYyNTUsbWFjW21hY3BvcysxNF09dGhpcy5oWzddPj4+MCYyNTUsbWFjW21hY3BvcysxNV09dGhpcy5oWzddPj4+OCYyNTV9LHBvbHkxMzA1LnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24obSxtcG9zLGJ5dGVzKXt2YXIgaSx3YW50O2lmKHRoaXMubGVmdG92ZXIpe2Zvcigod2FudD0xNi10aGlzLmxlZnRvdmVyKT5ieXRlcyYmKHdhbnQ9Ynl0ZXMpLGk9MDtpPHdhbnQ7aSsrKXRoaXMuYnVmZmVyW3RoaXMubGVmdG92ZXIraV09bVttcG9zK2ldO2lmKGJ5dGVzLT13YW50LG1wb3MrPXdhbnQsdGhpcy5sZWZ0b3Zlcis9d2FudCx0aGlzLmxlZnRvdmVyPDE2KXJldHVybjt0aGlzLmJsb2Nrcyh0aGlzLmJ1ZmZlciwwLDE2KSx0aGlzLmxlZnRvdmVyPTB9aWYoYnl0ZXM+PTE2JiYod2FudD1ieXRlcy1ieXRlcyUxNix0aGlzLmJsb2NrcyhtLG1wb3Msd2FudCksbXBvcys9d2FudCxieXRlcy09d2FudCksYnl0ZXMpe2ZvcihpPTA7aTxieXRlcztpKyspdGhpcy5idWZmZXJbdGhpcy5sZWZ0b3ZlcitpXT1tW21wb3MraV07dGhpcy5sZWZ0b3Zlcis9Ynl0ZXN9fTt2YXIgY3J5cHRvX2JveF9hZnRlcm5tPWNyeXB0b19zZWNyZXRib3gsY3J5cHRvX2JveF9vcGVuX2FmdGVybm09Y3J5cHRvX3NlY3JldGJveF9vcGVuO3ZhciBLPVsxMTE2MzUyNDA4LDM2MDk3Njc0NTgsMTg5OTQ0NzQ0MSw2MDI4OTE3MjUsMzA0OTMyMzQ3MSwzOTY0NDg0Mzk5LDM5MjEwMDk1NzMsMjE3MzI5NTU0OCw5NjE5ODcxNjMsNDA4MTYyODQ3MiwxNTA4OTcwOTkzLDMwNTM4MzQyNjUsMjQ1MzYzNTc0OCwyOTM3NjcxNTc5LDI4NzA3NjMyMjEsMzY2NDYwOTU2MCwzNjI0MzgxMDgwLDI3MzQ4ODMzOTQsMzEwNTk4NDAxLDExNjQ5OTY1NDIsNjA3MjI1Mjc4LDEzMjM2MTA3NjQsMTQyNjg4MTk4NywzNTkwMzA0OTk0LDE5MjUwNzgzODgsNDA2ODE4MjM4MywyMTYyMDc4MjA2LDk5MTMzNjExMywyNjE0ODg4MTAzLDYzMzgwMzMxNywzMjQ4MjIyNTgwLDM0Nzk3NzQ4NjgsMzgzNTM5MDQwMSwyNjY2NjEzNDU4LDQwMjIyMjQ3NzQsOTQ0NzExMTM5LDI2NDM0NzA3OCwyMzQxMjYyNzczLDYwNDgwNzYyOCwyMDA3ODAwOTMzLDc3MDI1NTk4MywxNDk1OTkwOTAxLDEyNDkxNTAxMjIsMTg1NjQzMTIzNSwxNTU1MDgxNjkyLDMxNzUyMTgxMzIsMTk5NjA2NDk4NiwyMTk4OTUwODM3LDI1NTQyMjA4ODIsMzk5OTcxOTMzOSwyODIxODM0MzQ5LDc2Njc4NDAxNiwyOTUyOTk2ODA4LDI1NjY1OTQ4NzksMzIxMDMxMzY3MSwzMjAzMzM3OTU2LDMzMzY1NzE4OTEsMTAzNDQ1NzAyNiwzNTg0NTI4NzExLDI0NjY5NDg5MDEsMTEzOTI2OTkzLDM3NTgzMjYzODMsMzM4MjQxODk1LDE2ODcxNzkzNiw2NjYzMDcyMDUsMTE4ODE3OTk2NCw3NzM1Mjk5MTIsMTU0NjA0NTczNCwxMjk0NzU3MzcyLDE1MjI4MDU0ODUsMTM5NjE4MjI5MSwyNjQzODMzODIzLDE2OTUxODM3MDAsMjM0MzUyNzM5MCwxOTg2NjYxMDUxLDEwMTQ0Nzc0ODAsMjE3NzAyNjM1MCwxMjA2NzU5MTQyLDI0NTY5NTYwMzcsMzQ0MDc3NjI3LDI3MzA0ODU5MjEsMTI5MDg2MzQ2MCwyODIwMzAyNDExLDMxNTg0NTQyNzMsMzI1OTczMDgwMCwzNTA1OTUyNjU3LDMzNDU3NjQ3NzEsMTA2MjE3MDA4LDM1MTYwNjU4MTcsMzYwNjAwODM0NCwzNjAwMzUyODA0LDE0MzI3MjU3NzYsNDA5NDU3MTkwOSwxNDY3MDMxNTk0LDI3NTQyMzM0NCw4NTExNjk3MjAsNDMwMjI3NzM0LDMxMDA4MjM3NTIsNTA2OTQ4NjE2LDEzNjMyNTgxOTUsNjU5MDYwNTU2LDM3NTA2ODU1OTMsODgzOTk3ODc3LDM3ODUwNTAyODAsOTU4MTM5NTcxLDMzMTgzMDc0MjcsMTMyMjgyMjIxOCwzODEyNzIzNDAzLDE1MzcwMDIwNjMsMjAwMzAzNDk5NSwxNzQ3ODczNzc5LDM2MDIwMzY4OTksMTk1NTU2MjIyMiwxNTc1OTkwMDEyLDIwMjQxMDQ4MTUsMTEyNTU5MjkyOCwyMjI3NzMwNDUyLDI3MTY5MDQzMDYsMjM2MTg1MjQyNCw0NDI3NzYwNDQsMjQyODQzNjQ3NCw1OTM2OTgzNDQsMjc1NjczNDE4NywzNzMzMTEwMjQ5LDMyMDQwMzE0NzksMjk5OTM1MTU3MywzMzI5MzI1Mjk4LDM4MTU5MjA0MjcsMzM5MTU2OTYxNCwzOTI4MzgzOTAwLDM1MTUyNjcyNzEsNTY2MjgwNzExLDM5NDAxODc2MDYsMzQ1NDA2OTUzNCw0MTE4NjMwMjcxLDQwMDAyMzk5OTIsMTE2NDE4NDc0LDE5MTQxMzg1NTQsMTc0MjkyNDIxLDI3MzEwNTUyNzAsMjg5MzgwMzU2LDMyMDM5OTMwMDYsNDYwMzkzMjY5LDMyMDYyMDMxNSw2ODU0NzE3MzMsNTg3NDk2ODM2LDg1MjE0Mjk3MSwxMDg2NzkyODUxLDEwMTcwMzYyOTgsMzY1NTQzMTAwLDExMjYwMDA1ODAsMjYxODI5NzY3NiwxMjg4MDMzNDcwLDM0MDk4NTUxNTgsMTUwMTUwNTk0OCw0MjM0NTA5ODY2LDE2MDcxNjc5MTUsOTg3MTY3NDY4LDE4MTY0MDIzMTYsMTI0NjE4OTU5MV07ZnVuY3Rpb24gY3J5cHRvX2hhc2hibG9ja3NfaGwoaGgsaGwsbSxuKXtmb3IodmFyIGJoMCxiaDEsYmgyLGJoMyxiaDQsYmg1LGJoNixiaDcsYmwwLGJsMSxibDIsYmwzLGJsNCxibDUsYmw2LGJsNyx0aCx0bCxpLGosaCxsLGEsYixjLGQsd2g9bmV3IEludDMyQXJyYXkoMTYpLHdsPW5ldyBJbnQzMkFycmF5KDE2KSxhaDA9aGhbMF0sYWgxPWhoWzFdLGFoMj1oaFsyXSxhaDM9aGhbM10sYWg0PWhoWzRdLGFoNT1oaFs1XSxhaDY9aGhbNl0sYWg3PWhoWzddLGFsMD1obFswXSxhbDE9aGxbMV0sYWwyPWhsWzJdLGFsMz1obFszXSxhbDQ9aGxbNF0sYWw1PWhsWzVdLGFsNj1obFs2XSxhbDc9aGxbN10scG9zPTA7bj49MTI4Oyl7Zm9yKGk9MDtpPDE2O2krKylqPTgqaStwb3Msd2hbaV09bVtqKzBdPDwyNHxtW2orMV08PDE2fG1baisyXTw8OHxtW2orM10sd2xbaV09bVtqKzRdPDwyNHxtW2orNV08PDE2fG1bais2XTw8OHxtW2orN107Zm9yKGk9MDtpPDgwO2krKylpZihiaDA9YWgwLGJoMT1haDEsYmgyPWFoMixiaDM9YWgzLGJoND1haDQsYmg1PWFoNSxiaDY9YWg2LGFoNyxibDA9YWwwLGJsMT1hbDEsYmwyPWFsMixibDM9YWwzLGJsND1hbDQsYmw1PWFsNSxibDY9YWw2LGFsNyxhPTY1NTM1JihsPWFsNyksYj1sPj4+MTYsYz02NTUzNSYoaD1haDcpLGQ9aD4+PjE2LGErPTY1NTM1JihsPShhbDQ+Pj4xNHxhaDQ8PDE4KV4oYWw0Pj4+MTh8YWg0PDwxNCleKGFoND4+Pjl8YWw0PDwyMykpLGIrPWw+Pj4xNixjKz02NTUzNSYoaD0oYWg0Pj4+MTR8YWw0PDwxOCleKGFoND4+PjE4fGFsNDw8MTQpXihhbDQ+Pj45fGFoNDw8MjMpKSxkKz1oPj4+MTYsYSs9NjU1MzUmKGw9YWw0JmFsNV5+YWw0JmFsNiksYis9bD4+PjE2LGMrPTY1NTM1JihoPWFoNCZhaDVefmFoNCZhaDYpLGQrPWg+Pj4xNixoPUtbMippXSxhKz02NTUzNSYobD1LWzIqaSsxXSksYis9bD4+PjE2LGMrPTY1NTM1JmgsZCs9aD4+PjE2LGg9d2hbaSUxNl0sYis9KGw9d2xbaSUxNl0pPj4+MTYsYys9NjU1MzUmaCxkKz1oPj4+MTYsYys9KGIrPShhKz02NTUzNSZsKT4+PjE2KT4+PjE2LGE9NjU1MzUmKGw9dGw9NjU1MzUmYXxiPDwxNiksYj1sPj4+MTYsYz02NTUzNSYoaD10aD02NTUzNSZjfChkKz1jPj4+MTYpPDwxNiksZD1oPj4+MTYsYSs9NjU1MzUmKGw9KGFsMD4+PjI4fGFoMDw8NCleKGFoMD4+PjJ8YWwwPDwzMCleKGFoMD4+Pjd8YWwwPDwyNSkpLGIrPWw+Pj4xNixjKz02NTUzNSYoaD0oYWgwPj4+Mjh8YWwwPDw0KV4oYWwwPj4+MnxhaDA8PDMwKV4oYWwwPj4+N3xhaDA8PDI1KSksZCs9aD4+PjE2LGIrPShsPWFsMCZhbDFeYWwwJmFsMl5hbDEmYWwyKT4+PjE2LGMrPTY1NTM1JihoPWFoMCZhaDFeYWgwJmFoMl5haDEmYWgyKSxkKz1oPj4+MTYsYmg3PTY1NTM1JihjKz0oYis9KGErPTY1NTM1JmwpPj4+MTYpPj4+MTYpfChkKz1jPj4+MTYpPDwxNixibDc9NjU1MzUmYXxiPDwxNixhPTY1NTM1JihsPWJsMyksYj1sPj4+MTYsYz02NTUzNSYoaD1iaDMpLGQ9aD4+PjE2LGIrPShsPXRsKT4+PjE2LGMrPTY1NTM1JihoPXRoKSxkKz1oPj4+MTYsYWgxPWJoMCxhaDI9YmgxLGFoMz1iaDIsYWg0PWJoMz02NTUzNSYoYys9KGIrPShhKz02NTUzNSZsKT4+PjE2KT4+PjE2KXwoZCs9Yz4+PjE2KTw8MTYsYWg1PWJoNCxhaDY9Ymg1LGFoNz1iaDYsYWgwPWJoNyxhbDE9YmwwLGFsMj1ibDEsYWwzPWJsMixhbDQ9YmwzPTY1NTM1JmF8Yjw8MTYsYWw1PWJsNCxhbDY9Ymw1LGFsNz1ibDYsYWwwPWJsNyxpJTE2PT0xNSlmb3Ioaj0wO2o8MTY7aisrKWg9d2hbal0sYT02NTUzNSYobD13bFtqXSksYj1sPj4+MTYsYz02NTUzNSZoLGQ9aD4+PjE2LGg9d2hbKGorOSklMTZdLGErPTY1NTM1JihsPXdsWyhqKzkpJTE2XSksYis9bD4+PjE2LGMrPTY1NTM1JmgsZCs9aD4+PjE2LHRoPXdoWyhqKzEpJTE2XSxhKz02NTUzNSYobD0oKHRsPXdsWyhqKzEpJTE2XSk+Pj4xfHRoPDwzMSleKHRsPj4+OHx0aDw8MjQpXih0bD4+Pjd8dGg8PDI1KSksYis9bD4+PjE2LGMrPTY1NTM1JihoPSh0aD4+PjF8dGw8PDMxKV4odGg+Pj44fHRsPDwyNCledGg+Pj43KSxkKz1oPj4+MTYsdGg9d2hbKGorMTQpJTE2XSxiKz0obD0oKHRsPXdsWyhqKzE0KSUxNl0pPj4+MTl8dGg8PDEzKV4odGg+Pj4yOXx0bDw8MyleKHRsPj4+Nnx0aDw8MjYpKT4+PjE2LGMrPTY1NTM1JihoPSh0aD4+PjE5fHRsPDwxMyleKHRsPj4+Mjl8dGg8PDMpXnRoPj4+NiksZCs9aD4+PjE2LGQrPShjKz0oYis9KGErPTY1NTM1JmwpPj4+MTYpPj4+MTYpPj4+MTYsd2hbal09NjU1MzUmY3xkPDwxNix3bFtqXT02NTUzNSZhfGI8PDE2O2E9NjU1MzUmKGw9YWwwKSxiPWw+Pj4xNixjPTY1NTM1JihoPWFoMCksZD1oPj4+MTYsaD1oaFswXSxiKz0obD1obFswXSk+Pj4xNixjKz02NTUzNSZoLGQrPWg+Pj4xNixkKz0oYys9KGIrPShhKz02NTUzNSZsKT4+PjE2KT4+PjE2KT4+PjE2LGhoWzBdPWFoMD02NTUzNSZjfGQ8PDE2LGhsWzBdPWFsMD02NTUzNSZhfGI8PDE2LGE9NjU1MzUmKGw9YWwxKSxiPWw+Pj4xNixjPTY1NTM1JihoPWFoMSksZD1oPj4+MTYsaD1oaFsxXSxiKz0obD1obFsxXSk+Pj4xNixjKz02NTUzNSZoLGQrPWg+Pj4xNixkKz0oYys9KGIrPShhKz02NTUzNSZsKT4+PjE2KT4+PjE2KT4+PjE2LGhoWzFdPWFoMT02NTUzNSZjfGQ8PDE2LGhsWzFdPWFsMT02NTUzNSZhfGI8PDE2LGE9NjU1MzUmKGw9YWwyKSxiPWw+Pj4xNixjPTY1NTM1JihoPWFoMiksZD1oPj4+MTYsaD1oaFsyXSxiKz0obD1obFsyXSk+Pj4xNixjKz02NTUzNSZoLGQrPWg+Pj4xNixkKz0oYys9KGIrPShhKz02NTUzNSZsKT4+PjE2KT4+PjE2KT4+PjE2LGhoWzJdPWFoMj02NTUzNSZjfGQ8PDE2LGhsWzJdPWFsMj02NTUzNSZhfGI8PDE2LGE9NjU1MzUmKGw9YWwzKSxiPWw+Pj4xNixjPTY1NTM1JihoPWFoMyksZD1oPj4+MTYsaD1oaFszXSxiKz0obD1obFszXSk+Pj4xNixjKz02NTUzNSZoLGQrPWg+Pj4xNixkKz0oYys9KGIrPShhKz02NTUzNSZsKT4+PjE2KT4+PjE2KT4+PjE2LGhoWzNdPWFoMz02NTUzNSZjfGQ8PDE2LGhsWzNdPWFsMz02NTUzNSZhfGI8PDE2LGE9NjU1MzUmKGw9YWw0KSxiPWw+Pj4xNixjPTY1NTM1JihoPWFoNCksZD1oPj4+MTYsaD1oaFs0XSxiKz0obD1obFs0XSk+Pj4xNixjKz02NTUzNSZoLGQrPWg+Pj4xNixkKz0oYys9KGIrPShhKz02NTUzNSZsKT4+PjE2KT4+PjE2KT4+PjE2LGhoWzRdPWFoND02NTUzNSZjfGQ8PDE2LGhsWzRdPWFsND02NTUzNSZhfGI8PDE2LGE9NjU1MzUmKGw9YWw1KSxiPWw+Pj4xNixjPTY1NTM1JihoPWFoNSksZD1oPj4+MTYsaD1oaFs1XSxiKz0obD1obFs1XSk+Pj4xNixjKz02NTUzNSZoLGQrPWg+Pj4xNixkKz0oYys9KGIrPShhKz02NTUzNSZsKT4+PjE2KT4+PjE2KT4+PjE2LGhoWzVdPWFoNT02NTUzNSZjfGQ8PDE2LGhsWzVdPWFsNT02NTUzNSZhfGI8PDE2LGE9NjU1MzUmKGw9YWw2KSxiPWw+Pj4xNixjPTY1NTM1JihoPWFoNiksZD1oPj4+MTYsaD1oaFs2XSxiKz0obD1obFs2XSk+Pj4xNixjKz02NTUzNSZoLGQrPWg+Pj4xNixkKz0oYys9KGIrPShhKz02NTUzNSZsKT4+PjE2KT4+PjE2KT4+PjE2LGhoWzZdPWFoNj02NTUzNSZjfGQ8PDE2LGhsWzZdPWFsNj02NTUzNSZhfGI8PDE2LGE9NjU1MzUmKGw9YWw3KSxiPWw+Pj4xNixjPTY1NTM1JihoPWFoNyksZD1oPj4+MTYsaD1oaFs3XSxiKz0obD1obFs3XSk+Pj4xNixjKz02NTUzNSZoLGQrPWg+Pj4xNixkKz0oYys9KGIrPShhKz02NTUzNSZsKT4+PjE2KT4+PjE2KT4+PjE2LGhoWzddPWFoNz02NTUzNSZjfGQ8PDE2LGhsWzddPWFsNz02NTUzNSZhfGI8PDE2LHBvcys9MTI4LG4tPTEyOH1yZXR1cm4gbn1mdW5jdGlvbiBjcnlwdG9faGFzaChvdXQsbSxuKXt2YXIgaSxoaD1uZXcgSW50MzJBcnJheSg4KSxobD1uZXcgSW50MzJBcnJheSg4KSx4PW5ldyBVaW50OEFycmF5KDI1NiksYj1uO2ZvcihoaFswXT0xNzc5MDMzNzAzLGhoWzFdPTMxNDQxMzQyNzcsaGhbMl09MTAxMzkwNDI0MixoaFszXT0yNzczNDgwNzYyLGhoWzRdPTEzNTk4OTMxMTksaGhbNV09MjYwMDgyMjkyNCxoaFs2XT01Mjg3MzQ2MzUsaGhbN109MTU0MTQ1OTIyNSxobFswXT00MDg5MjM1NzIwLGhsWzFdPTIyMjc4NzM1OTUsaGxbMl09NDI3MTE3NTcyMyxobFszXT0xNTk1NzUwMTI5LGhsWzRdPTI5MTc1NjUxMzcsaGxbNV09NzI1NTExMTk5LGhsWzZdPTQyMTUzODk1NDcsaGxbN109MzI3MDMzMjA5LGNyeXB0b19oYXNoYmxvY2tzX2hsKGhoLGhsLG0sbiksbiU9MTI4LGk9MDtpPG47aSsrKXhbaV09bVtiLW4raV07Zm9yKHhbbl09MTI4LHhbKG49MjU2LTEyOCoobjwxMTI/MTowKSktOV09MCx0czY0KHgsbi04LGIvNTM2ODcwOTEyfDAsYjw8MyksY3J5cHRvX2hhc2hibG9ja3NfaGwoaGgsaGwseCxuKSxpPTA7aTw4O2krKyl0czY0KG91dCw4KmksaGhbaV0saGxbaV0pO3JldHVybiAwfWZ1bmN0aW9uIGFkZChwLHEpe3ZhciBhPWdmKCksYj1nZigpLGM9Z2YoKSxkPWdmKCksZT1nZigpLGY9Z2YoKSxnPWdmKCksaD1nZigpLHQ9Z2YoKTtaKGEscFsxXSxwWzBdKSxaKHQscVsxXSxxWzBdKSxNKGEsYSx0KSxBKGIscFswXSxwWzFdKSxBKHQscVswXSxxWzFdKSxNKGIsYix0KSxNKGMscFszXSxxWzNdKSxNKGMsYyxEMiksTShkLHBbMl0scVsyXSksQShkLGQsZCksWihlLGIsYSksWihmLGQsYyksQShnLGQsYyksQShoLGIsYSksTShwWzBdLGUsZiksTShwWzFdLGgsZyksTShwWzJdLGcsZiksTShwWzNdLGUsaCl9ZnVuY3Rpb24gY3N3YXAocCxxLGIpe3ZhciBpO2ZvcihpPTA7aTw0O2krKylzZWwyNTUxOShwW2ldLHFbaV0sYil9ZnVuY3Rpb24gcGFjayhyLHApe3ZhciB0eD1nZigpLHR5PWdmKCksemk9Z2YoKTtpbnYyNTUxOSh6aSxwWzJdKSxNKHR4LHBbMF0semkpLE0odHkscFsxXSx6aSkscGFjazI1NTE5KHIsdHkpLHJbMzFdXj1wYXIyNTUxOSh0eCk8PDd9ZnVuY3Rpb24gc2NhbGFybXVsdChwLHEscyl7dmFyIGIsaTtmb3Ioc2V0MjU1MTkocFswXSxnZjApLHNldDI1NTE5KHBbMV0sZ2YxKSxzZXQyNTUxOShwWzJdLGdmMSksc2V0MjU1MTkocFszXSxnZjApLGk9MjU1O2k+PTA7LS1pKWNzd2FwKHAscSxiPXNbaS84fDBdPj4oNyZpKSYxKSxhZGQocSxwKSxhZGQocCxwKSxjc3dhcChwLHEsYil9ZnVuY3Rpb24gc2NhbGFyYmFzZShwLHMpe3ZhciBxPVtnZigpLGdmKCksZ2YoKSxnZigpXTtzZXQyNTUxOShxWzBdLFgpLHNldDI1NTE5KHFbMV0sWSksc2V0MjU1MTkocVsyXSxnZjEpLE0ocVszXSxYLFkpLHNjYWxhcm11bHQocCxxLHMpfWZ1bmN0aW9uIGNyeXB0b19zaWduX2tleXBhaXIocGssc2ssc2VlZGVkKXt2YXIgaSxkPW5ldyBVaW50OEFycmF5KDY0KSxwPVtnZigpLGdmKCksZ2YoKSxnZigpXTtmb3Ioc2VlZGVkfHxyYW5kb21ieXRlcyhzaywzMiksY3J5cHRvX2hhc2goZCxzaywzMiksZFswXSY9MjQ4LGRbMzFdJj0xMjcsZFszMV18PTY0LHNjYWxhcmJhc2UocCxkKSxwYWNrKHBrLHApLGk9MDtpPDMyO2krKylza1tpKzMyXT1wa1tpXTtyZXR1cm4gMH12YXIgTD1uZXcgRmxvYXQ2NEFycmF5KFsyMzcsMjExLDI0NSw5MiwyNiw5OSwxOCw4OCwyMTQsMTU2LDI0NywxNjIsMjIyLDI0OSwyMjIsMjAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMTZdKTtmdW5jdGlvbiBtb2RMKHIseCl7dmFyIGNhcnJ5LGksaixrO2ZvcihpPTYzO2k+PTMyOy0taSl7Zm9yKGNhcnJ5PTAsaj1pLTMyLGs9aS0xMjtqPGs7KytqKXhbal0rPWNhcnJ5LTE2KnhbaV0qTFtqLShpLTMyKV0sY2Fycnk9TWF0aC5mbG9vcigoeFtqXSsxMjgpLzI1NikseFtqXS09MjU2KmNhcnJ5O3hbal0rPWNhcnJ5LHhbaV09MH1mb3IoY2Fycnk9MCxqPTA7ajwzMjtqKyspeFtqXSs9Y2FycnktKHhbMzFdPj40KSpMW2pdLGNhcnJ5PXhbal0+PjgseFtqXSY9MjU1O2ZvcihqPTA7ajwzMjtqKyspeFtqXS09Y2FycnkqTFtqXTtmb3IoaT0wO2k8MzI7aSsrKXhbaSsxXSs9eFtpXT4+OCxyW2ldPTI1NSZ4W2ldfWZ1bmN0aW9uIHJlZHVjZShyKXt2YXIgaSx4PW5ldyBGbG9hdDY0QXJyYXkoNjQpO2ZvcihpPTA7aTw2NDtpKyspeFtpXT1yW2ldO2ZvcihpPTA7aTw2NDtpKyspcltpXT0wO21vZEwocix4KX1mdW5jdGlvbiBjcnlwdG9fc2lnbihzbSxtLG4sc2spe3ZhciBpLGosZD1uZXcgVWludDhBcnJheSg2NCksaD1uZXcgVWludDhBcnJheSg2NCkscj1uZXcgVWludDhBcnJheSg2NCkseD1uZXcgRmxvYXQ2NEFycmF5KDY0KSxwPVtnZigpLGdmKCksZ2YoKSxnZigpXTtjcnlwdG9faGFzaChkLHNrLDMyKSxkWzBdJj0yNDgsZFszMV0mPTEyNyxkWzMxXXw9NjQ7dmFyIHNtbGVuPW4rNjQ7Zm9yKGk9MDtpPG47aSsrKXNtWzY0K2ldPW1baV07Zm9yKGk9MDtpPDMyO2krKylzbVszMitpXT1kWzMyK2ldO2ZvcihjcnlwdG9faGFzaChyLHNtLnN1YmFycmF5KDMyKSxuKzMyKSxyZWR1Y2Uociksc2NhbGFyYmFzZShwLHIpLHBhY2soc20scCksaT0zMjtpPDY0O2krKylzbVtpXT1za1tpXTtmb3IoY3J5cHRvX2hhc2goaCxzbSxuKzY0KSxyZWR1Y2UoaCksaT0wO2k8NjQ7aSsrKXhbaV09MDtmb3IoaT0wO2k8MzI7aSsrKXhbaV09cltpXTtmb3IoaT0wO2k8MzI7aSsrKWZvcihqPTA7ajwzMjtqKyspeFtpK2pdKz1oW2ldKmRbal07cmV0dXJuIG1vZEwoc20uc3ViYXJyYXkoMzIpLHgpLHNtbGVufWZ1bmN0aW9uIGNyeXB0b19zaWduX29wZW4obSxzbSxuLHBrKXt2YXIgaSx0PW5ldyBVaW50OEFycmF5KDMyKSxoPW5ldyBVaW50OEFycmF5KDY0KSxwPVtnZigpLGdmKCksZ2YoKSxnZigpXSxxPVtnZigpLGdmKCksZ2YoKSxnZigpXTtpZihuPDY0KXJldHVybi0xO2lmKGZ1bmN0aW9uKHIscCl7dmFyIHQ9Z2YoKSxjaGs9Z2YoKSxudW09Z2YoKSxkZW49Z2YoKSxkZW4yPWdmKCksZGVuND1nZigpLGRlbjY9Z2YoKTtyZXR1cm4gc2V0MjU1MTkoclsyXSxnZjEpLHVucGFjazI1NTE5KHJbMV0scCksUyhudW0sclsxXSksTShkZW4sbnVtLEQpLFoobnVtLG51bSxyWzJdKSxBKGRlbixyWzJdLGRlbiksUyhkZW4yLGRlbiksUyhkZW40LGRlbjIpLE0oZGVuNixkZW40LGRlbjIpLE0odCxkZW42LG51bSksTSh0LHQsZGVuKSxwb3cyNTIzKHQsdCksTSh0LHQsbnVtKSxNKHQsdCxkZW4pLE0odCx0LGRlbiksTShyWzBdLHQsZGVuKSxTKGNoayxyWzBdKSxNKGNoayxjaGssZGVuKSxuZXEyNTUxOShjaGssbnVtKSYmTShyWzBdLHJbMF0sSSksUyhjaGssclswXSksTShjaGssY2hrLGRlbiksbmVxMjU1MTkoY2hrLG51bSk/LTE6KHBhcjI1NTE5KHJbMF0pPT09cFszMV0+PjcmJlooclswXSxnZjAsclswXSksTShyWzNdLHJbMF0sclsxXSksMCl9KHEscGspKXJldHVybi0xO2ZvcihpPTA7aTxuO2krKyltW2ldPXNtW2ldO2ZvcihpPTA7aTwzMjtpKyspbVtpKzMyXT1wa1tpXTtpZihjcnlwdG9faGFzaChoLG0sbikscmVkdWNlKGgpLHNjYWxhcm11bHQocCxxLGgpLHNjYWxhcmJhc2UocSxzbS5zdWJhcnJheSgzMikpLGFkZChwLHEpLHBhY2sodCxwKSxuLT02NCxjcnlwdG9fdmVyaWZ5XzMyKHNtLDAsdCwwKSl7Zm9yKGk9MDtpPG47aSsrKW1baV09MDtyZXR1cm4tMX1mb3IoaT0wO2k8bjtpKyspbVtpXT1zbVtpKzY0XTtyZXR1cm4gbn12YXIgY3J5cHRvX3NlY3JldGJveF9LRVlCWVRFUz0zMixjcnlwdG9fc2VjcmV0Ym94X05PTkNFQllURVM9MjQsY3J5cHRvX2JveF9QVUJMSUNLRVlCWVRFUz0zMixjcnlwdG9fYm94X1NFQ1JFVEtFWUJZVEVTPTMyLGNyeXB0b19ib3hfTk9OQ0VCWVRFUz1jcnlwdG9fc2VjcmV0Ym94X05PTkNFQllURVM7ZnVuY3Rpb24gY2hlY2tMZW5ndGhzKGssbil7aWYoay5sZW5ndGghPT1jcnlwdG9fc2VjcmV0Ym94X0tFWUJZVEVTKXRocm93IG5ldyBFcnJvcihcImJhZCBrZXkgc2l6ZVwiKTtpZihuLmxlbmd0aCE9PWNyeXB0b19zZWNyZXRib3hfTk9OQ0VCWVRFUyl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgbm9uY2Ugc2l6ZVwiKX1mdW5jdGlvbiBjaGVja0FycmF5VHlwZXMoKXtmb3IodmFyIGk9MDtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKWlmKCEoYXJndW1lbnRzW2ldaW5zdGFuY2VvZiBVaW50OEFycmF5KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwidW5leHBlY3RlZCB0eXBlLCB1c2UgVWludDhBcnJheVwiKX1mdW5jdGlvbiBjbGVhbnVwKGFycil7Zm9yKHZhciBpPTA7aTxhcnIubGVuZ3RoO2krKylhcnJbaV09MH1uYWNsLmxvd2xldmVsPXtjcnlwdG9fY29yZV9oc2Fsc2EyMDpjcnlwdG9fY29yZV9oc2Fsc2EyMCxjcnlwdG9fc3RyZWFtX3hvcjpjcnlwdG9fc3RyZWFtX3hvcixjcnlwdG9fc3RyZWFtOmNyeXB0b19zdHJlYW0sY3J5cHRvX3N0cmVhbV9zYWxzYTIwX3hvcjpjcnlwdG9fc3RyZWFtX3NhbHNhMjBfeG9yLGNyeXB0b19zdHJlYW1fc2Fsc2EyMDpjcnlwdG9fc3RyZWFtX3NhbHNhMjAsY3J5cHRvX29uZXRpbWVhdXRoOmNyeXB0b19vbmV0aW1lYXV0aCxjcnlwdG9fb25ldGltZWF1dGhfdmVyaWZ5OmNyeXB0b19vbmV0aW1lYXV0aF92ZXJpZnksY3J5cHRvX3ZlcmlmeV8xNjpjcnlwdG9fdmVyaWZ5XzE2LGNyeXB0b192ZXJpZnlfMzI6Y3J5cHRvX3ZlcmlmeV8zMixjcnlwdG9fc2VjcmV0Ym94OmNyeXB0b19zZWNyZXRib3gsY3J5cHRvX3NlY3JldGJveF9vcGVuOmNyeXB0b19zZWNyZXRib3hfb3BlbixjcnlwdG9fc2NhbGFybXVsdDpjcnlwdG9fc2NhbGFybXVsdCxjcnlwdG9fc2NhbGFybXVsdF9iYXNlOmNyeXB0b19zY2FsYXJtdWx0X2Jhc2UsY3J5cHRvX2JveF9iZWZvcmVubTpjcnlwdG9fYm94X2JlZm9yZW5tLGNyeXB0b19ib3hfYWZ0ZXJubTpjcnlwdG9fYm94X2FmdGVybm0sY3J5cHRvX2JveDpmdW5jdGlvbihjLG0sZCxuLHkseCl7dmFyIGs9bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBjcnlwdG9fYm94X2JlZm9yZW5tKGsseSx4KSxjcnlwdG9fYm94X2FmdGVybm0oYyxtLGQsbixrKX0sY3J5cHRvX2JveF9vcGVuOmZ1bmN0aW9uKG0sYyxkLG4seSx4KXt2YXIgaz1uZXcgVWludDhBcnJheSgzMik7cmV0dXJuIGNyeXB0b19ib3hfYmVmb3Jlbm0oayx5LHgpLGNyeXB0b19ib3hfb3Blbl9hZnRlcm5tKG0sYyxkLG4sayl9LGNyeXB0b19ib3hfa2V5cGFpcjpjcnlwdG9fYm94X2tleXBhaXIsY3J5cHRvX2hhc2g6Y3J5cHRvX2hhc2gsY3J5cHRvX3NpZ246Y3J5cHRvX3NpZ24sY3J5cHRvX3NpZ25fa2V5cGFpcjpjcnlwdG9fc2lnbl9rZXlwYWlyLGNyeXB0b19zaWduX29wZW46Y3J5cHRvX3NpZ25fb3BlbixjcnlwdG9fc2VjcmV0Ym94X0tFWUJZVEVTOmNyeXB0b19zZWNyZXRib3hfS0VZQllURVMsY3J5cHRvX3NlY3JldGJveF9OT05DRUJZVEVTOmNyeXB0b19zZWNyZXRib3hfTk9OQ0VCWVRFUyxjcnlwdG9fc2VjcmV0Ym94X1pFUk9CWVRFUzozMixjcnlwdG9fc2VjcmV0Ym94X0JPWFpFUk9CWVRFUzoxNixjcnlwdG9fc2NhbGFybXVsdF9CWVRFUzozMixjcnlwdG9fc2NhbGFybXVsdF9TQ0FMQVJCWVRFUzozMixjcnlwdG9fYm94X1BVQkxJQ0tFWUJZVEVTOmNyeXB0b19ib3hfUFVCTElDS0VZQllURVMsY3J5cHRvX2JveF9TRUNSRVRLRVlCWVRFUzpjcnlwdG9fYm94X1NFQ1JFVEtFWUJZVEVTLGNyeXB0b19ib3hfQkVGT1JFTk1CWVRFUzozMixjcnlwdG9fYm94X05PTkNFQllURVM6Y3J5cHRvX2JveF9OT05DRUJZVEVTLGNyeXB0b19ib3hfWkVST0JZVEVTOjMyLGNyeXB0b19ib3hfQk9YWkVST0JZVEVTOjE2LGNyeXB0b19zaWduX0JZVEVTOjY0LGNyeXB0b19zaWduX1BVQkxJQ0tFWUJZVEVTOjMyLGNyeXB0b19zaWduX1NFQ1JFVEtFWUJZVEVTOjY0LGNyeXB0b19zaWduX1NFRURCWVRFUzozMixjcnlwdG9faGFzaF9CWVRFUzo2NCxnZjpnZixEOkQsTDpMLHBhY2syNTUxOTpwYWNrMjU1MTksdW5wYWNrMjU1MTk6dW5wYWNrMjU1MTksTTpNLEE6QSxTOlMsWjpaLHBvdzI1MjM6cG93MjUyMyxhZGQ6YWRkLHNldDI1NTE5OnNldDI1NTE5LG1vZEw6bW9kTCxzY2FsYXJtdWx0OnNjYWxhcm11bHQsc2NhbGFyYmFzZTpzY2FsYXJiYXNlfSxuYWNsLnJhbmRvbUJ5dGVzPWZ1bmN0aW9uKG4pe3ZhciBiPW5ldyBVaW50OEFycmF5KG4pO3JldHVybiByYW5kb21ieXRlcyhiLG4pLGJ9LG5hY2wuc2VjcmV0Ym94PWZ1bmN0aW9uKG1zZyxub25jZSxrZXkpe2NoZWNrQXJyYXlUeXBlcyhtc2csbm9uY2Usa2V5KSxjaGVja0xlbmd0aHMoa2V5LG5vbmNlKTtmb3IodmFyIG09bmV3IFVpbnQ4QXJyYXkoMzIrbXNnLmxlbmd0aCksYz1uZXcgVWludDhBcnJheShtLmxlbmd0aCksaT0wO2k8bXNnLmxlbmd0aDtpKyspbVtpKzMyXT1tc2dbaV07cmV0dXJuIGNyeXB0b19zZWNyZXRib3goYyxtLG0ubGVuZ3RoLG5vbmNlLGtleSksYy5zdWJhcnJheSgxNil9LG5hY2wuc2VjcmV0Ym94Lm9wZW49ZnVuY3Rpb24oYm94LG5vbmNlLGtleSl7Y2hlY2tBcnJheVR5cGVzKGJveCxub25jZSxrZXkpLGNoZWNrTGVuZ3RocyhrZXksbm9uY2UpO2Zvcih2YXIgYz1uZXcgVWludDhBcnJheSgxNitib3gubGVuZ3RoKSxtPW5ldyBVaW50OEFycmF5KGMubGVuZ3RoKSxpPTA7aTxib3gubGVuZ3RoO2krKyljW2krMTZdPWJveFtpXTtyZXR1cm4gYy5sZW5ndGg8MzI/bnVsbDowIT09Y3J5cHRvX3NlY3JldGJveF9vcGVuKG0sYyxjLmxlbmd0aCxub25jZSxrZXkpP251bGw6bS5zdWJhcnJheSgzMil9LG5hY2wuc2VjcmV0Ym94LmtleUxlbmd0aD1jcnlwdG9fc2VjcmV0Ym94X0tFWUJZVEVTLG5hY2wuc2VjcmV0Ym94Lm5vbmNlTGVuZ3RoPWNyeXB0b19zZWNyZXRib3hfTk9OQ0VCWVRFUyxuYWNsLnNlY3JldGJveC5vdmVyaGVhZExlbmd0aD0xNixuYWNsLnNjYWxhck11bHQ9ZnVuY3Rpb24obixwKXtpZihjaGVja0FycmF5VHlwZXMobixwKSwzMiE9PW4ubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBuIHNpemVcIik7aWYoMzIhPT1wLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgcCBzaXplXCIpO3ZhciBxPW5ldyBVaW50OEFycmF5KDMyKTtyZXR1cm4gY3J5cHRvX3NjYWxhcm11bHQocSxuLHApLHF9LG5hY2wuc2NhbGFyTXVsdC5iYXNlPWZ1bmN0aW9uKG4pe2lmKGNoZWNrQXJyYXlUeXBlcyhuKSwzMiE9PW4ubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBuIHNpemVcIik7dmFyIHE9bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBjcnlwdG9fc2NhbGFybXVsdF9iYXNlKHEsbikscX0sbmFjbC5zY2FsYXJNdWx0LnNjYWxhckxlbmd0aD0zMixuYWNsLnNjYWxhck11bHQuZ3JvdXBFbGVtZW50TGVuZ3RoPTMyLG5hY2wuYm94PWZ1bmN0aW9uKG1zZyxub25jZSxwdWJsaWNLZXksc2VjcmV0S2V5KXt2YXIgaz1uYWNsLmJveC5iZWZvcmUocHVibGljS2V5LHNlY3JldEtleSk7cmV0dXJuIG5hY2wuc2VjcmV0Ym94KG1zZyxub25jZSxrKX0sbmFjbC5ib3guYmVmb3JlPWZ1bmN0aW9uKHB1YmxpY0tleSxzZWNyZXRLZXkpe2NoZWNrQXJyYXlUeXBlcyhwdWJsaWNLZXksc2VjcmV0S2V5KSxmdW5jdGlvbihwayxzayl7aWYocGsubGVuZ3RoIT09Y3J5cHRvX2JveF9QVUJMSUNLRVlCWVRFUyl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgcHVibGljIGtleSBzaXplXCIpO2lmKHNrLmxlbmd0aCE9PWNyeXB0b19ib3hfU0VDUkVUS0VZQllURVMpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHNlY3JldCBrZXkgc2l6ZVwiKX0ocHVibGljS2V5LHNlY3JldEtleSk7dmFyIGs9bmV3IFVpbnQ4QXJyYXkoMzIpO3JldHVybiBjcnlwdG9fYm94X2JlZm9yZW5tKGsscHVibGljS2V5LHNlY3JldEtleSksa30sbmFjbC5ib3guYWZ0ZXI9bmFjbC5zZWNyZXRib3gsbmFjbC5ib3gub3Blbj1mdW5jdGlvbihtc2csbm9uY2UscHVibGljS2V5LHNlY3JldEtleSl7dmFyIGs9bmFjbC5ib3guYmVmb3JlKHB1YmxpY0tleSxzZWNyZXRLZXkpO3JldHVybiBuYWNsLnNlY3JldGJveC5vcGVuKG1zZyxub25jZSxrKX0sbmFjbC5ib3gub3Blbi5hZnRlcj1uYWNsLnNlY3JldGJveC5vcGVuLG5hY2wuYm94LmtleVBhaXI9ZnVuY3Rpb24oKXt2YXIgcGs9bmV3IFVpbnQ4QXJyYXkoY3J5cHRvX2JveF9QVUJMSUNLRVlCWVRFUyksc2s9bmV3IFVpbnQ4QXJyYXkoY3J5cHRvX2JveF9TRUNSRVRLRVlCWVRFUyk7cmV0dXJuIGNyeXB0b19ib3hfa2V5cGFpcihwayxzaykse3B1YmxpY0tleTpwayxzZWNyZXRLZXk6c2t9fSxuYWNsLmJveC5rZXlQYWlyLmZyb21TZWNyZXRLZXk9ZnVuY3Rpb24oc2VjcmV0S2V5KXtpZihjaGVja0FycmF5VHlwZXMoc2VjcmV0S2V5KSxzZWNyZXRLZXkubGVuZ3RoIT09Y3J5cHRvX2JveF9TRUNSRVRLRVlCWVRFUyl0aHJvdyBuZXcgRXJyb3IoXCJiYWQgc2VjcmV0IGtleSBzaXplXCIpO3ZhciBwaz1uZXcgVWludDhBcnJheShjcnlwdG9fYm94X1BVQkxJQ0tFWUJZVEVTKTtyZXR1cm4gY3J5cHRvX3NjYWxhcm11bHRfYmFzZShwayxzZWNyZXRLZXkpLHtwdWJsaWNLZXk6cGssc2VjcmV0S2V5Om5ldyBVaW50OEFycmF5KHNlY3JldEtleSl9fSxuYWNsLmJveC5wdWJsaWNLZXlMZW5ndGg9Y3J5cHRvX2JveF9QVUJMSUNLRVlCWVRFUyxuYWNsLmJveC5zZWNyZXRLZXlMZW5ndGg9Y3J5cHRvX2JveF9TRUNSRVRLRVlCWVRFUyxuYWNsLmJveC5zaGFyZWRLZXlMZW5ndGg9MzIsbmFjbC5ib3gubm9uY2VMZW5ndGg9Y3J5cHRvX2JveF9OT05DRUJZVEVTLG5hY2wuYm94Lm92ZXJoZWFkTGVuZ3RoPW5hY2wuc2VjcmV0Ym94Lm92ZXJoZWFkTGVuZ3RoLG5hY2wuc2lnbj1mdW5jdGlvbihtc2csc2VjcmV0S2V5KXtpZihjaGVja0FycmF5VHlwZXMobXNnLHNlY3JldEtleSksNjQhPT1zZWNyZXRLZXkubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBzZWNyZXQga2V5IHNpemVcIik7dmFyIHNpZ25lZE1zZz1uZXcgVWludDhBcnJheSg2NCttc2cubGVuZ3RoKTtyZXR1cm4gY3J5cHRvX3NpZ24oc2lnbmVkTXNnLG1zZyxtc2cubGVuZ3RoLHNlY3JldEtleSksc2lnbmVkTXNnfSxuYWNsLnNpZ24ub3Blbj1mdW5jdGlvbihzaWduZWRNc2cscHVibGljS2V5KXtpZihjaGVja0FycmF5VHlwZXMoc2lnbmVkTXNnLHB1YmxpY0tleSksMzIhPT1wdWJsaWNLZXkubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBwdWJsaWMga2V5IHNpemVcIik7dmFyIHRtcD1uZXcgVWludDhBcnJheShzaWduZWRNc2cubGVuZ3RoKSxtbGVuPWNyeXB0b19zaWduX29wZW4odG1wLHNpZ25lZE1zZyxzaWduZWRNc2cubGVuZ3RoLHB1YmxpY0tleSk7aWYobWxlbjwwKXJldHVybiBudWxsO2Zvcih2YXIgbT1uZXcgVWludDhBcnJheShtbGVuKSxpPTA7aTxtLmxlbmd0aDtpKyspbVtpXT10bXBbaV07cmV0dXJuIG19LG5hY2wuc2lnbi5kZXRhY2hlZD1mdW5jdGlvbihtc2csc2VjcmV0S2V5KXtmb3IodmFyIHNpZ25lZE1zZz1uYWNsLnNpZ24obXNnLHNlY3JldEtleSksc2lnPW5ldyBVaW50OEFycmF5KDY0KSxpPTA7aTxzaWcubGVuZ3RoO2krKylzaWdbaV09c2lnbmVkTXNnW2ldO3JldHVybiBzaWd9LG5hY2wuc2lnbi5kZXRhY2hlZC52ZXJpZnk9ZnVuY3Rpb24obXNnLHNpZyxwdWJsaWNLZXkpe2lmKGNoZWNrQXJyYXlUeXBlcyhtc2csc2lnLHB1YmxpY0tleSksNjQhPT1zaWcubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBzaWduYXR1cmUgc2l6ZVwiKTtpZigzMiE9PXB1YmxpY0tleS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiYmFkIHB1YmxpYyBrZXkgc2l6ZVwiKTt2YXIgaSxzbT1uZXcgVWludDhBcnJheSg2NCttc2cubGVuZ3RoKSxtPW5ldyBVaW50OEFycmF5KDY0K21zZy5sZW5ndGgpO2ZvcihpPTA7aTw2NDtpKyspc21baV09c2lnW2ldO2ZvcihpPTA7aTxtc2cubGVuZ3RoO2krKylzbVtpKzY0XT1tc2dbaV07cmV0dXJuIGNyeXB0b19zaWduX29wZW4obSxzbSxzbS5sZW5ndGgscHVibGljS2V5KT49MH0sbmFjbC5zaWduLmtleVBhaXI9ZnVuY3Rpb24oKXt2YXIgcGs9bmV3IFVpbnQ4QXJyYXkoMzIpLHNrPW5ldyBVaW50OEFycmF5KDY0KTtyZXR1cm4gY3J5cHRvX3NpZ25fa2V5cGFpcihwayxzaykse3B1YmxpY0tleTpwayxzZWNyZXRLZXk6c2t9fSxuYWNsLnNpZ24ua2V5UGFpci5mcm9tU2VjcmV0S2V5PWZ1bmN0aW9uKHNlY3JldEtleSl7aWYoY2hlY2tBcnJheVR5cGVzKHNlY3JldEtleSksNjQhPT1zZWNyZXRLZXkubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBzZWNyZXQga2V5IHNpemVcIik7Zm9yKHZhciBwaz1uZXcgVWludDhBcnJheSgzMiksaT0wO2k8cGsubGVuZ3RoO2krKylwa1tpXT1zZWNyZXRLZXlbMzIraV07cmV0dXJue3B1YmxpY0tleTpwayxzZWNyZXRLZXk6bmV3IFVpbnQ4QXJyYXkoc2VjcmV0S2V5KX19LG5hY2wuc2lnbi5rZXlQYWlyLmZyb21TZWVkPWZ1bmN0aW9uKHNlZWQpe2lmKGNoZWNrQXJyYXlUeXBlcyhzZWVkKSwzMiE9PXNlZWQubGVuZ3RoKXRocm93IG5ldyBFcnJvcihcImJhZCBzZWVkIHNpemVcIik7Zm9yKHZhciBwaz1uZXcgVWludDhBcnJheSgzMiksc2s9bmV3IFVpbnQ4QXJyYXkoNjQpLGk9MDtpPDMyO2krKylza1tpXT1zZWVkW2ldO3JldHVybiBjcnlwdG9fc2lnbl9rZXlwYWlyKHBrLHNrLCEwKSx7cHVibGljS2V5OnBrLHNlY3JldEtleTpza319LG5hY2wuc2lnbi5wdWJsaWNLZXlMZW5ndGg9MzIsbmFjbC5zaWduLnNlY3JldEtleUxlbmd0aD02NCxuYWNsLnNpZ24uc2VlZExlbmd0aD0zMixuYWNsLnNpZ24uc2lnbmF0dXJlTGVuZ3RoPTY0LG5hY2wuaGFzaD1mdW5jdGlvbihtc2cpe2NoZWNrQXJyYXlUeXBlcyhtc2cpO3ZhciBoPW5ldyBVaW50OEFycmF5KDY0KTtyZXR1cm4gY3J5cHRvX2hhc2goaCxtc2csbXNnLmxlbmd0aCksaH0sbmFjbC5oYXNoLmhhc2hMZW5ndGg9NjQsbmFjbC52ZXJpZnk9ZnVuY3Rpb24oeCx5KXtyZXR1cm4gY2hlY2tBcnJheVR5cGVzKHgseSksMCE9PXgubGVuZ3RoJiYwIT09eS5sZW5ndGgmJih4Lmxlbmd0aD09PXkubGVuZ3RoJiYwPT09dm4oeCwwLHksMCx4Lmxlbmd0aCkpfSxuYWNsLnNldFBSTkc9ZnVuY3Rpb24oZm4pe3JhbmRvbWJ5dGVzPWZufSxmdW5jdGlvbigpe3ZhciBjcnlwdG89XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZi5jcnlwdG98fHNlbGYubXNDcnlwdG86bnVsbDtpZihjcnlwdG8mJmNyeXB0by5nZXRSYW5kb21WYWx1ZXMpe25hY2wuc2V0UFJORyhmdW5jdGlvbih4LG4pe3ZhciBpLHY9bmV3IFVpbnQ4QXJyYXkobik7Zm9yKGk9MDtpPG47aSs9NjU1MzYpY3J5cHRvLmdldFJhbmRvbVZhbHVlcyh2LnN1YmFycmF5KGksaStNYXRoLm1pbihuLWksNjU1MzYpKSk7Zm9yKGk9MDtpPG47aSsrKXhbaV09dltpXTtjbGVhbnVwKHYpfSl9ZWxzZVwidW5kZWZpbmVkXCIhPVwiZnVuY3Rpb25cIiYmKGNyeXB0bz1fJGVtcHR5XzYoe30pKSYmY3J5cHRvLnJhbmRvbUJ5dGVzJiZuYWNsLnNldFBSTkcoZnVuY3Rpb24oeCxuKXt2YXIgaSx2PWNyeXB0by5yYW5kb21CeXRlcyhuKTtmb3IoaT0wO2k8bjtpKyspeFtpXT12W2ldO2NsZWFudXAodil9KX0oKX0oXCJ1bmRlZmluZWRcIiE9XCJvYmplY3RcIiYmXyRuYWNsRmFzdF82NS5leHBvcnRzP18kbmFjbEZhc3RfNjUuZXhwb3J0czpzZWxmLm5hY2w9c2VsZi5uYWNsfHx7fSk7XG5cbl8kbmFjbEZhc3RfNjUgPSBfJG5hY2xGYXN0XzY1LmV4cG9ydHNcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltNWhZMnd0Wm1GemRDNXFjeUpkTENKdVlXMWxjeUk2V3lKdVlXTnNJaXdpWjJZaUxDSnBibWwwSWl3aWFTSXNJbklpTENKR2JHOWhkRFkwUVhKeVlYa2lMQ0pzWlc1bmRHZ2lMQ0p5WVc1a2IyMWllWFJsY3lJc0lrVnljbTl5SWl3aVh6QWlMQ0pWYVc1ME9FRnljbUY1SWl3aVh6a2lMQ0puWmpBaUxDSm5aakVpTENKZk1USXhOalkxSWl3aVJDSXNJa1F5SWl3aVdDSXNJbGtpTENKSklpd2lkSE0yTkNJc0luZ2lMQ0pvSWl3aWJDSXNJblp1SWl3aWVHa2lMQ0o1SWl3aWVXa2lMQ0p1SWl3aVpDSXNJbU55ZVhCMGIxOTJaWEpwWm5sZk1UWWlMQ0pqY25sd2RHOWZkbVZ5YVdaNVh6TXlJaXdpWTNKNWNIUnZYMk52Y21WZmMyRnNjMkV5TUNJc0ltOTFkQ0lzSW1sdWNDSXNJbXNpTENKaklpd2lieUlzSW5BaUxDSjFJaXdpYWpBaUxDSnFNU0lzSW1veUlpd2lhak1pTENKcU5DSXNJbW8xSWl3aWFqWWlMQ0pxTnlJc0ltbzRJaXdpYWpraUxDSnFNVEFpTENKcU1URWlMQ0pxTVRJaUxDSnFNVE1pTENKcU1UUWlMQ0pxTVRVaUxDSjRNQ0lzSW5neElpd2llRElpTENKNE15SXNJbmcwSWl3aWVEVWlMQ0o0TmlJc0luZzNJaXdpZURnaUxDSjRPU0lzSW5neE1DSXNJbmd4TVNJc0luZ3hNaUlzSW5neE15SXNJbmd4TkNJc0luZ3hOU0lzSW1OdmNtVmZjMkZzYzJFeU1DSXNJbU55ZVhCMGIxOWpiM0psWDJoellXeHpZVEl3SWl3aVkyOXlaVjlvYzJGc2MyRXlNQ0lzSW5OcFoyMWhJaXdpWTNKNWNIUnZYM04wY21WaGJWOXpZV3h6WVRJd1gzaHZjaUlzSW1Od2IzTWlMQ0p0SWl3aWJYQnZjeUlzSW1JaUxDSjZJaXdpWTNKNWNIUnZYM04wY21WaGJWOXpZV3h6WVRJd0lpd2lZM0o1Y0hSdlgzTjBjbVZoYlNJc0luTWlMQ0p6YmlJc0ltTnllWEIwYjE5emRISmxZVzFmZUc5eUlpd2ljRzlzZVRFek1EVWlMQ0pyWlhraUxDSjBNQ0lzSW5ReElpd2lkRElpTENKME15SXNJblEwSWl3aWREVWlMQ0owTmlJc0luUTNJaXdpZEdocGN5SXNJbUoxWm1abGNpSXNJbFZwYm5ReE5rRnljbUY1SWl3aWNHRmtJaXdpYkdWbWRHOTJaWElpTENKbWFXNGlMQ0pqY25sd2RHOWZiMjVsZEdsdFpXRjFkR2dpTENKdmRYUndiM01pTENKMWNHUmhkR1VpTENKbWFXNXBjMmdpTENKamNubHdkRzlmYjI1bGRHbHRaV0YxZEdoZmRtVnlhV1o1SWl3aWFIQnZjeUlzSW1OeWVYQjBiMTl6WldOeVpYUmliM2dpTENKamNubHdkRzlmYzJWamNtVjBZbTk0WDI5d1pXNGlMQ0p6WlhReU5UVXhPU0lzSW1FaUxDSmpZWEl5TlRVeE9TSXNJbllpTENKTllYUm9JaXdpWm14dmIzSWlMQ0p6Wld3eU5UVXhPU0lzSW5FaUxDSjBJaXdpY0dGamF6STFOVEU1SWl3aWFpSXNJbTVsY1RJMU5URTVJaXdpY0dGeU1qVTFNVGtpTENKMWJuQmhZMnN5TlRVeE9TSXNJa0VpTENKYUlpd2lUU0lzSW5RNElpd2lkRGtpTENKME1UQWlMQ0owTVRFaUxDSjBNVElpTENKME1UTWlMQ0owTVRRaUxDSjBNVFVpTENKME1UWWlMQ0owTVRjaUxDSjBNVGdpTENKME1Ua2lMQ0owTWpBaUxDSjBNakVpTENKME1qSWlMQ0owTWpNaUxDSjBNalFpTENKME1qVWlMQ0owTWpZaUxDSjBNamNpTENKME1qZ2lMQ0owTWpraUxDSjBNekFpTENKaU1DSXNJbUl4SWl3aVlqSWlMQ0ppTXlJc0ltSTBJaXdpWWpVaUxDSmlOaUlzSW1JM0lpd2lZamdpTENKaU9TSXNJbUl4TUNJc0ltSXhNU0lzSW1JeE1pSXNJbUl4TXlJc0ltSXhOQ0lzSW1JeE5TSXNJbE1pTENKcGJuWXlOVFV4T1NJc0luQnZkekkxTWpNaUxDSmpjbmx3ZEc5ZmMyTmhiR0Z5YlhWc2RDSXNJbVVpTENKbUlpd2llRE15SWl3aWMzVmlZWEp5WVhraUxDSjRNVFlpTENKamNubHdkRzlmYzJOaGJHRnliWFZzZEY5aVlYTmxJaXdpWTNKNWNIUnZYMkp2ZUY5clpYbHdZV2x5SWl3aVkzSjVjSFJ2WDJKdmVGOWlaV1p2Y21WdWJTSXNJbkJ5YjNSdmRIbHdaU0lzSW1Kc2IyTnJjeUlzSW1KNWRHVnpJaXdpWkRBaUxDSmtNU0lzSW1ReUlpd2laRE1pTENKa05DSXNJbVExSWl3aVpEWWlMQ0prTnlJc0ltUTRJaXdpWkRraUxDSm9hV0pwZENJc0ltZ3dJaXdpYURFaUxDSm9NaUlzSW1neklpd2lhRFFpTENKb05TSXNJbWcySWl3aWFEY2lMQ0pvT0NJc0ltZzVJaXdpY2pBaUxDSnlNU0lzSW5JeUlpd2ljak1pTENKeU5DSXNJbkkxSWl3aWNqWWlMQ0p5TnlJc0luSTRJaXdpY2praUxDSnRZV01pTENKdFlXTndiM01pTENKdFlYTnJJaXdpWnlJc0luZGhiblFpTENKamNubHdkRzlmWW05NFgyRm1kR1Z5Ym0waUxDSmpjbmx3ZEc5ZlltOTRYMjl3Wlc1ZllXWjBaWEp1YlNJc0lrc2lMQ0pqY25sd2RHOWZhR0Z6YUdKc2IyTnJjMTlvYkNJc0ltaG9JaXdpYUd3aUxDSmlhREFpTENKaWFERWlMQ0ppYURJaUxDSmlhRE1pTENKaWFEUWlMQ0ppYURVaUxDSmlhRFlpTENKaWFEY2lMQ0ppYkRBaUxDSmliREVpTENKaWJESWlMQ0ppYkRNaUxDSmliRFFpTENKaWJEVWlMQ0ppYkRZaUxDSmliRGNpTENKMGFDSXNJblJzSWl3aWQyZ2lMQ0pKYm5Rek1rRnljbUY1SWl3aWQyd2lMQ0poYURBaUxDSmhhREVpTENKaGFESWlMQ0poYURNaUxDSmhhRFFpTENKaGFEVWlMQ0poYURZaUxDSmhhRGNpTENKaGJEQWlMQ0poYkRFaUxDSmhiRElpTENKaGJETWlMQ0poYkRRaUxDSmhiRFVpTENKaGJEWWlMQ0poYkRjaUxDSndiM01pTENKamNubHdkRzlmYUdGemFDSXNJbUZrWkNJc0ltTnpkMkZ3SWl3aWNHRmpheUlzSW5SNElpd2lkSGtpTENKNmFTSXNJbk5qWVd4aGNtMTFiSFFpTENKelkyRnNZWEppWVhObElpd2lZM0o1Y0hSdlgzTnBaMjVmYTJWNWNHRnBjaUlzSW5Ccklpd2ljMnNpTENKelpXVmtaV1FpTENKTUlpd2liVzlrVENJc0ltTmhjbko1SWl3aWNtVmtkV05sSWl3aVkzSjVjSFJ2WDNOcFoyNGlMQ0p6YlNJc0luTnRiR1Z1SWl3aVkzSjVjSFJ2WDNOcFoyNWZiM0JsYmlJc0ltTm9heUlzSW01MWJTSXNJbVJsYmlJc0ltUmxiaklpTENKa1pXNDBJaXdpWkdWdU5pSXNJblZ1Y0dGamEyNWxaeUlzSW1OeWVYQjBiMTl6WldOeVpYUmliM2hmUzBWWlFsbFVSVk1pTENKamNubHdkRzlmYzJWamNtVjBZbTk0WDA1UFRrTkZRbGxVUlZNaUxDSmpjbmx3ZEc5ZlltOTRYMUJWUWt4SlEwdEZXVUpaVkVWVElpd2lZM0o1Y0hSdlgySnZlRjlUUlVOU1JWUkxSVmxDV1ZSRlV5SXNJbU55ZVhCMGIxOWliM2hmVGs5T1EwVkNXVlJGVXlJc0ltTm9aV05yVEdWdVozUm9jeUlzSW1Ob1pXTnJRWEp5WVhsVWVYQmxjeUlzSW1GeVozVnRaVzUwY3lJc0lsUjVjR1ZGY25KdmNpSXNJbU5zWldGdWRYQWlMQ0poY25JaUxDSnNiM2RzWlhabGJDSXNJbU55ZVhCMGIxOWliM2dpTENKamNubHdkRzlmWW05NFgyOXdaVzRpTENKamNubHdkRzlmYzJWamNtVjBZbTk0WDFwRlVrOUNXVlJGVXlJc0ltTnllWEIwYjE5elpXTnlaWFJpYjNoZlFrOVlXa1ZTVDBKWlZFVlRJaXdpWTNKNWNIUnZYM05qWVd4aGNtMTFiSFJmUWxsVVJWTWlMQ0pqY25sd2RHOWZjMk5oYkdGeWJYVnNkRjlUUTBGTVFWSkNXVlJGVXlJc0ltTnllWEIwYjE5aWIzaGZRa1ZHVDFKRlRrMUNXVlJGVXlJc0ltTnllWEIwYjE5aWIzaGZXa1ZTVDBKWlZFVlRJaXdpWTNKNWNIUnZYMkp2ZUY5Q1QxaGFSVkpQUWxsVVJWTWlMQ0pqY25sd2RHOWZjMmxuYmw5Q1dWUkZVeUlzSW1OeWVYQjBiMTl6YVdkdVgxQlZRa3hKUTB0RldVSlpWRVZUSWl3aVkzSjVjSFJ2WDNOcFoyNWZVMFZEVWtWVVMwVlpRbGxVUlZNaUxDSmpjbmx3ZEc5ZmMybG5ibDlUUlVWRVFsbFVSVk1pTENKamNubHdkRzlmYUdGemFGOUNXVlJGVXlJc0luSmhibVJ2YlVKNWRHVnpJaXdpYzJWamNtVjBZbTk0SWl3aWJYTm5JaXdpYm05dVkyVWlMQ0p2Y0dWdUlpd2lZbTk0SWl3aWEyVjVUR1Z1WjNSb0lpd2libTl1WTJWTVpXNW5kR2dpTENKdmRtVnlhR1ZoWkV4bGJtZDBhQ0lzSW5OallXeGhjazExYkhRaUxDSmlZWE5sSWl3aWMyTmhiR0Z5VEdWdVozUm9JaXdpWjNKdmRYQkZiR1Z0Wlc1MFRHVnVaM1JvSWl3aWNIVmliR2xqUzJWNUlpd2ljMlZqY21WMFMyVjVJaXdpWW1WbWIzSmxJaXdpWTJobFkydENiM2hNWlc1bmRHaHpJaXdpWVdaMFpYSWlMQ0pyWlhsUVlXbHlJaXdpWm5KdmJWTmxZM0psZEV0bGVTSXNJbkIxWW14cFkwdGxlVXhsYm1kMGFDSXNJbk5sWTNKbGRFdGxlVXhsYm1kMGFDSXNJbk5vWVhKbFpFdGxlVXhsYm1kMGFDSXNJbk5wWjI0aUxDSnphV2R1WldSTmMyY2lMQ0owYlhBaUxDSnRiR1Z1SWl3aVpHVjBZV05vWldRaUxDSnphV2NpTENKMlpYSnBabmtpTENKbWNtOXRVMlZsWkNJc0luTmxaV1FpTENKelpXVmtUR1Z1WjNSb0lpd2ljMmxuYm1GMGRYSmxUR1Z1WjNSb0lpd2lhR0Z6YUNJc0ltaGhjMmhNWlc1bmRHZ2lMQ0p6WlhSUVVrNUhJaXdpWm00aUxDSmpjbmx3ZEc4aUxDSnpaV3htSWl3aWJYTkRjbmx3ZEc4aUxDSm5aWFJTWVc1a2IyMVdZV3gxWlhNaUxDSnRhVzRpTENKeVpYRjFhWEpsSWl3aWJXOWtkV3hsSWl3aVpYaHdiM0owY3lKZExDSnRZWEJ3YVc1bmN5STZJanREUVVGQkxGTkJRVlZCTEVsQlFVRkJMRU5CUVVGQkxFTkJRMVlzV1VGQlFTeERRVkZCTEVsQlFVbERMRVZCUVVGQkxFTkJRVXNzVTBGQlUwTXNTVUZCUVVFc1EwRkJRVUVzUTBGRGFFSXNTVUZCU1VNc1EwRkJRVUVzUTBGQlIwTXNRMEZCUVVFc1EwRkJTU3hKUVVGSlF5eFpRVUZCUVN4RFFVRmhMRVZCUVVFc1EwRkJRU3hEUVVNMVFpeEhRVUZKU0N4SlFVRkJRU3hEUVVGTkxFbEJRVXRETEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpSQ3hKUVVGQlFTeERRVUZMU1N4TlFVRkJRU3hEUVVGUlNDeERRVUZCUVN4RlFVRkJRU3hEUVVGTFF5eERRVUZCUVN4RFFVRkZSQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkxSQ3hKUVVGQlFTeERRVUZMUXl4RFFVRkJRU3hEUVVGQlFTeERRVU40UkN4UFFVRlBReXhEUVVGQlFTeERRVUZCUVN4RFFVbE1SeXhYUVVGQlFTeERRVUZqTEZWQlFVRXNRMEZCZFVJc1RVRkJUU3hKUVVGSlF5eExRVUZCUVN4RFFVRk5MRk5CUVVFc1EwRkJRU3hEUVVGQkxFTkJSWEpFUXl4RlFVRkJRU3hEUVVGTExFbEJRVWxETEZWQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJRM0JDUXl4RlFVRkJRU3hEUVVGTExFbEJRVWxFTEZWQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJRVXRETEVWQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXNzUTBGQlFTeERRVVZ5UXl4SlFVRkpReXhIUVVGQlFTeERRVUZOV0N4RlFVRkJRU3hGUVVGQlFTeERRVU5PV1N4SFFVRkJRU3hEUVVGTldpeEZRVUZCUVN4RFFVRkhMRU5CUVVNc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFZtRXNUMEZCUVVFc1EwRkJWV0lzUlVGQlFVRXNRMEZCUnl4RFFVRkRMRXRCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU4wUW1Nc1EwRkJRVUVzUTBGQlNXUXNSVUZCUVVFc1EwRkJSeXhEUVVGRExFdEJRVUVzUTBGQlVTeEpRVUZCTEVOQlFWRXNTMEZCUVN4RFFVRlJMRXRCUVVFc1EwRkJVU3hMUVVGQkxFTkJRVkVzUzBGQlFTeERRVUZSTEVsQlFVRXNRMEZCVVN4SFFVRkJMRU5CUVZFc1MwRkJRU3hEUVVGUkxFdEJRVUVzUTBGQlVTeExRVUZCTEVOQlFWRXNTMEZCUVN4RFFVRlJMRXRCUVVFc1EwRkJVU3hMUVVGQkxFTkJRVkVzUzBGQlFTeERRVUZSTEV0QlFVRXNRMEZCUVN4RFFVRkJMRU5CUTJoSlpTeEZRVUZCUVN4RFFVRkxaaXhGUVVGQlFTeERRVUZITEVOQlFVTXNTMEZCUVN4RFFVRlJMRWxCUVVFc1EwRkJVU3hMUVVGQkxFTkJRVkVzUzBGQlFTeERRVUZSTEV0QlFVRXNRMEZCVVN4TFFVRkJMRU5CUVZFc1NVRkJRU3hEUVVGUkxFZEJRVUVzUTBGQlVTeExRVUZCTEVOQlFWRXNTMEZCUVN4RFFVRlJMRXRCUVVFc1EwRkJVU3hKUVVGQkxFTkJRVkVzUzBGQlFTeERRVUZSTEV0QlFVRXNRMEZCVVN4TFFVRkJMRU5CUVZFc1NVRkJRU3hEUVVGQkxFTkJRVUVzUTBGRGFrbG5RaXhEUVVGQlFTeERRVUZKYUVJc1JVRkJRVUVzUTBGQlJ5eERRVUZETEV0QlFVRXNRMEZCVVN4TFFVRkJMRU5CUVZFc1MwRkJRU3hEUVVGUkxFdEJRVUVzUTBGQlVTeExRVUZCTEVOQlFWRXNTMEZCUVN4RFFVRlJMRXRCUVVFc1EwRkJVU3hMUVVGQkxFTkJRVkVzUzBGQlFTeERRVUZSTEV0QlFVRXNRMEZCVVN4TFFVRkJMRU5CUVZFc1MwRkJRU3hEUVVGUkxFdEJRVUVzUTBGQlVTeExRVUZCTEVOQlFWRXNTMEZCUVN4RFFVRlJMRWxCUVVFc1EwRkJRU3hEUVVGQkxFTkJRMmhKYVVJc1EwRkJRVUVzUTBGQlNXcENMRVZCUVVGQkxFTkJRVWNzUTBGQlF5eExRVUZCTEVOQlFWRXNTMEZCUVN4RFFVRlJMRXRCUVVFc1EwRkJVU3hMUVVGQkxFTkJRVkVzUzBGQlFTeERRVUZSTEV0QlFVRXNRMEZCVVN4TFFVRkJMRU5CUVZFc1MwRkJRU3hEUVVGUkxFdEJRVUVzUTBGQlVTeExRVUZCTEVOQlFWRXNTMEZCUVN4RFFVRlJMRXRCUVVFc1EwRkJVU3hMUVVGQkxFTkJRVkVzUzBGQlFTeERRVUZSTEV0QlFVRXNRMEZCVVN4TFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOb1NXdENMRU5CUVVGQkxFTkJRVWxzUWl4RlFVRkJRU3hEUVVGSExFTkJRVU1zUzBGQlFTeERRVUZSTEV0QlFVRXNRMEZCVVN4SlFVRkJMRU5CUVZFc1MwRkJRU3hEUVVGUkxFdEJRVUVzUTBGQlVTeExRVUZCTEVOQlFWRXNTVUZCUVN4RFFVRlJMRXRCUVVFc1EwRkJVU3hMUVVGQkxFTkJRVkVzUzBGQlFTeERRVUZSTEVkQlFVRXNRMEZCVVN4TFFVRkJMRU5CUVZFc1MwRkJRU3hEUVVGUkxFdEJRVUVzUTBGQlVTeEpRVUZCTEVOQlFWRXNTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkZjRWtzVTBGQlUyMUNMRWxCUVVGQkxFTkJRVXRETEVOQlFVRkJMRU5CUVVkc1FpeERRVUZCUVN4RFFVRkhiVUlzUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGQlFVRXNRMEZEY2tKR0xFTkJRVUZCTEVOQlFVVnNRaXhEUVVGQlFTeERRVUZCUVN4RFFVRlJiVUlzUTBGQlFVRXNSVUZCU3l4RlFVRkJMRU5CUVUwc1IwRkJRU3hEUVVOeVFrUXNRMEZCUVVFc1EwRkJSV3hDTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVTF0UWl4RFFVRkJRU3hGUVVGTExFVkJRVUVzUTBGQlRTeEhRVUZCTEVOQlEzSkNSQ3hEUVVGQlFTeERRVUZGYkVJc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCVFcxQ0xFTkJRVUZCTEVWQlFVMHNRMEZCUVN4RFFVRkxMRWRCUVVFc1EwRkRja0pFTEVOQlFVRkJMRU5CUVVWc1FpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGVExFZEJRVUVzUTBGQlNtMUNMRU5CUVVGQkxFTkJRMVJFTEVOQlFVRkJMRU5CUVVWc1FpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGTmIwSXNRMEZCUVVFc1JVRkJTeXhGUVVGQkxFTkJRVThzUjBGQlFTeERRVU4wUWtZc1EwRkJRVUVzUTBGQlJXeENMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVMXZRaXhEUVVGQlFTeEZRVUZMTEVWQlFVRXNRMEZCVHl4SFFVRkJMRU5CUTNSQ1JpeERRVUZCUVN4RFFVRkZiRUlzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJUVzlDTEVOQlFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGTkxFZEJRVUVzUTBGRGRFSkdMRU5CUVVGQkxFTkJRVVZzUWl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZUTEVkQlFVRXNRMEZCU205Q0xFTkJRVUZCTEVOQlIxZ3NVMEZCVTBNc1JVRkJRVUVzUTBGQlIwZ3NRMEZCUVVFc1EwRkJSMGtzUlVGQlFVRXNRMEZCU1VNc1EwRkJRVUVzUTBGQlIwTXNSVUZCUVVFc1EwRkJTVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkRlRUlzU1VGQlNYcENMRU5CUVVGQkxFTkJRVVV3UWl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGRFZpeEpRVUZMTVVJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWw1UWl4RFFVRkJRU3hEUVVGSGVrSXNRMEZCUVVFc1JVRkJRVUVzUTBGQlN6QkNMRU5CUVVGQkxFVkJRVXRTTEVOQlFVRkJMRU5CUVVWSkxFVkJRVUZCTEVOQlFVZDBRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkhkVUlzUTBGQlFVRXNRMEZCUlVNc1JVRkJRVUVzUTBGQlIzaENMRU5CUVVGQkxFTkJRVUZCTEVOQlF6RkRMRTFCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVTB3UWl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUjBGQlR5eERRVUZCTEVWQlFVMHNRMEZCUVN4RFFVZHFReXhUUVVGVFF5eG5Ra0ZCUVVFc1EwRkJhVUpVTEVOQlFVRkJMRU5CUVVkSkxFVkJRVUZCTEVOQlFVbERMRU5CUVVGQkxFTkJRVWRETEVWQlFVRkJMRU5CUVVGQkxFTkJRMnhETEU5QlFVOUlMRVZCUVVGQkxFTkJRVWRJTEVOQlFVRkJMRU5CUVVWSkxFVkJRVUZCTEVOQlFVZERMRU5CUVVGQkxFTkJRVVZETEVWQlFVRkJMRU5CUVVjc1JVRkJRU3hEUVVGQkxFTkJSM1JDTEZOQlFWTkpMR2RDUVVGQlFTeERRVUZwUWxZc1EwRkJRVUVzUTBGQlIwa3NSVUZCUVVFc1EwRkJTVU1zUTBGQlFVRXNRMEZCUjBNc1JVRkJRVUVzUTBGQlFVRXNRMEZEYkVNc1QwRkJUMGdzUlVGQlFVRXNRMEZCUjBnc1EwRkJRVUVzUTBGQlJVa3NSVUZCUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUlVNc1JVRkJRVUVzUTBGQlJ5eEZRVUZCTEVOQlFVRXNRMEUyVlhSQ0xGTkJRVk5MTEcxQ1FVRkJRU3hEUVVGdlFrTXNSMEZCUVVFc1EwRkJTVU1zUjBGQlFVRXNRMEZCU1VNc1EwRkJRVUVzUTBGQlJVTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEV4VlhaRExGTkJRWE5DUXl4RFFVRkJRU3hEUVVGSFF5eERRVUZCUVN4RFFVRkhTQ3hEUVVGQlFTeERRVUZIUXl4RFFVRkJRU3hEUVVGQlFTeERRWE5DTjBJc1NVRnlRa0VzU1VGdFFtVkhMRU5CUVVGQkxFTkJia0pZUXl4RlFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVrb3NRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ4UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeEhRVUZaTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1IwRkJXU3hGUVVGQkxFTkJRemxGU3l4RlFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVrNHNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ4UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeEhRVUZaTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1IwRkJXU3hGUVVGQkxFTkJRemxGVHl4RlFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVsQXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ4UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeEhRVUZaTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1IwRkJXU3hGUVVGQkxFTkJRemxGVVN4RlFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVsSXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ4UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeEhRVUZoTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1IwRkJZU3hGUVVGQkxFTkJRemxGVXl4RlFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVsUXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ6UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRWRCUVdFc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeEhRVUZoTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1IwRkJZU3hGUVVGQkxFTkJRemxGVlN4RlFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVsUXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ4UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeEhRVUZaTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1IwRkJXU3hGUVVGQkxFTkJRemxGVlN4RlFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVsSXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ4UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeEhRVUZaTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1IwRkJXU3hGUVVGQkxFTkJRemxGVXl4RlFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVsUXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ4UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeEhRVUZaTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1IwRkJXU3hGUVVGQkxFTkJRemxGVlN4RlFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVsWXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ4UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeEhRVUZoTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1IwRkJZU3hGUVVGQkxFTkJRemxGVnl4RlFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVsZ3NRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ6UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRWRCUVdFc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeEhRVUZoTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1IwRkJZU3hGUVVGQkxFTkJRemxGV1N4SFFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVtUXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ4UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeEhRVUZoTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1IwRkJZU3hGUVVGQkxFTkJRemxGWlN4SFFVRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVtaENMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZCYzBJc1IwRkJRU3hEUVVGU1FTeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hIUVVGaExFTkJRVUVzUTBGQlFTeERRVUZoTEVkQlFVRXNRMEZCVWtFc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNSMEZCWVN4RlFVRkJMRU5CUVVFc1EwRkJZeXhIUVVGQkxFTkJRVkpCTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFZEJRV0VzUlVGQlFTeERRVU01UldsQ0xFZEJRVUZCTEVOQlFXTXNSMEZCUVN4RFFVRlNha0lzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGelFpeEhRVUZCTEVOQlFWSkJMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVkQlFXRXNRMEZCUVN4RFFVRkJMRU5CUVdFc1IwRkJRU3hEUVVGU1FTeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hIUVVGaExFVkJRVUVzUTBGQlFTeERRVUZqTEVkQlFVRXNRMEZCVWtFc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNSMEZCWVN4RlFVRkJMRU5CUXpsRmEwSXNSMEZCUVVFc1EwRkJZeXhIUVVGQkxFTkJRVkpzUWl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlFYTkNMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1IwRkJZU3hEUVVGQkxFTkJRVUVzUTBGQllTeEhRVUZCTEVOQlFWSkJMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVkQlFXRXNSVUZCUVN4RFFVRkJMRU5CUVdNc1IwRkJRU3hEUVVGU1FTeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hIUVVGaExFVkJRVUVzUTBGRE9VVnRRaXhIUVVGQlFTeERRVUZqTEVkQlFVRXNRMEZCVW01Q0xFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJjMElzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeEhRVUZoTEVOQlFVRXNRMEZCUVN4RFFVRmhMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1IwRkJZU3hGUVVGQkxFTkJRVUVzUTBGQll5eEhRVUZCTEVOQlFWSkJMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVkQlFXRXNSVUZCUVN4RFFVTTVSVzlDTEVkQlFVRkJMRU5CUVdNc1IwRkJRU3hEUVVGU2JrSXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ6UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRWRCUVdFc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeEhRVUZoTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1IwRkJZU3hGUVVGQkxFTkJSVGxGYjBJc1JVRkJRVUVzUTBGQlMyaENMRVZCUVVGQkxFTkJRVWxwUWl4RlFVRkJRU3hEUVVGTGFFSXNSVUZCUVVFc1EwRkJTV2xDTEVWQlFVRkJMRU5CUVV0b1FpeEZRVUZCUVN4RFFVRkphVUlzUlVGQlFVRXNRMEZCUzJoQ0xFVkJRVUZCTEVOQlFVbHBRaXhGUVVGQlFTeERRVUZMYUVJc1JVRkJRVUVzUTBGQlNXbENMRVZCUVVGQkxFTkJRVXRvUWl4RlFVRkJRU3hEUVVGSmFVSXNSVUZCUVVFc1EwRkJTMmhDTEVWQlFVRkJMRU5CUVVscFFpeEZRVUZCUVN4RFFVRkxhRUlzUlVGQlFVRXNRMEZEY0VWcFFpeEZRVUZCUVN4RFFVRkxhRUlzUlVGQlFVRXNRMEZCU1dsQ0xFVkJRVUZCTEVOQlFVdG9RaXhGUVVGQlFTeERRVUZKYVVJc1IwRkJRVUVzUTBGQlRXaENMRWRCUVVGQkxFTkJRVXRwUWl4SFFVRkJRU3hEUVVGTmFFSXNSMEZCUVVFc1EwRkJTMmxDTEVkQlFVRkJMRU5CUVUxb1FpeEhRVUZCUVN4RFFVRkxhVUlzUjBGQlFVRXNRMEZCVFdoQ0xFZEJRVUZCTEVOQlFVdHBRaXhIUVVGQlFTeERRVUZOYUVJc1IwRkJRVUVzUTBGRGNFVnBRaXhIUVVGQlFTeERRVUZOYUVJc1IwRkJRVUVzUTBGRlJIQkVMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlNVRXNRMEZCUVVFc1JVRkJTeXhEUVVGQkxFTkJVVE5DY1VRc1JVRkJRVUVzUlVGQlFVRXNRMEZFUVdwQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUkVFMlFpeEhRVUZCUVN4RlFVRkJRU3hEUVVSQk4wSXNRMEZCUVVFc1EwRkJRVUVzUTBGRVFYbENMRVZCUVVGQkxFVkJRVUZCTEVOQlJFRjZRaXhEUVVGQlFTeERRVUZCUVN4RFFVUkJjVUlzUlVGQlFVRXNSVUZCUVVFc1EwRkVRWEpDTEVOQlFVRkJMRU5CUVVscFFpeEZRVUZCUVN4RFFVRkxXU3hIUVVGQlFTeERRVUZOTEVOQlFVRXNSMEZEVGl4RFFVRkJMRU5CUVVrM1FpeERRVUZCUVN4SFFVRkpMRVZCUVVFc1JVRkRVbWxDTEVWQlFVRkJMRU5CUVVzc1EwRkJRU3hIUVVOTUxFTkJRVUVzUTBGQlNXcENMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeEZRVU5TY1VJc1JVRkJRVUVzUTBGQlN5eERRVUZCTEVkQlEwb3NSVUZCUVN4RFFVRkxja0lzUTBGQlFVRXNSMEZCU1N4RlFVRkJMRVZCUTFSNVFpeEZRVUZCUVN4RFFVRkxMRU5CUVVFc1IwRkRUaXhGUVVGQkxFTkJRVXQ2UWl4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUTBGVGJFSnpRaXhGUVVGQlFTeEZRVUZCUVN4RFFVUkJkRUlzUTBGQlFVRXNRMEZCUVVFc1EwRkVRV3RDTEVWQlFVRkJMRVZCUVVGQkxFTkJSRUZzUWl4RFFVRkJRU3hEUVVGQlFTeERRVVJCT0VJc1IwRkJRVUVzUlVGQlFVRXNRMEZFUVRsQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUkVFd1FpeEZRVUZCUVN4RlFVRkJRU3hEUVVSQk1VSXNRMEZCUVVFc1EwRkJTWE5DTEVWQlFVRkJMRU5CUVV0S0xFVkJRVUZCTEVOQlFVc3NRMEZCUVN4SFFVTk1MRU5CUVVFc1EwRkJTV3hDTEVOQlFVRkJMRWRCUVVrc1JVRkJRU3hGUVVOU2MwSXNSVUZCUVVFc1EwRkJTeXhEUVVGQkxFZEJRMG9zUTBGQlFTeERRVUZKZEVJc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVWQlExSXdRaXhGUVVGQlFTeERRVUZMTEVOQlFVRXNSMEZEVGl4RlFVRkJMRU5CUVVzeFFpeERRVUZCUVN4SFFVRkpMRVZCUVVFc1JVRkRWRGhDTEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hIUVVOT0xFVkJRVUVzUTBGQlN6bENMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeERRVk5zUWpKQ0xFZEJRVUZCTEVWQlFVRkJMRU5CUkVFelFpeERRVUZCUVN4RFFVRkJRU3hEUVVSQmRVSXNSVUZCUVVFc1JVRkJRVUVzUTBGRVFYWkNMRU5CUVVGQkxFTkJRVUZCTEVOQlJFRnRRaXhGUVVGQlFTeEZRVUZCUVN4RFFVUkJia0lzUTBGQlFVRXNRMEZCUVVFc1EwRkVRU3RDTEVkQlFVRkJMRVZCUVVGQkxFTkJSRUV2UWl4RFFVRkJRU3hEUVVGSk1rSXNSMEZCUVVFc1EwRkJUVW9zUlVGQlFVRXNRMEZCU3l4RFFVRkJMRWRCUTB3c1EwRkJRU3hEUVVGSmRrSXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFVkJRMUl5UWl4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUjBGRFVDeERRVUZCTEVOQlFVa3pRaXhEUVVGQlFTeEhRVUZKTEVWQlFVRXNSVUZEVWl0Q0xFZEJRVUZCTEVOQlFVMHNRMEZCUVN4SFFVTk9MRVZCUVVFc1EwRkJTeTlDTEVOQlFVRkJMRWRCUVVrc1JVRkJRU3hGUVVOVWJVSXNSVUZCUVVFc1EwRkJTeXhEUVVGQkxFZEJRMG9zUlVGQlFTeERRVUZMYmtJc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlUyNUNaME1zUjBGQlFVRXNSVUZCUVVFc1EwRkVRV2hETEVOQlFVRkJMRU5CUVVGQkxFTkJSRUUwUWl4SFFVRkJRU3hGUVVGQlFTeERRVVJCTlVJc1EwRkJRVUVzUTBGQlFVRXNRMEZFUVhkQ0xFVkJRVUZCTEVWQlFVRkJMRU5CUkVGNFFpeERRVUZCUVN4RFFVRkJRU3hEUVVSQmIwSXNSVUZCUVVFc1JVRkJRVUVzUTBGRVFYQkNMRU5CUVVGQkxFTkJRVWxuUXl4SFFVRkJRU3hEUVVGTlNpeEhRVUZCUVN4RFFVRk5MRU5CUVVFc1IwRkRVQ3hEUVVGQkxFTkJRVWsxUWl4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUlVGRFVtZERMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeEhRVU5PTEVOQlFVRXNRMEZCU1doRExFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RlFVTlNiMElzUlVGQlFVRXNRMEZCU3l4RFFVRkJMRWRCUTBvc1JVRkJRU3hEUVVGTGNFSXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFVkJRMVIzUWl4RlFVRkJRU3hEUVVGTExFTkJRVUVzUjBGRFRDeEZRVUZCTEVOQlFVdDRRaXhEUVVGQlFTeEhRVUZKTEVWQlFVRXNRMEZUYmtKcFFpeEZRVUZCUVN4RlFVRkJRU3hEUVVSQmFrSXNRMEZCUVVFc1EwRkJRVUVzUTBGRVFXOUNMRVZCUVVGQkxFVkJRVUZCTEVOQlJFRndRaXhEUVVGQlFTeERRVUZCUVN4RFFVUkJiVUlzUlVGQlFVRXNSVUZCUVVFc1EwRkVRVzVDTEVOQlFVRkJMRU5CUVVGQkxFTkJSRUZyUWl4RlFVRkJRU3hGUVVGQlFTeERRVVJCYkVJc1EwRkJRVUVzUTBGQlNXbENMRVZCUVVGQkxFTkJRVXRITEVWQlFVRkJMRU5CUVVzc1EwRkJRU3hIUVVOTUxFTkJRVUVzUTBGQlNYQkNMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeEZRVU5TYVVJc1JVRkJRVUVzUTBGQlN5eERRVUZCTEVkQlEwd3NRMEZCUVN4RFFVRkpha0lzUTBGQlFVRXNSMEZCU1N4RlFVRkJMRVZCUTFKclFpeEZRVUZCUVN4RFFVRkxMRU5CUVVFc1IwRkRUQ3hGUVVGQkxFTkJRVXRzUWl4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUlVGRFZHMUNMRVZCUVVGQkxFTkJRVXNzUTBGQlFTeEhRVU5NTEVWQlFVRXNRMEZCUzI1Q0xFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RFFWTnNRbk5DTEVWQlFVRkJMRVZCUVVGQkxFTkJSRUYwUWl4RFFVRkJRU3hEUVVGQlFTeERRVVJCY1VJc1JVRkJRVUVzUlVGQlFVRXNRMEZFUVhKQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUkVGM1FpeEZRVUZCUVN4RlFVRkJRU3hEUVVSQmVFSXNRMEZCUVVFc1EwRkJRVUVzUTBGRVFYVkNMRVZCUVVGQkxFVkJRVUZCTEVOQlJFRjJRaXhEUVVGQlFTeERRVUZKYzBJc1JVRkJRVUVzUTBGQlMwUXNSVUZCUVVFc1EwRkJTeXhEUVVGQkxFZEJRMHdzUTBGQlFTeERRVUZKY2tJc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVWQlExSnpRaXhGUVVGQlFTeERRVUZMTEVOQlFVRXNSMEZEVEN4RFFVRkJMRU5CUVVsMFFpeERRVUZCUVN4SFFVRkpMRVZCUVVFc1JVRkRVblZDTEVWQlFVRkJMRU5CUVVzc1EwRkJRU3hIUVVOTUxFVkJRVUVzUTBGQlMzWkNMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeEZRVU5VZDBJc1JVRkJRVUVzUTBGQlN5eERRVUZCTEVkQlEwd3NSVUZCUVN4RFFVRkxlRUlzUTBGQlFVRXNSMEZCU1N4RlFVRkJMRU5CVTJ4Q01rSXNSMEZCUVVFc1JVRkJRVUVzUTBGRVFUTkNMRU5CUVVGQkxFTkJRVUZCTEVOQlJFRXdRaXhGUVVGQlFTeEZRVUZCUVN4RFFVUkJNVUlzUTBGQlFVRXNRMEZCUVVFc1EwRkVRWGxDTEVWQlFVRkJMRVZCUVVGQkxFTkJSRUY2UWl4RFFVRkJRU3hEUVVGQlFTeERRVVJCTkVJc1IwRkJRVUVzUlVGQlFVRXNRMEZFUVRWQ0xFTkJRVUZCTEVOQlFVa3lRaXhIUVVGQlFTeERRVUZOUkN4RlFVRkJRU3hEUVVGTExFTkJRVUVzUjBGRFRDeERRVUZCTEVOQlFVa3hRaXhEUVVGQlFTeEhRVUZKTEVWQlFVRXNSVUZEVWpKQ0xFZEJRVUZCTEVOQlFVMHNRMEZCUVN4SFFVTlFMRU5CUVVFc1EwRkJTVE5DTEVOQlFVRkJMRWRCUVVrc1JVRkJRU3hGUVVOU05FSXNSMEZCUVVFc1EwRkJUU3hEUVVGQkxFZEJRMDRzUlVGQlFTeERRVUZMTlVJc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVWQlExUjVRaXhGUVVGQlFTeERRVUZMTEVOQlFVRXNSMEZEU2l4RlFVRkJMRU5CUVV0NlFpeERRVUZCUVN4SFFVRkpMRVZCUVVFc1EwRlRia0puUXl4SFFVRkJRU3hGUVVGQlFTeERRVVJCYUVNc1EwRkJRVUVzUTBGQlFVRXNRMEZFUVN0Q0xFZEJRVUZCTEVWQlFVRkJMRU5CUkVFdlFpeERRVUZCUVN4RFFVRkJRU3hEUVVSQk9FSXNSMEZCUVVFc1JVRkJRVUVzUTBGRVFUbENMRU5CUVVGQkxFTkJRVUZCTEVOQlJFRTJRaXhIUVVGQlFTeEZRVUZCUVN4RFFVUkJOMElzUTBGQlFVRXNRMEZCU1dkRExFZEJRVUZCTEVOQlFVMUVMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeEhRVU5PTEVOQlFVRXNRMEZCU1M5Q0xFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RlFVTlNaME1zUjBGQlFVRXNRMEZCVFN4RFFVRkJMRWRCUTA0c1EwRkJRU3hEUVVGSmFFTXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFVkJRMUkyUWl4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUjBGRFRpeEZRVUZCTEVOQlFVczNRaXhEUVVGQlFTeEhRVUZKTEVWQlFVRXNSVUZEVkRoQ0xFZEJRVUZCTEVOQlFVMHNRMEZCUVN4SFFVTk9MRVZCUVVFc1EwRkJTemxDTEVOQlFVRkJMRWRCUVVrc1JVRkJRU3hEUVVWd1FtbENMRVZCUVVGQkxFTkJRVTFCTEVWQlFVRkJMRU5CUVUxb1FpeEZRVUZCUVN4RFFVRkxMRU5CUVVFc1EwRkRha0pwUWl4RlFVRkJRU3hEUVVGTlFTeEZRVUZCUVN4RFFVRk5hRUlzUlVGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUTJwQ2FVSXNSVUZCUVVFc1EwRkJUVUVzUlVGQlFVRXNRMEZCVFdoQ0xFVkJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVTnFRbWxDTEVWQlFVRkJMRU5CUVUxQkxFVkJRVUZCTEVOQlFVMW9RaXhGUVVGQlFTeERRVUZMTEVOQlFVRXNRMEZEYWtKcFFpeEZRVUZCUVN4RFFVRk5RU3hGUVVGQlFTeERRVUZOYUVJc1JVRkJRVUVzUTBGQlN5eERRVUZCTEVOQlEycENhVUlzUlVGQlFVRXNRMEZCVFVFc1JVRkJRVUVzUTBGQlRXaENMRVZCUVVGQkxFTkJRVXNzUTBGQlFTeERRVU5xUW1sQ0xFVkJRVUZCTEVOQlFVMUJMRVZCUVVGQkxFTkJRVTFvUWl4RlFVRkJRU3hEUVVGTExFTkJRVUVzUTBGRGFrSnBRaXhGUVVGQlFTeERRVUZOUVN4RlFVRkJRU3hEUVVGTmFFSXNSVUZCUVVFc1EwRkJTeXhEUVVGQkxFTkJRMnBDYVVJc1JVRkJRVUVzUTBGQlRVRXNSVUZCUVVFc1EwRkJUV2hDTEVWQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVOcVFtbENMRVZCUVVGQkxFTkJRVTFCTEVWQlFVRkJMRU5CUVUxb1FpeEZRVUZCUVN4RFFVRkxMRU5CUVVFc1EwRkRiRUpwUWl4SFFVRkJRU3hEUVVGTlFTeEhRVUZCUVN4RFFVRk5hRUlzUjBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUTJ4Q2FVSXNSMEZCUVVFc1EwRkJUVUVzUjBGQlFVRXNRMEZCVFdoQ0xFZEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVTnNRbWxDTEVkQlFVRkJMRU5CUVUxQkxFZEJRVUZCTEVOQlFVMW9RaXhIUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZEYkVKcFFpeEhRVUZCUVN4RFFVRk5RU3hIUVVGQlFTeERRVUZOYUVJc1IwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlEyeENhVUlzUjBGQlFVRXNRMEZCVFVFc1IwRkJRVUVzUTBGQlRXaENMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVU5zUW1sQ0xFZEJRVUZCTEVOQlFVMUJMRWRCUVVGQkxFTkJRVTFvUWl4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGRmJFSnNRaXhEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkxiVUlzUlVGQlFVRXNSMEZCVVN4RFFVRkJMRU5CUVVrc1IwRkJRU3hEUVVOd1FtNUNMRU5CUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVdHRRaXhGUVVGQlFTeEhRVUZSTEVOQlFVRXNRMEZCU1N4SFFVRkJMRU5CUTNCQ2JrSXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlMyMUNMRVZCUVVGQkxFZEJRVThzUlVGQlFTeERRVUZMTEVkQlFVRXNRMEZEY0VKdVFpeERRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJRU3hEUVVGTGJVSXNSVUZCUVVFc1IwRkJUeXhGUVVGQkxFTkJRVXNzUjBGQlFTeERRVVZ3UW01Q0xFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVV0dlFpeEZRVUZCUVN4SFFVRlJMRU5CUVVFc1EwRkJTU3hIUVVGQkxFTkJRM0JDY0VJc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZCUzI5Q0xFVkJRVUZCTEVkQlFWRXNRMEZCUVN4RFFVRkpMRWRCUVVFc1EwRkRjRUp3UWl4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVUZMYjBJc1JVRkJRVUVzUjBGQlR5eEZRVUZCTEVOQlFVc3NSMEZCUVN4RFFVTndRbkJDTEVOQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXR2UWl4RlFVRkJRU3hIUVVGUExFVkJRVUVzUTBGQlN5eEhRVUZCTEVOQlJYQkNjRUlzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkJTM0ZDTEVWQlFVRkJMRWRCUVZFc1EwRkJRU3hEUVVGSkxFZEJRVUVzUTBGRGNFSnlRaXhEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkxjVUlzUlVGQlFVRXNSMEZCVVN4RFFVRkJMRU5CUVVrc1IwRkJRU3hEUVVOd1FuSkNMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVMXhRaXhGUVVGQlFTeEhRVUZQTEVWQlFVRXNRMEZCU3l4SFFVRkJMRU5CUTNCQ2NrSXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlRYRkNMRVZCUVVGQkxFZEJRVThzUlVGQlFTeERRVUZMTEVkQlFVRXNRMEZGY0VKeVFpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGTmMwSXNSVUZCUVVFc1IwRkJVU3hEUVVGQkxFTkJRVWtzUjBGQlFTeERRVU53UW5SQ0xFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVUxelFpeEZRVUZCUVN4SFFVRlJMRU5CUVVFc1EwRkJTU3hIUVVGQkxFTkJRM0JDZEVJc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCVFhOQ0xFVkJRVUZCTEVkQlFVOHNSVUZCUVN4RFFVRkxMRWRCUVVFc1EwRkRjRUowUWl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZOYzBJc1JVRkJRVUVzUjBGQlR5eEZRVUZCTEVOQlFVc3NSMEZCUVN4RFFVVndRblJDTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVTExUWl4RlFVRkJRU3hIUVVGUkxFTkJRVUVzUTBGQlNTeEhRVUZCTEVOQlEzQkNka0lzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJUWFZDTEVWQlFVRkJMRWRCUVZFc1EwRkJRU3hEUVVGSkxFZEJRVUVzUTBGRGNFSjJRaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRk5kVUlzUlVGQlFVRXNSMEZCVHl4RlFVRkJMRU5CUVVzc1IwRkJRU3hEUVVOd1FuWkNMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVMTFRaXhGUVVGQlFTeEhRVUZQTEVWQlFVRXNRMEZCU3l4SFFVRkJMRU5CUlhCQ2RrSXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlRYZENMRVZCUVVGQkxFZEJRVkVzUTBGQlFTeERRVUZKTEVkQlFVRXNRMEZEY0VKNFFpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGTmQwSXNSVUZCUVVFc1IwRkJVU3hEUVVGQkxFTkJRVWtzUjBGQlFTeERRVU53UW5oQ0xFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVUxM1FpeEZRVUZCUVN4SFFVRlBMRVZCUVVFc1EwRkJTeXhIUVVGQkxFTkJRM0JDZUVJc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCVFhkQ0xFVkJRVUZCTEVkQlFVOHNSVUZCUVN4RFFVRkxMRWRCUVVFc1EwRkZjRUo0UWl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZOZVVJc1JVRkJRVUVzUjBGQlVTeERRVUZCTEVOQlFVa3NSMEZCUVN4RFFVTndRbnBDTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVTE1UWl4RlFVRkJRU3hIUVVGUkxFTkJRVUVzUTBGQlNTeEhRVUZCTEVOQlEzQkNla0lzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJUWGxDTEVWQlFVRkJMRWRCUVU4c1JVRkJRU3hEUVVGTExFZEJRVUVzUTBGRGNFSjZRaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRk5lVUlzUlVGQlFVRXNSMEZCVHl4RlFVRkJMRU5CUVVzc1IwRkJRU3hEUVVWd1FucENMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVMHdRaXhGUVVGQlFTeEhRVUZSTEVOQlFVRXNRMEZCU1N4SFFVRkJMRU5CUTNCQ01VSXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlRUQkNMRVZCUVVGQkxFZEJRVkVzUTBGQlFTeERRVUZKTEVkQlFVRXNRMEZEY0VJeFFpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGTk1FSXNSVUZCUVVFc1IwRkJUeXhGUVVGQkxFTkJRVXNzUjBGQlFTeERRVU53UWpGQ0xFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVUwd1FpeEZRVUZCUVN4SFFVRlBMRVZCUVVFc1EwRkJTeXhIUVVGQkxFTkJSWEJDTVVJc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCVFRKQ0xFVkJRVUZCTEVkQlFWRXNRMEZCUVN4RFFVRkpMRWRCUVVFc1EwRkRjRUl6UWl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZOTWtJc1JVRkJRVUVzUjBGQlVTeERRVUZCTEVOQlFVa3NSMEZCUVN4RFFVTndRak5DTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVTB5UWl4RlFVRkJRU3hIUVVGUExFVkJRVUVzUTBGQlN5eEhRVUZCTEVOQlEzQkNNMElzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJUVEpDTEVWQlFVRkJMRWRCUVU4c1JVRkJRU3hEUVVGTExFZEJRVUVzUTBGRmNFSXpRaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRk5ORUlzUlVGQlFVRXNSMEZCVVN4RFFVRkJMRU5CUVVrc1IwRkJRU3hEUVVOd1FqVkNMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVMDBRaXhGUVVGQlFTeEhRVUZSTEVOQlFVRXNRMEZCU1N4SFFVRkJMRU5CUTNCQ05VSXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlRUUkNMRVZCUVVGQkxFZEJRVThzUlVGQlFTeERRVUZMTEVkQlFVRXNRMEZEY0VJMVFpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGTk5FSXNSVUZCUVVFc1IwRkJUeXhGUVVGQkxFTkJRVXNzUjBGQlFTeERRVVZ3UWpWQ0xFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVUwMlFpeEhRVUZCUVN4SFFVRlRMRU5CUVVFc1EwRkJTU3hIUVVGQkxFTkJRM0pDTjBJc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCVFRaQ0xFZEJRVUZCTEVkQlFWTXNRMEZCUVN4RFFVRkpMRWRCUVVFc1EwRkRja0kzUWl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZOTmtJc1IwRkJRVUVzUjBGQlVTeEZRVUZCTEVOQlFVc3NSMEZCUVN4RFFVTnlRamRDTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVTAyUWl4SFFVRkJRU3hIUVVGUkxFVkJRVUVzUTBGQlN5eEhRVUZCTEVOQlJYSkNOMElzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJUVGhDTEVkQlFVRkJMRWRCUVZNc1EwRkJRU3hEUVVGSkxFZEJRVUVzUTBGRGNrSTVRaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRk5PRUlzUjBGQlFVRXNSMEZCVXl4RFFVRkJMRU5CUVVrc1IwRkJRU3hEUVVOeVFqbENMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVMDRRaXhIUVVGQlFTeEhRVUZSTEVWQlFVRXNRMEZCU3l4SFFVRkJMRU5CUTNKQ09VSXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlRUaENMRWRCUVVGQkxFZEJRVkVzUlVGQlFTeERRVUZMTEVkQlFVRXNRMEZGY2tJNVFpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGTkswSXNSMEZCUVVFc1IwRkJVeXhEUVVGQkxFTkJRVWtzUjBGQlFTeERRVU55UWk5Q0xFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVUwclFpeEhRVUZCUVN4SFFVRlRMRU5CUVVFc1EwRkJTU3hIUVVGQkxFTkJRM0pDTDBJc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCVFN0Q0xFZEJRVUZCTEVkQlFWRXNSVUZCUVN4RFFVRkxMRWRCUVVFc1EwRkRja0l2UWl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZOSzBJc1IwRkJRVUVzUjBGQlVTeEZRVUZCTEVOQlFVc3NSMEZCUVN4RFFVVnlRaTlDTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVTFuUXl4SFFVRkJRU3hIUVVGVExFTkJRVUVzUTBGQlNTeEhRVUZCTEVOQlEzSkNhRU1zUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJUV2RETEVkQlFVRkJMRWRCUVZNc1EwRkJRU3hEUVVGSkxFZEJRVUVzUTBGRGNrSm9ReXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRk5aME1zUjBGQlFVRXNSMEZCVVN4RlFVRkJMRU5CUVVzc1IwRkJRU3hEUVVOeVFtaERMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVMW5ReXhIUVVGQlFTeEhRVUZSTEVWQlFVRXNRMEZCU3l4SFFVRkJMRU5CUlhKQ2FFTXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlRXbERMRWRCUVVGQkxFZEJRVk1zUTBGQlFTeERRVUZKTEVkQlFVRXNRMEZEY2tKcVF5eERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGTmFVTXNSMEZCUVVFc1IwRkJVeXhEUVVGQkxFTkJRVWtzUjBGQlFTeERRVU55UW1wRExFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVUxcFF5eEhRVUZCUVN4SFFVRlJMRVZCUVVFc1EwRkJTeXhIUVVGQkxFTkJRM0pDYWtNc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCVFdsRExFZEJRVUZCTEVkQlFWRXNSVUZCUVN4RFFVRkxMRWRCUVVFc1EwRkZja0pxUXl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZOYTBNc1IwRkJRVUVzUjBGQlV5eERRVUZCTEVOQlFVa3NSMEZCUVN4RFFVTnlRbXhETEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVTFyUXl4SFFVRkJRU3hIUVVGVExFTkJRVUVzUTBGQlNTeEhRVUZCTEVOQlEzSkNiRU1zUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJUV3RETEVkQlFVRkJMRWRCUVZFc1JVRkJRU3hEUVVGTExFZEJRVUVzUTBGRGNrSnNReXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRk5hME1zUjBGQlFVRXNSMEZCVVN4RlFVRkJMRU5CUVVzc1IwRkJRU3hEUVRaSmNrSkRMRU5CUVdGMlF5eEhRVUZCUVN4RFFVRkpReXhIUVVGQlFTeERRVUZKUXl4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVVkNlFpeFRRVUZUY1VNc2IwSkJRVUZCTEVOQlFYRkNlRU1zUjBGQlFVRXNRMEZCU1VNc1IwRkJRVUVzUTBGQlNVTXNRMEZCUVVFc1EwRkJSVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBFM1NYaERMRk5CUVhWQ1F5eERRVUZCUVN4RFFVRkZReXhEUVVGQlFTeERRVUZGU0N4RFFVRkJRU3hEUVVGRlF5eERRVUZCUVN4RFFVRkJRU3hEUVhOQ00wSXNTVUZ5UWtFc1NVRnRRbVZITEVOQlFVRkJMRU5CUmxocFFpeEZRVUZCUVN4RFFXcENZeXhIUVVGQkxFTkJRVkp3UWl4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFYRkNMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1IwRkJXU3hEUVVGQkxFTkJRVUVzUTBGQllTeEhRVUZCTEVOQlFWSkJMRU5CUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVkQlFWa3NSVUZCUVN4RFFVRkJMRU5CUVdNc1IwRkJRU3hEUVVGU1FTeERRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJRU3hIUVVGWkxFVkJRVUVzUTBGcFFuSkZjVUlzUlVGQlFVRXNRMEZvUWtzc1IwRkJRU3hEUVVGU2RFSXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ4UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeEhRVUZaTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1IwRkJXU3hGUVVGQkxFTkJaMEkxUkhWQ0xFVkJRVUZCTEVOQlprb3NSMEZCUVN4RFFVRlNka0lzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGeFFpeEhRVUZCTEVOQlFWSkJMRU5CUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVkQlFWa3NRMEZCUVN4RFFVRkJMRU5CUVdFc1IwRkJRU3hEUVVGU1FTeERRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJRU3hIUVVGWkxFVkJRVUVzUTBGQlFTeERRVUZqTEVkQlFVRXNRMEZCVWtFc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNSMEZCV1N4RlFVRkJMRU5CWlc1RWQwSXNSVUZCUVVFc1EwRmtZaXhIUVVGQkxFTkJRVko0UWl4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFYRkNMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1IwRkJXU3hEUVVGQkxFTkJRVUVzUTBGQllTeEhRVUZCTEVOQlFWSkJMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVkQlFXRXNSVUZCUVN4RFFVRkJMRU5CUVdNc1IwRkJRU3hEUVVGU1FTeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hIUVVGaExFVkJRVUVzUTBGak1VTjVRaXhGUVVGQlFTeERRV0owUWl4SFFVRkJMRU5CUVZKNlFpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRWE5DTEVkQlFVRXNRMEZCVWtFc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNSMEZCWVN4RFFVRkJMRU5CUVVFc1EwRkJZU3hIUVVGQkxFTkJRVkpCTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFZEJRV0VzUlVGQlFTeERRVUZCTEVOQlFXTXNSMEZCUVN4RFFVRlNRU3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4SFFVRmhMRVZCUVVFc1EwRmhha013UWl4RlFVRkJRU3hEUVZvdlFpeEhRVUZCTEVOQlFWSjZRaXhEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVhGQ0xFZEJRVUVzUTBGQlVrRXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUjBGQldTeERRVUZCTEVOQlFVRXNRMEZCWVN4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1JVRkJRU3hEUVVGQkxFTkJRV01zUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeEhRVUZaTEVWQlFVRXNRMEZaZUVJd1FpeEZRVUZCUVN4RFFWaDRReXhIUVVGQkxFTkJRVko0UWl4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFYRkNMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1IwRkJXU3hEUVVGQkxFTkJRVUVzUTBGQllTeEhRVUZCTEVOQlFWSkJMRU5CUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVkQlFWa3NSVUZCUVN4RFFVRkJMRU5CUVdNc1IwRkJRU3hEUVVGU1FTeERRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJRU3hIUVVGWkxFVkJRVUVzUTBGWFpubENMRVZCUVVGQkxFTkJWbXBFTEVkQlFVRXNRMEZCVW5wQ0xFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJjVUlzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeEhRVUZaTEVOQlFVRXNRMEZCUVN4RFFVRmhMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1IwRkJXU3hGUVVGQkxFTkJRVUVzUTBGQll5eEhRVUZCTEVOQlFWSkJMRU5CUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVkQlFWa3NSVUZCUVN4RFFWYzVSVEJDTEVWQlFVRkJMRU5CVm1Nc1IwRkJRU3hEUVVGU01VSXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ4UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWRCUVZrc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeEhRVUZoTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1IwRkJZU3hGUVVGQkxFTkJWWEpGTWtJc1JVRkJRVUVzUTBGVVN5eEhRVUZCTEVOQlFWSXpRaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVhOQ0xFZEJRVUVzUTBGQlVrRXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUjBGQllTeERRVUZCTEVOQlFVRXNRMEZCWVN4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRWRCUVdFc1JVRkJRU3hEUVVGQkxFTkJRV01zUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeEhRVUZoTEVWQlFVRXNRMEZUTlVRMFFpeEhRVUZCUVN4RFFWSktMRWRCUVVFc1EwRkJVamxDTEVOQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQmNVSXNSMEZCUVN4RFFVRlNRU3hEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4SFFVRlpMRU5CUVVFc1EwRkJRU3hEUVVGaExFZEJRVUVzUTBGQlVrRXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUjBGQllTeEZRVUZCTEVOQlFVRXNRMEZCWXl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRWRCUVdFc1JVRkJRU3hEUVZGcVJDdENMRWRCUVVGQkxFTkJVR1lzUjBGQlFTeERRVUZTYUVNc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRnpRaXhIUVVGQkxFTkJRVkpCTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFZEJRV0VzUTBGQlFTeERRVUZCTEVOQlFXRXNSMEZCUVN4RFFVRlNRU3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4SFFVRmhMRVZCUVVFc1EwRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVrRXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUjBGQllTeEZRVUZCTEVOQlQzUkRhVU1zUjBGQlFVRXNRMEZPTVVJc1IwRkJRU3hEUVVGU2FrTXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZ6UWl4SFFVRkJMRU5CUVZKQkxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRWRCUVdFc1EwRkJRU3hEUVVGQkxFTkJRV0VzUjBGQlFTeERRVUZTUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeEhRVUZoTEVWQlFVRXNRMEZCUVN4RFFVRmpMRWRCUVVFc1EwRkJVa0VzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1IwRkJZU3hGUVVGQkxFTkJUVE5DYTBNc1IwRkJRVUVzUTBGTWNrTXNSMEZCUVN4RFFVRlNiRU1zUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGelFpeEhRVUZCTEVOQlFWSkJMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVkQlFXRXNRMEZCUVN4RFFVRkJMRU5CUVdFc1IwRkJRU3hEUVVGU1FTeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hIUVVGaExFVkJRVUVzUTBGQlFTeERRVUZqTEVkQlFVRXNRMEZCVWtFc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNSMEZCWVN4RlFVRkJMRU5CUzJoQ2JVTXNSMEZCUVVFc1EwRkthRVFzUjBGQlFTeERRVUZTYmtNc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRnpRaXhIUVVGQkxFTkJRVkpCTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFZEJRV0VzUTBGQlFTeERRVUZCTEVOQlFXRXNSMEZCUVN4RFFVRlNRU3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4SFFVRmhMRVZCUVVFc1EwRkJRU3hEUVVGakxFZEJRVUVzUTBGQlVrRXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUjBGQllTeEZRVUZCTEVOQlN6bEZiME1zUjBGQlFVRXNRMEZLWXl4SFFVRkJMRU5CUVZKdVF5eERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRWE5DTEVkQlFVRXNRMEZCVWtFc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNSMEZCWVN4RFFVRkJMRU5CUVVFc1EwRkJZU3hIUVVGQkxFTkJRVkpCTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFZEJRV0VzUlVGQlFTeERRVUZCTEVOQlFXTXNSMEZCUVN4RFFVRlNRU3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4SFFVRmhMRVZCUVVFc1EwRk5la1ZxUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTU3hGUVVGQkxFTkJRVWxCTEVOQlFVRkJMRVZCUVVzc1EwRkJRU3hEUVZFelFuRkVMRVZCUVVGQkxFVkJRVUZCTEVOQlJFRnFRaXhEUVVGQlFTeERRVUZCUVN4RFFVUkJOa0lzUjBGQlFVRXNSVUZCUVVFc1EwRkVRVGRDTEVOQlFVRkJMRU5CUVVGQkxFTkJSRUY1UWl4RlFVRkJRU3hGUVVGQlFTeERRVVJCZWtJc1EwRkJRVUVzUTBGQlFVRXNRMEZFUVhGQ0xFVkJRVUZCTEVWQlFVRkJMRU5CUkVGeVFpeERRVUZCUVN4RFFVRkphVUlzUlVGQlFVRXNRMEZCUzFrc1IwRkJRVUVzUTBGQlRTeERRVUZCTEVkQlEwNHNRMEZCUVN4RFFVRkpOMElzUTBGQlFVRXNSMEZCU1N4RlFVRkJMRVZCUTFKcFFpeEZRVUZCUVN4RFFVRkxMRU5CUVVFc1IwRkRUQ3hEUVVGQkxFTkJRVWxxUWl4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUlVGRFVuRkNMRVZCUVVGQkxFTkJRVXNzUTBGQlFTeEhRVU5LTEVWQlFVRXNRMEZCUzNKQ0xFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RlFVTlVlVUlzUlVGQlFVRXNRMEZCU3l4RFFVRkJMRWRCUTA0c1JVRkJRU3hEUVVGTGVrSXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFTkJVMnhDYzBJc1JVRkJRVUVzUlVGQlFVRXNRMEZFUVhSQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUkVGclFpeEZRVUZCUVN4RlFVRkJRU3hEUVVSQmJFSXNRMEZCUVVFc1EwRkJRVUVzUTBGRVFUaENMRWRCUVVGQkxFVkJRVUZCTEVOQlJFRTVRaXhEUVVGQlFTeERRVUZCUVN4RFFVUkJNRUlzUlVGQlFVRXNSVUZCUVVFc1EwRkVRVEZDTEVOQlFVRkJMRU5CUVVselFpeEZRVUZCUVN4RFFVRkxTaXhGUVVGQlFTeERRVUZMTEVOQlFVRXNSMEZEVEN4RFFVRkJMRU5CUVVsc1FpeERRVUZCUVN4SFFVRkpMRVZCUVVFc1JVRkRVbk5DTEVWQlFVRkJMRU5CUVVzc1EwRkJRU3hIUVVOS0xFTkJRVUVzUTBGQlNYUkNMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeEZRVU5TTUVJc1JVRkJRVUVzUTBGQlN5eERRVUZCTEVkQlEwNHNSVUZCUVN4RFFVRkxNVUlzUTBGQlFVRXNSMEZCU1N4RlFVRkJMRVZCUTFRNFFpeEhRVUZCUVN4RFFVRk5MRU5CUVVFc1IwRkRUaXhGUVVGQkxFTkJRVXM1UWl4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUTBGVGJFSXlRaXhIUVVGQlFTeEZRVUZCUVN4RFFVUkJNMElzUTBGQlFVRXNRMEZCUVVFc1EwRkVRWFZDTEVWQlFVRkJMRVZCUVVGQkxFTkJSRUYyUWl4RFFVRkJRU3hEUVVGQlFTeERRVVJCYlVJc1JVRkJRVUVzUlVGQlFVRXNRMEZFUVc1Q0xFTkJRVUZCTEVOQlFVRkJMRU5CUkVFclFpeEhRVUZCUVN4RlFVRkJRU3hEUVVSQkwwSXNRMEZCUVVFc1EwRkJTVEpDTEVkQlFVRkJMRU5CUVUxS0xFVkJRVUZCTEVOQlFVc3NRMEZCUVN4SFFVTk1MRU5CUVVFc1EwRkJTWFpDTEVOQlFVRkJMRWRCUVVrc1JVRkJRU3hGUVVOU01rSXNSMEZCUVVFc1EwRkJUU3hEUVVGQkxFZEJRMUFzUTBGQlFTeERRVUZKTTBJc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVWQlExSXJRaXhIUVVGQlFTeERRVUZOTEVOQlFVRXNSMEZEVGl4RlFVRkJMRU5CUVVzdlFpeERRVUZCUVN4SFFVRkpMRVZCUVVFc1JVRkRWRzFDTEVWQlFVRkJMRU5CUVVzc1EwRkJRU3hIUVVOS0xFVkJRVUVzUTBGQlMyNUNMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeERRVk51UW1kRExFZEJRVUZCTEVWQlFVRkJMRU5CUkVGb1F5eERRVUZCUVN4RFFVRkJRU3hEUVVSQk5FSXNSMEZCUVVFc1JVRkJRVUVzUTBGRVFUVkNMRU5CUVVGQkxFTkJRVUZCTEVOQlJFRjNRaXhGUVVGQlFTeEZRVUZCUVN4RFFVUkJlRUlzUTBGQlFVRXNRMEZCUVVFc1EwRkVRVzlDTEVWQlFVRkJMRVZCUVVGQkxFTkJSRUZ3UWl4RFFVRkJRU3hEUVVGSlowTXNSMEZCUVVFc1EwRkJUVW9zUjBGQlFVRXNRMEZCVFN4RFFVRkJMRWRCUTFBc1EwRkJRU3hEUVVGSk5VSXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFVkJRMUpuUXl4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUjBGRFRpeERRVUZCTEVOQlFVbG9ReXhEUVVGQlFTeEhRVUZKTEVWQlFVRXNSVUZEVW05Q0xFVkJRVUZCTEVOQlFVc3NRMEZCUVN4SFFVTktMRVZCUVVFc1EwRkJTM0JDTEVOQlFVRkJMRWRCUVVrc1JVRkJRU3hGUVVOVWQwSXNSVUZCUVVFc1EwRkJTeXhEUVVGQkxFZEJRMHdzUlVGQlFTeERRVUZMZUVJc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVOQlUyNUNhVUlzUlVGQlFVRXNSVUZCUVVFc1EwRkVRV3BDTEVOQlFVRkJMRU5CUVVGQkxFTkJSRUZ2UWl4RlFVRkJRU3hGUVVGQlFTeERRVVJCY0VJc1EwRkJRVUVzUTBGQlFVRXNRMEZFUVcxQ0xFVkJRVUZCTEVWQlFVRkJMRU5CUkVGdVFpeERRVUZCUVN4RFFVRkJRU3hEUVVSQmEwSXNSVUZCUVVFc1JVRkJRVUVzUTBGRVFXeENMRU5CUVVGQkxFTkJRVWxwUWl4RlFVRkJRU3hEUVVGTFJ5eEZRVUZCUVN4RFFVRkxMRU5CUVVFc1IwRkRUQ3hEUVVGQkxFTkJRVWx3UWl4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUlVGRFVtbENMRVZCUVVGQkxFTkJRVXNzUTBGQlFTeEhRVU5NTEVOQlFVRXNRMEZCU1dwQ0xFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RlFVTlNhMElzUlVGQlFVRXNRMEZCU3l4RFFVRkJMRWRCUTB3c1JVRkJRU3hEUVVGTGJFSXNRMEZCUVVFc1IwRkJTU3hGUVVGQkxFVkJRMVJ0UWl4RlFVRkJRU3hEUVVGTExFTkJRVUVzUjBGRFRDeEZRVUZCTEVOQlFVdHVRaXhEUVVGQlFTeEhRVUZKTEVWQlFVRXNRMEZUYkVKelFpeEZRVUZCUVN4RlFVRkJRU3hEUVVSQmRFSXNRMEZCUVVFc1EwRkJRVUVzUTBGRVFYRkNMRVZCUVVGQkxFVkJRVUZCTEVOQlJFRnlRaXhEUVVGQlFTeERRVUZCUVN4RFFVUkJkMElzUlVGQlFVRXNSVUZCUVVFc1EwRkVRWGhDTEVOQlFVRkJMRU5CUVVGQkxFTkJSRUYxUWl4RlFVRkJRU3hGUVVGQlFTeERRVVJCZGtJc1EwRkJRVUVzUTBGQlNYTkNMRVZCUVVGQkxFTkJRVXRFTEVWQlFVRkJMRU5CUVVzc1EwRkJRU3hIUVVOTUxFTkJRVUVzUTBGQlNYSkNMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeEZRVU5TYzBJc1JVRkJRVUVzUTBGQlN5eERRVUZCTEVkQlEwd3NRMEZCUVN4RFFVRkpkRUlzUTBGQlFVRXNSMEZCU1N4RlFVRkJMRVZCUTFKMVFpeEZRVUZCUVN4RFFVRkxMRU5CUVVFc1IwRkRUQ3hGUVVGQkxFTkJRVXQyUWl4RFFVRkJRU3hIUVVGSkxFVkJRVUVzUlVGRFZIZENMRVZCUVVGQkxFTkJRVXNzUTBGQlFTeEhRVU5NTEVWQlFVRXNRMEZCUzNoQ0xFTkJRVUZCTEVkQlFVa3NSVUZCUVN4RFFWTnNRakpDTEVkQlFVRkJMRVZCUVVGQkxFTkJSRUV6UWl4RFFVRkJRU3hEUVVGQlFTeERRVVJCTUVJc1JVRkJRVUVzUlVGQlFVRXNRMEZFUVRGQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUkVGNVFpeEZRVUZCUVN4RlFVRkJRU3hEUVVSQmVrSXNRMEZCUVVFc1EwRkJRVUVzUTBGRVFUUkNMRWRCUVVGQkxFVkJRVUZCTEVOQlJFRTFRaXhEUVVGQlFTeERRVUZKTWtJc1IwRkJRVUVzUTBGQlRVUXNSVUZCUVVFc1EwRkJTeXhEUVVGQkxFZEJRMHdzUTBGQlFTeERRVUZKTVVJc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVWQlExSXlRaXhIUVVGQlFTeERRVUZOTEVOQlFVRXNSMEZEVUN4RFFVRkJMRU5CUVVrelFpeERRVUZCUVN4SFFVRkpMRVZCUVVFc1JVRkRValJDTEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hIUVVOT0xFVkJRVUVzUTBGQlN6VkNMRU5CUVVGQkxFZEJRVWtzUlVGQlFTeEZRVU5VZVVJc1JVRkJRVUVzUTBGQlN5eERRVUZCTEVkQlEwb3NSVUZCUVN4RFFVRkxla0lzUTBGQlFVRXNSMEZCU1N4RlFVRkJMRU5CVTI1Q1owTXNSMEZCUVVFc1JVRkJRVUVzUTBGRVFXaERMRU5CUVVGQkxFTkJRVUZCTEVOQlJFRXJRaXhIUVVGQlFTeEZRVUZCUVN4RFFVUkJMMElzUTBGQlFVRXNRMEZCUVVFc1EwRkVRVGhDTEVkQlFVRkJMRVZCUVVGQkxFTkJSRUU1UWl4RFFVRkJRU3hEUVVGQlFTeERRVVJCTmtJc1IwRkJRVUVzUlVGQlFVRXNRMEZFUVRkQ0xFTkJRVUZCTEVOQlFVbG5ReXhIUVVGQlFTeERRVUZOUkN4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUjBGRFRpeERRVUZCTEVOQlFVa3ZRaXhEUVVGQlFTeEhRVUZKTEVWQlFVRXNSVUZEVW1kRExFZEJRVUZCTEVOQlFVMHNRMEZCUVN4SFFVTk9MRU5CUVVFc1EwRkJTV2hETEVOQlFVRkJMRWRCUVVrc1JVRkJRU3hGUVVOU05rSXNSMEZCUVVFc1EwRkJUU3hEUVVGQkxFZEJRMDRzUlVGQlFTeERRVUZMTjBJc1EwRkJRVUVzUjBGQlNTeEZRVUZCTEVWQlExUTRRaXhIUVVGQlFTeERRVUZOTEVOQlFVRXNSMEZEVGl4RlFVRkJMRU5CUVVzNVFpeERRVUZCUVN4SFFVRkpMRVZCUVVFc1EwRkhja0pHTEVOQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXR0UWl4RlFVRkJRU3hIUVVGUkxFTkJRVUVzUTBGQlNTeEhRVUZCTEVOQlEzQkNia0lzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkJTMjFDTEVWQlFVRkJMRWRCUVZFc1EwRkJRU3hEUVVGSkxFZEJRVUVzUTBGRGNFSnVRaXhEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkxiVUlzUlVGQlFVRXNSMEZCVHl4RlFVRkJMRU5CUVVzc1IwRkJRU3hEUVVOd1FtNUNMRU5CUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVdHRRaXhGUVVGQlFTeEhRVUZQTEVWQlFVRXNRMEZCU3l4SFFVRkJMRU5CUlhCQ2JrSXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlMzZENMRVZCUVVGQkxFZEJRVkVzUTBGQlFTeERRVUZKTEVkQlFVRXNRMEZEY0VKNFFpeERRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJRU3hEUVVGTGQwSXNSVUZCUVVFc1IwRkJVU3hEUVVGQkxFTkJRVWtzUjBGQlFTeERRVU53UW5oQ0xFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVV0M1FpeEZRVUZCUVN4SFFVRlBMRVZCUVVFc1EwRkJTeXhIUVVGQkxFTkJRM0JDZUVJc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZCUzNkQ0xFVkJRVUZCTEVkQlFVOHNSVUZCUVN4RFFVRkxMRWRCUVVFc1EwRkZjRUo0UWl4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVUZMTmtJc1IwRkJRVUVzUjBGQlV5eERRVUZCTEVOQlFVa3NSMEZCUVN4RFFVTnlRamRDTEVOQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXMyUWl4SFFVRkJRU3hIUVVGVExFTkJRVUVzUTBGQlNTeEhRVUZCTEVOQlEzSkNOMElzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJUVFpDTEVkQlFVRkJMRWRCUVZFc1JVRkJRU3hEUVVGTExFZEJRVUVzUTBGRGNrSTNRaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRk5Oa0lzUjBGQlFVRXNSMEZCVVN4RlFVRkJMRU5CUVVzc1IwRkJRU3hEUVVWeVFqZENMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVMXJReXhIUVVGQlFTeEhRVUZUTEVOQlFVRXNRMEZCU1N4SFFVRkJMRU5CUTNKQ2JFTXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlRXdERMRWRCUVVGQkxFZEJRVk1zUTBGQlFTeERRVUZKTEVkQlFVRXNRMEZEY2tKc1F5eERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGTmEwTXNSMEZCUVVFc1IwRkJVU3hGUVVGQkxFTkJRVXNzUjBGQlFTeERRVU55UW14RExFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVUxclF5eEhRVUZCUVN4SFFVRlJMRVZCUVVFc1EwRkJTeXhIUVVGQkxFTkJSWEpDYkVNc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCVFhsQ0xFVkJRVUZCTEVkQlFWRXNRMEZCUVN4RFFVRkpMRWRCUVVFc1EwRkRjRUo2UWl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZOZVVJc1JVRkJRVUVzUjBGQlVTeERRVUZCTEVOQlFVa3NSMEZCUVN4RFFVTndRbnBDTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVTE1UWl4RlFVRkJRU3hIUVVGUExFVkJRVUVzUTBGQlN5eEhRVUZCTEVOQlEzQkNla0lzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJUWGxDTEVWQlFVRkJMRWRCUVU4c1JVRkJRU3hEUVVGTExFZEJRVUVzUTBGRmNFSjZRaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRk5NRUlzUlVGQlFVRXNSMEZCVVN4RFFVRkJMRU5CUVVrc1IwRkJRU3hEUVVOd1FqRkNMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVMHdRaXhGUVVGQlFTeEhRVUZSTEVOQlFVRXNRMEZCU1N4SFFVRkJMRU5CUTNCQ01VSXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlRUQkNMRVZCUVVGQkxFZEJRVThzUlVGQlFTeERRVUZMTEVkQlFVRXNRMEZEY0VJeFFpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGTk1FSXNSVUZCUVVFc1IwRkJUeXhGUVVGQkxFTkJRVXNzUjBGQlFTeERRVVZ3UWpGQ0xFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVUweVFpeEZRVUZCUVN4SFFVRlJMRU5CUVVFc1EwRkJTU3hIUVVGQkxFTkJRM0JDTTBJc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCVFRKQ0xFVkJRVUZCTEVkQlFWRXNRMEZCUVN4RFFVRkpMRWRCUVVFc1EwRkRjRUl6UWl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZOTWtJc1JVRkJRVUVzUjBGQlR5eEZRVUZCTEVOQlFVc3NSMEZCUVN4RFFVTndRak5DTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVTB5UWl4RlFVRkJRU3hIUVVGUExFVkJRVUVzUTBGQlN5eEhRVUZCTEVOQlJYQkNNMElzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJUVFJDTEVWQlFVRkJMRWRCUVZFc1EwRkJRU3hEUVVGSkxFZEJRVUVzUTBGRGNFSTFRaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRk5ORUlzUlVGQlFVRXNSMEZCVVN4RFFVRkJMRU5CUVVrc1IwRkJRU3hEUVVOd1FqVkNMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVMDBRaXhGUVVGQlFTeEhRVUZQTEVWQlFVRXNRMEZCU3l4SFFVRkJMRU5CUTNCQ05VSXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlRUUkNMRVZCUVVGQkxFZEJRVThzUlVGQlFTeERRVUZMTEVkQlFVRXNRMEZSY0VKVExFTkJRV042UXl4SFFVRkJRU3hEUVVGSlF5eEhRVUZCUVN4RFFVRkpReXhEUVVGQlFTeERRVUZGUXl4RFFVRkJRU3hEUVVGQlFTeERRVWN4UWl4SlFVRkpkVU1zUzBGQlFVRXNRMEZCVVN4SlFVRkpha1VzVlVGQlFVRXNRMEZCVnl4RFFVRkRMRWRCUVVFc1EwRkJTeXhIUVVGQkxFTkJRVXNzUjBGQlFTeERRVUZMTEVWQlFVRXNRMEZCU1N4SFFVRkJMRU5CUVVzc1IwRkJRU3hEUVVGTExFVkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVa3NSVUZCUVN4RFFVRkpMRVZCUVVFc1EwRkJTU3hGUVVGQkxFTkJRVWtzUjBGQlFTeERRVUZMTEVkQlFVRXNRMEZCU3l4SFFVRkJMRU5CUVVzc1JVRkJRU3hEUVVGSkxFZEJRVUVzUTBGQlFTeERRVUZCTEVOQlIyaEhMRk5CUVZOclJTeDVRa0ZCUVVFc1EwRkJNRUo0UXl4RFFVRkJRU3hEUVVGRmVVTXNTVUZCUVVFc1EwRkJTME1zUTBGQlFVRXNRMEZCUlVNc1NVRkJRVUVzUTBGQlMwTXNRMEZCUVVFc1EwRkJSWEJFTEVOQlFVRkJMRU5CUVVWUExFTkJRVUZCTEVOQlFVRkJMRU5CUTI1RUxFbEJRMGxKTEVOQlFVRkJMRU5CUVVkd1F5eERRVUZCUVN4RFFVUklPRVVzUTBGQlFVRXNRMEZCU1N4SlFVRkpka1VzVlVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVFc1EwRkJTMWNzUTBGQlFVRXNRMEZCU1N4SlFVRkpXQ3hWUVVGQlFTeERRVUZYTEVWQlFVRXNRMEZCUVN4RFFVVXZReXhKUVVGTFVDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1N4RlFVRkJMRU5CUVVsQkxFTkJRVUZCTEVWQlFVRkJMRU5CUVVzNFJTeERRVUZCUVN4RFFVRkZPVVVzUTBGQlFVRXNRMEZCUVVFc1EwRkJTeXhEUVVGQkxFTkJRMmhETEVsQlFVdEJMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1JVRkJRVUVzUTBGQlN6aEZMRU5CUVVGQkxFTkJRVVU1UlN4RFFVRkJRU3hEUVVGQlFTeERRVUZMZVVJc1EwRkJRVUVzUTBGQlJYcENMRU5CUVVGQkxFTkJRVUZCTEVOQlEycERMRXRCUVU4MlJTeERRVUZCUVN4RlFVRkxMRVZCUVVFc1JVRkJTU3hEUVVWa0xFbEJSRUZvUkN4dFFrRkJRVUVzUTBGQmIwSllMRU5CUVVGQkxFTkJRVVUwUkN4RFFVRkJRU3hEUVVGRk9VTXNRMEZCUVVFc1EwRkJSWGRETEV0QlFVRkJMRU5CUVVGQkxFTkJRM0pDZUVVc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWtzUlVGQlFTeERRVUZKUVN4RFFVRkJRU3hGUVVGQlFTeERRVUZMYVVNc1EwRkJRVUVzUTBGQlJYbERMRWxCUVVGQkxFTkJRVXN4UlN4RFFVRkJRU3hEUVVGQlFTeERRVUZMTWtVc1EwRkJRVUVzUTBGQlJVTXNTVUZCUVVFc1EwRkJTelZGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXRyUWl4RFFVRkJRU3hEUVVGRmJFSXNRMEZCUVVFc1EwRkJRVUVzUTBGRmJrUXNTVUZFUVc5RExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVTkRjRU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVa3NSVUZCUVN4RFFVRkpRU3hEUVVGQlFTeEZRVUZCUVN4RFFVTnNRbTlETEVOQlFVRkJMRU5CUVVsQkxFTkJRVUZCTEVWQlFWa3NSMEZCUVN4RFFVRlFNRU1zUTBGQlFVRXNRMEZCUlRsRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRV0VzUTBGQlFTeERRVU40UWpoRkxFTkJRVUZCTEVOQlFVVTVSU3hEUVVGQlFTeERRVUZCUVN4RFFVRlRMRWRCUVVFc1EwRkJTbTlETEVOQlFVRkJMRU5CUTFCQkxFTkJRVUZCTEVsQlFVOHNRMEZCUVN4RFFVVlVlVU1zUTBGQlFVRXNSVUZCU3l4RlFVRkJMRU5CUTB4SUxFbEJRVUZCTEVWQlFWRXNSVUZCUVN4RFFVTlNSU3hKUVVGQlFTeEZRVUZSTEVWQlFVRXNRMEZGVml4SFFVRkpReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZGVGl4SlFVUkJhRVFzYlVKQlFVRkJMRU5CUVc5Q1dDeERRVUZCUVN4RFFVRkZORVFzUTBGQlFVRXNRMEZCUlRsRExFTkJRVUZCTEVOQlFVVjNReXhMUVVGQlFTeERRVUZCUVN4RFFVTnlRbmhGTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpOa1VzUTBGQlFVRXNRMEZCUnpkRkxFTkJRVUZCTEVWQlFVRkJMRU5CUVV0cFF5eERRVUZCUVN4RFFVRkZlVU1zU1VGQlFVRXNRMEZCU3pGRkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVzeVJTeERRVUZCUVN4RFFVRkZReXhKUVVGQlFTeERRVUZMTlVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzJ0Q0xFTkJRVUZCTEVOQlFVVnNRaXhEUVVGQlFTeERRVUZCUVN4RFFVVndSQ3hQUVVGUExFTkJRVUVzUTBGSFZDeFRRVUZUSzBVc2NVSkJRVUZCTEVOQlFYTkNPVU1zUTBGQlFVRXNRMEZCUlhsRExFbEJRVUZCTEVOQlFVdEhMRU5CUVVGQkxFTkJRVVZ3UkN4RFFVRkJRU3hEUVVGRlR5eERRVUZCUVN4RFFVRkJRU3hEUVVONFF5eEpRVU5KU1N4RFFVRkJRU3hEUVVGSGNFTXNRMEZCUVVFc1EwRkVTRGhGTEVOQlFVRkJMRU5CUVVrc1NVRkJTWFpGTEZWQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJRVXRYTEVOQlFVRkJMRU5CUVVrc1NVRkJTVmdzVlVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVFc1EwRkZMME1zU1VGQlMxQXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrc1JVRkJRU3hEUVVGSlFTeERRVUZCUVN4RlFVRkJRU3hEUVVGTE9FVXNRMEZCUVVFc1EwRkJSVGxGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXNzUTBGQlFTeERRVU5vUXl4SlFVRkxRU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFVkJRVUZCTEVOQlFVczRSU3hEUVVGQlFTeERRVUZGT1VVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzNsQ0xFTkJRVUZCTEVOQlFVVjZRaXhEUVVGQlFTeERRVUZCUVN4RFFVTnFReXhMUVVGUE5rVXNRMEZCUVVFc1JVRkJTeXhGUVVGQkxFVkJRVWtzUTBGRlpDeEpRVVJCYUVRc2JVSkJRVUZCTEVOQlFXOUNXQ3hEUVVGQlFTeERRVUZGTkVRc1EwRkJRVUVzUTBGQlJUbERMRU5CUVVGQkxFTkJRVVYzUXl4TFFVRkJRU3hEUVVGQlFTeERRVU55UW5oRkxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCU1VFc1EwRkJRVUVzUlVGQlFVRXNRMEZCUzJsRExFTkJRVUZCTEVOQlFVVjVReXhKUVVGQlFTeERRVUZMTVVVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzJ0Q0xFTkJRVUZCTEVOQlFVVnNRaXhEUVVGQlFTeERRVUZCUVN4RFFVVjJReXhKUVVSQmIwTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRME53UXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTU3hGUVVGQkxFTkJRVWxCTEVOQlFVRkJMRVZCUVVGQkxFTkJRMnhDYjBNc1EwRkJRVUVzUTBGQlNVRXNRMEZCUVVFc1JVRkJXU3hIUVVGQkxFTkJRVkF3UXl4RFFVRkJRU3hEUVVGRk9VVXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCWVN4RFFVRkJMRU5CUTNoQ09FVXNRMEZCUVVFc1EwRkJSVGxGTEVOQlFVRkJMRU5CUVVGQkxFTkJRVk1zUjBGQlFTeERRVUZLYjBNc1EwRkJRVUVzUTBGRFVFRXNRMEZCUVVFc1NVRkJUeXhEUVVGQkxFTkJSVlI1UXl4RFFVRkJRU3hGUVVGTExFVkJRVUVzUTBGRFRFZ3NTVUZCUVVFc1JVRkJVU3hGUVVGQkxFTkJSVllzUjBGQlNVY3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJSVTRzU1VGRVFXaEVMRzFDUVVGQlFTeERRVUZ2UWxnc1EwRkJRVUVzUTBGQlJUUkVMRU5CUVVGQkxFTkJRVVU1UXl4RFFVRkJRU3hEUVVGRmQwTXNTMEZCUVVFc1EwRkJRVUVzUTBGRGNrSjRSU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNUWkZMRU5CUVVGQkxFTkJRVWMzUlN4RFFVRkJRU3hGUVVGQlFTeERRVUZMYVVNc1EwRkJRVUVzUTBGQlJYbERMRWxCUVVGQkxFTkJRVXN4UlN4RFFVRkJRU3hEUVVGQlFTeERRVUZMYTBJc1EwRkJRVUVzUTBGQlJXeENMRU5CUVVGQkxFTkJRVUZCTEVOQlJYaERMRTlCUVU4c1EwRkJRU3hEUVVkVUxGTkJRVk5uUml4aFFVRkJRU3hEUVVGakwwTXNRMEZCUVVFc1EwRkJSWGxETEVsQlFVRkJMRU5CUVV0b1JDeERRVUZCUVN4RFFVRkZSQ3hEUVVGQlFTeERRVUZGVHl4RFFVRkJRU3hEUVVGQlFTeERRVU5vUXl4SlFVRkphVVFzUTBGQlFVRXNRMEZCU1N4SlFVRkpNVVVzVlVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVFc1EwRkRka0lyUkN4dlFrRkJRVUVzUTBGQmNVSlhMRU5CUVVGQkxFTkJRVVY0UkN4RFFVRkJRU3hEUVVGRlR5eERRVUZCUVN4RFFVRkZkME1zUzBGQlFVRXNRMEZCUVVFc1EwRkZNMElzU1VGRVFTeEpRVUZKVlN4RlFVRkJRU3hEUVVGTExFbEJRVWt6UlN4VlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGQlFTeERRVU5tVUN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRVZCUVVGQkxFTkJRVXRyUml4RlFVRkJRU3hEUVVGSGJFWXNRMEZCUVVFc1EwRkJRVUVzUTBGQlMzbENMRU5CUVVGQkxFTkJRVVY2UWl4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVU40UXl4UFFVRlBLMFVzY1VKQlFVRkJMRU5CUVhOQ09VTXNRMEZCUVVFc1EwRkJSWGxETEVsQlFVRkJMRU5CUVV0b1JDeERRVUZCUVN4RFFVRkZkMFFzUlVGQlFVRXNRMEZCUjBRc1EwRkJRVUVzUTBGQlFVRXNRMEZITTBNc1UwRkJVMFVzYVVKQlFVRkJMRU5CUVd0Q2JFUXNRMEZCUVVFc1EwRkJSWGxETEVsQlFVRkJMRU5CUVV0RExFTkJRVUZCTEVOQlFVVkRMRWxCUVVGQkxFTkJRVXRzUkN4RFFVRkJRU3hEUVVGRlJDeERRVUZCUVN4RFFVRkZUeXhEUVVGQlFTeERRVUZCUVN4RFFVTXpReXhKUVVGSmFVUXNRMEZCUVVFc1EwRkJTU3hKUVVGSk1VVXNWVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRVUVzUTBGRGRrSXJSQ3h2UWtGQlFVRXNRMEZCY1VKWExFTkJRVUZCTEVOQlFVVjRSQ3hEUVVGQlFTeERRVUZGVHl4RFFVRkJRU3hEUVVGRmQwTXNTMEZCUVVFc1EwRkJRVUVzUTBGRk0wSXNTVUZFUVN4SlFVRkpWU3hGUVVGQlFTeERRVUZMTEVsQlFVa3pSU3hWUVVGQlFTeERRVUZYTEVOQlFVRXNRMEZCUVN4RFFVTm1VQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFVkJRVUZCTEVOQlFVdHJSaXhGUVVGQlFTeERRVUZIYkVZc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzNsQ0xFTkJRVUZCTEVOQlFVVjZRaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVTjRReXhQUVVGUGVVVXNlVUpCUVVGQkxFTkJRVEJDZUVNc1EwRkJRVUVzUTBGQlJYbERMRWxCUVVGQkxFTkJRVXRETEVOQlFVRkJMRU5CUVVWRExFbEJRVUZCTEVOQlFVdHNSQ3hEUVVGQlFTeERRVUZGZDBRc1JVRkJRVUVzUTBGQlIwUXNRMEZCUVVFc1EwRkJRVUVzUTBGUmRFUXNTVUZCU1Vjc1VVRkJRVUVzUTBGQlZ5eFRRVUZUUXl4SFFVRkJRU3hEUVVGQlFTeERRVkYwUWl4SlFVRkpReXhGUVVGQlFTeERRVUZKUXl4RlFVRkJRU3hEUVVGSlF5eEZRVUZCUVN4RFFVRkpReXhGUVVGQlFTeERRVUZKUXl4RlFVRkJRU3hEUVVGSlF5eEZRVUZCUVN4RFFVRkpReXhGUVVGQlFTeERRVUZKUXl4RlFVRkJRU3hEUVZCb1EwTXNTVUZCUVVFc1EwRkJTME1zVFVGQlFVRXNRMEZCVXl4SlFVRkplRVlzVlVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVFc1EwRkROMEoxUml4SlFVRkJRU3hEUVVGTE4wWXNRMEZCUVVFc1EwRkJTU3hKUVVGSkswWXNWMEZCUVVFc1EwRkJXU3hGUVVGQkxFTkJRVUVzUTBGRGVrSkdMRWxCUVVGQkxFTkJRVXN6UlN4RFFVRkJRU3hEUVVGSkxFbEJRVWsyUlN4WFFVRkJRU3hEUVVGWkxFVkJRVUVzUTBGQlFTeERRVU42UWtZc1NVRkJRVUVzUTBGQlMwY3NSMEZCUVVFc1EwRkJUU3hKUVVGSlJDeFhRVUZCUVN4RFFVRlpMRU5CUVVFc1EwRkJRU3hEUVVNelFrWXNTVUZCUVVFc1EwRkJTMGtzVVVGQlFVRXNRMEZCVnl4RFFVRkJMRU5CUTJoQ1NpeEpRVUZCUVN4RFFVRkxTeXhIUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZKV0dJc1JVRkJRVUVzUTBGQlpTeEhRVUZCTEVOQlFWWkVMRWRCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCZFVJc1IwRkJRU3hEUVVGV1FTeEhRVUZCUVN4RFFVRkxMRU5CUVVFc1EwRkJRU3hIUVVGakxFTkJRVUVzUTBGQlIxTXNTVUZCUVVFc1EwRkJTemRHTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRV3RETEVsQlFVRXNRMEZCTjBJc1JVRkJRU3hEUVVONlJITkdMRVZCUVVGQkxFTkJRV1VzUjBGQlFTeERRVUZXUml4SFFVRkJRU3hEUVVGTExFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFYVkNMRWRCUVVFc1EwRkJWa0VzUjBGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVVFc1IwRkJZeXhEUVVGQkxFTkJRVWRUTEVsQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGclF5eEpRVUZCTEVWQlFUTkNjVVlzUlVGQlFVRXNSMEZCVHl4RlFVRkJMRU5CUVU5RExFVkJRVUZCTEVWQlFVOHNRMEZCUVN4RFFVRkJMRU5CUTJoR1F5eEZRVUZCUVN4RFFVRmxMRWRCUVVFc1EwRkJWa2dzUjBGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGMVFpeEhRVUZCTEVOQlFWWkJMRWRCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVkQlFXTXNRMEZCUVN4RFFVRkhVeXhKUVVGQlFTeERRVUZMTjBZc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCYTBNc1NVRkJRU3hGUVVFelFuTkdMRVZCUVVGQkxFZEJRVThzUlVGQlFTeERRVUZQUXl4RlFVRkJRU3hGUVVGUExFTkJRVUVzUTBGQlFTeERRVU5vUmtNc1JVRkJRVUVzUTBGQlpTeEhRVUZCTEVOQlFWWktMRWRCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCZFVJc1IwRkJRU3hEUVVGV1FTeEhRVUZCUVN4RFFVRkxMRU5CUVVFc1EwRkJRU3hIUVVGakxFTkJRVUVzUTBGQlIxTXNTVUZCUVVFc1EwRkJTemRHTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRV3RETEVsQlFVRXNSVUZCTTBKMVJpeEZRVUZCUVN4SFFVRlJMRU5CUVVFc1EwRkJUVU1zUlVGQlFVRXNSVUZCVHl4RFFVRkJMRU5CUVVFc1EwRkRhRVpETEVWQlFVRkJMRU5CUVdVc1IwRkJRU3hEUVVGV1RDeEhRVUZCUVN4RFFVRkxMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRWFZDTEVkQlFVRXNRMEZCVmtFc1IwRkJRVUVzUTBGQlN5eERRVUZCTEVOQlFVRXNSMEZCWXl4RFFVRkJMRU5CUVVkVExFbEJRVUZCTEVOQlFVczNSaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRnJReXhIUVVGQkxFVkJRVE5DZDBZc1JVRkJRVUVzUjBGQlVTeERRVUZCTEVOQlFVMURMRVZCUVVGQkxFVkJRVTBzUlVGQlFTeERRVUZCTEVOQlF5OUZTU3hKUVVGQlFTeERRVUZMTjBZc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCVDNsR0xFVkJRVUZCTEVkQlFWRXNRMEZCUVN4RFFVRk5MRWxCUVVFc1EwRkROVUpETEVWQlFVRkJMRU5CUVdVc1IwRkJRU3hEUVVGV1RpeEhRVUZCUVN4RFFVRkpMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRWGRDTEVkQlFVRXNRMEZCVmtFc1IwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVRXNSMEZCWlN4RFFVRkJMRU5CUVVkVExFbEJRVUZCTEVOQlFVczNSaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRnJReXhKUVVGQkxFVkJRVE5DZVVZc1JVRkJRVUVzUjBGQlR5eEZRVUZCTEVOQlFVOURMRVZCUVVGQkxFVkJRVThzUTBGQlFTeERRVUZCTEVOQlEyaEdReXhGUVVGQlFTeERRVUZsTEVkQlFVRXNRMEZCVmxBc1IwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRjNRaXhIUVVGQkxFTkJRVlpCTEVkQlFVRkJMRU5CUVVrc1JVRkJRU3hEUVVGQkxFZEJRV1VzUTBGQlFTeERRVUZIVXl4SlFVRkJRU3hEUVVGTE4wWXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQmEwTXNTVUZCUVN4RlFVRXpRakJHTEVWQlFVRkJMRWRCUVU4c1JVRkJRU3hEUVVGUFF5eEZRVUZCUVN4RlFVRlBMRU5CUVVFc1EwRkJRU3hEUVVOb1JrTXNSVUZCUVVFc1EwRkJaU3hIUVVGQkxFTkJRVlpTTEVkQlFVRkJMRU5CUVVrc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQmQwSXNSMEZCUVN4RFFVRldRU3hIUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCUVN4SFFVRmxMRU5CUVVFc1EwRkJSMU1zU1VGQlFVRXNRMEZCU3pkR0xFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVd0RExFbEJRVUVzUlVGQk0wSXlSaXhGUVVGQlFTeEhRVUZSTEVOQlFVRXNRMEZCVFVNc1JVRkJRVUVzUlVGQlR5eERRVUZCTEVOQlFVRXNRMEZEYUVaRExFbEJRVUZCTEVOQlFVczNSaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRlBORVlzUlVGQlFVRXNSMEZCVVN4RFFVRkJMRU5CUVUwc1IwRkJRU3hEUVVVMVFrTXNTVUZCUVVFc1EwRkJTMGNzUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJaU3hIUVVGQkxFTkJRVlphTEVkQlFVRkJMRU5CUVVrc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQmQwSXNSMEZCUVN4RFFVRldRU3hIUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCUVN4SFFVRmxMRU5CUVVFc1EwRkRia1JUTEVsQlFVRkJMRU5CUVV0SExFZEJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUVdVc1IwRkJRU3hEUVVGV1dpeEhRVUZCUVN4RFFVRkpMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJRWGRDTEVkQlFVRXNRMEZCVmtFc1IwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVRXNSMEZCWlN4RFFVRkJMRU5CUTI1RVV5eEpRVUZCUVN4RFFVRkxSeXhIUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUVN4RFFVRmxMRWRCUVVFc1EwRkJWbG9zUjBGQlFVRXNRMEZCU1N4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGM1FpeEhRVUZCTEVOQlFWWkJMRWRCUVVGQkxFTkJRVWtzUlVGQlFTeERRVUZCTEVkQlFXVXNRMEZCUVN4RFFVTnVSRk1zU1VGQlFVRXNRMEZCUzBjc1IwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZCWlN4SFFVRkJMRU5CUVZaYUxFZEJRVUZCTEVOQlFVa3NSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJkMElzUjBGQlFTeERRVUZXUVN4SFFVRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlFTeEhRVUZsTEVOQlFVRXNRMEZEYmtSVExFbEJRVUZCTEVOQlFVdEhMRWRCUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFXVXNSMEZCUVN4RFFVRldXaXhIUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVhkQ0xFZEJRVUVzUTBGQlZrRXNSMEZCUVVFc1EwRkJTU3hGUVVGQkxFTkJRVUVzUjBGQlpTeERRVUZCTEVOQlEyNUVVeXhKUVVGQlFTeERRVUZMUnl4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVUZsTEVkQlFVRXNRMEZCVmxvc1IwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRjNRaXhIUVVGQkxFTkJRVlpCTEVkQlFVRkJMRU5CUVVrc1JVRkJRU3hEUVVGQkxFZEJRV1VzUTBGQlFTeERRVU51UkZNc1NVRkJRVUVzUTBGQlMwY3NSMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGQlpTeEhRVUZCTEVOQlFWWmFMRWRCUVVGQkxFTkJRVWtzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZCZDBJc1IwRkJRU3hEUVVGV1FTeEhRVUZCUVN4RFFVRkpMRVZCUVVFc1EwRkJRU3hIUVVGbExFTkJRVUVzUTBGRGJrUlRMRWxCUVVGQkxFTkJRVXRITEVkQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGQkxFTkJRV1VzUjBGQlFTeERRVUZXV2l4SFFVRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlFYZENMRWRCUVVFc1EwRkJWa0VzUjBGQlFVRXNRMEZCU1N4RlFVRkJMRU5CUVVFc1IwRkJaU3hEUVVGQkxFTkJRVUVzUTBGdlZYSkVMRk5CUVZObExHdENRVUZCUVN4RFFVRnRRblJGTEVkQlFVRkJMRU5CUVV0MVJTeE5RVUZCUVN4RFFVRlJNVUlzUTBGQlFVRXNRMEZCUjBNc1NVRkJRVUVzUTBGQlRXNUVMRU5CUVVGQkxFTkJRVWRQTEVOQlFVRkJMRU5CUVVGQkxFTkJRMjVFTEVsQlFVbHBSQ3hEUVVGQlFTeERRVUZKTEVsQlFVbEhMRkZCUVVGQkxFTkJRVk53UkN4RFFVRkJRU3hEUVVGQlFTeERRVWR5UWl4UFFVWkJhVVFzUTBGQlFVRXNRMEZCUlhGQ0xFMUJRVUZCTEVOQlFVOHpRaXhEUVVGQlFTeERRVUZIUXl4SlFVRkJRU3hEUVVGTmJrUXNRMEZCUVVFc1EwRkJRVUVzUTBGRGJFSjNSQ3hEUVVGQlFTeERRVUZGYzBJc1RVRkJRVUVzUTBGQlQzcEZMRWRCUVVGQkxFTkJRVXQxUlN4TlFVRkJRU3hEUVVGQlFTeERRVU5RTEVOQlFVRXNRMEZIVkN4VFFVRlRSeXg1UWtGQlFVRXNRMEZCTUVKeVJpeERRVUZCUVN4RFFVRkhjMFlzU1VGQlFVRXNRMEZCVFRsQ0xFTkJRVUZCTEVOQlFVZERMRWxCUVVGQkxFTkJRVTF1UkN4RFFVRkJRU3hEUVVGSFR5eERRVUZCUVN4RFFVRkJRU3hEUVVOMFJDeEpRVUZKWkN4RFFVRkJRU3hEUVVGSkxFbEJRVWxZTEZWQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJSWFpDTEU5QlJFRTJSaXhyUWtGQlFVRXNRMEZCYlVKc1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSWGxFTEVOQlFVRkJMRU5CUVVWRExFbEJRVUZCTEVOQlFVdHVSQ3hEUVVGQlFTeERRVUZGVHl4RFFVRkJRU3hEUVVGQlFTeERRVU42UWt3c1owSkJRVUZCTEVOQlFXbENVaXhEUVVGQlFTeERRVUZGYzBZc1NVRkJRVUVzUTBGQlMzWkdMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlIyNURMRk5CUVZOM1JpeG5Ra0ZCUVVFc1EwRkJhVUo2UlN4RFFVRkJRU3hEUVVGRk1FTXNRMEZCUVVFc1EwRkJSV3BFTEVOQlFVRkJMRU5CUVVWRUxFTkJRVUZCTEVOQlFVVlBMRU5CUVVGQkxFTkJRVUZCTEVOQlEyaERMRWxCUVVsb1F5eERRVUZCUVN4RFFVTktMRWRCUVVrd1FpeERRVUZCUVN4RFFVRkpMRVZCUVVFc1EwRkJTU3hOUVVGQkxFTkJRVkVzUTBGQlFTeERRVWR3UWl4SlFVWkJlVVFzYVVKQlFVRkJMRU5CUVd0Q2JFUXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVV3UXl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJXcEVMRU5CUVVGQkxFTkJRVVZFTEVOQlFVRkJMRU5CUVVWUExFTkJRVUZCTEVOQlFVRkJMRU5CUXpsQ2IwVXNhMEpCUVVGQkxFTkJRVzFDYmtVc1EwRkJRVUVzUTBGQlJ5eEZRVUZCTEVOQlFVbEJMRU5CUVVGQkxFTkJRVWNzUlVGQlFTeERRVUZKVUN4RFFVRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlNVOHNRMEZCUVVFc1EwRkJRVUVzUTBGRGNFTnFReXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVbEJMRU5CUVVGQkxFVkJRVUZCTEVOQlFVdHBReXhEUVVGQlFTeERRVUZGYWtNc1EwRkJRVUVzUTBGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUTJoRExFOUJRVThzUTBGQlFTeERRVWRVTEZOQlFWTXlSeXh4UWtGQlFVRXNRMEZCYzBKb1F5eERRVUZCUVN4RFFVRkZNVU1zUTBGQlFVRXNRMEZCUlZBc1EwRkJRVUVzUTBGQlJVUXNRMEZCUVVFc1EwRkJSVThzUTBGQlFVRXNRMEZCUVVFc1EwRkRja01zU1VGQlNXaERMRU5CUVVGQkxFTkJRMEZyUWl4RFFVRkJRU3hEUVVGSkxFbEJRVWxZTEZWQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJRM1pDTEVkQlFVbHRRaXhEUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCU1N4TlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVWd1FpeEhRVVJCYzBRc1lVRkJRVUVzUTBGQll6bEVMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZGTEVWQlFVRXNRMEZCUjA4c1EwRkJRVUVzUTBGQlJVOHNRMEZCUVVFc1EwRkJRVUVzUTBGRGFVTXNRMEZCUVN4SFFVRndSSGRGTEhsQ1FVRkJRU3hEUVVFd1FuWkZMRU5CUVVGQkxFTkJRVWNzUlVGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSExFVkJRVUVzUTBGQlIxQXNRMEZCUVVFc1EwRkJTU3hGUVVGQkxFTkJRVWRTTEVOQlFVRkJMRU5CUVVGQkxFTkJRVlVzVFVGQlFTeERRVUZSTEVOQlFVRXNRMEZGYmtVc1NVRkVRV2xGTEdsQ1FVRkJRU3hEUVVGclFsSXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVV4UXl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlJWQXNRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUlU4c1EwRkJRVUVzUTBGQlFVRXNRMEZEZWtKb1F5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1N4RlFVRkJMRU5CUVVsQkxFTkJRVUZCTEVWQlFVRkJMRU5CUVVzeVJTeERRVUZCUVN4RFFVRkZNMFVzUTBGQlFVRXNRMEZCUVVFc1EwRkJTeXhEUVVGQkxFTkJRMmhETEU5QlFVOHNRMEZCUVN4RFFVZFVMRk5CUVZNMFJ5eFJRVUZCUVN4RFFVRlRNMGNzUTBGQlFVRXNRMEZCUnpSSExFTkJRVUZCTEVOQlFVRkJMRU5CUTI1Q0xFbEJRVWszUnl4RFFVRkJRU3hEUVVOS0xFbEJRVXRCTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpMRVZCUVVFc1EwRkJTVUVzUTBGQlFVRXNSVUZCUVVFc1EwRkJTME1zUTBGQlFVRXNRMEZCUlVRc1EwRkJRVUVzUTBGQlFVRXNRMEZCVlN4RFFVRkJMRU5CUVV3MlJ5eERRVUZCUVN4RFFVRkZOMGNzUTBGQlFVRXNRMEZCUVVFc1EwRkhjRU1zVTBGQlV6aEhMRkZCUVVGQkxFTkJRVk0xUlN4RFFVRkJRU3hEUVVGQlFTeERRVU5vUWl4SlFVRkpiRU1zUTBGQlFVRXNRMEZCUnl0SExFTkJRVUZCTEVOQlFVYzVSU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZEWkN4SlFVRkxha01zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVa3NSVUZCUVN4RFFVRkpRU3hEUVVGQlFTeEZRVUZCUVN4RFFVTnNRaXRITEVOQlFVRkJMRU5CUVVrM1JTeERRVUZCUVN4RFFVRkZiRU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJTMmxETEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVObVFTeERRVUZCUVN4RFFVRkpLMFVzU1VGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlRVWXNRMEZCUVVFc1EwRkJTU3hMUVVGQkxFTkJRVUVzUTBGRGJrSTNSU3hEUVVGQlFTeERRVUZGYkVNc1EwRkJRVUVzUTBGQlFVRXNRMEZCU3l0SExFTkJRVUZCTEVOQlFWRXNTMEZCUVN4RFFVRktPVVVzUTBGQlFVRXNRMEZGWWtNc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNSVUZCVFVRc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVa3NSVUZCUVN4RlFVRk5RU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVZDRRaXhUUVVGVGFVWXNVVUZCUVVFc1EwRkJVeTlGTEVOQlFVRkJMRU5CUVVkblJpeERRVUZCUVN4RFFVRkhkRU1zUTBGQlFVRXNRMEZCUVVFc1EwRkZkRUlzU1VGRVFTeEpRVUZKZFVNc1EwRkJRVUVzUTBGQlIyNUdMRU5CUVVGQkxFTkJRVUZCTEVWQlFVMDBReXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVTk9OMFVzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVa3NSVUZCUVN4RFFVRkpRU3hEUVVGQlFTeEZRVUZCUVN4RFFVTjBRbTlJTEVOQlFVRkJMRU5CUVVsdVJpeERRVUZCUVN4RlFVRkxSU3hEUVVGQlFTeERRVUZGYmtNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzIxSUxFTkJRVUZCTEVOQlFVVnVTQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVOc1FtMURMRU5CUVVGQkxFTkJRVVZ1UXl4RFFVRkJRU3hEUVVGQlFTeEZRVUZOYjBnc1EwRkJRVUVzUTBGRFVrUXNRMEZCUVVFc1EwRkJSVzVJTEVOQlFVRkJMRU5CUVVGQkxFVkJRVTF2U0N4RFFVRkJRU3hEUVVsYUxGTkJRVk5ETEZOQlFVRkJMRU5CUVZWdVJpeERRVUZCUVN4RFFVRkhWQ3hEUVVGQlFTeERRVUZCUVN4RFFVTndRaXhKUVVGSmVrSXNRMEZCUVVFc1EwRkJSM05JTEVOQlFVRkJMRU5CUVVkNlF5eERRVUZCUVN4RFFVTk9SaXhEUVVGQlFTeERRVUZKTjBVc1JVRkJRVUVzUlVGQlFVRXNRMEZCVFhOSUxFTkJRVUZCTEVOQlFVbDBTQ3hGUVVGQlFTeEZRVUZCUVN4RFFVTnNRaXhKUVVGTFJTeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1N4RlFVRkJMRU5CUVVsQkxFTkJRVUZCTEVWQlFVRkJMRU5CUVV0dlNDeERRVUZCUVN4RFFVRkZjRWdzUTBGQlFVRXNRMEZCUVVFc1EwRkJTM2xDTEVOQlFVRkJMRU5CUVVWNlFpeERRVUZCUVN4RFFVRkJRU3hEUVVsc1F5eEpRVWhCT0Vjc1VVRkJRVUVzUTBGQlUwMHNRMEZCUVVFc1EwRkJRVUVzUTBGRFZFNHNVVUZCUVVFc1EwRkJVMDBzUTBGQlFVRXNRMEZCUVVFc1EwRkRWRTRzVVVGQlFVRXNRMEZCVTAwc1EwRkJRVUVzUTBGQlFVRXNRMEZEU2tVc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hGUVVGQlFTeERRVUZMTEVOQlJYUkNMRWxCUkVFelF5eERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGTGVVTXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlN5eExRVUZCTEVOQlExUndTQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVbEJMRU5CUVVGQkxFVkJRVUZCTEVOQlEyeENNa1VzUTBGQlFVRXNRMEZCUlRORkxFTkJRVUZCTEVOQlFVRkJMRU5CUVV0dlNDeERRVUZCUVN4RFFVRkZjRWdzUTBGQlFVRXNRMEZCUVVFc1EwRkJTeXhMUVVGQkxFVkJRVmN5UlN4RFFVRkJRU3hEUVVGRk0wVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUlVGQlNTeEZRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CUTNaRE1rVXNRMEZCUVVFc1EwRkJSVE5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFVkJRVTBzUzBGQlFTeERRVVZhTWtVc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZCVFhsRExFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVUwc1MwRkJRU3hGUVVGWGVrTXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUlVGQlN5eEZRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkJMRU5CUTNoRFJTeERRVUZCUVN4RFFVRkxSaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RlFVRkxMRVZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRMnhDUVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeEZRVUZQTEV0QlFVRXNRMEZEVkhWRExGRkJRVUZCTEVOQlFWTkZMRU5CUVVGQkxFTkJRVWQ2UXl4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlJVVXNRMEZCUVVFc1EwRkJRVUVzUTBGRmJrSXNTVUZCU3pkRkxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCU1VFc1EwRkJRVUVzUlVGQlFVRXNRMEZEYkVKclF5eERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJSV3hETEVOQlFVRkJMRU5CUVVGQkxFTkJRVmtzUjBGQlFTeERRVUZRYjBnc1EwRkJRVUVzUTBGQlJYQklMRU5CUVVGQkxFTkJRVUZCTEVOQlExaHJReXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUld4RExFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVV0dlNDeERRVUZCUVN4RFFVRkZjRWdzUTBGQlFVRXNRMEZCUVVFc1JVRkJTU3hEUVVGQkxFTkJTWEpDTEZOQlFWTjFTQ3hSUVVGQlFTeERRVUZUVml4RFFVRkJRU3hEUVVGSGFFTXNRMEZCUVVFc1EwRkJRVUVzUTBGRGJrSXNTVUZCU1RWRExFTkJRVUZCTEVOQlFVa3NTVUZCU1RGQ0xGVkJRVUZCTEVOQlFWY3NSVUZCUVN4RFFVRkJMRU5CUVV0dFFpeERRVUZCUVN4RFFVRkpMRWxCUVVsdVFpeFZRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJRU3hEUVVjdlF5eFBRVVpCT0Vjc1UwRkJRVUVzUTBGQlZYQkdMRU5CUVVGQkxFTkJRVWMwUlN4RFFVRkJRU3hEUVVGQlFTeERRVU5pVVN4VFFVRkJRU3hEUVVGVk0wWXNRMEZCUVVFc1EwRkJSMjFFTEVOQlFVRkJMRU5CUVVGQkxFTkJRMDVxUkN4blFrRkJRVUVzUTBGQmFVSkxMRU5CUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZIVUN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVWR1UXl4VFFVRlRPRVlzVVVGQlFVRXNRMEZCVTFnc1EwRkJRVUVzUTBGQlFVRXNRMEZEYUVJc1NVRkJTVzVHTEVOQlFVRkJMRU5CUVVrc1NVRkJTVzVDTEZWQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJSWFpDTEU5QlJFRTRSeXhUUVVGQlFTeERRVUZWTTBZc1EwRkJRVUVzUTBGQlIyMUdMRU5CUVVGQkxFTkJRVUZCTEVOQlEwTXNRMEZCUVN4RFFVRlFia1lzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkhXQ3hUUVVGVEswWXNWMEZCUVVFc1EwRkJXWFpHTEVOQlFVRkJMRU5CUVVkVUxFTkJRVUZCTEVOQlFVRkJMRU5CUTNSQ0xFbEJRVWw2UWl4RFFVRkJRU3hEUVVOS0xFbEJRVXRCTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpMRVZCUVVFc1EwRkJTVUVzUTBGQlFVRXNSVUZCUVVFc1EwRkJTMnRETEVOQlFVRkJMRU5CUVVWc1F5eERRVUZCUVN4RFFVRkJRU3hEUVVGTGVVSXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVVY2UWl4RFFVRkJRU3hEUVVGQlFTeEZRVUZOZVVJc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVVjZRaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RlFVRk5MRU5CUVVFc1EwRkJRU3hEUVVOMFJHdERMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVWQlFVOHNTMEZCUVN4RFFVZFlMRk5CUVZOM1JpeERRVUZCUVN4RFFVRkZlRVlzUTBGQlFVRXNRMEZCUnpKRkxFTkJRVUZCTEVOQlFVZG9ReXhEUVVGQlFTeERRVUZCUVN4RFFVTm1MRWxCUVVzc1NVRkJTVGRGTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpMRVZCUVVFc1EwRkJTVUVzUTBGQlFVRXNSVUZCUVVFc1EwRkJTMnRETEVOQlFVRkJMRU5CUVVWc1F5eERRVUZCUVN4RFFVRkJRU3hEUVVGTE5rY3NRMEZCUVVFc1EwRkJSVGRITEVOQlFVRkJMRU5CUVVGQkxFTkJRVXMyUlN4RFFVRkJRU3hEUVVGRk4wVXNRMEZCUVVFc1EwRkJRVUVzUTBGSEwwTXNVMEZCVXpKSUxFTkJRVUZCTEVOQlFVVjZSaXhEUVVGQlFTeERRVUZITWtVc1EwRkJRVUVzUTBGQlIyaERMRU5CUVVGQkxFTkJRVUZCTEVOQlEyWXNTVUZCU3l4SlFVRkpOMFVzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVa3NSVUZCUVN4RFFVRkpRU3hEUVVGQlFTeEZRVUZCUVN4RFFVRkxhME1zUTBGQlFVRXNRMEZCUld4RExFTkJRVUZCTEVOQlFVRkJMRU5CUVVzMlJ5eERRVUZCUVN4RFFVRkZOMGNzUTBGQlFVRXNRMEZCUVVFc1EwRkJTelpGTEVOQlFVRkJMRU5CUVVVM1JTeERRVUZCUVN4RFFVRkJRU3hEUVVjdlF5eFRRVUZUTkVnc1EwRkJRVUVzUTBGQlJURkdMRU5CUVVGQkxFTkJRVWN5UlN4RFFVRkJRU3hEUVVGSGFFTXNRMEZCUVVFc1EwRkJRVUVzUTBGRFppeEpRVUZKYTBNc1EwRkJRVUVzUTBGQlJ6bEZMRU5CUVVGQkxFTkJRMHB4UkN4RlFVRkJRU3hEUVVGTExFTkJRVUVzUTBGQlNVTXNSVUZCUVVFc1EwRkJTeXhEUVVGQkxFTkJRVWxETEVWQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGSlF5eEZRVUZCUVN4RFFVRkxMRU5CUVVFc1EwRkJTVU1zUlVGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVVsRExFVkJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVRkpReXhGUVVGQlFTeERRVUZMTEVOQlFVRXNRMEZCU1VNc1JVRkJRVUVzUTBGQlN5eERRVUZCTEVOQlEzQkZaME1zUlVGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVVsRExFVkJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVRkhReXhIUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUjBNc1IwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVZERMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZIUXl4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlIwTXNSMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWRETEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVOeVJVTXNSMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWRETEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGSFF5eEhRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJSME1zUjBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVkRExFZEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkhReXhIUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUjBNc1IwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVZERMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVU55UlVNc1IwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVZERMRWRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZIUXl4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlIwTXNSMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWRETEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGSFF5eEhRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJSME1zUjBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUXpWRVF5eEZRVUZCUVN4RFFVRkxka1VzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkRVSGRGTEVWQlFVRkJMRU5CUVV0NFJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOUWVVVXNSVUZCUVVFc1EwRkJTM3BGTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRMUF3UlN4RlFVRkJRU3hEUVVGTE1VVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGRFVESkZMRVZCUVVGQkxFTkJRVXN6UlN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVU5RTkVVc1JVRkJRVUVzUTBGQlN6VkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlExQTJSU3hGUVVGQlFTeERRVUZMTjBVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZEVURoRkxFVkJRVUZCTEVOQlFVczVSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVTlFLMFVzUlVGQlFVRXNRMEZCU3k5RkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUTFCblJpeEZRVUZCUVN4RFFVRkxhRVlzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkRVR2xHTEVkQlFVRkJMRU5CUVUxcVJpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVOU2EwWXNSMEZCUVVFc1EwRkJUV3hHTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRMUp0Uml4SFFVRkJRU3hEUVVGTmJrWXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGRFVtOUdMRWRCUVVGQkxFTkJRVTF3Uml4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVU5TY1VZc1IwRkJRVUVzUTBGQlRYSkdMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlExSnpSaXhIUVVGQlFTeERRVUZOZEVZc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVOQlFVRXNRMEZIVmxNc1JVRkJRVUVzUlVGQlFVRXNRMEZFUVhsQ0xFTkJRVUZCTEVOQlFVbEdMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVWQlEwbDFReXhGUVVGQlFTeERRVU5XTjBRc1JVRkJRVUVzUlVGQlRYZENMRU5CUVVGQkxFTkJRVWx6UXl4RlFVRkJRU3hEUVVOV04wUXNSVUZCUVVFc1JVRkJUWFZDTEVOQlFVRkJMRU5CUVVsMVF5eEZRVUZCUVN4RFFVTldOMFFzUlVGQlFVRXNSVUZCVFhOQ0xFTkJRVUZCTEVOQlFVbDNReXhGUVVGQlFTeERRVU5XTjBRc1JVRkJRVUVzUlVGQlRYRkNMRU5CUVVGQkxFTkJRVWw1UXl4RlFVRkJRU3hEUVVOV04wUXNSVUZCUVVFc1JVRkJUVzlDTEVOQlFVRkJMRU5CUVVrd1F5eEZRVUZCUVN4RFFVTldOMFFzUlVGQlFVRXNSVUZCVFcxQ0xFTkJRVUZCTEVOQlFVa3lReXhGUVVGQlFTeERRVU5XTjBRc1JVRkJRVUVzUlVGQlRXdENMRU5CUVVGQkxFTkJRVWswUXl4RlFVRkJRU3hEUVVOV09VSXNSVUZCUVVFc1JVRkJUV1FzUTBGQlFVRXNRMEZCU1RaRExFVkJRVUZCTEVOQlExWTVRaXhGUVVGQlFTeEZRVUZOWml4RFFVRkJRU3hEUVVGSk9FTXNSVUZCUVVFc1EwRkRWamxDTEVkQlFVRkJMRVZCUVU5b1FpeERRVUZCUVN4RFFVRkpLME1zUjBGQlFVRXNRMEZEV0RsQ0xFZEJRVUZCTEVWQlFVOXFRaXhEUVVGQlFTeERRVUZKWjBRc1IwRkJRVUVzUTBGRFdEbENMRWRCUVVGQkxFVkJRVTlzUWl4RFFVRkJRU3hEUVVGSmFVUXNSMEZCUVVFc1EwRkRXRGxDTEVkQlFVRkJMRVZCUVU5dVFpeERRVUZCUVN4RFFVRkphMFFzUjBGQlFVRXNRMEZEV0RsQ0xFZEJRVUZCTEVWQlFVOXdRaXhEUVVGQlFTeERRVUZKYlVRc1IwRkJRVUVzUTBGRFdEbENMRWRCUVVGQkxFVkJRVTl5UWl4RFFVRkJRU3hEUVVGSmIwUXNSMEZCUVVFc1EwRkZXRFZGTEVWQlFVRkJMRVZCUVVGQkxFTkJSRUYzUWl4RFFVRkJRU3hEUVVGSlJpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hGUVVOSmRVTXNSVUZCUVVFc1EwRkRWalZFTEVWQlFVRkJMRVZCUVUxMVFpeERRVUZCUVN4RFFVRkpjME1zUlVGQlFVRXNRMEZEVmpWRUxFVkJRVUZCTEVWQlFVMXpRaXhEUVVGQlFTeERRVUZKZFVNc1JVRkJRVUVzUTBGRFZqVkVMRVZCUVVGQkxFVkJRVTF4UWl4RFFVRkJRU3hEUVVGSmQwTXNSVUZCUVVFc1EwRkRWalZFTEVWQlFVRkJMRVZCUVUxdlFpeERRVUZCUVN4RFFVRkplVU1zUlVGQlFVRXNRMEZEVmpWRUxFVkJRVUZCTEVWQlFVMXRRaXhEUVVGQlFTeERRVUZKTUVNc1JVRkJRVUVzUTBGRFZqVkVMRVZCUVVGQkxFVkJRVTFyUWl4RFFVRkJRU3hEUVVGSk1rTXNSVUZCUVVFc1EwRkRWamRDTEVWQlFVRkJMRVZCUVUxa0xFTkJRVUZCTEVOQlFVazBReXhGUVVGQlFTeERRVU5XTjBJc1JVRkJRVUVzUlVGQlRXWXNRMEZCUVVFc1EwRkJTVFpETEVWQlFVRkJMRU5CUTFZM1FpeEhRVUZCUVN4RlFVRlBhRUlzUTBGQlFVRXNRMEZCU1RoRExFVkJRVUZCTEVOQlExZzNRaXhIUVVGQlFTeEZRVUZQYWtJc1EwRkJRVUVzUTBGQlNTdERMRWRCUVVGQkxFTkJRMWczUWl4SFFVRkJRU3hGUVVGUGJFSXNRMEZCUVVFc1EwRkJTV2RFTEVkQlFVRkJMRU5CUTFnM1FpeEhRVUZCUVN4RlFVRlBia0lzUTBGQlFVRXNRMEZCU1dsRUxFZEJRVUZCTEVOQlExZzNRaXhIUVVGQlFTeEZRVUZQY0VJc1EwRkJRVUVzUTBGQlNXdEVMRWRCUVVGQkxFTkJRMWczUWl4SFFVRkJRU3hGUVVGUGNrSXNRMEZCUVVFc1EwRkJTVzFFTEVkQlFVRkJMRU5CUTFnM1FpeEhRVUZCUVN4RlFVRlBkRUlzUTBGQlFVRXNRMEZCU1c5RUxFZEJRVUZCTEVOQlJWZ3pSU3hGUVVGQlFTeEZRVUZCUVN4RFFVUkJkVUlzUTBGQlFVRXNRMEZCU1VZc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNSVUZEU1hWRExFVkJRVUZCTEVOQlExWXpSQ3hGUVVGQlFTeEZRVUZOYzBJc1EwRkJRVUVzUTBGQlNYTkRMRVZCUVVGQkxFTkJRMVl6UkN4RlFVRkJRU3hGUVVGTmNVSXNRMEZCUVVFc1EwRkJTWFZETEVWQlFVRkJMRU5CUTFZelJDeEZRVUZCUVN4RlFVRk5iMElzUTBGQlFVRXNRMEZCU1hkRExFVkJRVUZCTEVOQlExWXpSQ3hGUVVGQlFTeEZRVUZOYlVJc1EwRkJRVUVzUTBGQlNYbERMRVZCUVVGQkxFTkJRMVl6UkN4RlFVRkJRU3hGUVVGTmEwSXNRMEZCUVVFc1EwRkJTVEJETEVWQlFVRkJMRU5CUTFZMVFpeEZRVUZCUVN4RlFVRk5aQ3hEUVVGQlFTeERRVUZKTWtNc1JVRkJRVUVzUTBGRFZqVkNMRVZCUVVGQkxFVkJRVTFtTEVOQlFVRkJMRU5CUVVrMFF5eEZRVUZCUVN4RFFVTldOVUlzUjBGQlFVRXNSVUZCVDJoQ0xFTkJRVUZCTEVOQlFVazJReXhGUVVGQlFTeERRVU5ZTlVJc1IwRkJRVUVzUlVGQlQycENMRU5CUVVGQkxFTkJRVWs0UXl4RlFVRkJRU3hEUVVOWU5VSXNSMEZCUVVFc1JVRkJUMnhDTEVOQlFVRkJMRU5CUVVrclF5eEhRVUZCUVN4RFFVTllOVUlzUjBGQlFVRXNSVUZCVDI1Q0xFTkJRVUZCTEVOQlFVbG5SQ3hIUVVGQlFTeERRVU5ZTlVJc1IwRkJRVUVzUlVGQlQzQkNMRU5CUVVGQkxFTkJRVWxwUkN4SFFVRkJRU3hEUVVOWU5VSXNSMEZCUVVFc1JVRkJUM0pDTEVOQlFVRkJMRU5CUVVsclJDeEhRVUZCUVN4RFFVTllOVUlzUjBGQlFVRXNSVUZCVDNSQ0xFTkJRVUZCTEVOQlFVbHRSQ3hIUVVGQlFTeERRVU5ZTlVJc1IwRkJRVUVzUlVGQlQzWkNMRU5CUVVGQkxFTkJRVWx2UkN4SFFVRkJRU3hEUVVWWU1VVXNSVUZCUVVFc1JVRkJRVUVzUTBGRVFYTkNMRU5CUVVGQkxFTkJRVWxHTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFVkJRMGwxUXl4RlFVRkJRU3hEUVVOV01VUXNSVUZCUVVFc1JVRkJUWEZDTEVOQlFVRkJMRU5CUVVselF5eEZRVUZCUVN4RFFVTldNVVFzUlVGQlFVRXNSVUZCVFc5Q0xFTkJRVUZCTEVOQlFVbDFReXhGUVVGQlFTeERRVU5XTVVRc1JVRkJRVUVzUlVGQlRXMUNMRU5CUVVGQkxFTkJRVWwzUXl4RlFVRkJRU3hEUVVOV01VUXNSVUZCUVVFc1JVRkJUV3RDTEVOQlFVRkJMRU5CUVVsNVF5eEZRVUZCUVN4RFFVTldNMElzUlVGQlFVRXNSVUZCVFdRc1EwRkJRVUVzUTBGQlNUQkRMRVZCUVVGQkxFTkJRMVl6UWl4RlFVRkJRU3hGUVVGTlppeERRVUZCUVN4RFFVRkpNa01zUlVGQlFVRXNRMEZEVmpOQ0xFZEJRVUZCTEVWQlFVOW9RaXhEUVVGQlFTeERRVUZKTkVNc1JVRkJRVUVzUTBGRFdETkNMRWRCUVVGQkxFVkJRVTlxUWl4RFFVRkJRU3hEUVVGSk5rTXNSVUZCUVVFc1EwRkRXRE5DTEVkQlFVRkJMRVZCUVU5c1FpeERRVUZCUVN4RFFVRkpPRU1zUlVGQlFVRXNRMEZEV0ROQ0xFZEJRVUZCTEVWQlFVOXVRaXhEUVVGQlFTeERRVUZKSzBNc1IwRkJRVUVzUTBGRFdETkNMRWRCUVVGQkxFVkJRVTl3UWl4RFFVRkJRU3hEUVVGSlowUXNSMEZCUVVFc1EwRkRXRE5DTEVkQlFVRkJMRVZCUVU5eVFpeERRVUZCUVN4RFFVRkphVVFzUjBGQlFVRXNRMEZEV0ROQ0xFZEJRVUZCTEVWQlFVOTBRaXhEUVVGQlFTeERRVUZKYTBRc1IwRkJRVUVzUTBGRFdETkNMRWRCUVVGQkxFVkJRVTkyUWl4RFFVRkJRU3hEUVVGSmJVUXNSMEZCUVVFc1EwRkRXRE5DTEVkQlFVRkJMRVZCUVU5NFFpeERRVUZCUVN4RFFVRkpiMFFzUjBGQlFVRXNRMEZGV0hwRkxFVkJRVUZCTEVWQlFVRkJMRU5CUkVGeFFpeERRVUZCUVN4RFFVRkpSaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RlFVTkpkVU1zUlVGQlFVRXNRMEZEVm5wRUxFVkJRVUZCTEVWQlFVMXZRaXhEUVVGQlFTeERRVUZKYzBNc1JVRkJRVUVzUTBGRFZucEVMRVZCUVVGQkxFVkJRVTF0UWl4RFFVRkJRU3hEUVVGSmRVTXNSVUZCUVVFc1EwRkRWbnBFTEVWQlFVRkJMRVZCUVUxclFpeERRVUZCUVN4RFFVRkpkME1zUlVGQlFVRXNRMEZEVmpGQ0xFVkJRVUZCTEVWQlFVMWtMRU5CUVVGQkxFTkJRVWw1UXl4RlFVRkJRU3hEUVVOV01VSXNSVUZCUVVFc1JVRkJUV1lzUTBGQlFVRXNRMEZCU1RCRExFVkJRVUZCTEVOQlExWXhRaXhIUVVGQlFTeEZRVUZQYUVJc1EwRkJRVUVzUTBGQlNUSkRMRVZCUVVGQkxFTkJRMWd4UWl4SFFVRkJRU3hGUVVGUGFrSXNRMEZCUVVFc1EwRkJTVFJETEVWQlFVRkJMRU5CUTFneFFpeEhRVUZCUVN4RlFVRlBiRUlzUTBGQlFVRXNRMEZCU1RaRExFVkJRVUZCTEVOQlExZ3hRaXhIUVVGQlFTeEZRVUZQYmtJc1EwRkJRVUVzUTBGQlNUaERMRVZCUVVGQkxFTkJRMWd4UWl4SFFVRkJRU3hGUVVGUGNFSXNRMEZCUVVFc1EwRkJTU3RETEVkQlFVRkJMRU5CUTFneFFpeEhRVUZCUVN4RlFVRlBja0lzUTBGQlFVRXNRMEZCU1dkRUxFZEJRVUZCTEVOQlExZ3hRaXhIUVVGQlFTeEZRVUZQZEVJc1EwRkJRVUVzUTBGQlNXbEVMRWRCUVVGQkxFTkJRMWd4UWl4SFFVRkJRU3hGUVVGUGRrSXNRMEZCUVVFc1EwRkJTV3RFTEVkQlFVRkJMRU5CUTFneFFpeEhRVUZCUVN4RlFVRlBlRUlzUTBGQlFVRXNRMEZCU1cxRUxFZEJRVUZCTEVOQlExZ3hRaXhIUVVGQlFTeEZRVUZQZWtJc1EwRkJRVUVzUTBGQlNXOUVMRWRCUVVGQkxFTkJSVmg0UlN4RlFVRkJRU3hGUVVGQlFTeERRVVJCYjBJc1EwRkJRVUVzUTBGQlNVWXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUlVGRFNYVkRMRVZCUVVGQkxFTkJRMVo0UkN4RlFVRkJRU3hGUVVGTmJVSXNRMEZCUVVFc1EwRkJTWE5ETEVWQlFVRkJMRU5CUTFaNFJDeEZRVUZCUVN4RlFVRk5hMElzUTBGQlFVRXNRMEZCU1hWRExFVkJRVUZCTEVOQlExWjZRaXhGUVVGQlFTeEZRVUZOWkN4RFFVRkJRU3hEUVVGSmQwTXNSVUZCUVVFc1EwRkRWbnBDTEVWQlFVRkJMRVZCUVUxbUxFTkJRVUZCTEVOQlFVbDVReXhGUVVGQlFTeERRVU5XZWtJc1IwRkJRVUVzUlVGQlQyaENMRU5CUVVGQkxFTkJRVWt3UXl4RlFVRkJRU3hEUVVOWWVrSXNSMEZCUVVFc1JVRkJUMnBDTEVOQlFVRkJMRU5CUVVreVF5eEZRVUZCUVN4RFFVTllla0lzUjBGQlFVRXNSVUZCVDJ4Q0xFTkJRVUZCTEVOQlFVazBReXhGUVVGQlFTeERRVU5ZZWtJc1IwRkJRVUVzUlVGQlQyNUNMRU5CUVVGQkxFTkJRVWsyUXl4RlFVRkJRU3hEUVVOWWVrSXNSMEZCUVVFc1JVRkJUM0JDTEVOQlFVRkJMRU5CUVVrNFF5eEZRVUZCUVN4RFFVTllla0lzUjBGQlFVRXNSVUZCVDNKQ0xFTkJRVUZCTEVOQlFVa3JReXhIUVVGQlFTeERRVU5ZZWtJc1IwRkJRVUVzUlVGQlQzUkNMRU5CUVVGQkxFTkJRVWxuUkN4SFFVRkJRU3hEUVVOWWVrSXNSMEZCUVVFc1JVRkJUM1pDTEVOQlFVRkJMRU5CUVVscFJDeEhRVUZCUVN4RFFVTllla0lzUjBGQlFVRXNSVUZCVDNoQ0xFTkJRVUZCTEVOQlFVbHJSQ3hIUVVGQlFTeERRVU5ZZWtJc1IwRkJRVUVzUlVGQlQzcENMRU5CUVVGQkxFTkJRVWx0UkN4SFFVRkJRU3hEUVVOWWVrSXNSMEZCUVVFc1JVRkJUekZDTEVOQlFVRkJMRU5CUVVsdlJDeEhRVUZCUVN4RFFVVllka1VzUlVGQlFVRXNSVUZCUVVFc1EwRkVRVzFDTEVOQlFVRkJMRU5CUVVsR0xFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRVZCUTBsMVF5eEZRVUZCUVN4RFFVTldka1FzUlVGQlFVRXNSVUZCVFd0Q0xFTkJRVUZCTEVOQlFVbHpReXhGUVVGQlFTeERRVU5XZUVJc1JVRkJRVUVzUlVGQlRXUXNRMEZCUVVFc1EwRkJTWFZETEVWQlFVRkJMRU5CUTFaNFFpeEZRVUZCUVN4RlFVRk5aaXhEUVVGQlFTeERRVUZKZDBNc1JVRkJRVUVzUTBGRFZuaENMRWRCUVVGQkxFVkJRVTlvUWl4RFFVRkJRU3hEUVVGSmVVTXNSVUZCUVVFc1EwRkRXSGhDTEVkQlFVRkJMRVZCUVU5cVFpeERRVUZCUVN4RFFVRkpNRU1zUlVGQlFVRXNRMEZEV0hoQ0xFZEJRVUZCTEVWQlFVOXNRaXhEUVVGQlFTeERRVUZKTWtNc1JVRkJRVUVzUTBGRFdIaENMRWRCUVVGQkxFVkJRVTl1UWl4RFFVRkJRU3hEUVVGSk5FTXNSVUZCUVVFc1EwRkRXSGhDTEVkQlFVRkJMRVZCUVU5d1FpeERRVUZCUVN4RFFVRkpOa01zUlVGQlFVRXNRMEZEV0hoQ0xFZEJRVUZCTEVWQlFVOXlRaXhEUVVGQlFTeERRVUZKT0VNc1JVRkJRVUVzUTBGRFdIaENMRWRCUVVGQkxFVkJRVTkwUWl4RFFVRkJRU3hEUVVGSkswTXNSMEZCUVVFc1EwRkRXSGhDTEVkQlFVRkJMRVZCUVU5MlFpeERRVUZCUVN4RFFVRkpaMFFzUjBGQlFVRXNRMEZEV0hoQ0xFZEJRVUZCTEVWQlFVOTRRaXhEUVVGQlFTeERRVUZKYVVRc1IwRkJRVUVzUTBGRFdIaENMRWRCUVVGQkxFVkJRVTk2UWl4RFFVRkJRU3hEUVVGSmEwUXNSMEZCUVVFc1EwRkRXSGhDTEVkQlFVRkJMRVZCUVU4eFFpeERRVUZCUVN4RFFVRkpiVVFzUjBGQlFVRXNRMEZEV0hoQ0xFZEJRVUZCTEVWQlFVOHpRaXhEUVVGQlFTeERRVUZKYjBRc1IwRkJRVUVzUTBGRldIUkZMRVZCUVVGQkxFVkJRVUZCTEVOQlJFRnJRaXhEUVVGQlFTeERRVUZKUml4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeEZRVU5KZFVNc1JVRkJRVUVzUTBGRFZuWkNMRVZCUVVGQkxFVkJRVTFrTEVOQlFVRkJMRU5CUVVselF5eEZRVUZCUVN4RFFVTldka0lzUlVGQlFVRXNSVUZCVFdZc1EwRkJRVUVzUTBGQlNYVkRMRVZCUVVGQkxFTkJRMVoyUWl4SFFVRkJRU3hGUVVGUGFFSXNRMEZCUVVFc1EwRkJTWGRETEVWQlFVRkJMRU5CUTFoMlFpeEhRVUZCUVN4RlFVRlBha0lzUTBGQlFVRXNRMEZCU1hsRExFVkJRVUZCTEVOQlExaDJRaXhIUVVGQlFTeEZRVUZQYkVJc1EwRkJRVUVzUTBGQlNUQkRMRVZCUVVGQkxFTkJRMWgyUWl4SFFVRkJRU3hGUVVGUGJrSXNRMEZCUVVFc1EwRkJTVEpETEVWQlFVRkJMRU5CUTFoMlFpeEhRVUZCUVN4RlFVRlBjRUlzUTBGQlFVRXNRMEZCU1RSRExFVkJRVUZCTEVOQlExaDJRaXhIUVVGQlFTeEZRVUZQY2tJc1EwRkJRVUVzUTBGQlNUWkRMRVZCUVVGQkxFTkJRMWgyUWl4SFFVRkJRU3hGUVVGUGRFSXNRMEZCUVVFc1EwRkJTVGhETEVWQlFVRkJMRU5CUTFoMlFpeEhRVUZCUVN4RlFVRlBka0lzUTBGQlFVRXNRMEZCU1N0RExFZEJRVUZCTEVOQlExaDJRaXhIUVVGQlFTeEZRVUZQZUVJc1EwRkJRVUVzUTBGQlNXZEVMRWRCUVVGQkxFTkJRMWgyUWl4SFFVRkJRU3hGUVVGUGVrSXNRMEZCUVVFc1EwRkJTV2xFTEVkQlFVRkJMRU5CUTFoMlFpeEhRVUZCUVN4RlFVRlBNVUlzUTBGQlFVRXNRMEZCU1d0RUxFZEJRVUZCTEVOQlExaDJRaXhIUVVGQlFTeEZRVUZQTTBJc1EwRkJRVUVzUTBGQlNXMUVMRWRCUVVGQkxFTkJRMWgyUWl4SFFVRkJRU3hGUVVGUE5VSXNRMEZCUVVFc1EwRkJTVzlFTEVkQlFVRkJMRU5CUlZoMFF5eEZRVUZCUVN4RlFVRkJRU3hEUVVSQlpDeERRVUZCUVN4RFFVRkpSaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RlFVTkpkVU1zUlVGQlFVRXNRMEZEVm5SQ0xFVkJRVUZCTEVWQlFVMW1MRU5CUVVGQkxFTkJRVWx6UXl4RlFVRkJRU3hEUVVOV2RFSXNSMEZCUVVFc1JVRkJUMmhDTEVOQlFVRkJMRU5CUVVsMVF5eEZRVUZCUVN4RFFVTllkRUlzUjBGQlFVRXNSVUZCVDJwQ0xFTkJRVUZCTEVOQlFVbDNReXhGUVVGQlFTeERRVU5ZZEVJc1IwRkJRVUVzUlVGQlQyeENMRU5CUVVGQkxFTkJRVWw1UXl4RlFVRkJRU3hEUVVOWWRFSXNSMEZCUVVFc1JVRkJUMjVDTEVOQlFVRkJMRU5CUVVrd1F5eEZRVUZCUVN4RFFVTllkRUlzUjBGQlFVRXNSVUZCVDNCQ0xFTkJRVUZCTEVOQlFVa3lReXhGUVVGQlFTeERRVU5ZZEVJc1IwRkJRVUVzUlVGQlQzSkNMRU5CUVVGQkxFTkJRVWswUXl4RlFVRkJRU3hEUVVOWWRFSXNSMEZCUVVFc1JVRkJUM1JDTEVOQlFVRkJMRU5CUVVrMlF5eEZRVUZCUVN4RFFVTllkRUlzUjBGQlFVRXNSVUZCVDNaQ0xFTkJRVUZCTEVOQlFVazRReXhGUVVGQlFTeERRVU5ZZEVJc1IwRkJRVUVzUlVGQlQzaENMRU5CUVVGQkxFTkJRVWtyUXl4SFFVRkJRU3hEUVVOWWRFSXNSMEZCUVVFc1JVRkJUM3BDTEVOQlFVRkJMRU5CUVVsblJDeEhRVUZCUVN4RFFVTllkRUlzUjBGQlFVRXNSVUZCVHpGQ0xFTkJRVUZCTEVOQlFVbHBSQ3hIUVVGQlFTeERRVU5ZZEVJc1IwRkJRVUVzUlVGQlR6TkNMRU5CUVVGQkxFTkJRVWxyUkN4SFFVRkJRU3hEUVVOWWRFSXNSMEZCUVVFc1JVRkJUelZDTEVOQlFVRkJMRU5CUVVsdFJDeEhRVUZCUVN4RFFVTllkRUlzUjBGQlFVRXNSVUZCVHpkQ0xFTkJRVUZCTEVOQlFVbHZSQ3hIUVVGQlFTeERRVVZZY2tNc1JVRkJRVUVzUlVGQlFVRXNRMEZFUVdZc1EwRkJRVUVzUTBGQlNVWXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUlVGRFNYVkRMRVZCUVVGQkxFTkJRMVp5UWl4SFFVRkJRU3hGUVVGUGFFSXNRMEZCUVVFc1EwRkJTWE5ETEVWQlFVRkJMRU5CUTFoeVFpeEhRVUZCUVN4RlFVRlBha0lzUTBGQlFVRXNRMEZCU1hWRExFVkJRVUZCTEVOQlExaHlRaXhIUVVGQlFTeEZRVUZQYkVJc1EwRkJRVUVzUTBGQlNYZERMRVZCUVVGQkxFTkJRMWh5UWl4SFFVRkJRU3hGUVVGUGJrSXNRMEZCUVVFc1EwRkJTWGxETEVWQlFVRkJMRU5CUTFoeVFpeEhRVUZCUVN4RlFVRlBjRUlzUTBGQlFVRXNRMEZCU1RCRExFVkJRVUZCTEVOQlExaHlRaXhIUVVGQlFTeEZRVUZQY2tJc1EwRkJRVUVzUTBGQlNUSkRMRVZCUVVGQkxFTkJRMWh5UWl4SFFVRkJRU3hGUVVGUGRFSXNRMEZCUVVFc1EwRkJTVFJETEVWQlFVRkJMRU5CUTFoeVFpeEhRVUZCUVN4RlFVRlBka0lzUTBGQlFVRXNRMEZCU1RaRExFVkJRVUZCTEVOQlExaHlRaXhIUVVGQlFTeEZRVUZQZUVJc1EwRkJRVUVzUTBGQlNUaERMRVZCUVVGQkxFTkJRMWh5UWl4SFFVRkJRU3hGUVVGUGVrSXNRMEZCUVVFc1EwRkJTU3RETEVkQlFVRkJMRU5CUTFoeVFpeEhRVUZCUVN4RlFVRlBNVUlzUTBGQlFVRXNRMEZCU1dkRUxFZEJRVUZCTEVOQlExaHlRaXhIUVVGQlFTeEZRVUZQTTBJc1EwRkJRVUVzUTBGQlNXbEVMRWRCUVVGQkxFTkJRMWh5UWl4SFFVRkJRU3hGUVVGUE5VSXNRMEZCUVVFc1EwRkJTV3RFTEVkQlFVRkJMRU5CUTFoeVFpeEhRVUZCUVN4RlFVRlBOMElzUTBGQlFVRXNRMEZCU1cxRUxFZEJRVUZCTEVOQlExaHlRaXhIUVVGQlFTeEZRVUZQT1VJc1EwRkJRVUVzUTBGQlNXOUVMRWRCUVVGQkxFTkJSVmh3UXl4SFFVRkJRU3hGUVVGQlFTeERRVVJCYUVJc1EwRkJRVUVzUTBGQlNVWXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUlVGRFMzVkRMRVZCUVVGQkxFTkJRMWh3UWl4SFFVRkJRU3hGUVVGUGFrSXNRMEZCUVVFc1EwRkJTWE5ETEVWQlFVRkJMRU5CUTFod1FpeEhRVUZCUVN4RlFVRlBiRUlzUTBGQlFVRXNRMEZCU1hWRExFVkJRVUZCTEVOQlExaHdRaXhIUVVGQlFTeEZRVUZQYmtJc1EwRkJRVUVzUTBGQlNYZERMRVZCUVVGQkxFTkJRMWh3UWl4SFFVRkJRU3hGUVVGUGNFSXNRMEZCUVVFc1EwRkJTWGxETEVWQlFVRkJMRU5CUTFod1FpeEhRVUZCUVN4RlFVRlBja0lzUTBGQlFVRXNRMEZCU1RCRExFVkJRVUZCTEVOQlExaHdRaXhIUVVGQlFTeEZRVUZQZEVJc1EwRkJRVUVzUTBGQlNUSkRMRVZCUVVGQkxFTkJRMWh3UWl4SFFVRkJRU3hGUVVGUGRrSXNRMEZCUVVFc1EwRkJTVFJETEVWQlFVRkJMRU5CUTFod1FpeEhRVUZCUVN4RlFVRlBlRUlzUTBGQlFVRXNRMEZCU1RaRExFVkJRVUZCTEVOQlExaHdRaXhIUVVGQlFTeEZRVUZQZWtJc1EwRkJRVUVzUTBGQlNUaERMRVZCUVVGQkxFTkJRMWh3UWl4SFFVRkJRU3hGUVVGUE1VSXNRMEZCUVVFc1EwRkJTU3RETEVkQlFVRkJMRU5CUTFod1FpeEhRVUZCUVN4RlFVRlBNMElzUTBGQlFVRXNRMEZCU1dkRUxFZEJRVUZCTEVOQlExaHdRaXhIUVVGQlFTeEZRVUZQTlVJc1EwRkJRVUVzUTBGQlNXbEVMRWRCUVVGQkxFTkJRMWh3UWl4SFFVRkJRU3hGUVVGUE4wSXNRMEZCUVVFc1EwRkJTV3RFTEVkQlFVRkJMRU5CUTFod1FpeEhRVUZCUVN4RlFVRlBPVUlzUTBGQlFVRXNRMEZCU1cxRUxFZEJRVUZCTEVOQlExaHdRaXhIUVVGQlFTeEZRVUZQTDBJc1EwRkJRVUVzUTBGQlNXOUVMRWRCUVVGQkxFTkJSVmh1UXl4SFFVRkJRU3hGUVVGQlFTeERRVVJCYWtJc1EwRkJRVUVzUTBGQlNVWXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUlVGRFMzVkRMRVZCUVVGQkxFTkJRMWh1UWl4SFFVRkJRU3hGUVVGUGJFSXNRMEZCUVVFc1EwRkJTWE5ETEVWQlFVRkJMRU5CUTFodVFpeEhRVUZCUVN4RlFVRlBia0lzUTBGQlFVRXNRMEZCU1hWRExFVkJRVUZCTEVOQlExaHVRaXhIUVVGQlFTeEZRVUZQY0VJc1EwRkJRVUVzUTBGQlNYZERMRVZCUVVGQkxFTkJRMWh1UWl4SFFVRkJRU3hGUVVGUGNrSXNRMEZCUVVFc1EwRkJTWGxETEVWQlFVRkJMRU5CUTFodVFpeEhRVUZCUVN4RlFVRlBkRUlzUTBGQlFVRXNRMEZCU1RCRExFVkJRVUZCTEVOQlExaHVRaXhIUVVGQlFTeEZRVUZQZGtJc1EwRkJRVUVzUTBGQlNUSkRMRVZCUVVGQkxFTkJRMWh1UWl4SFFVRkJRU3hGUVVGUGVFSXNRMEZCUVVFc1EwRkJTVFJETEVWQlFVRkJMRU5CUTFodVFpeEhRVUZCUVN4RlFVRlBla0lzUTBGQlFVRXNRMEZCU1RaRExFVkJRVUZCTEVOQlExaHVRaXhIUVVGQlFTeEZRVUZQTVVJc1EwRkJRVUVzUTBGQlNUaERMRVZCUVVGQkxFTkJRMWh1UWl4SFFVRkJRU3hGUVVGUE0wSXNRMEZCUVVFc1EwRkJTU3RETEVkQlFVRkJMRU5CUTFodVFpeEhRVUZCUVN4RlFVRlBOVUlzUTBGQlFVRXNRMEZCU1dkRUxFZEJRVUZCTEVOQlExaHVRaXhIUVVGQlFTeEZRVUZQTjBJc1EwRkJRVUVzUTBGQlNXbEVMRWRCUVVGQkxFTkJRMWh1UWl4SFFVRkJRU3hGUVVGUE9VSXNRMEZCUVVFc1EwRkJTV3RFTEVkQlFVRkJMRU5CUTFodVFpeEhRVUZCUVN4RlFVRlBMMElzUTBGQlFVRXNRMEZCU1cxRUxFZEJRVUZCTEVOQlExaHVRaXhIUVVGQlFTeEZRVUZQYUVNc1EwRkJRVUVzUTBGQlNXOUVMRWRCUVVGQkxFTkJSVmhzUXl4SFFVRkJRU3hGUVVGQlFTeERRVVJCYkVJc1EwRkJRVUVzUTBGQlNVWXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUlVGRFMzVkRMRVZCUVVGQkxFTkJRMWhzUWl4SFFVRkJRU3hGUVVGUGJrSXNRMEZCUVVFc1EwRkJTWE5ETEVWQlFVRkJMRU5CUTFoc1FpeEhRVUZCUVN4RlFVRlBjRUlzUTBGQlFVRXNRMEZCU1hWRExFVkJRVUZCTEVOQlExaHNRaXhIUVVGQlFTeEZRVUZQY2tJc1EwRkJRVUVzUTBGQlNYZERMRVZCUVVGQkxFTkJRMWhzUWl4SFFVRkJRU3hGUVVGUGRFSXNRMEZCUVVFc1EwRkJTWGxETEVWQlFVRkJMRU5CUTFoc1FpeEhRVUZCUVN4RlFVRlBka0lzUTBGQlFVRXNRMEZCU1RCRExFVkJRVUZCTEVOQlExaHNRaXhIUVVGQlFTeEZRVUZQZUVJc1EwRkJRVUVzUTBGQlNUSkRMRVZCUVVGQkxFTkJRMWhzUWl4SFFVRkJRU3hGUVVGUGVrSXNRMEZCUVVFc1EwRkJTVFJETEVWQlFVRkJMRU5CUTFoc1FpeEhRVUZCUVN4RlFVRlBNVUlzUTBGQlFVRXNRMEZCU1RaRExFVkJRVUZCTEVOQlExaHNRaXhIUVVGQlFTeEZRVUZQTTBJc1EwRkJRVUVzUTBGQlNUaERMRVZCUVVGQkxFTkJRMWhzUWl4SFFVRkJRU3hGUVVGUE5VSXNRMEZCUVVFc1EwRkJTU3RETEVkQlFVRkJMRU5CUTFoc1FpeEhRVUZCUVN4RlFVRlBOMElzUTBGQlFVRXNRMEZCU1dkRUxFZEJRVUZCTEVOQlExaHNRaXhIUVVGQlFTeEZRVUZQT1VJc1EwRkJRVUVzUTBGQlNXbEVMRWRCUVVGQkxFTkJRMWhzUWl4SFFVRkJRU3hGUVVGUEwwSXNRMEZCUVVFc1EwRkJTV3RFTEVkQlFVRkJMRU5CUTFoc1FpeEhRVUZCUVN4RlFVRlBhRU1zUTBGQlFVRXNRMEZCU1cxRUxFZEJRVUZCTEVOQlExaHNRaXhIUVVGQlFTeEZRVUZQYWtNc1EwRkJRVUVzUTBGQlNXOUVMRWRCUVVGQkxFTkJSVmhxUXl4SFFVRkJRU3hGUVVGQlFTeERRVVJCYmtJc1EwRkJRVUVzUTBGQlNVWXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUlVGRFMzVkRMRVZCUVVGQkxFTkJRMWhxUWl4SFFVRkJRU3hGUVVGUGNFSXNRMEZCUVVFc1EwRkJTWE5ETEVWQlFVRkJMRU5CUTFocVFpeEhRVUZCUVN4RlFVRlBja0lzUTBGQlFVRXNRMEZCU1hWRExFVkJRVUZCTEVOQlExaHFRaXhIUVVGQlFTeEZRVUZQZEVJc1EwRkJRVUVzUTBGQlNYZERMRVZCUVVGQkxFTkJRMWhxUWl4SFFVRkJRU3hGUVVGUGRrSXNRMEZCUVVFc1EwRkJTWGxETEVWQlFVRkJMRU5CUTFocVFpeEhRVUZCUVN4RlFVRlBlRUlzUTBGQlFVRXNRMEZCU1RCRExFVkJRVUZCTEVOQlExaHFRaXhIUVVGQlFTeEZRVUZQZWtJc1EwRkJRVUVzUTBGQlNUSkRMRVZCUVVGQkxFTkJRMWhxUWl4SFFVRkJRU3hGUVVGUE1VSXNRMEZCUVVFc1EwRkJTVFJETEVWQlFVRkJMRU5CUTFocVFpeEhRVUZCUVN4RlFVRlBNMElzUTBGQlFVRXNRMEZCU1RaRExFVkJRVUZCTEVOQlExaHFRaXhIUVVGQlFTeEZRVUZQTlVJc1EwRkJRVUVzUTBGQlNUaERMRVZCUVVGQkxFTkJRMWhxUWl4SFFVRkJRU3hGUVVGUE4wSXNRMEZCUVVFc1EwRkJTU3RETEVkQlFVRkJMRU5CUTFocVFpeEhRVUZCUVN4RlFVRlBPVUlzUTBGQlFVRXNRMEZCU1dkRUxFZEJRVUZCTEVOQlExaHFRaXhIUVVGQlFTeEZRVUZQTDBJc1EwRkJRVUVzUTBGQlNXbEVMRWRCUVVGQkxFTkJRMWhxUWl4SFFVRkJRU3hGUVVGUGFFTXNRMEZCUVVFc1EwRkJTV3RFTEVkQlFVRkJMRU5CUTFocVFpeEhRVUZCUVN4RlFVRlBha01zUTBGQlFVRXNRMEZCU1cxRUxFZEJRVUZCTEVOQlExaHFRaXhIUVVGQlFTeEZRVUZQYkVNc1EwRkJRVUVzUTBGQlNXOUVMRWRCUVVGQkxFTkJSVmhvUXl4SFFVRkJRU3hGUVVGQlFTeERRVVJCY0VJc1EwRkJRVUVzUTBGQlNVWXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUlVGRFMzVkRMRVZCUVVGQkxFTkJRMWhvUWl4SFFVRkJRU3hGUVVGUGNrSXNRMEZCUVVFc1EwRkJTWE5ETEVWQlFVRkJMRU5CUTFob1FpeEhRVUZCUVN4RlFVRlBkRUlzUTBGQlFVRXNRMEZCU1hWRExFVkJRVUZCTEVOQlExaG9RaXhIUVVGQlFTeEZRVUZQZGtJc1EwRkJRVUVzUTBGQlNYZERMRVZCUVVGQkxFTkJRMWhvUWl4SFFVRkJRU3hGUVVGUGVFSXNRMEZCUVVFc1EwRkJTWGxETEVWQlFVRkJMRU5CUTFob1FpeEhRVUZCUVN4RlFVRlBla0lzUTBGQlFVRXNRMEZCU1RCRExFVkJRVUZCTEVOQlExaG9RaXhIUVVGQlFTeEZRVUZQTVVJc1EwRkJRVUVzUTBGQlNUSkRMRVZCUVVGQkxFTkJRMWhvUWl4SFFVRkJRU3hGUVVGUE0wSXNRMEZCUVVFc1EwRkJTVFJETEVWQlFVRkJMRU5CUTFob1FpeEhRVUZCUVN4RlFVRlBOVUlzUTBGQlFVRXNRMEZCU1RaRExFVkJRVUZCTEVOQlExaG9RaXhIUVVGQlFTeEZRVUZQTjBJc1EwRkJRVUVzUTBGQlNUaERMRVZCUVVGQkxFTkJRMWhvUWl4SFFVRkJRU3hGUVVGUE9VSXNRMEZCUVVFc1EwRkJTU3RETEVkQlFVRkJMRU5CUTFob1FpeEhRVUZCUVN4RlFVRlBMMElzUTBGQlFVRXNRMEZCU1dkRUxFZEJRVUZCTEVOQlExaG9RaXhIUVVGQlFTeEZRVUZQYUVNc1EwRkJRVUVzUTBGQlNXbEVMRWRCUVVGQkxFTkJRMWhvUWl4SFFVRkJRU3hGUVVGUGFrTXNRMEZCUVVFc1EwRkJTV3RFTEVkQlFVRkJMRU5CUTFob1FpeEhRVUZCUVN4RlFVRlBiRU1zUTBGQlFVRXNRMEZCU1cxRUxFZEJRVUZCTEVOQlExaG9RaXhIUVVGQlFTeEZRVUZQYmtNc1EwRkJRVUVzUTBGQlNXOUVMRWRCUVVGQkxFTkJSVmd2UWl4SFFVRkJRU3hGUVVGQlFTeERRVVJCY2tJc1EwRkJRVUVzUTBGQlNVWXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUlVGRFMzVkRMRVZCUVVGQkxFTkJhMEpZTjBRc1JVRkJRVUVzUlVGQlR5eEZRVUZCTEVWQmFFSlFLME1zUjBGQlFVRXNSVUZCVDNaQ0xFTkJRVUZCTEVOQlFVbDFReXhGUVVGQlFTeERRVUZCUVN4RFFXbENXRGxFTEVWQlFVRkJMRVZCUVU4c1JVRkJRU3hGUVdoQ1VDdERMRWRCUVVGQkxFVkJRVTk0UWl4RFFVRkJRU3hEUVVGSmQwTXNSVUZCUVVFc1EwRkJRVUVzUTBGcFFsZzVSQ3hGUVVGQlFTeEZRVUZQTEVWQlFVRXNSVUZvUWxBclF5eEhRVUZCUVN4RlFVRlBla0lzUTBGQlFVRXNRMEZCU1hsRExFVkJRVUZCTEVOQlFVRkJMRU5CYVVKWU9VUXNSVUZCUVVFc1JVRkJUeXhGUVVGQkxFVkJhRUpRSzBNc1IwRkJRVUVzUlVGQlR6RkNMRU5CUVVGQkxFTkJRVWt3UXl4RlFVRkJRU3hEUVVGQlFTeERRV2xDV0RsRUxFVkJRVUZCTEVWQlFVOHNSVUZCUVN4RlFXaENVQ3RETEVkQlFVRkJMRVZCUVU4elFpeERRVUZCUVN4RFFVRkpNa01zUlVGQlFVRXNRMEZCUVVFc1EwRnBRbGc1UkN4RlFVRkJRU3hGUVVGUExFVkJRVUVzUlVGb1FsQXJReXhIUVVGQlFTeEZRVUZQTlVJc1EwRkJRVUVzUTBGQlNUUkRMRVZCUVVGQkxFTkJRVUZCTEVOQmFVSllPVVFzUlVGQlFVRXNSVUZCVHl4RlFVRkJMRVZCYUVKUUswTXNSMEZCUVVFc1JVRkJUemRDTEVOQlFVRkJMRU5CUVVrMlF5eEZRVUZCUVN4RFFVRkJRU3hEUVdsQ1dDOUNMRVZCUVVGQkxFVkJRVThzUlVGQlFTeEZRV2hDVUdkQ0xFZEJRVUZCTEVWQlFVODVRaXhEUVVGQlFTeERRVUZKT0VNc1JVRkJRVUVzUTBGQlFVRXNRMEZwUWxndlFpeEZRVUZCUVN4RlFVRlBMRVZCUVVFc1JVRm9RbEJuUWl4SFFVRkJRU3hGUVVGUEwwSXNRMEZCUVVFc1EwRkJTU3RETEVkQlFVRkJMRU5CUVVGQkxFTkJhVUpZTDBJc1IwRkJRVUVzUlVGQlR5eEZRVUZCTEVWQmFFSlFaMElzUjBGQlFVRXNSVUZCVDJoRExFTkJRVUZCTEVOQlFVbG5SQ3hIUVVGQlFTeERRVUZCUVN4RFFXbENXQzlDTEVkQlFVRkJMRVZCUVU4c1JVRkJRU3hGUVdoQ1VHZENMRWRCUVVGQkxFVkJRVTlxUXl4RFFVRkJRU3hEUVVGSmFVUXNSMEZCUVVFc1EwRkJRVUVzUTBGcFFsZ3ZRaXhIUVVGQlFTeEZRVUZQTEVWQlFVRXNSVUZvUWxCblFpeEhRVUZCUVN4RlFVRlBiRU1zUTBGQlFVRXNRMEZCU1d0RUxFZEJRVUZCTEVOQlFVRkJMRU5CYVVKWUwwSXNSMEZCUVVFc1JVRkJUeXhGUVVGQkxFVkJhRUpRWjBJc1IwRkJRVUVzUlVGQlQyNURMRU5CUVVGQkxFTkJRVWx0UkN4SFFVRkJRU3hEUVVGQlFTeERRV2xDV0M5Q0xFZEJRVUZCTEVWQlFVOHNSVUZCUVN4RlFXaENVR2RDTEVkQlFVRkJMRVZCUVU5d1F5eERRVUZCUVN4RFFVRkpiMFFzUjBGQlFVRXNRMEZCUVVFc1EwRnhRbk5ETjBVc1JVRkJRVUVzUTBGQlFVRXNRMEZCYWtSNVFpeERRVUZCUVN4RFFVRkJRU3hEUVc1Q1FYcENMRVZCUVVGQkxFVkJRVThzUlVGQlFTeEZRV2hDVUN0RExFZEJRVUZCTEVWQlFVOTBRaXhEUVVGQlFTeERRVUZKYzBNc1JVRkJRVUVzUTBGQlFVRXNSMEZyUTFod1NDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVOVkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFUzaENMRVZCUVVGQkxFTkJRVUZCTEVOQlFXcEVkMElzUTBGQlFVRXNRMEZCUzNoQ0xFVkJRVUZCTEVOQlFVdDBSQ3hEUVVGQlFTeERRVUZKTEV0QlFVRXNSVUZCWjBRc1MwRkJRU3hGUVVGNlEwRXNRMEZCUVVFc1EwRkJTU3RGTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUdMRU5CUVVGQkxFTkJRVWtzUzBGQlFTeERRVUZCTEVOQlFVRXNRMEZEVTNaQ0xFVkJRVUZCTEVOQlFVRkJMRU5CUVdwRWRVSXNRMEZCUVVFc1EwRkJTM1pDTEVWQlFVRkJMRU5CUVV0MlJDeERRVUZCUVN4RFFVRkpMRXRCUVVFc1JVRkJaMFFzUzBGQlFTeEZRVUY2UTBFc1EwRkJRVUVzUTBGQlNTdEZMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxR0xFTkJRVUZCTEVOQlFVa3NTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRVM1JDTEVWQlFVRkJMRU5CUVVGQkxFTkJRV3BFYzBJc1EwRkJRVUVzUTBGQlMzUkNMRVZCUVVGQkxFTkJRVXQ0UkN4RFFVRkJRU3hEUVVGSkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFUzSkNMRVZCUVVGQkxFTkJRVUZCTEVOQlFXcEVjVUlzUTBGQlFVRXNRMEZCUzNKQ0xFVkJRVUZCTEVOQlFVdDZSQ3hEUVVGQlFTeERRVUZKTEV0QlFVRXNSVUZCWjBRc1MwRkJRU3hGUVVGNlEwRXNRMEZCUVVFc1EwRkJTU3RGTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUdMRU5CUVVGQkxFTkJRVWtzUzBGQlFTeERRVUZCTEVOQlFVRXNRMEZEVTNCQ0xFVkJRVUZCTEVOQlFVRkJMRU5CUVdwRWIwSXNRMEZCUVVFc1EwRkJTM0JDTEVWQlFVRkJMRU5CUVVzeFJDeERRVUZCUVN4RFFVRkpMRXRCUVVFc1JVRkJaMFFzUzBGQlFTeEZRVUY2UTBFc1EwRkJRVUVzUTBGQlNTdEZMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxR0xFTkJRVUZCTEVOQlFVa3NTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRVMjVDTEVWQlFVRkJMRU5CUVVGQkxFTkJRV3BFYlVJc1EwRkJRVUVzUTBGQlMyNUNMRVZCUVVGQkxFTkJRVXN6UkN4RFFVRkJRU3hEUVVGSkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFUyeENMRVZCUVVGQkxFTkJRVUZCTEVOQlFXcEVhMElzUTBGQlFVRXNRMEZCUzJ4Q0xFVkJRVUZCTEVOQlFVczFSQ3hEUVVGQlFTeERRVUZKTEV0QlFVRXNSVUZCWjBRc1MwRkJRU3hGUVVGNlEwRXNRMEZCUVVFc1EwRkJTU3RGTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUdMRU5CUVVGQkxFTkJRVWtzUzBGQlFTeERRVUZCTEVOQlFVRXNRMEZEVTJNc1JVRkJRVUVzUTBGQlFVRXNRMEZCYWtSa0xFTkJRVUZCTEVOQlFVdGpMRVZCUVVGQkxFTkJRVXMxUml4RFFVRkJRU3hEUVVGSkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFUyVXNSVUZCUVVFc1EwRkJRVUVzUTBGQmFrUm1MRU5CUVVGQkxFTkJRVXRsTEVWQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkpMRXRCUVVFc1JVRkJaMFFzUzBGQlFTeEZRVUY2UTBFc1EwRkJRVUVzUTBGQlNTdEZMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxR0xFTkJRVUZCTEVOQlFVa3NTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRVV2RDTEVkQlFVRkJMRU5CUVVGQkxFTkJRV2hFYUVJc1EwRkJRVUVzUTBGQlNXZENMRWRCUVVGQkxFTkJRVTA1Uml4RFFVRkJRU3hEUVVGSkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFVXbENMRWRCUVVGQkxFTkJRVUZCTEVOQlFXaEVha0lzUTBGQlFVRXNRMEZCU1dsQ0xFZEJRVUZCTEVOQlFVMHZSaXhEUVVGQlFTeERRVUZKTEV0QlFVRXNSVUZCWjBRc1MwRkJRU3hGUVVGNlEwRXNRMEZCUVVFc1EwRkJTU3RGTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUdMRU5CUVVGQkxFTkJRVWtzUzBGQlFTeERRVUZCTEVOQlFVRXNRMEZEVVd0Q0xFZEJRVUZCTEVOQlFVRkJMRU5CUVdoRWJFSXNRMEZCUVVFc1EwRkJTV3RDTEVkQlFVRkJMRU5CUVUxb1J5eERRVUZCUVN4RFFVRkpMRXRCUVVFc1JVRkJaMFFzUzBGQlFTeEZRVUY2UTBFc1EwRkJRVUVzUTBGQlNTdEZMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxR0xFTkJRVUZCTEVOQlFVa3NTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRVVzFDTEVkQlFVRkJMRU5CUVVGQkxFTkJRV2hFYmtJc1EwRkJRVUVzUTBGQlNXMUNMRWRCUVVGQkxFTkJRVTFxUnl4RFFVRkJRU3hEUVVGSkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFVXOUNMRWRCUVVGQkxFTkJRVUZCTEVOQlFXaEVjRUlzUTBGQlFVRXNRMEZCU1c5Q0xFZEJRVUZCTEVOQlFVMXNSeXhEUVVGQlFTeERRVUZKTEV0QlFVRXNSVUZCWjBRc1MwRkJRU3hGUVVGNlEwRXNRMEZCUVVFc1EwRkJTU3RGTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUdMRU5CUVVGQkxFTkJRVWtzUzBGQlFTeERRVUZCTEVOQlFVRXNRMEZEVVhGQ0xFZEJRVUZCTEVOQlFVRkJMRU5CUVdoRWNrSXNRMEZCUVVFc1EwRkJTWEZDTEVkQlFVRkJMRU5CUVUxdVJ5eERRVUZCUVN4RFFVRkpMRXRCUVVFc1JVRkJaMFFzUzBGQlFTeEZRVUY2UTBFc1EwRkJRVUVzUTBGQlNTdEZMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxR0xFTkJRVUZCTEVOQlFVa3NTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkxVM3BDTEVWQlFVRkJMRU5CUVVGQkxFTkJRV3BFZVVJc1EwRkJRVUVzUTBGQlFVRXNRMEZLUVhwQ0xFVkJRVUZCTEVWQlFVMXlSQ3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCU1N4RlFVRkJMRVZCUVUxQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRWRCUjNCQ1FTeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hEUVVOVkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFUzaENMRVZCUVVGQkxFTkJRVUZCTEVOQlFXcEVkMElzUTBGQlFVRXNRMEZCUzNoQ0xFVkJRVUZCTEVOQlFVdDBSQ3hEUVVGQlFTeERRVUZKTEV0QlFVRXNSVUZCWjBRc1MwRkJRU3hGUVVGNlEwRXNRMEZCUVVFc1EwRkJTU3RGTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUdMRU5CUVVGQkxFTkJRVWtzUzBGQlFTeERRVUZCTEVOQlFVRXNRMEZEVTNaQ0xFVkJRVUZCTEVOQlFVRkJMRU5CUVdwRWRVSXNRMEZCUVVFc1EwRkJTM1pDTEVWQlFVRkJMRU5CUVV0MlJDeERRVUZCUVN4RFFVRkpMRXRCUVVFc1JVRkJaMFFzUzBGQlFTeEZRVUY2UTBFc1EwRkJRVUVzUTBGQlNTdEZMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxR0xFTkJRVUZCTEVOQlFVa3NTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRVM1JDTEVWQlFVRkJMRU5CUVVGQkxFTkJRV3BFYzBJc1EwRkJRVUVzUTBGQlMzUkNMRVZCUVVGQkxFTkJRVXQ0UkN4RFFVRkJRU3hEUVVGSkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFUzSkNMRVZCUVVGQkxFTkJRVUZCTEVOQlFXcEVjVUlzUTBGQlFVRXNRMEZCUzNKQ0xFVkJRVUZCTEVOQlFVdDZSQ3hEUVVGQlFTeERRVUZKTEV0QlFVRXNSVUZCWjBRc1MwRkJRU3hGUVVGNlEwRXNRMEZCUVVFc1EwRkJTU3RGTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUdMRU5CUVVGQkxFTkJRVWtzUzBGQlFTeERRVUZCTEVOQlFVRXNRMEZEVTNCQ0xFVkJRVUZCTEVOQlFVRkJMRU5CUVdwRWIwSXNRMEZCUVVFc1EwRkJTM0JDTEVWQlFVRkJMRU5CUVVzeFJDeERRVUZCUVN4RFFVRkpMRXRCUVVFc1JVRkJaMFFzUzBGQlFTeEZRVUY2UTBFc1EwRkJRVUVzUTBGQlNTdEZMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxR0xFTkJRVUZCTEVOQlFVa3NTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRVMjVDTEVWQlFVRkJMRU5CUVVGQkxFTkJRV3BFYlVJc1EwRkJRVUVzUTBGQlMyNUNMRVZCUVVGQkxFTkJRVXN6UkN4RFFVRkJRU3hEUVVGSkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFUyeENMRVZCUVVGQkxFTkJRVUZCTEVOQlFXcEVhMElzUTBGQlFVRXNRMEZCUzJ4Q0xFVkJRVUZCTEVOQlFVczFSQ3hEUVVGQlFTeERRVUZKTEV0QlFVRXNSVUZCWjBRc1MwRkJRU3hGUVVGNlEwRXNRMEZCUVVFc1EwRkJTU3RGTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUdMRU5CUVVGQkxFTkJRVWtzUzBGQlFTeERRVUZCTEVOQlFVRXNRMEZEVTJNc1JVRkJRVUVzUTBGQlFVRXNRMEZCYWtSa0xFTkJRVUZCTEVOQlFVdGpMRVZCUVVGQkxFTkJRVXMxUml4RFFVRkJRU3hEUVVGSkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFUyVXNSVUZCUVVFc1EwRkJRVUVzUTBGQmFrUm1MRU5CUVVGQkxFTkJRVXRsTEVWQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkpMRXRCUVVFc1JVRkJaMFFzUzBGQlFTeEZRVUY2UTBFc1EwRkJRVUVzUTBGQlNTdEZMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxR0xFTkJRVUZCTEVOQlFVa3NTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRVV2RDTEVkQlFVRkJMRU5CUVVGQkxFTkJRV2hFYUVJc1EwRkJRVUVzUTBGQlNXZENMRWRCUVVGQkxFTkJRVTA1Uml4RFFVRkJRU3hEUVVGSkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFVXbENMRWRCUVVGQkxFTkJRVUZCTEVOQlFXaEVha0lzUTBGQlFVRXNRMEZCU1dsQ0xFZEJRVUZCTEVOQlFVMHZSaXhEUVVGQlFTeERRVUZKTEV0QlFVRXNSVUZCWjBRc1MwRkJRU3hGUVVGNlEwRXNRMEZCUVVFc1EwRkJTU3RGTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUdMRU5CUVVGQkxFTkJRVWtzUzBGQlFTeERRVUZCTEVOQlFVRXNRMEZEVVd0Q0xFZEJRVUZCTEVOQlFVRkJMRU5CUVdoRWJFSXNRMEZCUVVFc1EwRkJTV3RDTEVkQlFVRkJMRU5CUVUxb1J5eERRVUZCUVN4RFFVRkpMRXRCUVVFc1JVRkJaMFFzUzBGQlFTeEZRVUY2UTBFc1EwRkJRVUVzUTBGQlNTdEZMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxR0xFTkJRVUZCTEVOQlFVa3NTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRVVzFDTEVkQlFVRkJMRU5CUVVGQkxFTkJRV2hFYmtJc1EwRkJRVUVzUTBGQlNXMUNMRWRCUVVGQkxFTkJRVTFxUnl4RFFVRkJRU3hEUVVGSkxFdEJRVUVzUlVGQlowUXNTMEZCUVN4RlFVRjZRMEVzUTBGQlFVRXNRMEZCU1N0RkxFbEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTFHTEVOQlFVRkJMRU5CUVVrc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRFVXOUNMRWRCUVVGQkxFTkJRVUZCTEVOQlFXaEVjRUlzUTBGQlFVRXNRMEZCU1c5Q0xFZEJRVUZCTEVOQlFVMXNSeXhEUVVGQlFTeERRVUZKTEV0QlFVRXNSVUZCWjBRc1MwRkJRU3hGUVVGNlEwRXNRMEZCUVVFc1EwRkJTU3RGTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVMUdMRU5CUVVGQkxFTkJRVWtzUzBGQlFTeERRVUZCTEVOQlFVRXNRMEZEVVhGQ0xFZEJRVUZCTEVOQlFVRkJMRU5CUVdoRWNrSXNRMEZCUVVFc1EwRkJTWEZDTEVkQlFVRkJMRU5CUVUxdVJ5eERRVUZCUVN4RFFVRkpMRXRCUVVFc1JVRkJaMFFzUzBGQlFTeEZRVUY2UTBFc1EwRkJRVUVzUTBGQlNTdEZMRWxCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVUxR0xFTkJRVUZCTEVOQlFVa3NTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRlRU42UWl4RlFVRkJRU3hGUVVGTmNrUXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVWtzUlVGQlFTeEZRVUZOUVN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVVZ3UWtNc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZCUzI5RUxFVkJRVUZCTEVOQlExSndSQ3hEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkxjVVFzUlVGQlFVRXNRMEZEVW5KRUxFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVV0elJDeEZRVUZCUVN4RFFVTlNkRVFzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkJTM1ZFTEVWQlFVRkJMRU5CUTFKMlJDeERRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJRU3hEUVVGTGQwUXNSVUZCUVVFc1EwRkRVbmhFTEVOQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXQ1UkN4RlFVRkJRU3hEUVVOU2VrUXNRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlN6QkVMRVZCUVVGQkxFTkJRMUl4UkN4RFFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVUZMTWtRc1JVRkJRVUVzUTBGRFVqTkVMRU5CUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVc3lSaXhGUVVGQlFTeERRVU5TTTBZc1EwRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZCU3pSR0xFVkJRVUZCTEVOQlExSTFSaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRk5Oa1lzUjBGQlFVRXNRMEZEVWpkR0xFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRU5CUVUwNFJpeEhRVUZCUVN4RFFVTlNPVVlzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJUU3RHTEVkQlFVRkJMRU5CUTFJdlJpeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVGTlowY3NSMEZCUVVFc1EwRkRVbWhITEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVTFwUnl4SFFVRkJRU3hEUVVOU2FrY3NRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlRXdEhMRWRCUVVGQkxFTkJSMVlzVTBGQlUyZERMRU5CUVVGQkxFTkJRVVZzU1N4RFFVRkJRU3hEUVVGSE1rVXNRMEZCUVVFc1EwRkJRVUVzUTBGRFdtVXNRMEZCUVVFc1EwRkJSVEZHTEVOQlFVRkJMRU5CUVVjeVJTeERRVUZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZCUVN4RFFVZFdMRk5CUVZOM1JDeFJRVUZCUVN4RFFVRlRia2tzUTBGQlFVRXNRMEZCUjJ4RExFTkJRVUZCTEVOQlFVRkJMRU5CUTI1Q0xFbEJRMGsyUnl4RFFVRkJRU3hEUVVSQk5VVXNRMEZCUVVFc1EwRkJTVzVETEVWQlFVRkJMRVZCUVVGQkxFTkJSVklzU1VGQlN5dEhMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlNVRXNRMEZCUVVFc1JVRkJRVUVzUTBGQlN6VkZMRU5CUVVGQkxFTkJRVVUwUlN4RFFVRkJRU3hEUVVGQlFTeERRVUZMTjBjc1EwRkJRVUVzUTBGQlJUWkhMRU5CUVVGQkxFTkJRVUZCTEVOQlEyeERMRWxCUVV0QkxFTkJRVUZCTEVOQlFVa3NSMEZCUVN4RFFVRkxRU3hEUVVGQlFTeEZRVUZMTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUlVGQlFVRXNRMEZEY0VKMVJDeERRVUZCUVN4RFFVRkZia2tzUTBGQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlFVRXNRMEZEU1N4RFFVRkJMRWRCUVU0MFJTeERRVUZCUVN4RlFVRnBRaXhEUVVGQkxFZEJRVTVCTEVOQlFVRkJMRVZCUVZObExFTkJRVUZCTEVOQlFVVXpSaXhEUVVGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSGFrTXNRMEZCUVVFc1EwRkJRVUVzUTBGRmFrTXNTVUZCU3paSExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCU1VFc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVXlSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkxOVVVzUTBGQlFVRXNRMEZCUlRSRkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNCRExGTkJRVk41UkN4UFFVRkJRU3hEUVVGUmNFa3NRMEZCUVVFc1EwRkJSMnhETEVOQlFVRkJMRU5CUVVGQkxFTkJRMnhDTEVsQlEwazJSeXhEUVVGQlFTeERRVVJCTlVVc1EwRkJRVUVzUTBGQlNXNURMRVZCUVVGQkxFVkJRVUZCTEVOQlJWSXNTVUZCU3l0SExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCU1VFc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3pWRkxFTkJRVUZCTEVOQlFVVTBSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkxOMGNzUTBGQlFVRXNRMEZCUlRaSExFTkJRVUZCTEVOQlFVRkJMRU5CUTJ4RExFbEJRVXRCTEVOQlFVRkJMRU5CUVVrc1IwRkJRU3hEUVVGTFFTeERRVUZCUVN4RlFVRkxMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNSVUZCUVVFc1EwRkRiRUoxUkN4RFFVRkJRU3hEUVVGRmJra3NRMEZCUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCUVVFc1EwRkRTU3hEUVVGQkxFZEJRVTQwUlN4RFFVRkJRU3hGUVVGVFpTeERRVUZCUVN4RFFVRkZNMFlzUTBGQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlIycERMRU5CUVVGQkxFTkJRVUZCTEVOQlJYaENMRWxCUVVzMlJ5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1N4RlFVRkJMRU5CUVVsQkxFTkJRVUZCTEVWQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZNa1VzUTBGQlFVRXNRMEZCUVVFc1EwRkJTelZGTEVOQlFVRkJMRU5CUVVVMFJTeERRVUZCUVN4RFFVRkJRU3hEUVVkd1F5eFRRVUZUTUVRc2FVSkJRVUZCTEVOQlFXdENjRVFzUTBGQlFVRXNRMEZCUnpGR0xFTkJRVUZCTEVOQlFVZFZMRU5CUVVGQkxFTkJRVUZCTEVOQlF5OUNMRWxCUXpoQ2JFTXNRMEZCUVVFc1EwRkJSMFFzUTBGQlFVRXNRMEZFTjBJNFJTeERRVUZCUVN4RFFVRkpMRWxCUVVsMlJTeFZRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJRU3hEUVVOdVFsY3NRMEZCUVVFc1EwRkJTU3hKUVVGSmFFSXNXVUZCUVVFc1EwRkJZU3hGUVVGQkxFTkJRVUVzUTBGRGNrSXlSeXhEUVVGQlFTeERRVUZKTDBjc1JVRkJRVUVzUlVGQlFVRXNRMEZCVFN0RkxFTkJRVUZCTEVOQlFVa3ZSU3hGUVVGQlFTeEZRVUZCUVN4RFFVRk5iVU1zUTBGQlFVRXNRMEZCU1c1RExFVkJRVUZCTEVWQlFVRkJMRU5CUTNoQ05FSXNRMEZCUVVFc1EwRkJTVFZDTEVWQlFVRkJMRVZCUVVGQkxFTkJRVTB3U3l4RFFVRkJRU3hEUVVGSk1Vc3NSVUZCUVVFc1JVRkJRVUVzUTBGQlRUSkxMRU5CUVVGQkxFTkJRVWt6U3l4RlFVRkJRU3hGUVVGQlFTeERRVU0xUWl4SlFVRkxSU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVbEJMRU5CUVVGQkxFVkJRVUZCTEVOQlFVczRSU3hEUVVGQlFTeERRVUZGT1VVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzNsQ0xFTkJRVUZCTEVOQlFVVjZRaXhEUVVGQlFTeERRVUZCUVN4RFFVbHNReXhKUVVoQk9FVXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGQlZ5eEhRVUZCTEVOQlFVNXlSQ3hEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRlRMRVZCUVVFc1EwRkRiRUp4UkN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeEZRVUZKTEVkQlFVRXNRMEZEVGpKRExGZEJRVUZCTEVOQlFWbDJSeXhEUVVGQlFTeERRVUZGYVVJc1EwRkJRVUVzUTBGQlFVRXNRMEZEVkc1RExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCU1VFc1EwRkJRVUVzUlVGQlFVRXNRMEZEYkVJMlJTeERRVUZCUVN4RFFVRkZOMFVzUTBGQlFVRXNRMEZCUVVFc1EwRkJSMnRDTEVOQlFVRkJMRU5CUVVWc1FpeERRVUZCUVN4RFFVRkJRU3hEUVVOUU1FSXNRMEZCUVVFc1EwRkJSVEZDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWMyUnl4RFFVRkJRU3hEUVVGRk4wY3NRMEZCUVVFc1EwRkJRVUVzUTBGQlIybERMRU5CUVVGQkxFTkJRVVZxUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZIYWtJc1NVRkVRVFpITEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWR1Uml4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZITEVOQlFVRXNRMEZEVERGQ0xFTkJRVUZCTEVOQlFVVXNSMEZCUVN4RFFVRkxRU3hEUVVGQlFTeEZRVUZITEVOQlFVRXNRMEZCUVN4RlFVRkxRU3hEUVVGQlFTeERRVVZzUW10SUxGRkJRVUZCTEVOQlFWTk1MRU5CUVVGQkxFTkJRVVZvUXl4RFFVRkJRU3hEUVVSWU5VVXNRMEZCUVVFc1EwRkJSelpGTEVOQlFVRkJMRU5CUVVVNVJTeERRVUZCUVN4SFFVRkpMRU5CUVVFc1EwRkJRU3hKUVVGUkxFTkJRVUVzUTBGQlJrRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRXNRMEZGY2tKclNDeFJRVUZCUVN4RFFVRlRha1lzUTBGQlFVRXNRMEZCUlZBc1EwRkJRVUVzUTBGQlJYcENMRU5CUVVGQkxFTkJRVUZCTEVOQlEySjVTQ3hEUVVGQlFTeERRVUZGT0VNc1EwRkJRVUVzUTBGQlJUTkVMRU5CUVVGQkxFTkJRVVUxUlN4RFFVRkJRU3hEUVVGQlFTeERRVU5PTUVZc1EwRkJRVUVzUTBGQlJXUXNRMEZCUVVFc1EwRkJSVUVzUTBGQlFVRXNRMEZCUlRWRkxFTkJRVUZCTEVOQlFVRkJMRU5CUTA1NVJpeERRVUZCUVN4RFFVRkZla1lzUTBGQlFVRXNRMEZCUlRSRExFTkJRVUZCTEVOQlFVVnVSQ3hEUVVGQlFTeERRVUZCUVN4RFFVTk9hVWNzUTBGQlFVRXNRMEZCUlRsRExFTkJRVUZCTEVOQlFVVkJMRU5CUVVGQkxFTkJRVVZ1UkN4RFFVRkJRU3hEUVVGQlFTeERRVU5PTUVrc1EwRkJRVUVzUTBGQlJURkpMRU5CUVVGQkxFTkJRVVU0U1N4RFFVRkJRU3hEUVVGQlFTeERRVU5LU2l4RFFVRkJRU3hEUVVGRlN5eERRVUZCUVN4RFFVRkZOVVFzUTBGQlFVRXNRMEZCUVVFc1EwRkRTbVVzUTBGQlFVRXNRMEZCUldZc1EwRkJRVUVzUTBGQlJUVkZMRU5CUVVGQkxFTkJRVVUwUlN4RFFVRkJRU3hEUVVGQlFTeERRVU5PWlN4RFFVRkJRU3hEUVVGRk0wWXNRMEZCUVVFc1EwRkJSVFJETEVOQlFVRkJMRU5CUVVVeVJpeERRVUZCUVN4RFFVRkJRU3hEUVVOT09VTXNRMEZCUVVFc1EwRkJSVGhETEVOQlFVRkJMRU5CUVVVelJDeERRVUZCUVN4RFFVRkZOVVVzUTBGQlFVRXNRMEZCUVVFc1EwRkRUakJHTEVOQlFVRkJMRU5CUVVWa0xFTkJRVUZCTEVOQlFVVkJMRU5CUVVGQkxFTkJRVVUxUlN4RFFVRkJRU3hEUVVGQlFTeERRVU5PYlVrc1EwRkJRVUVzUTBGQlJYWkdMRU5CUVVGQkxFTkJRVVZuUXl4RFFVRkJRU3hEUVVGQlFTeERRVU5LWXl4RFFVRkJRU3hEUVVGRk1VWXNRMEZCUVVFc1EwRkJSVkFzUTBGQlFVRXNRMEZCUlN0SkxFTkJRVUZCTEVOQlFVRkJMRU5CUTA0M1F5eERRVUZCUVN4RFFVRkZaaXhEUVVGQlFTeERRVUZGTlVVc1EwRkJRVUVzUTBGQlJYUkNMRTlCUVVGQkxFTkJRVUZCTEVOQlEwNHJSeXhEUVVGQlFTeERRVUZGWWl4RFFVRkJRU3hEUVVGRlFTeERRVUZCUVN4RFFVRkZia1lzUTBGQlFVRXNRMEZCUVVFc1EwRkRUbXRITEVOQlFVRkJMRU5CUVVVelJpeERRVUZCUVN4RFFVRkZRU3hEUVVGQlFTeERRVUZGTkVVc1EwRkJRVUVzUTBGQlFVRXNRMEZEVG1Vc1EwRkJRVUVzUTBGQlJXWXNRMEZCUVVFc1EwRkJSVzVHTEVOQlFVRkJMRU5CUVVVclNTeERRVUZCUVN4RFFVRkJRU3hEUVVOT04wTXNRMEZCUVVFc1EwRkJSV3hITEVOQlFVRkJMRU5CUVVWdFJDeERRVUZCUVN4RFFVRkZNMFFzUTBGQlFVRXNRMEZCUVVFc1EwRkRUbXRLTEVOQlFVRkJMRU5CUVVWMlJpeERRVUZCUVN4RFFVRkZNa1lzUTBGQlFVRXNRMEZCUVVFc1EwRkRTblJFTEZGQlFVRkJMRU5CUVZOTUxFTkJRVUZCTEVOQlFVVm9ReXhEUVVGQlFTeERRVUZGTlVVc1EwRkJRVUVzUTBGQlFVRXNRMEZEWW1sSUxGRkJRVUZCTEVOQlFWTnFSaXhEUVVGQlFTeERRVUZGVUN4RFFVRkJRU3hEUVVGRmVrSXNRMEZCUVVFc1EwRkJRVUVzUTBGRlppeEpRVUZMUkN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTU3hGUVVGQkxFTkJRVWxCTEVOQlFVRkJMRVZCUVVGQkxFTkJRMnhDYTBJc1EwRkJRVUVzUTBGQlJXeENMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVOQlFVazJSeXhEUVVGQlFTeERRVUZGTjBjc1EwRkJRVUVzUTBGQlFVRXNRMEZEVm10Q0xFTkJRVUZCTEVOQlFVVnNRaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCUVN4RFFVRkphVU1zUTBGQlFVRXNRMEZCUldwRExFTkJRVUZCTEVOQlFVRkJMRU5CUTFaclFpeERRVUZCUVN4RFFVRkZiRUlzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJTVFpGTEVOQlFVRkJMRU5CUVVVM1JTeERRVUZCUVN4RFFVRkJRU3hEUVVOV2EwSXNRMEZCUVVFc1EwRkJSV3hDTEVOQlFVRkJMRU5CUVVVc1JVRkJRU3hEUVVGQkxFTkJRVWt3UWl4RFFVRkJRU3hEUVVGRk1VSXNRMEZCUVVFc1EwRkJRVUVzUTBGRldpeEpRVUZKTUVzc1IwRkJRVUVzUTBGQlRYaEtMRU5CUVVGQkxFTkJRVVY1U2l4UlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlFTeERRVU5xUWtNc1IwRkJRVUVzUTBGQlRURktMRU5CUVVGQkxFTkJRVVY1U2l4UlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlFTeERRVWx5UWl4UFFVaEJUaXhSUVVGQlFTeERRVUZUU3l4SFFVRkJRU3hEUVVGSlFTeEhRVUZCUVN4RFFVRkJRU3hEUVVOaU9VTXNRMEZCUVVFc1EwRkJSV2RFTEVkQlFVRkJMRU5CUVVsQkxFZEJRVUZCTEVOQlFVbEdMRWRCUVVGQkxFTkJRVUZCTEVOQlExWnlSQ3hUUVVGQlFTeERRVUZWUml4RFFVRkJRU3hEUVVGRmVVUXNSMEZCUVVFc1EwRkJRVUVzUTBGRFRDeERRVUZCTEVOQlIxUXNVMEZCVTBNc2MwSkJRVUZCTEVOQlFYVkNNVVFzUTBGQlFVRXNRMEZCUnpGR0xFTkJRVUZCTEVOQlFVRkJMRU5CUTJwRExFOUJRVTg0U1N4cFFrRkJRVUVzUTBGQmEwSndSQ3hEUVVGQlFTeERRVUZITVVZc1EwRkJRVUVzUTBGQlIycENMRVZCUVVGQkxFTkJRVUZCTEVOQlIycERMRk5CUVZOelN5eHJRa0ZCUVVFc1EwRkJiVUoyU2l4RFFVRkJRU3hEUVVGSFRDeERRVUZCUVN4RFFVRkJRU3hEUVVVM1FpeFBRVVJCWkN4WFFVRkJRU3hEUVVGWll5eERRVUZCUVN4RFFVRkhMRVZCUVVFc1EwRkJRU3hEUVVOU01rb3NjMEpCUVVGQkxFTkJRWFZDZEVvc1EwRkJRVUVzUTBGQlIwd3NRMEZCUVVFc1EwRkJRVUVzUTBGSGJrTXNVMEZCVXpaS0xHMUNRVUZCUVN4RFFVRnZRaTlKTEVOQlFVRkJMRU5CUVVkVUxFTkJRVUZCTEVOQlFVZE1MRU5CUVVGQkxFTkJRVUZCTEVOQlEycERMRWxCUVVrclJDeERRVUZCUVN4RFFVRkpMRWxCUVVreFJTeFZRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJRU3hEUVVWMlFpeFBRVVJCWjBzc2FVSkJRVUZCTEVOQlFXdENkRVlzUTBGQlFVRXNRMEZCUnk5RUxFTkJRVUZCTEVOQlFVZExMRU5CUVVGQkxFTkJRVUZCTEVOQlEycENLME1zYjBKQlFVRkJMRU5CUVhGQ2RFTXNRMEZCUVVFc1EwRkJSekZDTEVWQlFVRkJMRU5CUVVreVJTeERRVUZCUVN4RFFVRkhWQ3hMUVVGQlFTeERRVUZCUVN4RFFUTXpRbmhEV1N4UlFVRkJRU3hEUVVGVE5FWXNVMEZCUVVFc1EwRkJWVU1zVFVGQlFVRXNRMEZCVXl4VFFVRlRkRWNzUTBGQlFVRXNRMEZCUjBNc1NVRkJRVUVzUTBGQlRYTkhMRXRCUVVGQkxFTkJRVUZCTEVOQk1rSTFReXhKUVRGQ1FTeEpRVU5KTlVZc1JVRkJRVUVzUTBGQlNVTXNSVUZCUVVFc1EwRkJTVU1zUlVGQlFVRXNRMEZCU1VNc1JVRkJRVUVzUTBGQlNVTXNSVUZCUVVFc1EwRkJTVU1zUlVGQlFVRXNRMEZCU1VNc1JVRkJRVUVzUTBGQlNVTXNSVUZCUVVFc1EwRkJTVFZFTEVOQlFVRkJMRU5CUTJoRGEwb3NSVUZCUVVFc1EwRkJTVU1zUlVGQlFVRXNRMEZCU1VNc1JVRkJRVUVzUTBGQlNVTXNSVUZCUVVFc1EwRkJTVU1zUlVGQlFVRXNRMEZCU1VNc1JVRkJRVUVzUTBGQlNVTXNSVUZCUVVFc1EwRkJTVU1zUlVGQlFVRXNRMEZCU1VNc1JVRkJRVUVzUTBGQlNVTXNSVUZCUVVFc1EwRkdjRU5ETEV0QlFVRkJMRU5CUVZFdlJpeEpRVUZCUVN4RFFVRkxTeXhIUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCU1N4SlFVRkJMRU5CU1haQ01rWXNSVUZCUVVFc1EwRkJTMmhITEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYU5Fc3NSVUZCUVVFc1EwRkJTMnBITEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYU5rc3NSVUZCUVVFc1EwRkJTMnhITEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYU9Fc3NSVUZCUVVFc1EwRkJTMjVITEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYUswc3NSVUZCUVVFc1EwRkJTM0JITEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYVowd3NSVUZCUVVFc1EwRkJTM0pITEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYWFVd3NSVUZCUVVFc1EwRkJTM1JITEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYWEwd3NSVUZCUVVFc1EwRkJTM1pITEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYWJVd3NSVUZCUVVFc1EwRkJTM2hITEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYWIwd3NSVUZCUVVFc1EwRkJTM3BITEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVWYWNVd3NSVUZCUVVFc1EwRkJTekZITEVsQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYWQwMHNSVUZCUVVFc1EwRkJTek5ITEVsQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYWVVMHNSVUZCUVVFc1EwRkJTelZITEVsQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYU1FMHNSVUZCUVVFc1EwRkJTemRITEVsQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYU1rMHNSVUZCUVVFc1EwRkJTemxITEVsQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYU5FMHNSVUZCUVVFc1EwRkJTeTlITEVsQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYU5rMHNSVUZCUVVFc1EwRkJTMmhJTEVsQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYU9FMHNSVUZCUVVFc1EwRkJTMnBJTEVsQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYUswMHNSVUZCUVVFc1EwRkJTMnhJTEVsQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVOYVowNHNSVUZCUVVFc1EwRkJTMjVJTEVsQlFVRkJMRU5CUVVzM1JpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVWVWFVd3NTMEZCUVVFc1JVRkJVeXhGUVVGQkxFVkJZMlJETEVWQlFVRkJMRU5CUmtGc1NpeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkhTbXRLTEVWQlFVRkJMRVZCUVVGQkxFTkJaRzFFVnl4RlFVRkJRU3hGUVVGdFF5eEpRVUZCTEVWQlFYUkdlRWNzUlVGQlFVRXNRMEZCYTBJc1IwRkJRU3hEUVVGaVdDeERRVUZCUVN4RFFVRkZReXhKUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVRCQ0xFZEJRVUVzUTBGQllrUXNRMEZCUVVFc1EwRkJSVU1zU1VGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVFc1IwRkJZeXhEUVVGQkxFTkJRVUVzUlVGamNrTTBTQ3hGUVVGQlFTeERRVU5ZY2tJc1JVRkJRVUVzUlVGQlFVRXNRMEZrYlVSWkxFVkJRVUZCTEVWQlFXMURMRWxCUVVFc1JVRkJNMEo2Unl4RlFVRkJRU3hIUVVGUExFVkJRVUVzUTBGQlFTeERRVUZzUlVNc1JVRkJRVUVzUTBGQmEwSXNSMEZCUVN4RFFVRmlXaXhEUVVGQlFTeERRVUZGUXl4SlFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFUQkNMRWRCUVVFc1EwRkJZa1FzUTBGQlFVRXNRMEZCUlVNc1NVRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRXNSMEZCWXl4RFFVRkJMRWRCUVdkRExFTkJRVUVzUTBGQlFTeEhRV053UlN4RFFVRkJMRU5CUVVseFNTeEZRVUZCUVN4RFFVRkJRU3hEUVVOb1FqbENMRVZCUVVGQkxFVkJRVUZCTEVOQlpHMUVZU3hGUVVGQlFTeEZRVUZ0UXl4SlFVRkJMRVZCUVROQ2VrY3NSVUZCUVVFc1IwRkJUeXhGUVVGQkxFTkJRVUVzUTBGQmJFVkRMRVZCUVVGQkxFTkJRV3RDTEVkQlFVRXNRMEZCWW1Jc1EwRkJRVUVzUTBGQlJVTXNTVUZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUV3UWl4SFFVRkJMRU5CUVdKRUxFTkJRVUZCTEVOQlFVVkRMRWxCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVkQlFXTXNRMEZCUVN4SFFVRm5ReXhEUVVGQkxFTkJRVUVzUjBGamNFVXNRMEZCUVN4RFFVRkpiMGtzUlVGQlFVRXNRMEZCUVVFc1EwRkRhRUkzUWl4RlFVRkJRU3hGUVVGQlFTeERRV1J0UkdNc1JVRkJRVUVzUlVGQmJVTXNTVUZCUVN4RlFVRXpRbnBITEVWQlFVRkJMRWRCUVZFc1EwRkJRU3hEUVVGQkxFTkJRVzVGUXl4RlFVRkJRU3hEUVVGclFpeEhRVUZCTEVOQlFXSmtMRU5CUVVGQkxFTkJRVVZETEVsQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQk1FSXNSMEZCUVN4RFFVRmlSQ3hEUVVGQlFTeERRVUZGUXl4SlFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGQlFTeEhRVUZqTEVOQlFVRXNSMEZCWjBNc1EwRkJRU3hEUVVGQkxFZEJZM0JGTEVOQlFVRXNRMEZCU1cxSkxFVkJRVUZCTEVOQlFVRkJMRU5CUldoQ09Vc3NRMEZCUVVFc1EwRkJRVUVzUTBGRVFXdEtMRVZCUVVGQkxFVkJRVUZCTEVOQlpHMUVaU3hGUVVGQlFTeEZRVUZ0UXl4SlFVRkJMRVZCUVROQ2VrY3NSVUZCUVVFc1IwRkJVU3hEUVVGQkxFTkJRVUVzUTBGQmJrVkRMRVZCUVVGQkxFTkJRV3RDTEVkQlFVRXNRMEZCWW1Zc1EwRkJRVUVzUTBGQlJVTXNTVUZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUV3UWl4SFFVRkJMRU5CUVdKRUxFTkJRVUZCTEVOQlFVVkRMRWxCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZCTEVkQlFXTXNRMEZCUVN4SFFVRXJRaXhGUVVGQkxFTkJRVUVzUjBGamJrVXNRMEZCUVN4RFFVRkphMGtzUlVGQlFVRXNRMEZCUVVFc1NVRkRTaXhGUVVGQkxFTkJRVXN6UWl4RlFVRkJRU3hGUVVGTkxFbEJRVUVzUTBGRGRrSkJMRVZCUVVGQkxFVkJRVUZCTEVOQlprRm5RaXhGUVVGQlFTeEZRVUZSZWtjc1JVRkJRVUVzUjBGQlVTeERRVUZCTEVOQlFVMHNTVUZCUVN4SFFXVldMRU5CUVVFc1EwRkJTVzFJTEVWQlFVRkJMRU5CUVVGQkxFTkJRMmhDTVVJc1JVRkJRVUVzUlVGQlFVRXNRMEZtYlVScFFpeEZRVUZCUVN4RlFVRnRReXhKUVVGQkxFVkJRVE5DTVVjc1JVRkJRVUVzUjBGQlR5eEZRVUZCTEVOQlFVRXNRMEZCYkVWRExFVkJRVUZCTEVOQlFXdENMRWRCUVVFc1EwRkJZbWhDTEVOQlFVRkJMRU5CUVVWRExFbEJRVUZCTEVOQlFVc3NSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkJNa0lzUjBGQlFTeERRVUZpUkN4RFFVRkJRU3hEUVVGRlF5eEpRVUZCUVN4RFFVRkxMRVZCUVVFc1EwRkJRU3hIUVVGbExFTkJRVUVzUjBGQlowTXNRMEZCUVN4RFFVRkJMRWRCWlhCRkxFTkJRVUVzUTBGQlNXZEpMRVZCUVVGQkxFTkJRVUZCTEVOQlEyaENla0lzUlVGQlFVRXNSVUZCUVVFc1EwRm1iVVJyUWl4RlFVRkJRU3hGUVVGdFF5eEpRVUZCTEVWQlFUTkNNVWNzUlVGQlFVRXNSMEZCVHl4RlFVRkJMRU5CUVVFc1EwRkJiRVZETEVWQlFVRkJMRU5CUVd0Q0xFZEJRVUVzUTBGQlltcENMRU5CUVVGQkxFTkJRVVZETEVsQlFVRkJMRU5CUVVzc1JVRkJRU3hEUVVGQkxFTkJRVUVzUTBGQk1rSXNSMEZCUVN4RFFVRmlSQ3hEUVVGQlFTeERRVUZGUXl4SlFVRkJRU3hEUVVGTExFVkJRVUVzUTBGQlFTeEhRVUZsTEVOQlFVRXNSMEZCWjBNc1EwRkJRU3hEUVVGQkxFZEJaWEJGTEVOQlFVRXNRMEZCU1N0SUxFVkJRVUZCTEVOQlFVRkJMRU5CUTJoQ2VFSXNSVUZCUVVFc1JVRkJRVUVzUTBGbWJVUnRRaXhGUVVGQlFTeEZRVUZ0UXl4SlFVRkJMRVZCUVROQ01VY3NSVUZCUVVFc1IwRkJVU3hEUVVGQkxFTkJRVUVzUTBGQmJrVkRMRVZCUVVGQkxFTkJRV3RDTEVkQlFVRXNRMEZCWW14Q0xFTkJRVUZCTEVOQlFVVkRMRWxCUVVGQkxFTkJRVXNzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZCTWtJc1IwRkJRU3hEUVVGaVJDeERRVUZCUVN4RFFVRkZReXhKUVVGQlFTeERRVUZMTEVWQlFVRXNRMEZCUVN4SFFVRmxMRU5CUVVFc1IwRkJaME1zUTBGQlFTeERRVUZCTEVkQlpYQkZMRU5CUVVFc1EwRkJTVGhJTEVWQlFVRkJMRU5CUVVGQkxFTkJTV2hDZEVJc1JVRkJRVUVzUTBGR1FXNUtMRU5CUVVGQkxFVkJRVUZCTEVOQlJFRnJTaXhGUVVGQlFTeEZRVUZCUVN4RFFXWkJiMElzUlVGQlFVRXNSVUZCVVRGSExFVkJRVUZCTEVkQlFVOHNRMEZCUVN4RFFVRk5aMGNzUzBGQlFVRXNSMEZsVkN4RFFVRkJMRU5CUVVsWkxFVkJRVUZCTEVOQlFVRkJMRWxCUTBnc1JVRkJRU3hEUVVkaWNrSXNSVUZCUVVFc1JVRkJUVlVzUlVGQlFVRXNRMEZCUzFjc1JVRkJRVUVzUTBGRFdISkNMRVZCUVVGQkxFVkJRVTFYTEVWQlFVRkJMRU5CUVV0VExFVkJRVUZCTEVOQlExaHdRaXhGUVVGQlFTeEZRVUZOV1N4RlFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlNXbENMRVZCUVVGQkxFTkJRVUZCTEVOQlEyaENOMElzUlVGQlFVRXNSVUZCVFdFc1JVRkJRVUVzUlVGQlRTeERRVUZCTEVOQlFVbGxMRVZCUVVGQkxFTkJRVUZCTEVOQlJXaENMMHNzUTBGQlFVRXNRMEZCUVVFc1EwRkVRVzFLTEVWQlFVRkJMRVZCUVUxakxFVkJRVUZCTEVWQlFVMHNRMEZCUVN4RFFVRkpZU3hGUVVGQlFTeERRVUZCUVN4SlFVTktMRVZCUVVFc1EwRkJTek5DTEVWQlFVRkJMRVZCUVUwc1NVRkJRU3hEUVVOMlFrRXNSVUZCUVVFc1JVRkJUV1VzUlVGQlFVRXNSVUZCVFN4RFFVRkJMRU5CUVVsWExFVkJRVUZCTEVOQlFVRkJMRU5CUTJoQ01VSXNSVUZCUVVFc1JVRkJUV2RDTEVWQlFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGSlV5eEZRVUZCUVN4RFFVRkJRU3hEUVVOb1FucENMRVZCUVVGQkxFVkJRVTFwUWl4RlFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlNVOHNSVUZCUVVFc1EwRkJRVUVzUTBGRGFFSjRRaXhGUVVGQlFTeEZRVUZOYTBJc1JVRkJRVUVzUlVGQlRTeERRVUZCTEVOQlFVbExMRVZCUVVGQkxFTkJRVUZCTEVOQlJXaENNVXNzUTBGQlFVRXNSVUZCUVVFc1EwRkVRVzFLTEVWQlFVRkJMRVZCUVUxdFFpeEZRVUZCUVN4RlFVRk5MRU5CUVVFc1EwRkJTVWNzUlVGQlFVRXNRMEZCUVVFc1NVRkRTQ3hGUVVGQkxFTkJRVXQwUWl4RlFVRkJRU3hGUVVGTkxFbEJRVUVzUTBGRmVFSkRMRVZCUVVGQkxFTkJRVXR3U2l4RFFVRkJRU3hEUVVOTWIwb3NSVUZCUVVFc1JVRkJUVk1zUlVGQlFVRXNRMEZCUzFrc1JVRkJRVUVzUTBGRFdISkNMRVZCUVVGQkxFVkJRVTFWTEVWQlFVRkJMRU5CUVV0VkxFVkJRVUZCTEVOQlExaHdRaXhGUVVGQlFTeEZRVUZOVnl4RlFVRkJRU3hEUVVGTFVTeEZRVUZCUVN4RFFVTllia0lzUlVGQlFVRXNSVUZCVFZrc1JVRkJRVUVzUlVGQlRTeERRVUZCTEVOQlFVbG5RaXhGUVVGQlFTeERRVUZCUVN4RFFVVm9RbWhNTEVOQlFVRkJMRU5CUVVGQkxFTkJSRUZ2U2l4RlFVRkJRU3hGUVVGTllTeEZRVUZCUVN4RlFVRk5MRU5CUVVFc1EwRkJTV01zUlVGQlFVRXNRMEZCUVVFc1NVRkRTaXhGUVVGQkxFTkJRVXN6UWl4RlFVRkJRU3hGUVVGTkxFbEJRVUVzUTBGRGRrSkJMRVZCUVVGQkxFVkJRVTFqTEVWQlFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGSldTeEZRVUZCUVN4RFFVRkJRU3hEUVVOb1FqRkNMRVZCUVVGQkxFVkJRVTFsTEVWQlFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGSlZTeEZRVUZCUVN4RFFVRkJRU3hEUVVOb1FucENMRVZCUVVGQkxFVkJRVTFuUWl4RlFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlNWRXNSVUZCUVVFc1EwRkJRVUVzUTBGRGFFSjRRaXhGUVVGQlFTeEZRVUZOYVVJc1JVRkJRVUVzUlVGQlRTeERRVUZCTEVOQlFVbE5MRVZCUVVGQkxFTkJRVUZCTEVOQlNXaENkRUlzUlVGQlFVRXNRMEZHUVhKS0xFTkJRVUZCTEVWQlFVRkJMRU5CUkVGdlNpeEZRVUZCUVN4RlFVRk5hMElzUlVGQlFVRXNSVUZCVFN4RFFVRkJMRU5CUVVsSkxFVkJRVUZCTEVOQlFVRkJMRWxCUTBnc1JVRkJRU3hEUVVkaWNrSXNSVUZCUVVFc1JVRkJUVkVzUlVGQlFVRXNRMEZCUzJFc1JVRkJRVUVzUTBGRFdISkNMRVZCUVVGQkxFVkJRVTFUTEVWQlFVRkJMRU5CUVV0WExFVkJRVUZCTEVOQlExaHdRaXhGUVVGQlFTeEZRVUZOVlN4RlFVRkJRU3hEUVVGTFV5eEZRVUZCUVN4RFFVTllia0lzUlVGQlFVRXNSVUZCVFZjc1JVRkJRVUVzUTBGQlMwOHNSVUZCUVVFc1EwRkZXSFpMTEVOQlFVRkJMRU5CUVVGQkxFTkJSRUZ4U2l4RlFVRkJRU3hGUVVGTldTeEZRVUZCUVN4RlFVRk5MRU5CUVVFc1EwRkJTV1VzUlVGQlFVRXNRMEZCUVVFc1NVRkRTaXhGUVVGQkxFTkJRVXN6UWl4RlFVRkJRU3hGUVVGTkxFbEJRVUVzUTBGRGRrSkJMRVZCUVVGQkxFVkJRVTFoTEVWQlFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGSllTeEZRVUZCUVN4RFFVRkJRU3hEUVVOb1FqRkNMRVZCUVVGQkxFVkJRVTFqTEVWQlFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGSlZ5eEZRVUZCUVN4RFFVRkJRU3hEUVVOb1FucENMRVZCUVVGQkxFVkJRVTFsTEVWQlFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGSlV5eEZRVUZCUVN4RFFVRkJRU3hEUVVOb1FuaENMRVZCUVVGQkxFVkJRVTFuUWl4RlFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlNVOHNSVUZCUVVFc1EwRkJRVUVzUTBGSmFFSjBRaXhGUVVGQlFTeERRVVpCZEVvc1EwRkJRVUVzUlVGQlFVRXNRMEZFUVhGS0xFVkJRVUZCTEVWQlFVMXBRaXhGUVVGQlFTeEZRVUZOTEVOQlFVRXNRMEZCU1Vzc1JVRkJRVUVzUTBGQlFVRXNTVUZEU0N4RlFVRkJMRU5CUjJKeVFpeEZRVUZCUVN4RlFVRk5UeXhGUVVGQlFTeERRVUZMWXl4RlFVRkJRU3hEUVVOWWNrSXNSVUZCUVVFc1JVRkJUVkVzUlVGQlFVRXNRMEZCUzFrc1JVRkJRVUVzUTBGRFdIQkNMRVZCUVVGQkxFVkJRVTFUTEVWQlFVRkJMRU5CUVV0VkxFVkJRVUZCTEVOQlExaHVRaXhGUVVGQlFTeEZRVUZOVlN4RlFVRkJRU3hEUVVGTFVTeEZRVUZCUVN4RFFVVlllRXNzUTBGQlFVRXNRMEZCUVVFc1EwRkVRWE5LTEVWQlFVRkJMRVZCUVUxWExFVkJRVUZCTEVOQlFVdE5MRVZCUVVGQkxFbEJRME1zUlVGQlFTeERRVUZMYWtJc1JVRkJRVUVzUlVGQlRTeEpRVUZCTEVOQlEzWkNRU3hGUVVGQlFTeEZRVUZOV1N4RlFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlNXTXNSVUZCUVVFc1EwRkJRVUVzUTBGRGFFSXhRaXhGUVVGQlFTeEZRVUZOWVN4RlFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlNWa3NSVUZCUVVFc1EwRkJRVUVzUTBGRGFFSjZRaXhGUVVGQlFTeEZRVUZOWXl4RlFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlNWVXNSVUZCUVVFc1EwRkJRVUVzUTBGRGFFSjRRaXhGUVVGQlFTeEZRVUZOWlN4RlFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlNWRXNSVUZCUVVFc1EwRkJRVUVzUTBGSmFFSjBRaXhGUVVGQlFTeERRVVpCZGtvc1EwRkJRVUVzUlVGQlFVRXNRMEZFUVhOS0xFVkJRVUZCTEVWQlFVMW5RaXhGUVVGQlFTeEZRVUZOTEVOQlFVRXNRMEZCU1Uwc1JVRkJRVUVzUTBGQlFVRXNTVUZEU0N4RlFVRkJMRU5CUjJKeVFpeEZRVUZCUVN4RlFVRk5UU3hGUVVGQlFTeERRVUZMWlN4RlFVRkJRU3hEUVVOWWNrSXNSVUZCUVVFc1JVRkJUVThzUlVGQlFVRXNRMEZCUzJFc1JVRkJRVUVzUTBGRFdIQkNMRVZCUVVGQkxFVkJRVTFSTEVWQlFVRkJMRU5CUVV0WExFVkJRVUZCTEVOQlExaHVRaXhGUVVGQlFTeEZRVUZOVXl4RlFVRkJRU3hEUVVGTFV5eEZRVUZCUVN4RFFVVllla3NzUTBGQlFVRXNRMEZCUVVFc1EwRkVRWFZLTEVWQlFVRkJMRVZCUVUxVkxFVkJRVUZCTEVOQlFVdFBMRVZCUVVGQkxFbEJRME1zUlVGQlFTeERRVUZMYWtJc1JVRkJRVUVzUlVGQlRTeEpRVUZCTEVOQlEzWkNRU3hGUVVGQlFTeEZRVUZOVnl4RlFVRkJRU3hEUVVGTFN5eEZRVUZCUVN4RFFVTllhRUlzUlVGQlFVRXNSVUZCVFZrc1JVRkJRVUVzUlVGQlRTeERRVUZCTEVOQlFVbGhMRVZCUVVGQkxFTkJRVUZCTEVOQlEyaENla0lzUlVGQlFVRXNSVUZCVFdFc1JVRkJRVUVzUlVGQlRTeERRVUZCTEVOQlFVbFhMRVZCUVVGQkxFTkJRVUZCTEVOQlEyaENlRUlzUlVGQlFVRXNSVUZCVFdNc1JVRkJRVUVzUlVGQlRTeERRVUZCTEVOQlFVbFRMRVZCUVVGQkxFTkJRVUZCTEVOQlNXaENkRUlzUlVGQlFVRXNRMEZHUVhoS0xFTkJRVUZCTEVWQlFVRkJMRU5CUkVGMVNpeEZRVUZCUVN4RlFVRk5aU3hGUVVGQlFTeEZRVUZOTEVOQlFVRXNRMEZCU1U4c1JVRkJRVUVzUTBGQlFVRXNTVUZEU0N4RlFVRkJMRU5CUjJKeVFpeEZRVUZCUVN4RlFVRk5TeXhGUVVGQlFTeERRVUZMWjBJc1JVRkJRVUVzUTBGRFdISkNMRVZCUVVGQkxFVkJRVTFOTEVWQlFVRkJMRU5CUVV0akxFVkJRVUZCTEVOQlExaHdRaXhGUVVGQlFTeEZRVUZOVHl4RlFVRkJRU3hEUVVGTFdTeEZRVUZCUVN4RFFVTllia0lzUlVGQlFVRXNSVUZCVFZFc1JVRkJRVUVzUTBGQlMxVXNSVUZCUVVFc1EwRkZXREZMTEVOQlFVRkJMRU5CUVVGQkxFTkJSRUYzU2l4RlFVRkJRU3hGUVVGTlV5eEZRVUZCUVN4RFFVRkxVU3hGUVVGQlFTeEpRVU5ETEVWQlFVRXNRMEZCUzJwQ0xFVkJRVUZCTEVWQlFVMHNTVUZCUVN4RFFVTjJRa0VzUlVGQlFVRXNSVUZCVFZVc1JVRkJRVUVzUTBGQlMwMHNSVUZCUVVFc1EwRkRXR2hDTEVWQlFVRkJMRVZCUVUxWExFVkJRVUZCTEVOQlFVdEpMRVZCUVVGQkxFTkJRMWhtTEVWQlFVRkJMRVZCUVUxWkxFVkJRVUZCTEVWQlFVMHNRMEZCUVN4RFFVRkpXU3hGUVVGQlFTeERRVUZCUVN4RFFVTm9RbmhDTEVWQlFVRkJMRVZCUVUxaExFVkJRVUZCTEVWQlFVMHNRMEZCUVN4RFFVRkpWU3hGUVVGQlFTeERRVUZCUVN4RFFVbG9RblJDTEVWQlFVRkJMRU5CUmtGNlNpeERRVUZCUVN4RlFVRkJRU3hEUVVSQmQwb3NSVUZCUVVFc1JVRkJUV01zUlVGQlFVRXNSVUZCVFN4RFFVRkJMRU5CUVVsUkxFVkJRVUZCTEVOQlFVRkJMRWxCUTBnc1JVRkJRU3hEUVVkaWNrSXNSVUZCUVVFc1JVRkJUVWtzUlVGQlFVRXNRMEZCUzJsQ0xFVkJRVUZCTEVOQlExaHlRaXhGUVVGQlFTeEZRVUZOU3l4RlFVRkJRU3hEUVVGTFpTeEZRVUZCUVN4RFFVTlljRUlzUlVGQlFVRXNSVUZCVFUwc1JVRkJRVUVzUTBGQlMyRXNSVUZCUVVFc1EwRkRXRzVDTEVWQlFVRkJMRVZCUVUxUExFVkJRVUZCTEVOQlFVdFhMRVZCUVVGQkxFTkJSVmd6U3l4RFFVRkJRU3hEUVVGQlFTeERRVVJCZVVvc1JVRkJRVUVzUlVGQlRWRXNSVUZCUVVFc1EwRkJTMU1zUlVGQlFVRXNTVUZEUXl4RlFVRkJMRU5CUVV0cVFpeEZRVUZCUVN4RlFVRk5MRWxCUVVFc1EwRkRka0pCTEVWQlFVRkJMRVZCUVUxVExFVkJRVUZCTEVOQlFVdFBMRVZCUVVGQkxFTkJRMWhvUWl4RlFVRkJRU3hGUVVGTlZTeEZRVUZCUVN4RFFVRkxTeXhGUVVGQlFTeERRVU5ZWml4RlFVRkJRU3hGUVVGTlZ5eEZRVUZCUVN4RFFVRkxSeXhGUVVGQlFTeERRVU5ZWkN4RlFVRkJRU3hGUVVGTldTeEZRVUZCUVN4RlFVRk5MRU5CUVVFc1EwRkJTVmNzUlVGQlFVRXNRMEZCUVVFc1EwRkphRUowUWl4RlFVRkJRU3hEUVVaQk1Vb3NRMEZCUVVFc1JVRkJRVUVzUTBGRVFYbEtMRVZCUVVGQkxFVkJRVTFoTEVWQlFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGSlV5eEZRVUZCUVN4RFFVRkJRU3hKUVVOSUxFVkJRVUVzUTBGSFluSkNMRVZCUVVGQkxFVkJRVTFITEVWQlFVRkJMRU5CUVV0clFpeEZRVUZCUVN4RFFVTllja0lzUlVGQlFVRXNSVUZCVFVrc1JVRkJRVUVzUTBGQlMyZENMRVZCUVVGQkxFTkJRMWh3UWl4RlFVRkJRU3hGUVVGTlN5eEZRVUZCUVN4RFFVRkxZeXhGUVVGQlFTeERRVU5ZYmtJc1JVRkJRVUVzUlVGQlRVMHNSVUZCUVVFc1EwRkJTMWtzUlVGQlFVRXNRMEZGV0RWTExFTkJRVUZCTEVOQlFVRkJMRU5CUkVFd1NpeEZRVUZCUVN4RlFVRk5UeXhGUVVGQlFTeERRVUZMVlN4RlFVRkJRU3hKUVVORExFVkJRVUVzUTBGQlMycENMRVZCUVVGQkxFVkJRVTBzU1VGQlFTeERRVU4yUWtFc1JVRkJRVUVzUlVGQlRWRXNSVUZCUVVFc1EwRkJTMUVzUlVGQlFVRXNRMEZEV0doQ0xFVkJRVUZCTEVWQlFVMVRMRVZCUVVGQkxFTkJRVXROTEVWQlFVRkJMRU5CUTFobUxFVkJRVUZCTEVWQlFVMVZMRVZCUVVGQkxFTkJRVXRKTEVWQlFVRkJMRU5CUTFoa0xFVkJRVUZCTEVWQlFVMVhMRVZCUVVGQkxFTkJRVXRGTEVWQlFVRkJMRU5CU1ZoYUxFVkJRVUZCTEVOQlJrRXpTaXhEUVVGQlFTeEZRVUZCUVN4RFFVUkJNRW9zUlVGQlFVRXNSVUZCVFZrc1JVRkJRVUVzUlVGQlRTeERRVUZCTEVOQlFVbFZMRVZCUVVGQkxFTkJRVUZCTEVsQlEwZ3NSVUZCUVN4RFFVZGlja0lzUlVGQlFVRXNSVUZCVFVVc1JVRkJRVUVzUTBGQlMyMUNMRVZCUVVGQkxFTkJRMWh5UWl4RlFVRkJRU3hGUVVGTlJ5eEZRVUZCUVN4RFFVRkxhVUlzUlVGQlFVRXNRMEZEV0hCQ0xFVkJRVUZCTEVWQlFVMUpMRVZCUVVGQkxFTkJRVXRsTEVWQlFVRkJMRU5CUTFodVFpeEZRVUZCUVN4RlFVRk5TeXhGUVVGQlFTeERRVUZMWVN4RlFVRkJRU3hEUVVWWU4wc3NRMEZCUVVFc1EwRkJRVUVzUTBGRVFUSktMRVZCUVVGQkxFVkJRVTFOTEVWQlFVRkJMRU5CUVV0WExFVkJRVUZCTEVsQlEwTXNSVUZCUVN4RFFVRkxha0lzUlVGQlFVRXNSVUZCVFN4SlFVRkJMRU5CUTNaQ1FTeEZRVUZCUVN4RlFVRk5UeXhGUVVGQlFTeERRVUZMVXl4RlFVRkJRU3hEUVVOWWFFSXNSVUZCUVVFc1JVRkJUVkVzUlVGQlFVRXNRMEZCUzA4c1JVRkJRVUVzUTBGRFdHWXNSVUZCUVVFc1JVRkJUVk1zUlVGQlFVRXNRMEZCUzBzc1JVRkJRVUVzUTBGRFdHUXNSVUZCUVVFc1JVRkJUVlVzUlVGQlFVRXNRMEZCUzBjc1JVRkJRVUVzUTBGVldGZ3NSVUZCUVVFc1EwRktRVmdzUlVGQlFVRXNRMEZCVXl4SlFVRkJMRVZCUkZSc1NpeERRVUZCUVN4RFFVRkJRU3hEUVVSQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVpCUVN4RFFVRkJRU3hGUVVGQlFTeERRVVJCTWtvc1JVRkJRVUVzUlVGQlRWY3NSVUZCUVVFc1EwRkJTME1zUlVGQlFVRXNTVUZEUlN4RlFVRkJMRWRCUlVRc1EwRkJRU3hGUVVGTGRrc3NRMEZCUVVFc1EwRkJUU3hEUVVGQkxFZEJhRWxNYTBvc1JVRkJRVUVzUlVGQlRTeEpRVUZCTEVOQlFVRXNRMEZwU1ZRc1EwRkJRU3hEUVVGQkxFTkJUV1paTEVWQlFVRkJMRU5CU0VGWUxFVkJRVUZCTEVWQlJFRnVTaXhEUVVGQlFTeEpRVUZYTEVWQlFVRXNRMEZMV0N0S0xFVkJRVUZCTEVOQk5VZHJRbGdzUlVGQlFVRXNSVUZCVFN4SlFVRkJMRU5CTmtkNFFsa3NSVUZCUVVFc1EwRXZSbXRDV0N4RlFVRkJRU3hGUVVGTkxFbEJRVUVzUTBGblIzaENXU3hGUVVGQlFTeERRV3hHYTBKWUxFVkJRVUZCTEVWQlFVMHNTVUZCUVN4RFFXMUdlRUpaTEVWQlFVRkJMRU5CY2tWclFsZ3NSVUZCUVVFc1JVRkJUU3hKUVVGQkxFTkJjMFY0UWxrc1JVRkJRVUVzUTBGNFJHdENXQ3hGUVVGQlFTeEZRVUZOTEVsQlFVRXNRMEY1UkhoQ1dTeEZRVUZCUVN4RFFUTkRhMEpZTEVWQlFVRkJMRVZCUVUwc1NVRkJRU3hEUVRSRGVFSlpMRVZCUVVGQkxFTkJPVUpyUWxnc1JVRkJRVUVzUlVGQlRTeEpRVUZCTEVOQkswSjRRbGtzUlVGQlFVRXNRMEZxUW10Q1dDeEZRVUZCUVN4RlFVRk5MRWxCUVVFc1EwRnRRbmhDYUVnc1NVRkJRVUVzUlVGQlVTeEZRVUZCTEVOQlExSnpSeXhMUVVGQlFTeEZRVUZUTEVWQlFVRXNRMEZGV0hCR0xFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkxNa3NzUlVGQlFVRXNRMEZEV21oSExFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkxORXNzUlVGQlFVRXNRMEZEV21wSExFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkxOa3NzUlVGQlFVRXNRMEZEV214SExFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkxPRXNzUlVGQlFVRXNRMEZEV201SExFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkxLMHNzUlVGQlFVRXNRMEZEV25CSExFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkxaMHdzUlVGQlFVRXNRMEZEV25KSExFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkxhVXdzUlVGQlFVRXNRMEZEV25SSExFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkxhMHdzUlVGQlFVRXNRMEZEV25aSExFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkxiVXdzUlVGQlFVRXNRMEZEV25oSExFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkxiMHdzUlVGQlFVRXNRMEZCUVVFc1EwRkhaRzVJTEZGQlFVRkJMRU5CUVZNMFJpeFRRVUZCUVN4RFFVRlZla1VzVFVGQlFVRXNRMEZCVXl4VFFVRlRNa2NzUjBGQlFVRXNRMEZCUzBNc1RVRkJRVUVzUTBGQlFVRXNRMEZEZUVNc1NVRkRTV3hNTEVOQlFVRkJMRU5CUVVkdFRDeEpRVUZCUVN4RFFVRk5NME1zUTBGQlFVRXNRMEZCUjNwTExFTkJRVUZCTEVOQlJGcHhUaXhEUVVGQlFTeERRVUZKTEVsQlFVbHlTQ3hYUVVGQlFTeERRVUZaTEVWQlFVRXNRMEZCUVN4RFFVZDRRaXhIUVVGSlJpeEpRVUZCUVN4RFFVRkxTU3hSUVVGQlFTeERRVUZWTEVOQlIycENMRWxCUmtGc1J5eERRVUZCUVN4RFFVRkpPRVlzU1VGQlFVRXNRMEZCUzBrc1VVRkJRVUVzUTBGRFZFb3NTVUZCUVVFc1EwRkJTME1zVFVGQlFVRXNRMEZCVHk5R0xFTkJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJRVThzUTBGQlFTeERRVU5hUVN4RFFVRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlNVRXNRMEZCUVVFc1JVRkJRVUVzUTBGQlN6aEdMRWxCUVVGQkxFTkJRVXRETEUxQlFVRkJMRU5CUVU4dlJpeERRVUZCUVN4RFFVRkJRU3hEUVVGTExFTkJRVUVzUTBGRGNrTTRSaXhKUVVGQlFTeERRVUZMU3l4SFFVRkJRU3hEUVVGTkxFTkJRVUVzUTBGRFdFd3NTVUZCUVVFc1EwRkJTMjFHTEUxQlFVRkJMRU5CUVU5dVJpeEpRVUZCUVN4RFFVRkxReXhOUVVGQlFTeERRVUZSTEVOQlFVRXNRMEZCUnl4RlFVRkJMRU5CUVVFc1EwRkxPVUlzU1VGR1FUbEVMRU5CUVVGQkxFTkJRVWsyUkN4SlFVRkJRU3hEUVVGTE0wVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUjBGQlR5eEZRVUZCTEVOQlEyeENNa1VzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRVZCUVUwc1NVRkJRU3hEUVVOU2JrSXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrc1JVRkJRU3hEUVVGSlFTeERRVUZCUVN4RlFVRkJRU3hEUVVOc1FqaEdMRWxCUVVGQkxFTkJRVXN6UlN4RFFVRkJRU3hEUVVGRmJrSXNRMEZCUVVFc1EwRkJRVUVzUlVGQlRXbERMRU5CUVVGQkxFTkJRMkpCTEVOQlFVRkJMRU5CUVVrMlJDeEpRVUZCUVN4RFFVRkxNMFVzUTBGQlFVRXNRMEZCUlc1Q0xFTkJRVUZCTEVOQlFVRkJMRWRCUVU4c1JVRkJRU3hEUVVOc1FqaEdMRWxCUVVGQkxFTkJRVXN6UlN4RFFVRkJRU3hEUVVGRmJrSXNRMEZCUVVFc1EwRkJRVUVzUlVGQlRTeEpRVUZCTEVOQllXWXNTVUZZUVRoR0xFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RlFVRlhMRU5CUVVFc1EwRkJTbU1zUTBGQlFVRXNRMEZEWkVFc1EwRkJRVUVzUTBGQlNUWkVMRWxCUVVGQkxFTkJRVXN6UlN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeEhRVUZQTEVWQlFVRXNRMEZEYkVJeVJTeEpRVUZCUVN4RFFVRkxNMFVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1JVRkJUU3hKUVVGQkxFTkJRMkl5UlN4SlFVRkJRU3hEUVVGTE0wVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUlVGQlRXTXNRMEZCUVVFc1EwRkRZa0VzUTBGQlFVRXNRMEZCU1RaRUxFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4SFFVRlBMRVZCUVVFc1EwRkRiRUl5UlN4SlFVRkJRU3hEUVVGTE0wVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUlVGQlRTeEpRVUZCTEVOQlEySXlSU3hKUVVGQlFTeERRVUZMTTBVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNSVUZCVFdNc1EwRkJRVUVzUTBGRlltOU1MRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVdDJTQ3hKUVVGQlFTeERRVUZMTTBVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCU3l4RFFVRkJMRU5CUTI1Q1l5eERRVUZCUVN4RFFVRkpiMHdzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1IwRkJUeXhGUVVGQkxFTkJRMkpCTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFVkJRVTBzU1VGQlFTeERRVU5JY2s0c1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWtzUlVGQlFTeERRVUZKUVN4RFFVRkJRU3hGUVVGQlFTeERRVU5zUW5GT0xFTkJRVUZCTEVOQlFVVnlUaXhEUVVGQlFTeERRVUZCUVN4RFFVRkxPRVlzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVnVRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkxhVU1zUTBGQlFVRXNRMEZEYmtKQkxFTkJRVUZCTEVOQlFVbHZUQ3hEUVVGQlFTeERRVUZGY2s0c1EwRkJRVUVzUTBGQlFVRXNSMEZCVHl4RlFVRkJMRU5CUTJKeFRpeERRVUZCUVN4RFFVRkZjazRzUTBGQlFVRXNRMEZCUVVFc1JVRkJUU3hKUVVGQkxFTkJTMVlzU1VGSVFYRk9MRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVWQlFVMHNTVUZCUVN4RFFVVlNSQ3hKUVVGQlFTeERRVUZCUVN4RFFVRlpMRU5CUVVFc1EwRkJTbTVNTEVOQlFVRkJMRVZCUVZNc1EwRkJRU3hEUVVOYWFrTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrc1JVRkJRU3hEUVVGSlFTeERRVUZCUVN4RlFVRkJRU3hEUVVGTGNVNHNRMEZCUVVFc1EwRkJSWEpPTEVOQlFVRkJMRU5CUVVGQkxFVkJRVTF2VGl4SlFVRkJRU3hEUVVWcVF5eEpRVVJCUVN4SlFVRkJRU3hEUVVGQlFTeERRVUZSUVN4SlFVRkJRU3hEUVVOSWNFNHNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVrc1JVRkJRU3hEUVVGSlFTeERRVUZCUVN4RlFVRkJRU3hEUVVGTE9FWXNTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVWdVFpeERRVUZCUVN4RFFVRkJRU3hEUVVGTk9FWXNTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVWdVFpeERRVUZCUVN4RFFVRkJRU3hEUVVGTGIwNHNTVUZCUVVFc1EwRkJVVU1zUTBGQlFVRXNRMEZCUlhKT0xFTkJRVUZCTEVOQlFVRkJMRU5CWVRWRUxFbEJXRUU0Uml4SlFVRkJRU3hEUVVGTE0wVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQmIwVXNTMEZCUVN4RlFVRTNSREpGTEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGak1rVXNTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFVkJRVTBzUlVGQlFTeERRVUZCTEVOQlEyaEVNa1VzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVc5RkxFdEJRVUVzUlVGQk4wUXlSU3hKUVVGQlFTeERRVUZMTTBVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNSMEZCVVN4RFFVRkJMRU5CUVUweVJTeEpRVUZCUVN4RFFVRkxNMFVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1JVRkJUU3hGUVVGQkxFTkJRVUVzUTBGRGFFUXlSU3hKUVVGQlFTeERRVUZMTTBVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCYjBVc1MwRkJRU3hGUVVFM1JESkZMRWxCUVVGQkxFTkJRVXN6UlN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeEhRVUZSTEVOQlFVRXNRMEZCVFRKRkxFbEJRVUZCTEVOQlFVc3pSU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RlFVRlBMRU5CUVVFc1EwRkJRU3hEUVVOcVJESkZMRWxCUVVGQkxFTkJRVXN6UlN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZ2UlN4TFFVRkJMRVZCUVRkRU1rVXNTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFZEJRVkVzUTBGQlFTeERRVUZOTWtVc1NVRkJRVUVzUTBGQlN6TkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVWQlFVOHNRMEZCUVN4RFFVRkJMRU5CUTJwRU1rVXNTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVzlGTEV0QlFVRXNSVUZCTjBReVJTeEpRVUZCUVN4RFFVRkxNMFVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1IwRkJUeXhGUVVGQkxFTkJRVTh5UlN4SlFVRkJRU3hEUVVGTE0wVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUlVGQlR5eERRVUZCTEVOQlFVMHlSU3hKUVVGQlFTeERRVUZMTTBVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNSVUZCVFN4RlFVRkJMRU5CUVVFc1EwRkRjRVV5UlN4SlFVRkJRU3hEUVVGTE0wVXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQmIwVXNTMEZCUVN4RlFVRTNSREpGTEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hIUVVGUkxFTkJRVUVzUTBGQlRUSkZMRWxCUVVGQkxFTkJRVXN6UlN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeEZRVUZOTEVWQlFVRXNRMEZCUVN4RFFVTm9SREpGTEVsQlFVRkJMRU5CUVVzelJTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGdlJTeExRVUZCTEVWQlFUZEVNa1VzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRWRCUVZFc1EwRkJRU3hEUVVGTk1rVXNTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFVkJRVThzUTBGQlFTeERRVUZCTEVOQlEycEVNa1VzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVc5RkxFdEJRVUVzUlVGQk4wUXlSU3hKUVVGQlFTeERRVUZMTTBVc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNSMEZCVVN4RFFVRkJMRU5CUVUweVJTeEpRVUZCUVN4RFFVRkxNMFVzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1JVRkJUeXhEUVVGQkxFTkJRVUVzUTBGRmFrUnpTaXhEUVVGQlFTeERRVUZKTTBVc1NVRkJRVUVzUTBGQlN6TkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVc3lSU3hKUVVGQlFTeERRVUZMUnl4SFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVU42UWtnc1NVRkJRVUVzUTBGQlN6TkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFWTXNTMEZCUVN4RFFVRktjMG9zUTBGQlFVRXNRMEZEVUhwTExFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUlVGQlFVRXNRMEZEYWtKNVN5eERRVUZCUVN4RFFVRkJRU3hEUVVGUE0wVXNTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVWdVFpeERRVUZCUVN4RFFVRkJRU3hEUVVGTE9FWXNTVUZCUVVFc1EwRkJTMGNzUjBGQlFVRXNRMEZCU1dwSExFTkJRVUZCTEVOQlFVRkJMRU5CUVUwc1EwRkJRU3hIUVVGTmVVc3NRMEZCUVVFc1IwRkJUU3hGUVVGQkxFTkJRVUVzUTBGQlR5eERRVUZCTEVOQlEzSkVNMFVzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVnVRaXhEUVVGQlFTeERRVUZCUVN4RFFVRlRMRXRCUVVFc1EwRkJTbmxMTEVOQlFVRkJMRU5CUjJSNVF5eEhRVUZCUVN4RFFVRkpReXhOUVVGQlFTeERRVUZSTEVOQlFVRXNRMEZCUVN4RFFVRk5ja2dzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRWRCUVU4c1EwRkJRU3hEUVVGTExFZEJRVUVzUTBGRGNrTXJUQ3hIUVVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGQlFTeERRVUZOY2tnc1NVRkJRVUVzUTBGQlN6TkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVkQlFVOHNRMEZCUVN4RFFVRkxMRWRCUVVFc1EwRkRja01yVEN4SFFVRkJRU3hEUVVGSlF5eE5RVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkJRU3hEUVVGTmNrZ3NTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFZEJRVThzUTBGQlFTeERRVUZMTEVkQlFVRXNRMEZEY2tNclRDeEhRVUZCUVN4RFFVRkpReXhOUVVGQlFTeERRVUZSTEVOQlFVRXNRMEZCUVN4RFFVRk5ja2dzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRWRCUVU4c1EwRkJRU3hEUVVGTExFZEJRVUVzUTBGRGNrTXJUQ3hIUVVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGQlFTeERRVUZOY2tnc1NVRkJRVUVzUTBGQlN6TkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVkQlFVOHNRMEZCUVN4RFFVRkxMRWRCUVVFc1EwRkRja01yVEN4SFFVRkJRU3hEUVVGSlF5eE5RVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkJRU3hEUVVGTmNrZ3NTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFZEJRVThzUTBGQlFTeERRVUZMTEVkQlFVRXNRMEZEY2tNclRDeEhRVUZCUVN4RFFVRkpReXhOUVVGQlFTeERRVUZSTEVOQlFVRXNRMEZCUVN4RFFVRk5ja2dzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRWRCUVU4c1EwRkJRU3hEUVVGTExFZEJRVUVzUTBGRGNrTXJUQ3hIUVVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGQlFTeERRVUZOY2tnc1NVRkJRVUVzUTBGQlN6TkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVkQlFVOHNRMEZCUVN4RFFVRkxMRWRCUVVFc1EwRkRja01yVEN4SFFVRkJRU3hEUVVGSlF5eE5RVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkJRU3hEUVVGTmNrZ3NTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFZEJRVThzUTBGQlFTeERRVUZMTEVkQlFVRXNRMEZEY2tNclRDeEhRVUZCUVN4RFFVRkpReXhOUVVGQlFTeERRVUZSTEVOQlFVRXNRMEZCUVN4RFFVRk5ja2dzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRWRCUVU4c1EwRkJRU3hEUVVGTExFZEJRVUVzUTBGRGNrTXJUQ3hIUVVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGQlFTeERRVUZQY2tnc1NVRkJRVUVzUTBGQlN6TkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVkQlFVOHNRMEZCUVN4RFFVRkxMRWRCUVVFc1EwRkRja01yVEN4SFFVRkJRU3hEUVVGSlF5eE5RVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkJRU3hEUVVGUGNrZ3NTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFZEJRVThzUTBGQlFTeERRVUZMTEVkQlFVRXNRMEZEY2tNclRDeEhRVUZCUVN4RFFVRkpReXhOUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCUVN4RFFVRlBja2dzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRWRCUVU4c1EwRkJRU3hEUVVGTExFZEJRVUVzUTBGRGNrTXJUQ3hIUVVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGQlFTeERRVUZQY2tnc1NVRkJRVUVzUTBGQlN6TkZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVkQlFVOHNRMEZCUVN4RFFVRkxMRWRCUVVFc1EwRkRja01yVEN4SFFVRkJRU3hEUVVGSlF5eE5RVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkJRU3hEUVVGUGNrZ3NTVUZCUVVFc1EwRkJTek5GTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFZEJRVThzUTBGQlFTeERRVUZMTEVkQlFVRXNRMEZEY2tNclRDeEhRVUZCUVN4RFFVRkpReXhOUVVGQlFTeERRVUZQTEVWQlFVRXNRMEZCUVN4RFFVRlBja2dzU1VGQlFVRXNRMEZCU3pORkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRWRCUVU4c1EwRkJRU3hEUVVGTExFZEJRVUVzUTBGQlFTeERRVWQyUTJsRkxGRkJRVUZCTEVOQlFWTTBSaXhUUVVGQlFTeERRVUZWTVVVc1RVRkJRVUVzUTBGQlV5eFRRVUZUTTBJc1EwRkJRVUVzUTBGQlIwTXNTVUZCUVVFc1EwRkJUWE5ITEV0QlFVRkJMRU5CUVVGQkxFTkJRelZETEVsQlFVbHNUQ3hEUVVGQlFTeERRVUZIYzA0c1NVRkJRVUVzUTBGRlVDeEhRVUZKZUVnc1NVRkJRVUVzUTBGQlMwa3NVVUZCUVVFc1EwRkJWU3hEUVVscVFpeEpRVUZCTEVOQlNFRnZTQ3hKUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZCUzNoSUxFbEJRVUZCTEVOQlFVdEpMRkZCUVVGQkxFVkJRMUJuUml4TFFVRkJRU3hIUVVOVWIwTXNTVUZCUVVFc1EwRkJUM0JETEV0QlFVRkJMRU5CUVVGQkxFTkJRMHBzVEN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTWE5PTEVsQlFVRkJMRU5CUVUxMFRpeERRVUZCUVN4RlFVRkJRU3hEUVVOd1FqaEdMRWxCUVVGQkxFTkJRVXRETEUxQlFVRkJMRU5CUVU5RUxFbEJRVUZCTEVOQlFVdEpMRkZCUVVGQkxFTkJRVmRzUnl4RFFVRkJRU3hEUVVGQlFTeERRVUZMTWtVc1EwRkJRVUVzUTBGQlJVTXNTVUZCUVVFc1EwRkJTelZGTEVOQlFVRkJMRU5CUVVGQkxFTkJTVEZETEVkQlNFRnJUQ3hMUVVGQlFTeEZRVUZUYjBNc1NVRkJRVUVzUTBGRFZERkpMRWxCUVVGQkxFVkJRVkV3U1N4SlFVRkJRU3hEUVVOU2VFZ3NTVUZCUVVFc1EwRkJTMGtzVVVGQlFVRXNSVUZCV1c5SUxFbEJRVUZCTEVOQlEySjRTQ3hKUVVGQlFTeERRVUZMU1N4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGRGJFSXNUMEZEUmtvc1NVRkJRVUVzUTBGQlMyMUdMRTFCUVVGQkxFTkJRVTl1Uml4SlFVRkJRU3hEUVVGTFF5eE5RVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkJSeXhGUVVGQkxFTkJRVUVzUTBGRE5VSkVMRWxCUVVGQkxFTkJRVXRKTEZGQlFVRkJMRU5CUVZjc1EwRkJRU3hEUVZWc1FpeEhRVkJKWjBZc1MwRkJRVUVzUlVGQlV5eEZRVUZCTEVkQlExaHZReXhKUVVGQlFTeERRVUZQY0VNc1MwRkJRVUVzUTBGQlUwRXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRM2hDY0VZc1NVRkJRVUVzUTBGQlMyMUdMRTFCUVVGQkxFTkJRVTkwUnl4RFFVRkJRU3hEUVVGSFF5eEpRVUZCUVN4RFFVRk5NRWtzU1VGQlFVRXNRMEZCUVVFc1EwRkRja0l4U1N4SlFVRkJRU3hGUVVGUk1Fa3NTVUZCUVVFc1EwRkRVbkJETEV0QlFVRkJMRVZCUVZOdlF5eEpRVUZCUVN4RFFVRkJRU3hEUVVkUWNFTXNTMEZCUVVFc1EwRkJUeXhEUVVOVUxFbEJRVXRzVEN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTV3RNTEV0QlFVRkJMRU5CUVU5c1RDeERRVUZCUVN4RlFVRkJRU3hEUVVOeVFqaEdMRWxCUVVGQkxFTkJRVXRETEUxQlFVRkJMRU5CUVU5RUxFbEJRVUZCTEVOQlFVdEpMRkZCUVVGQkxFTkJRVmRzUnl4RFFVRkJRU3hEUVVGQlFTeERRVUZMTWtVc1EwRkJRVUVzUTBGQlJVTXNTVUZCUVVFc1EwRkJTelZGTEVOQlFVRkJMRU5CUVVGQkxFTkJRekZET0VZc1NVRkJRVUVzUTBGQlMwa3NVVUZCUVVFc1JVRkJXV2RHTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQmFXdENja0lzU1VGQlNYRkRMR3RDUVVGQlFTeERRVUZ4UWpkSExHZENRVUZCUVN4RFFVTnlRamhITEhWQ1FVRkJRU3hEUVVFd1FqZEhMSEZDUVVGQlFTeERRV001UWl4SlFVRkpPRWNzUTBGQlFVRXNRMEZCU1N4RFFVTk9MRlZCUVVFc1EwRkJXU3hWUVVGQkxFTkJRVmtzVlVGQlFTeERRVUZaTEZOQlFVRXNRMEZEY0VNc1ZVRkJRU3hEUVVGWkxGVkJRVUVzUTBGQldTeFZRVUZCTEVOQlFWa3NWVUZCUVN4RFFVTndReXhUUVVGQkxFTkJRVmtzVlVGQlFTeERRVUZaTEZWQlFVRXNRMEZCV1N4VlFVRkJMRU5CUTNCRExGVkJRVUVzUTBGQldTeFZRVUZCTEVOQlFWa3NWVUZCUVN4RFFVRlpMRlZCUVVFc1EwRkRjRU1zVlVGQlFTeERRVUZaTEZWQlFVRXNRMEZCV1N4VFFVRkJMRU5CUVZrc1ZVRkJRU3hEUVVOd1F5eFRRVUZCTEVOQlFWa3NWVUZCUVN4RFFVRlpMRlZCUVVFc1EwRkJXU3hWUVVGQkxFTkJRM0JETEZWQlFVRXNRMEZCV1N4VlFVRkJMRU5CUVZrc1ZVRkJRU3hEUVVGWkxGTkJRVUVzUTBGRGNFTXNWVUZCUVN4RFFVRlpMRk5CUVVFc1EwRkJXU3hWUVVGQkxFTkJRVmtzVlVGQlFTeERRVU53UXl4VlFVRkJMRU5CUVZrc1ZVRkJRU3hEUVVGWkxGVkJRVUVzUTBGQldTeFRRVUZCTEVOQlEzQkRMRk5CUVVFc1EwRkJXU3hWUVVGQkxFTkJRVmtzVTBGQlFTeERRVUZaTEZWQlFVRXNRMEZEY0VNc1UwRkJRU3hEUVVGWkxGVkJRVUVzUTBGQldTeFZRVUZCTEVOQlFWa3NWVUZCUVN4RFFVTndReXhWUVVGQkxFTkJRVmtzVlVGQlFTeERRVUZaTEZWQlFVRXNRMEZCV1N4VlFVRkJMRU5CUTNCRExGVkJRVUVzUTBGQldTeFZRVUZCTEVOQlFWa3NWVUZCUVN4RFFVRlpMRk5CUVVFc1EwRkRjRU1zVlVGQlFTeERRVUZaTEZWQlFVRXNRMEZCV1N4VlFVRkJMRU5CUVZrc1ZVRkJRU3hEUVVOd1F5eFZRVUZCTEVOQlFWa3NWVUZCUVN4RFFVRlpMRlZCUVVFc1EwRkJXU3hWUVVGQkxFTkJRM0JETEZOQlFVRXNRMEZCV1N4VlFVRkJMRU5CUVZrc1UwRkJRU3hEUVVGWkxGTkJRVUVzUTBGRGNFTXNVMEZCUVN4RFFVRlpMRlZCUVVFc1EwRkJXU3hUUVVGQkxFTkJRVmtzVlVGQlFTeERRVU53UXl4VlFVRkJMRU5CUVZrc1ZVRkJRU3hEUVVGWkxGVkJRVUVzUTBGQldTeFZRVUZCTEVOQlEzQkRMRlZCUVVFc1EwRkJXU3hWUVVGQkxFTkJRVmtzVlVGQlFTeERRVUZaTEZWQlFVRXNRMEZEY0VNc1ZVRkJRU3hEUVVGWkxGVkJRVUVzUTBGQldTeFZRVUZCTEVOQlFWa3NVMEZCUVN4RFFVTndReXhWUVVGQkxFTkJRVmtzVlVGQlFTeERRVUZaTEZWQlFVRXNRMEZCV1N4VlFVRkJMRU5CUTNCRExGVkJRVUVzUTBGQldTeFZRVUZCTEVOQlFWa3NWVUZCUVN4RFFVRlpMRk5CUVVFc1EwRkRjRU1zVlVGQlFTeERRVUZaTEZWQlFVRXNRMEZCV1N4VlFVRkJMRU5CUVZrc1ZVRkJRU3hEUVVOd1F5eFZRVUZCTEVOQlFWa3NWVUZCUVN4RFFVRlpMRk5CUVVFc1EwRkJXU3hUUVVGQkxFTkJRM0JETEZOQlFVRXNRMEZCV1N4VlFVRkJMRU5CUVZrc1UwRkJRU3hEUVVGWkxGVkJRVUVzUTBGRGNFTXNVMEZCUVN4RFFVRlpMRlZCUVVFc1EwRkJXU3hUUVVGQkxFTkJRVmtzVlVGQlFTeERRVU53UXl4VFFVRkJMRU5CUVZrc1ZVRkJRU3hEUVVGWkxGVkJRVUVzUTBGQldTeFZRVUZCTEVOQlEzQkRMRlZCUVVFc1EwRkJXU3hWUVVGQkxFTkJRVmtzVlVGQlFTeERRVUZaTEZWQlFVRXNRMEZEY0VNc1ZVRkJRU3hEUVVGWkxGVkJRVUVzUTBGQldTeFZRVUZCTEVOQlFWa3NWVUZCUVN4RFFVTndReXhWUVVGQkxFTkJRVmtzVlVGQlFTeERRVUZaTEZWQlFVRXNRMEZCV1N4VFFVRkJMRU5CUTNCRExGVkJRVUVzUTBGQldTeFRRVUZCTEVOQlFWa3NWVUZCUVN4RFFVRlpMRlZCUVVFc1EwRkRjRU1zVlVGQlFTeERRVUZaTEZWQlFVRXNRMEZCV1N4VlFVRkJMRU5CUVZrc1ZVRkJRU3hEUVVOd1F5eFZRVUZCTEVOQlFWa3NWVUZCUVN4RFFVRlpMRlZCUVVFc1EwRkJXU3hUUVVGQkxFTkJRM0JETEZWQlFVRXNRMEZCV1N4VlFVRkJMRU5CUVZrc1ZVRkJRU3hEUVVGWkxGVkJRVUVzUTBGRGNFTXNVMEZCUVN4RFFVRlpMRlZCUVVFc1EwRkJXU3hUUVVGQkxFTkJRVmtzVlVGQlFTeERRVU53UXl4VFFVRkJMRU5CUVZrc1ZVRkJRU3hEUVVGWkxGTkJRVUVzUTBGQldTeFRRVUZCTEVOQlEzQkRMRk5CUVVFc1EwRkJXU3hUUVVGQkxFTkJRVmtzVTBGQlFTeERRVUZaTEZWQlFVRXNRMEZEY0VNc1ZVRkJRU3hEUVVGWkxGTkJRVUVzUTBGQldTeFZRVUZCTEVOQlFWa3NWVUZCUVN4RFFVTndReXhWUVVGQkxFTkJRVmtzVlVGQlFTeERRVUZaTEZWQlFVRXNRMEZCV1N4VlFVRkJMRU5CUTNCRExGVkJRVUVzUTBGQldTeFRRVUZCTEVOQlFWa3NWVUZCUVN4RFFVRlpMRlZCUVVFc1EwRkJRU3hEUVVkMFF5eFRRVUZUUXl4dlFrRkJRVUVzUTBGQmNVSkRMRVZCUVVGQkxFTkJRVWxETEVWQlFVRkJMRU5CUVVscVNpeERRVUZCUVN4RFFVRkhiRVFzUTBGQlFVRXNRMEZCUVVFc1EwRjVRblpETEVsQmVFSkJMRWxCUTBsdlRTeEhRVUZCUVN4RFFVRkxReXhIUVVGQlFTeERRVUZMUXl4SFFVRkJRU3hEUVVGTFF5eEhRVUZCUVN4RFFVRkxReXhIUVVGQlFTeERRVUZMUXl4SFFVRkJRU3hEUVVGTFF5eEhRVUZCUVN4RFFVRkxReXhIUVVGQlFTeERRVU51UTBNc1IwRkJRVUVzUTBGQlMwTXNSMEZCUVVFc1EwRkJTME1zUjBGQlFVRXNRMEZCUzBNc1IwRkJRVUVzUTBGQlMwTXNSMEZCUVVFc1EwRkJTME1zUjBGQlFVRXNRMEZCUzBNc1IwRkJRVUVzUTBGQlMwTXNSMEZCUVVFc1EwRkRia05ETEVWQlFVRkJMRU5CUVVsRExFVkJRVUZCTEVOQlFVazVUeXhEUVVGQlFTeERRVUZIYzBnc1EwRkJRVUVzUTBGQlIyNUhMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVkNVJpeERRVUZCUVN4RFFVRkhhRU1zUTBGQlFVRXNRMEZCUnpWRExFTkJRVUZCTEVOQlFVZFFMRU5CUVVGQkxFTkJTRGRDY1U0c1JVRkJRVUVzUTBGQlN5eEpRVUZKUXl4VlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGQlFTeERRVUZMUXl4RlFVRkJRU3hEUVVGTExFbEJRVWxFTEZWQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJTemREUlN4SFFVRkJRU3hEUVVGTmRrSXNSVUZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGRFZIZENMRWRCUVVGQkxFTkJRVTE0UWl4RlFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVU5VZVVJc1IwRkJRVUVzUTBGQlRYcENMRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlExUXdRaXhIUVVGQlFTeERRVUZOTVVJc1JVRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZEVkRKQ0xFZEJRVUZCTEVOQlFVMHpRaXhGUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVTlVORUlzUjBGQlFVRXNRMEZCVFRWQ0xFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUTFRMlFpeEhRVUZCUVN4RFFVRk5OMElzUlVGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkRWRGhDTEVkQlFVRkJMRU5CUVUwNVFpeEZRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJRU3hEUVVWVUswSXNSMEZCUVVFc1EwRkJUVGxDTEVWQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRMVFyUWl4SFFVRkJRU3hEUVVGTkwwSXNSVUZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGRFZHZERMRWRCUVVGQkxFTkJRVTFvUXl4RlFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVU5VYVVNc1IwRkJRVUVzUTBGQlRXcERMRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlExUnJReXhIUVVGQlFTeERRVUZOYkVNc1JVRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZEVkcxRExFZEJRVUZCTEVOQlFVMXVReXhGUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVTlViME1zUjBGQlFVRXNRMEZCVFhCRExFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUTFSeFF5eEhRVUZCUVN4RFFVRk5ja01zUlVGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkZWSE5ETEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVOSWVrOHNRMEZCUVVFc1JVRkJTeXhIUVVGQkxFVkJRVXNzUTBGRFppeEpRVUZMZWtJc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWtzUlVGQlFTeERRVUZKUVN4RFFVRkJRU3hGUVVGQlFTeERRVU5zUW5OSUxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkpkRWdzUTBGQlFVRXNRMEZCU1d0UkxFZEJRVUZCTEVOQlExcHVRaXhGUVVGQlFTeERRVUZITDA4c1EwRkJRVUVzUTBGQlFVRXNRMEZCVFRKRkxFTkJRVUZCTEVOQlFVVXlReXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RlFVRk5MRVZCUVVFc1EwRkJUek5ETEVOQlFVRkJMRU5CUVVVeVF5eERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hGUVVGTkxFVkJRVUVzUTBGQlR6TkRMRU5CUVVGQkxFTkJRVVV5UXl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeEZRVUZOTEVOQlFVRXNRMEZCU3pORExFTkJRVUZCTEVOQlFVVXlReXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVTTVSREpJTEVWQlFVRkJMRU5CUVVkcVVDeERRVUZCUVN4RFFVRkJRU3hEUVVGTk1rVXNRMEZCUVVFc1EwRkJSVEpETEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFVkJRVTBzUlVGQlFTeERRVUZQTTBNc1EwRkJRVUVzUTBGQlJUSkRMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVWQlFVMHNSVUZCUVN4RFFVRlBNME1zUTBGQlFVRXNRMEZCUlRKRExFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGTE0wTXNRMEZCUVVFc1EwRkJSVEpETEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJSV2hGTEVsQlFVdDBTQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVbEJMRU5CUVVGQkxFVkJRVUZCTEVOQkswaHNRaXhIUVRsSVFUWk9MRWRCUVVGQkxFTkJRVTF4UWl4SFFVRkJRU3hEUVVOT2NFSXNSMEZCUVVFc1EwRkJUWEZDTEVkQlFVRkJMRU5CUTA1d1FpeEhRVUZCUVN4RFFVRk5jVUlzUjBGQlFVRXNRMEZEVG5CQ0xFZEJRVUZCTEVOQlFVMXhRaXhIUVVGQlFTeERRVU5PY0VJc1IwRkJRVUVzUTBGQlRYRkNMRWRCUVVGQkxFTkJRMDV3UWl4SFFVRkJRU3hEUVVGTmNVSXNSMEZCUVVFc1EwRkRUbkJDTEVkQlFVRkJMRU5CUVUxeFFpeEhRVUZCUVN4RFFVTkJReXhIUVVGQlFTeERRVVZPY0VJc1IwRkJRVUVzUTBGQlRYRkNMRWRCUVVGQkxFTkJRMDV3UWl4SFFVRkJRU3hEUVVGTmNVSXNSMEZCUVVFc1EwRkRUbkJDTEVkQlFVRkJMRU5CUVUxeFFpeEhRVUZCUVN4RFFVTk9jRUlzUjBGQlFVRXNRMEZCVFhGQ0xFZEJRVUZCTEVOQlEwNXdRaXhIUVVGQlFTeERRVUZOY1VJc1IwRkJRVUVzUTBGRFRuQkNMRWRCUVVGQkxFTkJRVTF4UWl4SFFVRkJRU3hEUVVOT2NFSXNSMEZCUVVFc1EwRkJUWEZDTEVkQlFVRkJMRU5CUTBGRExFZEJRVUZCTEVOQlRVNXdTaXhEUVVGQlFTeERRVUZSTEV0QlFVRXNSVUZHVW5wR0xFTkJRVUZCTEVOQlFVazJUeXhIUVVGQlFTeERRVUZCUVN4RFFVVlpjRXdzUTBGQlFVRXNRMEZCU1hwRUxFTkJRVUZCTEVkQlFVMHNSVUZCUVN4RFFVTXhRbUVzUTBGQlFVRXNRMEZCVVN4TFFVRkJMRVZCU2xKa0xFTkJRVUZCTEVOQlFVbHpUeXhIUVVGQlFTeERRVUZCUVN4RFFVbFpMMDRzUTBGQlFVRXNRMEZCU1ZBc1EwRkJRVUVzUjBGQlRTeEZRVUZCTEVOQlRURkNNRVlzUTBGQlFVRXNSVUZCVXl4TFFVRkJMRVZCUmxSNlJpeERRVUZCUVN4RFFVRkJRU3hEUVVGTk1FOHNSMEZCUVVFc1IwRkJVU3hGUVVGQkxFTkJRVTlTTEVkQlFVRkJMRVZCUVU4c1JVRkJRU3hIUVVGalVTeEhRVUZCUVN4SFFVRlJMRVZCUVVFc1EwRkJUMUlzUjBGQlFVRXNSVUZCVHl4RlFVRkJMRU5CUVVFc1JVRkJZMEVzUjBGQlFVRXNSMEZCVVN4RFFVRkJMRU5CUVZsUkxFZEJRVUZCTEVWQlFVOHNSVUZCUVN4RFFVRkJMRU5CUVVFc1EwRkZlRVpxVEN4RFFVRkJRU3hGUVVGTGVrUXNRMEZCUVVFc1IwRkJUU3hGUVVGQkxFTkJRelZDWVN4RFFVRkJRU3hGUVVGVExFdEJRVUVzUlVGS1ZHUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlRXMVBMRWRCUVVGQkxFZEJRVkVzUlVGQlFTeERRVUZQVVN4SFFVRkJRU3hGUVVGUExFVkJRVUVzUjBGQlkxSXNSMEZCUVVFc1IwRkJVU3hGUVVGQkxFTkJRVTlSTEVkQlFVRkJMRVZCUVU4c1JVRkJRU3hEUVVGQkxFVkJRV05CTEVkQlFVRkJMRWRCUVZFc1EwRkJRU3hEUVVGWlVpeEhRVUZCUVN4RlFVRlBMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJTWGhHTlU0c1EwRkJRVUVzUlVGQlMxQXNRMEZCUVVFc1IwRkJUU3hGUVVGQkxFTkJUVFZDTUVZc1EwRkJRVUVzUlVGQlV5eExRVUZCTEVWQlJsUjZSaXhEUVVGQlFTeERRVUZMTUU4c1IwRkJRVUVzUTBGQlRVTXNSMEZCUVVFc1EwRkJRVUVzUTBGQlUwUXNSMEZCUVVFc1EwRkJUVVVzUjBGQlFVRXNRMEZCUVVFc1EwRkZWRzVNTEVOQlFVRkJMRVZCUVV0NlJDeERRVUZCUVN4SFFVRk5MRVZCUVVFc1EwRkROVUpoTEVOQlFVRkJMRVZCUVZNc1MwRkJRU3hGUVVwVVpDeERRVUZCUVN4RFFVRkxiVThzUjBGQlFVRXNRMEZCVFVNc1IwRkJRVUVzUTBGQlFVRXNRMEZCVTBRc1IwRkJRVUVzUTBGQlRVVXNSMEZCUVVFc1EwRkJRVUVzUTBGSlZEbE9MRU5CUVVGQkxFVkJRVXRRTEVOQlFVRkJMRWRCUVUwc1JVRkJRU3hEUVVjMVFrRXNRMEZCUVVFc1EwRkJTWE5OTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGR2VrNHNRMEZCUVVFc1EwRkJRVUVzUTBGSFRqWkhMRU5CUVVGQkxFVkJRVk1zUzBGQlFTeEZRVVpVZWtZc1EwRkJRVUVzUTBGQlNYRk5MRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZHZWs0c1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVVlBOa1VzUTBGQlFVRXNSVUZCUzNwRUxFTkJRVUZCTEVkQlFVMHNSVUZCUVN4RFFVTTFRbUVzUTBGQlFVRXNSVUZCVXl4TFFVRkJMRU5CUVVwa0xFTkJRVUZCTEVOQlFWbFBMRU5CUVVGQkxFVkJRVXRRTEVOQlFVRkJMRWRCUVUwc1JVRkJRU3hEUVVjMVFrRXNRMEZCUVVFc1EwRkJTVFJPTEVWQlFVRkJMRU5CUVVjdlR5eERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hEUVVkUk5rVXNRMEZCUVVFc1JVRkJRVUVzUTBGR2FrSjZSQ3hEUVVGQlFTeERRVUZKTms0c1JVRkJRVUVzUTBGQlIycFFMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVsQlJXMUNMRVZCUVVFc1EwRkROVUpwUXl4RFFVRkJRU3hGUVVGVExFdEJRVUVzUTBGQlNtUXNRMEZCUVVFc1EwRkJXVThzUTBGQlFVRXNSVUZCUzFBc1EwRkJRVUVzUjBGQlRTeEZRVUZCTEVOQlJ6VkNZeXhEUVVGQlFTeEZRVUZCUVN4RFFVUkJORU1zUTBGQlFVRXNSVUZCUVVFc1EwRklRV2RETEVOQlFVRkJMRVZCUVZNc1MwRkJRU3hEUVVGS2VrWXNRMEZCUVVFc1NVRkhUU3hGUVVGQkxFbEJRMEVzUlVGQlFTeERRVlZZZVVZc1EwRkJRVUVzUTBGQlVTeExRVUZCTEVWQlJsSjZSaXhEUVVGQlFTeERRVXBCTUU0c1JVRkJRVUVzUTBGQlV5eExRVUZCTEVOQlFVcHFTU3hEUVVGQlFTeERRVUZoYUVNc1EwRkJRVUVzUlVGQlN5eEZRVUZCTEVOQlFVRXNRMEZOVUVFc1EwRkJRVUVzUTBGQlNYcEVMRU5CUVVGQkxFZEJRVTBzUlVGQlFTeERRVU14UW1Fc1EwRkJRVUVzUTBGQlVTeExRVUZCTEVWQlNsSmtMRU5CUVVGQkxFTkJTa0V3VGl4RlFVRkJRU3hEUVVGVExFdEJRVUVzUTBGQlNqVk5MRU5CUVVGQkxFTkJRVUZCTEVOQlJreFFMRU5CUVVGQkxFVkJRVXRQTEVOQlFVRkJMRWRCUVUwc1JVRkJRU3hIUVVWWkxFVkJRVUVzUTBGQlFTeERRVkZRVUN4RFFVRkJRU3hEUVVGSlVDeERRVUZCUVN4SFFVRk5MRVZCUVVFc1EwRk5NVUl3Uml4RFFVRkJRU3hGUVVGVExFdEJRVUVzUlVGR1ZIcEdMRU5CUVVGQkxFTkJRVUZCTEVOQlFVMXpUeXhIUVVGQlFTeEhRVUZSTEVWQlFVRXNRMEZCVDFJc1IwRkJRVUVzUlVGQlR5eERRVUZCTEVkQlFXTkJMRWRCUVVGQkxFZEJRVkVzUTBGQlFTeERRVUZaVVN4SFFVRkJRU3hGUVVGUExFVkJRVUVzUTBGQlFTeEZRVUZ0UWxJc1IwRkJRVUVzUjBGQlVTeERRVUZCTEVOQlFWbFJMRWRCUVVGQkxFVkJRVThzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZGYkVjM1N5eERRVUZCUVN4RlFVRkxla1FzUTBGQlFVRXNSMEZCVFN4RlFVRkJMRU5CUXpWQ1lTeERRVUZCUVN4RlFVRlRMRXRCUVVFc1JVRktWR1FzUTBGQlFVRXNRMEZCUVVFc1EwRkJUU3RPTEVkQlFVRkJMRWRCUVZFc1JVRkJRU3hEUVVGUFVTeEhRVUZCUVN4RlFVRlBMRU5CUVVFc1IwRkJZMEVzUjBGQlFVRXNSMEZCVVN4RFFVRkJMRU5CUVZsU0xFZEJRVUZCTEVWQlFVOHNSVUZCUVN4RFFVRkJMRVZCUVcxQ1VTeEhRVUZCUVN4SFFVRlJMRU5CUVVFc1EwRkJXVklzUjBGQlFVRXNSVUZCVHl4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVsc1IzaE9MRU5CUVVGQkxFVkJRVXRRTEVOQlFVRkJMRWRCUVUwc1JVRkJRU3hEUVUxWU1FUXNRMEZCUVVFc1JVRkJRVUVzUTBGR2FrSjZSQ3hEUVVGQlFTeERRVUZMYzA4c1IwRkJRVUVzUTBGQlRVTXNSMEZCUVVFc1EwRkJVVVFzUjBGQlFVRXNRMEZCVFVVc1IwRkJRVUVzUTBGQlVVUXNSMEZCUVVFc1EwRkJUVU1zUjBGQlFVRXNTVUZGV0N4RlFVRkJMRU5CUXpWQ00wNHNRMEZCUVVFc1JVRkJVeXhMUVVGQkxFVkJTbFJrTEVOQlFVRkJMRU5CUVVzclRpeEhRVUZCUVN4RFFVRk5ReXhIUVVGQlFTeERRVUZSUkN4SFFVRkJRU3hEUVVGTlJTeEhRVUZCUVN4RFFVRlJSQ3hIUVVGQlFTeERRVUZOUXl4SFFVRkJRU3hEUVVGQlFTeERRVWwwUWpGT0xFTkJRVUZCTEVWQlFVdFFMRU5CUVVGQkxFZEJRVTBzUlVGQlFTeERRVTAxUW1sT0xFZEJRVUZCTEVOQlFWY3NTMEZCUVN4RlFVaFliazBzUTBGQlFVRXNSVUZCUVVFc1EwRkVRVFJETEVOQlFVRkJMRVZCUVVGQkxFTkJTRUZuUXl4RFFVRkJRU3hGUVVGVExFdEJRVUVzUTBGQlNucEdMRU5CUVVGQkxFbEJSMDBzUlVGQlFTeEpRVU5CTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTFoTkxFTkJRVUZCTEVWQlFVdFBMRU5CUVVGQkxFZEJRVTBzUlVGQlFTeEhRVVZuUWl4RlFVRkJMRU5CUXpOQ01rMHNSMEZCUVVFc1EwRkJWeXhMUVVGQkxFTkJRVW92U0N4RFFVRkJRU3hEUVVGbGFFTXNRMEZCUVVFc1JVRkJTeXhGUVVGQkxFTkJUVE5DWjBNc1EwRkJRVUVzUTBGQlVTeExRVUZCTEVWQlJsSjZSaXhEUVVGQlFTeERRVUZKYjA0c1IwRkJRVUVzUTBGQlFVRXNRMEZGV1ROS0xFTkJRVUZCTEVOQlFVbDZSQ3hEUVVGQlFTeEhRVUZOTEVWQlFVRXNRMEZETVVKaExFTkJRVUZCTEVOQlFWRXNTMEZCUVN4RlFVcFNaQ3hEUVVGQlFTeERRVUZKTmswc1IwRkJRVUVzUTBGQlFVRXNRMEZKV1hSTkxFTkJRVUZCTEVOQlFVbFFMRU5CUVVGQkxFZEJRVTBzUlVGQlFTeERRVXRVTUVRc1EwRkJRVUVzUlVGQlFVRXNRMEZHYWtKNlJDeERRVUZCUVN4RFFVRkpNRTRzUlVGQlFVRXNTVUZGZDBJc1JVRkJRU3hEUVVNMVFqZE5MRU5CUVVGQkxFVkJRVk1zUzBGQlFTeEZRVXBVWkN4RFFVRkJRU3hEUVVGSk1FNHNSVUZCUVVFc1EwRkJRVUVzUTBGSllXNU9MRU5CUVVGQkxFVkJRVXRRTEVOQlFVRkJMRWRCUVUwc1JVRkJRU3hEUVZNMVFtZFBMRWRCUVVGQkxFTkJRVTEwUWl4SFFVRkJRU3hEUVVOT2RVSXNSMEZCUVVFc1EwRkJUWFJDTEVkQlFVRkJMRU5CUTA1MVFpeEhRVUZCUVN4RFFVRk5kRUlzUjBGQlFVRXNRMEZEVG5WQ0xFZEJRVUZCTEVOQlRrRjBRaXhIUVVGQlFTeERRVUZYTEV0QlFVRXNSVUZJV0M5TUxFTkJRVUZCTEVWQlFVRkJMRU5CUkVFMFF5eERRVUZCUVN4RlFVRkJRU3hEUVVoQlowTXNRMEZCUVVFc1JVRkJVeXhMUVVGQkxFTkJRVXA2Uml4RFFVRkJRU3hKUVVkTkxFVkJRVUVzU1VGRFFTeEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTllUU3hEUVVGQlFTeEZRVUZMVHl4RFFVRkJRU3hIUVVGTkxFVkJRVUVzUjBGRlowSXNSVUZCUVN4RFFVOHpRbk5PTEVkQlFVRkJMRU5CUVUxMFFpeEhRVUZCUVN4RFFVTk9kVUlzUjBGQlFVRXNRMEZCVFhSQ0xFZEJRVUZCTEVOQlEwNTFRaXhIUVVGQlFTeERRVUZOZEVJc1IwRkJRVUVzUTBGRFRtVXNSMEZCUVVFc1EwRkJUV1FzUjBGQlFVRXNRMEZGVG5WQ0xFZEJRVUZCTEVOQlFVMTBRaXhIUVVGQlFTeERRVU5PZFVJc1IwRkJRVUVzUTBGQlRYUkNMRWRCUVVGQkxFTkJRMDUxUWl4SFFVRkJRU3hEUVVGTmRFSXNSMEZCUVVFc1EwRkRUblZDTEVkQlFVRkJMRU5CWkVGMFFpeEhRVUZCUVN4RFFVRlhMRXRCUVVFc1EwRkJTak5JTEVOQlFVRkJMRU5CUVdWb1F5eERRVUZCUVN4RlFVRkxMRVZCUVVFc1EwRmxNMEpyVEN4SFFVRkJRU3hEUVVGTmRFSXNSMEZCUVVFc1EwRkRUblZDTEVkQlFVRkJMRU5CUVUxMFFpeEhRVUZCUVN4RFFVTk9kVUlzUjBGQlFVRXNRMEZCVFhSQ0xFZEJRVUZCTEVOQlEwNWxMRWRCUVVGQkxFTkJRVTFrTEVkQlFVRkJMRU5CUlVZMVR5eERRVUZCUVN4RFFVRkZMRVZCUVVFc1JVRkJUeXhGUVVGQkxFTkJRMWdzU1VGQlMzTklMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlNVRXNRMEZCUVVFc1JVRkJRVUVzUTBGRmJFSnVSeXhEUVVGQlFTeERRVUZKTkU0c1JVRkJRVUVzUTBGQlIzcElMRU5CUVVGQkxFTkJRVUZCTEVOQlIxQlVMRU5CUVVGQkxFTkJRVkVzUzBGQlFTeEZRVVpTZWtZc1EwRkJRVUVzUTBGQlNUWk9MRVZCUVVGQkxFTkJRVWN6U0N4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVlRla01zUTBGQlFVRXNRMEZCU1hwRUxFTkJRVUZCTEVkQlFVMHNSVUZCUVN4RFFVTXhRbUVzUTBGQlFVRXNRMEZCVVN4TFFVRkJMRU5CUVVwa0xFTkJRVUZCTEVOQlFWbFBMRU5CUVVGQkxFTkJRVWxRTEVOQlFVRkJMRWRCUVUwc1JVRkJRU3hEUVVVeFFrRXNRMEZCUVVFc1EwRkJTVFJPTEVWQlFVRkJMRU5CUVVGQkxFTkJRVWw2U0N4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUlVGQlJ5eEZRVUZCTEVOQlFVRXNRMEZIWWxRc1EwRkJRVUVzUlVGQlV5eExRVUZCTEVWQlJsUjZSaXhEUVVGQlFTeERRVUZKTms0c1JVRkJRVUVzUTBGQlFVRXNRMEZCU1ROSUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RlFVRkhMRVZCUVVFc1EwRkJRU3hEUVVGQkxFTkJSVWw2UXl4RFFVRkJRU3hGUVVGTGVrUXNRMEZCUVVFc1IwRkJUU3hGUVVGQkxFTkJRelZDWVN4RFFVRkJRU3hGUVVGVExFdEJRVUVzUTBGQlNtUXNRMEZCUVVFc1EwRkJXVThzUTBGQlFVRXNSVUZCUzFBc1EwRkJRVUVzUjBGQlRTeEZRVUZCTEVOQlJ6VkNNRTRzUlVGQlFVRXNRMEZCUzBVc1JVRkJRVUVzUTBGQlFVRXNRMEZCU1hwSUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RlFVRkhMRVZCUVVFc1EwRkJRU3hEUVV0a1ZDeERRVUZCUVN4RlFVRlRMRXRCUVVFc1JVRkdWSHBHTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJrRXdUaXhGUVVGQlFTeERRVUZMUnl4RlFVRkJRU3hEUVVGQlFTeERRVUZKTTBnc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVWQlFVY3NSVUZCUVN4RFFVRkJMRWxCUlVRc1EwRkJRU3hEUVVGTmRVZ3NSVUZCUVVFc1JVRkJUU3hGUVVGQkxFZEJRV0ZETEVWQlFVRkJMRWRCUVU4c1EwRkJRU3hEUVVGTlJDeEZRVUZCUVN4RlFVRk5MRVZCUVVFc1EwRkJRU3hGUVVGaFF5eEZRVUZCUVN4SFFVRlBMRU5CUVVFc1EwRkJUVVFzUlVGQlFVRXNSVUZCVFN4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVWNFJXaExMRU5CUVVGQkxFVkJRVXQ2UkN4RFFVRkJRU3hIUVVGTkxFVkJRVUVzUTBGRE5VSmhMRU5CUVVGQkxFVkJRVk1zUzBGQlFTeEZRVXBVWkN4RFFVRkJRU3hEUVVGQlFTeERRVUZOTUU0c1JVRkJRVUVzUjBGQlR5eERRVUZCTEVOQlFVMURMRVZCUVVGQkxFVkJRVTBzUlVGQlFTeEhRVUZoUkN4RlFVRkJRU3hIUVVGUExFTkJRVUVzUTBGQlRVTXNSVUZCUVVFc1JVRkJUU3hGUVVGQkxFTkJRVUVzUTBGQldVUXNSVUZCUVVFc1IwRkJUeXhEUVVGQkxFTkJRVUVzUTBGSk0wUnVUaXhEUVVGQlFTeEZRVUZMVUN4RFFVRkJRU3hIUVVGTkxFVkJRVUVzUTBGSE5VSXdUaXhGUVVGQlFTeERRVUZMUlN4RlFVRkJRU3hEUVVGQlFTeERRVUZKZWtnc1EwRkJRVUVzUTBGQlJTeEZRVUZCTEVWQlFVa3NSVUZCUVN4RFFVRkJMRU5CUzBWNlF5eERRVUZCUVN4RlFVRkJRU3hEUVVacVFucEVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUmtFd1RpeEZRVUZCUVN4RFFVRkxSeXhGUVVGQlFTeERRVUZCUVN4RFFVRkpNMGdzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRVZCUVVrc1JVRkJRU3hEUVVGQkxFbEJSVVlzUlVGQlFTeERRVUZQZFVnc1JVRkJRVUVzUlVGQlRTeEZRVUZCTEVkQlFXTkJMRVZCUVVGQkxFZEJRVThzUlVGQlFTeERRVUZaUXl4RlFVRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlFTeEZRVUZ0UWtFc1JVRkJRVUVzUjBGQlR5eERRVUZCTEVOQlFVMUVMRVZCUVVGQkxFVkJRVTBzUlVGQlFTeERRVUZCTEVsQlJUTkZMRVZCUVVFc1EwRkROVUkxVFN4RFFVRkJRU3hGUVVGVExFdEJRVUVzUlVGS1ZHUXNRMEZCUVVFc1EwRkJRVUVzUTBGQlRUQk9MRVZCUVVGQkxFZEJRVThzUlVGQlFTeERRVUZQUXl4RlFVRkJRU3hGUVVGTkxFVkJRVUVzUjBGQlkwRXNSVUZCUVVFc1IwRkJUeXhGUVVGQkxFTkJRVmxFTEVWQlFVRkJMRVZCUVUwc1EwRkJRU3hEUVVGQkxFTkJRV3RDUVN4RlFVRkJRU3hIUVVGUExFTkJRVUVzUTBGQlFTeERRVWw2Ulc1T0xFTkJRVUZCTEVWQlFVdFFMRU5CUVVGQkxFZEJRVTBzUlVGQlFTeERRVWsxUWs4c1EwRkJRVUVzUlVGQlFVRXNRMEZFUVU4c1EwRkJRVUVzUlVGQlFVRXNRMEZFUVRSRExFTkJRVUZCTEVWQlFVRkJMRU5CU0VGblF5eERRVUZCUVN4RlFVRlRMRXRCUVVFc1EwRkJTbnBHTEVOQlFVRkJMRWxCUjAwc1JVRkJRU3hKUVVOQkxFVkJRVUVzU1VGRFFTeEZRVUZCTEVOQlJWZ3lUaXhGUVVGQlFTeERRVUZIZWtnc1EwRkJRVUVzUTBGQlFVRXNRMEZCVlN4TFFVRkJMRU5CUVVweVJpeERRVUZCUVN4RFFVRmxVQ3hEUVVGQlFTeEZRVUZMTEVWQlFVRXNRMEZETjBKMVRpeEZRVUZCUVN4RFFVRkhNMGdzUTBGQlFVRXNRMEZCUVVFc1EwRkJWU3hMUVVGQkxFTkJRVXBVTEVOQlFVRkJMRU5CUVdWb1F5eERRVUZCUVN4RlFVRkxMRVZCUVVFc1EwRlRia05uUXl4RFFVRkJRU3hEUVVGUkxFdEJRVUVzUlVGR1VucEdMRU5CUVVGQkxFTkJRVWx6VHl4SFFVRkJRU3hEUVVGQlFTeERRVVZaTjBzc1EwRkJRVUVzUTBGQlNYcEVMRU5CUVVGQkxFZEJRVTBzUlVGQlFTeERRVU14UW1Fc1EwRkJRVUVzUTBGQlVTeExRVUZCTEVWQlNsSmtMRU5CUVVGQkxFTkJRVWtyVGl4SFFVRkJRU3hEUVVGQlFTeERRVWxaZUU0c1EwRkJRVUVzUTBGQlNWQXNRMEZCUVVFc1IwRkJUU3hGUVVGQkxFTkJSVEZDUVN4RFFVRkJRU3hEUVVGSmQwMHNSVUZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGSFZUbEpMRU5CUVVGQkxFVkJRVUZCTEVOQlJtcENla1FzUTBGQlFVRXNRMEZCU1hkTkxFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWxCUlhGQ0xFVkJRVUVzUTBGRE5VSXpUQ3hEUVVGQlFTeEZRVUZUTEV0QlFVRXNRMEZCU21Rc1EwRkJRVUVzUTBGQldVOHNRMEZCUVVFc1JVRkJTMUFzUTBGQlFVRXNSMEZCVFN4RlFVRkJMRU5CU1RWQ1R5eERRVUZCUVN4RlFVRkJRU3hEUVVSQlR5eERRVUZCUVN4RlFVRkJRU3hEUVVSQk5FTXNRMEZCUVVFc1JVRkJRVUVzUTBGSVFXZERMRU5CUVVGQkxFVkJRVk1zUzBGQlFTeERRVUZLZWtZc1EwRkJRVUVzU1VGSFRTeEZRVUZCTEVsQlEwRXNSVUZCUVN4SlFVTkJMRVZCUVVFc1EwRkZXSFZOTEVWQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXQxUWl4SFFVRkJRU3hEUVVGWExFdEJRVUVzUTBGQlNtcE9MRU5CUVVGQkxFTkJRV1ZRTEVOQlFVRkJMRVZCUVVzc1JVRkJRU3hEUVVOdVEydE5MRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVczRRaXhIUVVGQlFTeERRVUZYTEV0QlFVRXNRMEZCU2pkSkxFTkJRVUZCTEVOQlFXVm9ReXhEUVVGQlFTeEZRVUZMTEVWQlFVRXNRMEZMYmtOblF5eERRVUZCUVN4RFFVRlJMRXRCUVVFc1JVRkdVbnBHTEVOQlFVRkJMRU5CUVVsMVR5eEhRVUZCUVN4RFFVRkJRU3hEUVVWWk9Vc3NRMEZCUVVFc1EwRkJTWHBFTEVOQlFVRkJMRWRCUVUwc1JVRkJRU3hEUVVNeFFtRXNRMEZCUVVFc1EwRkJVU3hMUVVGQkxFVkJTbEprTEVOQlFVRkJMRU5CUVVsblR5eEhRVUZCUVN4RFFVRkJRU3hEUVVsWmVrNHNRMEZCUVVFc1EwRkJTVkFzUTBGQlFVRXNSMEZCVFN4RlFVRkJMRU5CUlRGQ1FTeERRVUZCUVN4RFFVRkpkMDBzUlVGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkhWVGxKTEVOQlFVRkJMRVZCUVVGQkxFTkJSbXBDZWtRc1EwRkJRVUVzUTBGQlNYZE5MRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVsQlJYRkNMRVZCUVVFc1EwRkROVUl6VEN4RFFVRkJRU3hGUVVGVExFdEJRVUVzUTBGQlNtUXNRMEZCUVVFc1EwRkJXVThzUTBGQlFVRXNSVUZCUzFBc1EwRkJRVUVzUjBGQlRTeEZRVUZCTEVOQlNUVkNUeXhEUVVGQlFTeEZRVUZCUVN4RFFVUkJUeXhEUVVGQlFTeEZRVUZCUVN4RFFVUkJORU1zUTBGQlFVRXNSVUZCUVVFc1EwRklRV2RETEVOQlFVRkJMRVZCUVZNc1MwRkJRU3hEUVVGS2VrWXNRMEZCUVVFc1NVRkhUU3hGUVVGQkxFbEJRMEVzUlVGQlFTeEpRVU5CTEVWQlFVRXNRMEZGV0hWTkxFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVV0M1FpeEhRVUZCUVN4RFFVRlhMRXRCUVVFc1EwRkJTbXhPTEVOQlFVRkJMRU5CUVdWUUxFTkJRVUZCTEVWQlFVc3NSVUZCUVN4RFFVTnVRMnROTEVWQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXNyUWl4SFFVRkJRU3hEUVVGWExFdEJRVUVzUTBGQlNqbEpMRU5CUVVGQkxFTkJRV1ZvUXl4RFFVRkJRU3hGUVVGTExFVkJRVUVzUTBGTGJrTm5ReXhEUVVGQlFTeERRVUZSTEV0QlFVRXNSVUZHVW5wR0xFTkJRVUZCTEVOQlFVbDNUeXhIUVVGQlFTeERRVUZCUVN4RFFVVlpMMHNzUTBGQlFVRXNRMEZCU1hwRUxFTkJRVUZCTEVkQlFVMHNSVUZCUVN4RFFVTXhRbUVzUTBGQlFVRXNRMEZCVVN4TFFVRkJMRVZCU2xKa0xFTkJRVUZCTEVOQlFVbHBUeXhIUVVGQlFTeERRVUZCUVN4RFFVbFpNVTRzUTBGQlFVRXNRMEZCU1ZBc1EwRkJRVUVzUjBGQlRTeEZRVUZCTEVOQlJURkNRU3hEUVVGQlFTeERRVUZKZDAwc1JVRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZIVlRsSkxFTkJRVUZCTEVWQlFVRkJMRU5CUm1wQ2VrUXNRMEZCUVVFc1EwRkJTWGROTEVWQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFbEJSWEZDTEVWQlFVRXNRMEZETlVJelRDeERRVUZCUVN4RlFVRlRMRXRCUVVFc1EwRkJTbVFzUTBGQlFVRXNRMEZCV1U4c1EwRkJRVUVzUlVGQlMxQXNRMEZCUVVFc1IwRkJUU3hGUVVGQkxFTkJTVFZDVHl4RFFVRkJRU3hGUVVGQlFTeERRVVJCVHl4RFFVRkJRU3hGUVVGQlFTeERRVVJCTkVNc1EwRkJRVUVzUlVGQlFVRXNRMEZJUVdkRExFTkJRVUZCTEVWQlFWTXNTMEZCUVN4RFFVRktla1lzUTBGQlFVRXNTVUZIVFN4RlFVRkJMRWxCUTBFc1JVRkJRU3hKUVVOQkxFVkJRVUVzUTBGRldIVk5MRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVdDVRaXhIUVVGQlFTeERRVUZYTEV0QlFVRXNRMEZCU201T0xFTkJRVUZCTEVOQlFXVlFMRU5CUVVGQkxFVkJRVXNzUlVGQlFTeERRVU51UTJ0TkxFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVV0blF5eEhRVUZCUVN4RFFVRlhMRXRCUVVFc1EwRkJTaTlKTEVOQlFVRkJMRU5CUVdWb1F5eERRVUZCUVN4RlFVRkxMRVZCUVVFc1EwRkxia05uUXl4RFFVRkJRU3hEUVVGUkxFdEJRVUVzUlVGR1VucEdMRU5CUVVGQkxFTkJRVWw1VHl4SFFVRkJRU3hEUVVGQlFTeERRVVZaYUV3c1EwRkJRVUVzUTBGQlNYcEVMRU5CUVVGQkxFZEJRVTBzUlVGQlFTeERRVU14UW1Fc1EwRkJRVUVzUTBGQlVTeExRVUZCTEVWQlNsSmtMRU5CUVVGQkxFTkJRVWxyVHl4SFFVRkJRU3hEUVVGQlFTeERRVWxaTTA0c1EwRkJRVUVzUTBGQlNWQXNRMEZCUVVFc1IwRkJUU3hGUVVGQkxFTkJSVEZDUVN4RFFVRkJRU3hEUVVGSmQwMHNSVUZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGSFZUbEpMRU5CUVVGQkxFVkJRVUZCTEVOQlJtcENla1FzUTBGQlFVRXNRMEZCU1hkTkxFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWxCUlhGQ0xFVkJRVUVzUTBGRE5VSXpUQ3hEUVVGQlFTeEZRVUZUTEV0QlFVRXNRMEZCU21Rc1EwRkJRVUVzUTBGQldVOHNRMEZCUVVFc1JVRkJTMUFzUTBGQlFVRXNSMEZCVFN4RlFVRkJMRU5CU1RWQ1R5eERRVUZCUVN4RlFVRkJRU3hEUVVSQlR5eERRVUZCUVN4RlFVRkJRU3hEUVVSQk5FTXNRMEZCUVVFc1JVRkJRVUVzUTBGSVFXZERMRU5CUVVGQkxFVkJRVk1zUzBGQlFTeERRVUZLZWtZc1EwRkJRVUVzU1VGSFRTeEZRVUZCTEVsQlEwRXNSVUZCUVN4SlFVTkJMRVZCUVVFc1EwRkZXSFZOTEVWQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXN3UWl4SFFVRkJRU3hEUVVGWExFdEJRVUVzUTBGQlNuQk9MRU5CUVVGQkxFTkJRV1ZRTEVOQlFVRkJMRVZCUVVzc1JVRkJRU3hEUVVOdVEydE5MRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVdHBReXhIUVVGQlFTeERRVUZYTEV0QlFVRXNRMEZCU21oS0xFTkJRVUZCTEVOQlFXVm9ReXhEUVVGQlFTeEZRVUZMTEVWQlFVRXNRMEZMYmtOblF5eERRVUZCUVN4RFFVRlJMRXRCUVVFc1JVRkdVbnBHTEVOQlFVRkJMRU5CUVVrd1R5eEhRVUZCUVN4RFFVRkJRU3hEUVVWWmFrd3NRMEZCUVVFc1EwRkJTWHBFTEVOQlFVRkJMRWRCUVUwc1JVRkJRU3hEUVVNeFFtRXNRMEZCUVVFc1EwRkJVU3hMUVVGQkxFVkJTbEprTEVOQlFVRkJMRU5CUVVsdFR5eEhRVUZCUVN4RFFVRkJRU3hEUVVsWk5VNHNRMEZCUVVFc1EwRkJTVkFzUTBGQlFVRXNSMEZCVFN4RlFVRkJMRU5CUlRGQ1FTeERRVUZCUVN4RFFVRkpkMDBzUlVGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkhWVGxKTEVOQlFVRkJMRVZCUVVGQkxFTkJSbXBDZWtRc1EwRkJRVUVzUTBGQlNYZE5MRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVsQlJYRkNMRVZCUVVFc1EwRkROVUl6VEN4RFFVRkJRU3hGUVVGVExFdEJRVUVzUTBGQlNtUXNRMEZCUVVFc1EwRkJXVThzUTBGQlFVRXNSVUZCUzFBc1EwRkJRVUVzUjBGQlRTeEZRVUZCTEVOQlNUVkNUeXhEUVVGQlFTeEZRVUZCUVN4RFFVUkJUeXhEUVVGQlFTeEZRVUZCUVN4RFFVUkJORU1zUTBGQlFVRXNSVUZCUVVFc1EwRklRV2RETEVOQlFVRkJMRVZCUVZNc1MwRkJRU3hEUVVGS2VrWXNRMEZCUVVFc1NVRkhUU3hGUVVGQkxFbEJRMEVzUlVGQlFTeEpRVU5CTEVWQlFVRXNRMEZGV0hWTkxFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVVzeVFpeEhRVUZCUVN4RFFVRlhMRXRCUVVFc1EwRkJTbkpPTEVOQlFVRkJMRU5CUVdWUUxFTkJRVUZCTEVWQlFVc3NSVUZCUVN4RFFVTnVRMnROTEVWQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXRyUXl4SFFVRkJRU3hEUVVGWExFdEJRVUVzUTBGQlNtcEtMRU5CUVVGQkxFTkJRV1ZvUXl4RFFVRkJRU3hGUVVGTExFVkJRVUVzUTBGTGJrTm5ReXhEUVVGQlFTeERRVUZSTEV0QlFVRXNSVUZHVW5wR0xFTkJRVUZCTEVOQlFVa3lUeXhIUVVGQlFTeERRVUZCUVN4RFFVVlpiRXdzUTBGQlFVRXNRMEZCU1hwRUxFTkJRVUZCTEVkQlFVMHNSVUZCUVN4RFFVTXhRbUVzUTBGQlFVRXNRMEZCVVN4TFFVRkJMRVZCU2xKa0xFTkJRVUZCTEVOQlFVbHZUeXhIUVVGQlFTeERRVUZCUVN4RFFVbFpOMDRzUTBGQlFVRXNRMEZCU1ZBc1EwRkJRVUVzUjBGQlRTeEZRVUZCTEVOQlJURkNRU3hEUVVGQlFTeERRVUZKZDAwc1JVRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZIVlRsSkxFTkJRVUZCTEVWQlFVRkJMRU5CUm1wQ2VrUXNRMEZCUVVFc1EwRkJTWGROTEVWQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFbEJSWEZDTEVWQlFVRXNRMEZETlVJelRDeERRVUZCUVN4RlFVRlRMRXRCUVVFc1EwRkJTbVFzUTBGQlFVRXNRMEZCV1U4c1EwRkJRVUVzUlVGQlMxQXNRMEZCUVVFc1IwRkJUU3hGUVVGQkxFTkJTVFZDVHl4RFFVRkJRU3hGUVVGQlFTeERRVVJCVHl4RFFVRkJRU3hGUVVGQlFTeERRVVJCTkVNc1EwRkJRVUVzUlVGQlFVRXNRMEZJUVdkRExFTkJRVUZCTEVWQlFWTXNTMEZCUVN4RFFVRktla1lzUTBGQlFVRXNTVUZIVFN4RlFVRkJMRWxCUTBFc1JVRkJRU3hKUVVOQkxFVkJRVUVzUTBGRldIVk5MRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVczBRaXhIUVVGQlFTeERRVUZYTEV0QlFVRXNRMEZCU25ST0xFTkJRVUZCTEVOQlFXVlFMRU5CUVVGQkxFVkJRVXNzUlVGQlFTeERRVU51UTJ0TkxFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVV0dFF5eEhRVUZCUVN4RFFVRlhMRXRCUVVFc1EwRkJTbXhLTEVOQlFVRkJMRU5CUVdWb1F5eERRVUZCUVN4RlFVRkxMRVZCUVVFc1EwRkxia05uUXl4RFFVRkJRU3hEUVVGUkxFdEJRVUVzUlVGR1VucEdMRU5CUVVGQkxFTkJRVWswVHl4SFFVRkJRU3hEUVVGQlFTeERRVVZaYmt3c1EwRkJRVUVzUTBGQlNYcEVMRU5CUVVGQkxFZEJRVTBzUlVGQlFTeERRVU14UW1Fc1EwRkJRVUVzUTBGQlVTeExRVUZCTEVWQlNsSmtMRU5CUVVGQkxFTkJRVWx4VHl4SFFVRkJRU3hEUVVGQlFTeERRVWxaT1U0c1EwRkJRVUVzUTBGQlNWQXNRMEZCUVVFc1IwRkJUU3hGUVVGQkxFTkJSVEZDUVN4RFFVRkJRU3hEUVVGSmQwMHNSVUZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGSFZUbEpMRU5CUVVGQkxFVkJRVUZCTEVOQlJtcENla1FzUTBGQlFVRXNRMEZCU1hkTkxFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRWxCUlhGQ0xFVkJRVUVzUTBGRE5VSXpUQ3hEUVVGQlFTeEZRVUZUTEV0QlFVRXNRMEZCU21Rc1EwRkJRVUVzUTBGQldVOHNRMEZCUVVFc1JVRkJTMUFzUTBGQlFVRXNSMEZCVFN4RlFVRkJMRU5CU1RWQ1R5eERRVUZCUVN4RlFVRkJRU3hEUVVSQlR5eERRVUZCUVN4RlFVRkJRU3hEUVVSQk5FTXNRMEZCUVVFc1JVRkJRVUVzUTBGSVFXZERMRU5CUVVGQkxFVkJRVk1zUzBGQlFTeERRVUZLZWtZc1EwRkJRVUVzU1VGSFRTeEZRVUZCTEVsQlEwRXNSVUZCUVN4SlFVTkJMRVZCUVVFc1EwRkZXSFZOTEVWQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXMyUWl4SFFVRkJRU3hEUVVGWExFdEJRVUVzUTBGQlNuWk9MRU5CUVVGQkxFTkJRV1ZRTEVOQlFVRkJMRVZCUVVzc1JVRkJRU3hEUVVOdVEydE5MRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVdHZReXhIUVVGQlFTeERRVUZYTEV0QlFVRXNRMEZCU201S0xFTkJRVUZCTEVOQlFXVm9ReXhEUVVGQlFTeEZRVUZMTEVWQlFVRXNRMEZMYmtOblF5eERRVUZCUVN4RFFVRlJMRXRCUVVFc1JVRkdVbnBHTEVOQlFVRkJMRU5CUVVrMlR5eEhRVUZCUVN4RFFVRkJRU3hEUVVWWmNFd3NRMEZCUVVFc1EwRkJTWHBFTEVOQlFVRkJMRWRCUVUwc1JVRkJRU3hEUVVNeFFtRXNRMEZCUVVFc1EwRkJVU3hMUVVGQkxFVkJTbEprTEVOQlFVRkJMRU5CUVVselR5eEhRVUZCUVN4RFFVRkJRU3hEUVVsWkwwNHNRMEZCUVVFc1EwRkJTVkFzUTBGQlFVRXNSMEZCVFN4RlFVRkJMRU5CUlRGQ1FTeERRVUZCUVN4RFFVRkpkMDBzUlVGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkhWVGxKTEVOQlFVRkJMRVZCUVVGQkxFTkJSbXBDZWtRc1EwRkJRVUVzUTBGQlNYZE5MRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVsQlJYRkNMRVZCUVVFc1EwRkROVUl6VEN4RFFVRkJRU3hGUVVGVExFdEJRVUVzUTBGQlNtUXNRMEZCUVVFc1EwRkJXVThzUTBGQlFVRXNSVUZCUzFBc1EwRkJRVUVzUjBGQlRTeEZRVUZCTEVOQlNUVkNUeXhEUVVGQlFTeEZRVUZCUVN4RFFVUkJUeXhEUVVGQlFTeEZRVUZCUVN4RFFVUkJORU1zUTBGQlFVRXNSVUZCUVVFc1EwRklRV2RETEVOQlFVRkJMRVZCUVZNc1MwRkJRU3hEUVVGS2VrWXNRMEZCUVVFc1NVRkhUU3hGUVVGQkxFbEJRMEVzUlVGQlFTeEpRVU5CTEVWQlFVRXNRMEZGV0hWTkxFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVVzNFFpeEhRVUZCUVN4RFFVRlhMRXRCUVVFc1EwRkJTbmhPTEVOQlFVRkJMRU5CUVdWUUxFTkJRVUZCTEVWQlFVc3NSVUZCUVN4RFFVTnVRMnROTEVWQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXR4UXl4SFFVRkJRU3hEUVVGWExFdEJRVUVzUTBGQlNuQktMRU5CUVVGQkxFTkJRV1ZvUXl4RFFVRkJRU3hGUVVGTExFVkJRVUVzUTBGRmJrTnhUQ3hIUVVGQlFTeEZRVUZQTEVkQlFVRXNRMEZEVUhwUExFTkJRVUZCTEVWQlFVc3NSMEZCUVN4RFFVZFFMRTlCUVU5QkxFTkJRVUZCTEVOQlIxUXNVMEZCVXpCUExGZEJRVUZCTEVOQlFWbHlUeXhIUVVGQlFTeERRVUZMTmtNc1EwRkJRVUVzUTBGQlIyeEVMRU5CUVVGQkxFTkJRVUZCTEVOQlF6TkNMRWxCUjBsNlFpeERRVUZCUVN4RFFVaEJNazRzUlVGQlFVRXNRMEZCU3l4SlFVRkpjVUlzVlVGQlFVRXNRMEZCVnl4RFFVRkJMRU5CUVVFc1EwRkRjRUp3UWl4RlFVRkJRU3hEUVVGTExFbEJRVWx2UWl4VlFVRkJRU3hEUVVGWExFTkJRVUVzUTBGQlFTeERRVU53UWpsT0xFTkJRVUZCTEVOQlFVa3NTVUZCU1Znc1ZVRkJRVUVzUTBGQlZ5eEhRVUZCTEVOQlFVRXNRMEZEYUVKelJTeERRVUZCUVN4RFFVRkpjRVFzUTBGQlFVRXNRMEYxUWxnc1NVRnlRa0ZyVFN4RlFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVUZMTEZWQlFVRXNRMEZEVWtFc1JVRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZCU3l4VlFVRkJMRU5CUTFKQkxFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVVzc1ZVRkJRU3hEUVVOU1FTeEZRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJRU3hEUVVGTExGVkJRVUVzUTBGRFVrRXNSVUZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlN5eFZRVUZCTEVOQlExSkJMRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVc3NWVUZCUVN4RFFVTlNRU3hGUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkxMRk5CUVVFc1EwRkRVa0VzUlVGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkJTeXhWUVVGQkxFTkJSVkpETEVWQlFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFTkJRVXNzVlVGQlFTeERRVU5TUVN4RlFVRkJRU3hEUVVGSExFTkJRVUVzUTBGQlFTeERRVUZMTEZWQlFVRXNRMEZEVWtFc1JVRkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVRXNRMEZCU3l4VlFVRkJMRU5CUTFKQkxFVkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkJMRU5CUVVzc1ZVRkJRU3hEUVVOU1FTeEZRVUZCUVN4RFFVRkhMRU5CUVVFc1EwRkJRU3hEUVVGTExGVkJRVUVzUTBGRFVrRXNSVUZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlN5eFRRVUZCTEVOQlExSkJMRVZCUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZCTEVOQlFVc3NWVUZCUVN4RFFVTlNRU3hGUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUVN4RFFVRkxMRk5CUVVFc1EwRkZVa1lzYjBKQlFVRkJMRU5CUVhGQ1F5eEZRVUZCUVN4RFFVRkpReXhGUVVGQlFTeERRVUZKYWtvc1EwRkJRVUVzUTBGQlIyeEVMRU5CUVVGQkxFTkJRVUZCTEVOQlEyaERRU3hEUVVGQlFTeEZRVUZMTEVkQlFVRXNRMEZGUVhwQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKZVVJc1EwRkJRVUVzUTBGQlIzcENMRU5CUVVGQkxFVkJRVUZCTEVOQlFVdHJRaXhEUVVGQlFTeERRVUZGYkVJc1EwRkJRVUVzUTBGQlFVRXNRMEZCU3pKRkxFTkJRVUZCTEVOQlFVVkZMRU5CUVVGQkxFTkJRVVZ3UkN4RFFVRkJRU3hEUVVGRmVrSXNRMEZCUVVFc1EwRkJRVUVzUTBGUmNrTXNTVUZRUVd0Q0xFTkJRVUZCTEVOQlFVVlBMRU5CUVVGQkxFTkJRVUZCTEVOQlFVc3NSMEZCUVN4RFFVZFFVQ3hEUVVGQlFTeERRVUZCUVN4RFFVUkJUeXhEUVVGQlFTeERRVUZKTEVkQlFVRXNRMEZCU1N4SFFVRkJMRVZCUVV0QkxFTkJRVUZCTEVOQlFVVXNSMEZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUlVGRGFrSXNRMEZCUVN4RFFVRkJMRU5CUVVzc1EwRkJRU3hEUVVOVVVpeEpRVUZCUVN4RFFVRkxReXhEUVVGQlFTeERRVUZIVHl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlMyOUVMRU5CUVVGQkxFTkJRVWtzVTBGQlFTeERRVUZqTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUlVGQlN5eERRVUZCTEVOQlFVRXNRMEZEZWtNMlNTeHZRa0ZCUVVFc1EwRkJjVUpETEVWQlFVRkJMRU5CUVVsRExFVkJRVUZCTEVOQlFVa3hUU3hEUVVGQlFTeERRVUZIVHl4RFFVRkJRU3hEUVVGQlFTeERRVVV6UW5wQ0xFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUlVGQlFVRXNRMEZCUzJsQ0xFbEJRVUZCTEVOQlFVdGhMRWRCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZGT1VJc1EwRkJRVUVzUTBGQlJ6Sk9MRVZCUVVGQkxFTkJRVWN6VGl4RFFVRkJRU3hEUVVGQlFTeERRVUZKTkU0c1JVRkJRVUVzUTBGQlJ6Vk9MRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUldwRUxFOUJRVThzUTBGQlFTeERRVWRVTEZOQlFWTnZVU3hIUVVGQlFTeERRVUZKYWs4c1EwRkJRVUVzUTBGQlIyZEdMRU5CUVVGQkxFTkJRVUZCTEVOQlEyUXNTVUZCU1U0c1EwRkJRVUVzUTBGQlNTOUhMRVZCUVVGQkxFVkJRVUZCTEVOQlFVMHJSU3hEUVVGQlFTeERRVUZKTDBVc1JVRkJRVUVzUlVGQlFVRXNRMEZCVFcxRExFTkJRVUZCTEVOQlFVbHVReXhGUVVGQlFTeEZRVUZCUVN4RFFVTjRRalJDTEVOQlFVRkJMRU5CUVVrMVFpeEZRVUZCUVN4RlFVRkJRU3hEUVVGTk1Fc3NRMEZCUVVFc1EwRkJTVEZMTEVWQlFVRkJMRVZCUVVGQkxFTkJRVTB5U3l4RFFVRkJRU3hEUVVGSk0wc3NSVUZCUVVFc1JVRkJRVUVzUTBGRGVFSjFUaXhEUVVGQlFTeERRVUZKZGs0c1JVRkJRVUVzUlVGQlFVRXNRMEZCVFhGQ0xFTkJRVUZCTEVOQlFVbHlRaXhGUVVGQlFTeEZRVUZCUVN4RFFVRk5jMGdzUTBGQlFVRXNRMEZCU1hSSUxFVkJRVUZCTEVWQlFVRkJMRU5CUlRWQ05rZ3NRMEZCUVVFc1EwRkJSV1FzUTBGQlFVRXNRMEZCUnpGRkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVsQkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkRZbmRHTEVOQlFVRkJMRU5CUVVWUUxFTkJRVUZCTEVOQlFVZEVMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVbEJMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZEWWxNc1EwRkJRVUVzUTBGQlJXWXNRMEZCUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCUjA4c1EwRkJRVUVzUTBGQlFVRXNRMEZEVWswc1EwRkJRVUVzUTBGQlJUZERMRU5CUVVGQkxFTkJRVWN4UXl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlEySjFSaXhEUVVGQlFTeERRVUZGVGl4RFFVRkJRU3hEUVVGSFJDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSlFTeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRMkpUTEVOQlFVRkJMRU5CUVVVdlF5eERRVUZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZIZFVNc1EwRkJRVUVzUTBGQlFVRXNRMEZEVWxFc1EwRkJRVUVzUTBGQlJUTkdMRU5CUVVGQkxFTkJRVWRGTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWxuUml4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlEySlRMRU5CUVVGQkxFTkJRVVV6Uml4RFFVRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkhjRUlzUlVGQlFVRXNRMEZCUVVFc1EwRkRVaXRITEVOQlFVRkJMRU5CUVVWc1J5eERRVUZCUVN4RFFVRkhVeXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkpaMFlzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVOaVR5eERRVUZCUVN4RFFVRkZhRWNzUTBGQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJRVUVzUTBGRFVtbEhMRU5CUVVGQkxFTkJRVVUyUXl4RFFVRkJRU3hEUVVGSE0wWXNRMEZCUVVFc1EwRkJSMmRETEVOQlFVRkJMRU5CUVVGQkxFTkJRMUpqTEVOQlFVRkJMRU5CUVVVNFF5eERRVUZCUVN4RFFVRkhMMGtzUTBGQlFVRXNRMEZCUjA4c1EwRkJRVUVzUTBGQlFVRXNRMEZEVW5sR0xFTkJRVUZCTEVOQlFVVXlSaXhEUVVGQlFTeERRVUZITTB3c1EwRkJRVUVzUTBGQlIwOHNRMEZCUVVFc1EwRkJRVUVzUTBGRFVubEdMRU5CUVVGQkxFTkJRVVYyUnl4RFFVRkJRU3hEUVVGSE1FUXNRMEZCUVVFc1EwRkJSMmRETEVOQlFVRkJMRU5CUVVGQkxFTkJSVkpsTEVOQlFVRkJMRU5CUVVWNlJpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSmNVa3NRMEZCUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUVVFc1EwRkRXRGRETEVOQlFVRkJMRU5CUVVWNlJpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSmFFSXNRMEZCUVVFc1EwRkJSMnROTEVOQlFVRkJMRU5CUVVGQkxFTkJRMWg2Uml4RFFVRkJRU3hEUVVGRmVrWXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlNXdE1MRU5CUVVGQkxFTkJRVWMxUXl4RFFVRkJRU3hEUVVGQlFTeERRVU5ZTjBNc1EwRkJRVUVzUTBGQlJYcEdMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVbHhTU3hEUVVGQlFTeERRVUZIY2tvc1EwRkJRVUVzUTBGQlFVRXNRMEZIWWl4VFFVRlRhMUFzUzBGQlFVRXNRMEZCVFd4UExFTkJRVUZCTEVOQlFVZG5SaXhEUVVGQlFTeERRVUZIZEVNc1EwRkJRVUVzUTBGQlFVRXNRMEZEYmtJc1NVRkJTVGRGTEVOQlFVRkJMRU5CUTBvc1NVRkJTMEVzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeEZRVUZCUVN4RFFVTnFRbXRJTEZGQlFVRkJMRU5CUVZNdlJTeERRVUZCUVN4RFFVRkZia01zUTBGQlFVRXNRMEZCUVVFc1EwRkJTVzFJTEVOQlFVRkJMRU5CUVVWdVNDeERRVUZCUVN4RFFVRkJRU3hEUVVGSk5rVXNRMEZCUVVFc1EwRkJRVUVzUTBGSmVrSXNVMEZCVTNsTUxFbEJRVUZCTEVOQlFVdHlVU3hEUVVGQlFTeERRVUZIYTBNc1EwRkJRVUVzUTBGQlFVRXNRMEZEWml4SlFVRkpiMDhzUlVGQlFVRXNRMEZCUzNwUkxFVkJRVUZCTEVWQlFVRkJMRU5CUVUwd1VTeEZRVUZCUVN4RFFVRkxNVkVzUlVGQlFVRXNSVUZCUVVFc1EwRkJUVEpSTEVWQlFVRkJMRU5CUVVzelVTeEZRVUZCUVN4RlFVRkJRU3hEUVVNdlFuVkxMRkZCUVVGQkxFTkJRVk52Unl4RlFVRkJRU3hEUVVGSmRFOHNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU5tZVVZc1EwRkJRVUVzUTBGQlJUSkpMRVZCUVVGQkxFTkJRVWx3VHl4RFFVRkJRU3hEUVVGRkxFTkJRVUVzUTBGQlFTeERRVUZKYzA4c1JVRkJRVUVzUTBGQlFVRXNRMEZEV2pkSkxFTkJRVUZCTEVOQlFVVTBTU3hGUVVGQlFTeERRVUZKY2s4c1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCU1hOUExFVkJRVUZCTEVOQlFVRkJMRU5CUTFwd1NpeFRRVUZCUVN4RFFVRlZjRWdzUTBGQlFVRXNRMEZCUjNWUkxFVkJRVUZCTEVOQlFVRkJMRU5CUTJKMlVTeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hGUVVGUGRVZ3NVVUZCUVVFc1EwRkJVeXRKTEVWQlFVRkJMRU5CUVVGQkxFVkJRVThzUTBGQlFTeERRVWN6UWl4VFFVRlRSeXhWUVVGQlFTeERRVUZYZGs4c1EwRkJRVUVzUTBGQlIyZEdMRU5CUVVGQkxFTkJRVWRzUXl4RFFVRkJRU3hEUVVGQlFTeERRVU40UWl4SlFVRkpTaXhEUVVGQlFTeERRVUZITjBVc1EwRkJRVUVzUTBGTFVDeEpRVXBCTkVjc1VVRkJRVUVzUTBGQlUzcEZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVa3hRaXhIUVVGQlFTeERRVUZCUVN4RFFVTm1iVWNzVVVGQlFVRXNRMEZCVTNwRkxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVsNlFpeEhRVUZCUVN4RFFVRkJRU3hEUVVObWEwY3NVVUZCUVVFc1EwRkJVM3BGTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWw2UWl4SFFVRkJRU3hEUVVGQlFTeERRVU5tYTBjc1VVRkJRVUVzUTBGQlUzcEZMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVa3hRaXhIUVVGQlFTeERRVUZCUVN4RFFVTldWQ3hEUVVGQlFTeERRVUZKTEVkQlFVRXNRMEZCUzBFc1EwRkJRVUVzUlVGQlN5eERRVUZCTEVOQlFVRXNSVUZCUzBFc1EwRkJRVUVzUTBGRmRFSnhVU3hMUVVGQlFTeERRVUZOYkU4c1EwRkJRVUVzUTBGQlIyZEdMRU5CUVVGQkxFTkJSRlIwUXl4RFFVRkJRU3hEUVVGTFNTeERRVUZCUVN4RFFVRkhha1lzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGQkxFZEJRVk1zUTBGQlFTeERRVUZHUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZSTEVOQlFVRXNRMEZCUVN4RFFVVTFRbTlSTEVkQlFVRkJMRU5CUVVscVNpeERRVUZCUVN4RFFVRkhhRVlzUTBGQlFVRXNRMEZCUVVFc1EwRkRVR2xQTEVkQlFVRkJMRU5CUVVscVR5eERRVUZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZCUVN4RFFVTlFhMDhzUzBGQlFVRXNRMEZCVFd4UExFTkJRVUZCTEVOQlFVZG5SaXhEUVVGQlFTeERRVUZIZEVNc1EwRkJRVUVzUTBGQlFVRXNRMEZKYUVJc1UwRkJVemhNTEZWQlFVRkJMRU5CUVZkNFR5eERRVUZCUVN4RFFVRkhPRU1zUTBGQlFVRXNRMEZCUVVFc1EwRkRja0lzU1VGQlNXdERMRU5CUVVGQkxFTkJRVWtzUTBGQlEzSklMRVZCUVVGQkxFVkJRVUZCTEVOQlFVMUJMRVZCUVVGQkxFVkJRVUZCTEVOQlFVMUJMRVZCUVVGQkxFVkJRVUZCTEVOQlFVMUJMRVZCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUXpOQ09FY3NVVUZCUVVFc1EwRkJVMDhzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJTWEpITEVOQlFVRkJMRU5CUVVGQkxFTkJRMlk0Uml4UlFVRkJRU3hEUVVGVFR5eERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGSmNFY3NRMEZCUVVFc1EwRkJRVUVzUTBGRFpqWkdMRkZCUVVGQkxFTkJRVk5QTEVOQlFVRkJMRU5CUVVVc1EwRkJRU3hEUVVGQkxFTkJRVWw2Unl4SFFVRkJRU3hEUVVGQlFTeERRVU5tYTBnc1EwRkJRVUVzUTBGQlJWUXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlNYSkhMRU5CUVVGQkxFTkJRVWRETEVOQlFVRkJMRU5CUVVGQkxFTkJRMWd5VUN4VlFVRkJRU3hEUVVGWGRrOHNRMEZCUVVFc1EwRkJSMmRHTEVOQlFVRkJMRU5CUVVkc1F5eERRVUZCUVN4RFFVRkJRU3hEUVVkdVFpeFRRVUZUTWt3c2JVSkJRVUZCTEVOQlFXOUNReXhGUVVGQlFTeERRVUZKUXl4RlFVRkJRU3hEUVVGSlF5eE5RVUZCUVN4RFFVRkJRU3hEUVVOdVF5eEpRVVZKTDFFc1EwRkJRVUVzUTBGR1FUQkNMRU5CUVVGQkxFTkJRVWtzU1VGQlNXNUNMRlZCUVVGQkxFTkJRVmNzUlVGQlFTeERRVUZCTEVOQlEyNUNORUlzUTBGQlFVRXNRMEZCU1N4RFFVRkRja01zUlVGQlFVRXNSVUZCUVVFc1EwRkJUVUVzUlVGQlFVRXNSVUZCUVVFc1EwRkJUVUVzUlVGQlFVRXNSVUZCUVVFc1EwRkJUVUVzUlVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGWk0wSXNTVUZVUzJsU0xFMUJRVUZCTEVWQlFWRXpVU3hYUVVGQlFTeERRVUZaTUZFc1JVRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVRXNRMEZETjBKWUxGZEJRVUZCTEVOQlFWbDZUeXhEUVVGQlFTeERRVUZIYjFBc1JVRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVRXNRMEZEYmtKd1VDeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hGUVVGTkxFZEJRVUVzUTBGRFVrRXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUlVGQlR5eEhRVUZCTEVOQlExUkJMRU5CUVVGQkxFTkJRVVVzUlVGQlFTeERRVUZCTEVWQlFVOHNSVUZCUVN4RFFVVlVhVkFzVlVGQlFVRXNRMEZCVjNoUExFTkJRVUZCTEVOQlFVZFVMRU5CUVVGQkxFTkJRVUZCTEVOQlEyUTBUeXhKUVVGQlFTeERRVUZMVHl4RlFVRkJRU3hEUVVGSk1VOHNRMEZCUVVFc1EwRkJRVUVzUTBGRlNtNURMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlNVRXNRMEZCUVVFc1JVRkJRVUVzUTBGQlN6aFJMRVZCUVVGQkxFTkJRVWM1VVN4RFFVRkJRU3hEUVVGRkxFVkJRVUVzUTBGQlFTeERRVUZOTmxFc1JVRkJRVUVzUTBGQlJ6ZFJMRU5CUVVGQkxFTkJRVUZCTEVOQlEzWkRMRTlCUVU4c1EwRkJRU3hEUVVkVUxFbEJRVWxuVWl4RFFVRkJRU3hEUVVGSkxFbEJRVWs1VVN4WlFVRkJRU3hEUVVGaExFTkJRVU1zUjBGQlFTeERRVUZOTEVkQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVUwc1JVRkJRU3hEUVVGTkxFVkJRVUVzUTBGQlRTeEZRVUZCTEVOQlFVMHNSVUZCUVN4RFFVRk5MRVZCUVVFc1EwRkJUU3hIUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZOTEVkQlFVRXNRMEZCVFN4SFFVRkJMRU5CUVUwc1IwRkJRU3hEUVVGTkxFZEJRVUVzUTBGQlRTeEhRVUZCTEVOQlFVMHNSVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJSeXhEUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZITEVOQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGSExFTkJRVUVzUTBGQlJ5eERRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkhMRU5CUVVFc1EwRkJSeXhEUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZITEVOQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVjc1EwRkJRU3hEUVVGSExFVkJRVUVzUTBGQlFTeERRVUZCTEVOQlJYWkxMRk5CUVZNclVTeEpRVUZCUVN4RFFVRkxhRklzUTBGQlFVRXNRMEZCUjJsQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUTJZc1NVRkJTV2RSTEV0QlFVRkJMRU5CUVU5c1VpeERRVUZCUVN4RFFVRkhjMGdzUTBGQlFVRXNRMEZCUjNSR0xFTkJRVUZCTEVOQlEycENMRWxCUVV0b1F5eERRVUZCUVN4RFFVRkpMRVZCUVVFc1EwRkJTVUVzUTBGQlFVRXNSVUZCU3l4RlFVRkJMRU5CUVVFc1JVRkJUVUVzUTBGQlFVRXNRMEZCUnl4RFFVVjZRaXhKUVVSQmExSXNTMEZCUVVFc1EwRkJVU3hEUVVGQkxFTkJRMGcxU2l4RFFVRkJRU3hEUVVGSmRFZ3NRMEZCUVVFc1EwRkJTU3hGUVVGQkxFTkJRVWxuUXl4RFFVRkJRU3hEUVVGSmFFTXNRMEZCUVVFc1EwRkJTU3hGUVVGQkxFTkJRVWx6U0N4RFFVRkJRU3hEUVVGSmRFWXNRMEZCUVVFc1EwRkJRVUVzUlVGQlMzTkdMRU5CUVVGQkxFTkJRM0JEY0Vjc1EwRkJRVUVzUTBGQlJXOUhMRU5CUVVGQkxFTkJRVUZCTEVWQlFVMDBTaXhMUVVGQlFTeERRVUZSTEVWQlFVRXNRMEZCUzJoUkxFTkJRVUZCTEVOQlFVVnNRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkxaMUlzUTBGQlFVRXNRMEZCUlRGS0xFTkJRVUZCTEVWQlFVdDBTQ3hEUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTNaRGExSXNTMEZCUVVFc1EwRkJVV3hMTEVsQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVRkJMRU5CUVU4dlJpeERRVUZCUVN4RFFVRkZiMGNzUTBGQlFVRXNRMEZCUVVFc1EwRkJTeXhIUVVGQkxFVkJRVThzUjBGQlFTeERRVUZCTEVOQlEyeERjRWNzUTBGQlFVRXNRMEZCUlc5SExFTkJRVUZCTEVOQlFVRkJMRVZCUVdNc1IwRkJRU3hEUVVGU05Fb3NTMEZCUVVFc1EwRkZWbWhSTEVOQlFVRkJMRU5CUVVWdlJ5eERRVUZCUVN4RFFVRkJRU3hGUVVGTk5Fb3NTMEZCUVVFc1EwRkRVbWhSTEVOQlFVRkJMRU5CUVVWc1FpeERRVUZCUVN4RFFVRkJRU3hEUVVGTExFTkJRVUVzUTBGSFZDeEpRVVJCYTFJc1MwRkJRVUVzUTBGQlVTeERRVUZCTEVOQlEwZzFTaXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVbEJMRU5CUVVGQkxFVkJRVUZCTEVOQlEyeENjRWNzUTBGQlFVRXNRMEZCUlc5SExFTkJRVUZCTEVOQlFVRkJMRVZCUVUwMFNpeExRVUZCUVN4RFFVRkJRU3hEUVVGVGFGRXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUlVGQlR5eERRVUZCTEVWQlFVczRVQ3hEUVVGQlFTeERRVUZGTVVvc1EwRkJRVUVzUTBGQlFVRXNRMEZEYWtNMFNpeExRVUZCUVN4RFFVRlJhRkVzUTBGQlFVRXNRMEZCUlc5SExFTkJRVUZCTEVOQlFVRkJMRVZCUVUwc1EwRkJRU3hEUVVOb1FuQkhMRU5CUVVGQkxFTkJRVVZ2Unl4RFFVRkJRU3hEUVVGQlFTeEZRVUZOTEVkQlFVRXNRMEZGVml4SlFVRkxRU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVbEJMRU5CUVVGQkxFVkJRVUZCTEVOQlFVdHdSeXhEUVVGQlFTeERRVUZGYjBjc1EwRkJRVUVzUTBGQlFVRXNSVUZCVFRSS0xFdEJRVUZCTEVOQlFWRkdMRU5CUVVGQkxFTkJRVVV4U2l4RFFVRkJRU3hEUVVGQlFTeERRVU16UXl4SlFVRkxkRWdzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVa3NSVUZCUVN4RFFVRkpRU3hEUVVGQlFTeEZRVUZCUVN4RFFVTnNRbXRDTEVOQlFVRkJMRU5CUVVWc1FpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hGUVVGTmEwSXNRMEZCUVVFc1EwRkJSV3hDTEVOQlFVRkJMRU5CUVVGQkxFVkJRVTBzUTBGQlFTeERRVU5zUWtNc1EwRkJRVUVzUTBGQlJVUXNRMEZCUVVFc1EwRkJRVUVzUTBGQldTeEhRVUZCTEVOQlFWQnJRaXhEUVVGQlFTeERRVUZGYkVJc1EwRkJRVUVzUTBGQlFVRXNRMEZKWWl4VFFVRlRiVklzVFVGQlFVRXNRMEZCVDJ4U0xFTkJRVUZCTEVOQlFVRkJMRU5CUTJRc1NVRkJPRUpFTEVOQlFVRkJMRU5CUVRGQ2EwSXNRMEZCUVVFc1EwRkJTU3hKUVVGSmFFSXNXVUZCUVVFc1EwRkJZU3hGUVVGQkxFTkJRVUVzUTBGRGVrSXNTVUZCUzBZc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWtzUlVGQlFTeERRVUZKUVN4RFFVRkJRU3hGUVVGQlFTeERRVUZMYTBJc1EwRkJRVUVzUTBGQlJXeENMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdERMRU5CUVVGQkxFTkJRVVZFTEVOQlFVRkJMRU5CUVVGQkxFTkJRMnhETEVsQlFVdEJMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSkxFVkJRVUVzUTBGQlNVRXNRMEZCUVVFc1JVRkJRVUVzUTBGQlMwTXNRMEZCUVVFc1EwRkJSVVFzUTBGQlFVRXNRMEZCUVVFc1EwRkJTeXhEUVVGQkxFTkJRMmhEYVZJc1NVRkJRVUVzUTBGQlMyaFNMRU5CUVVGQkxFTkJRVWRwUWl4RFFVRkJRU3hEUVVGQlFTeERRVWxXTEZOQlFWTnJVU3hYUVVGQlFTeERRVUZaUXl4RlFVRkJRU3hEUVVGSk1VMHNRMEZCUVVFc1EwRkJSMnhFTEVOQlFVRkJMRU5CUVVkeFVDeEZRVUZCUVN4RFFVRkJRU3hEUVVNM1FpeEpRVU5KT1ZFc1EwRkJRVUVzUTBGQlIzTklMRU5CUVVGQkxFTkJSRWcxUml4RFFVRkJRU3hEUVVGSkxFbEJRVWx1UWl4VlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGQlFTeERRVUZMV1N4RFFVRkJRU3hEUVVGSkxFbEJRVWxhTEZWQlFVRkJMRU5CUVZjc1JVRkJRU3hEUVVGQkxFTkJRVXRPTEVOQlFVRkJMRU5CUVVrc1NVRkJTVTBzVlVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVFc1EwRkROMFJYTEVOQlFVRkJMRU5CUVVrc1NVRkJTV2hDTEZsQlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVGQkxFTkJRek5DYVVNc1EwRkJRVUVzUTBGQlNTeERRVUZEY2tNc1JVRkJRVUVzUlVGQlFVRXNRMEZCVFVFc1JVRkJRVUVzUlVGQlFVRXNRMEZCVFVFc1JVRkJRVUVzUlVGQlFVRXNRMEZCVFVFc1JVRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkZNMEp4VVN4WFFVRkJRU3hEUVVGWmVrOHNRMEZCUVVFc1EwRkJSMjlRTEVWQlFVRkJMRU5CUVVrc1JVRkJRU3hEUVVGQkxFTkJRMjVDY0ZBc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNSVUZCVFN4SFFVRkJMRU5CUTFKQkxFTkJRVUZCTEVOQlFVVXNSVUZCUVN4RFFVRkJMRVZCUVU4c1IwRkJRU3hEUVVOVVFTeERRVUZCUVN4RFFVRkZMRVZCUVVFc1EwRkJRU3hGUVVGUExFVkJRVUVzUTBGRlZDeEpRVUZKTkZBc1MwRkJRVUVzUTBGQlVUZFFMRU5CUVVGQkxFTkJRVWtzUlVGQlFTeERRVU5vUWl4SlFVRkxla0lzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbDVRaXhEUVVGQlFTeERRVUZIZWtJc1EwRkJRVUVzUlVGQlFVRXNRMEZCUzNGU0xFVkJRVUZCTEVOQlFVY3NSVUZCUVN4RFFVRkxjbElzUTBGQlFVRXNRMEZCUVVFc1EwRkJTekpGTEVOQlFVRkJMRU5CUVVVelJTeERRVUZCUVN4RFFVRkJRU3hEUVVOMlF5eEpRVUZMUVN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTU3hGUVVGQkxFTkJRVWxCTEVOQlFVRkJMRVZCUVVGQkxFTkJRVXR4VWl4RlFVRkJRU3hEUVVGSExFVkJRVUVzUTBGQlMzSlNMRU5CUVVGQkxFTkJRVUZCTEVOQlFVc3dRaXhEUVVGQlFTeERRVUZGTEVWQlFVRXNRMEZCU3pGQ0xFTkJRVUZCTEVOQlFVRkJMRU5CVHpkRExFbEJURUZ0VVN4WFFVRkJRU3hEUVVGWmJGRXNRMEZCUVVFc1EwRkJSMjlTTEVWQlFVRkJMRU5CUVVjeFJ5eFJRVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkJRU3hEUVVGTGJFb3NRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUTBGRGJFTXdVQ3hOUVVGQlFTeERRVUZQYkZJc1EwRkJRVUVzUTBGQlFVRXNRMEZEVURCUkxGVkJRVUZCTEVOQlFWZDRUeXhEUVVGQlFTeERRVUZIYkVNc1EwRkJRVUVzUTBGQlFVRXNRMEZEWkhGUkxFbEJRVUZCTEVOQlFVdGxMRVZCUVVGQkxFTkJRVWxzVUN4RFFVRkJRU3hEUVVGQlFTeERRVVZLYmtNc1EwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVbEJMRU5CUVVGQkxFTkJRVWtzUlVGQlFTeERRVUZKUVN4RFFVRkJRU3hGUVVGQlFTeERRVUZMY1ZJc1JVRkJRVUVzUTBGQlIzSlNMRU5CUVVGQkxFTkJRVUZCTEVOQlFVczRVU3hGUVVGQlFTeERRVUZIT1ZFc1EwRkJRVUVzUTBGQlFVRXNRMEZKY2tNc1NVRklRVzFSTEZkQlFVRkJMRU5CUVZsb1VDeERRVUZCUVN4RFFVRkhhMUVzUlVGQlFVRXNRMEZCU1RWUUxFTkJRVUZCTEVOQlFVa3NSVUZCUVN4RFFVRkJMRU5CUTNaQ01GQXNUVUZCUVVFc1EwRkJUMmhSTEVOQlFVRkJMRU5CUVVGQkxFTkJSVVp1UWl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTU3hGUVVGQkxFTkJRVWxCTEVOQlFVRkJMRVZCUVVGQkxFTkJRVXRyUWl4RFFVRkJRU3hEUVVGRmJFSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlN5eERRVUZCTEVOQlEyaERMRWxCUVV0QkxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKTEVWQlFVRXNRMEZCU1VFc1EwRkJRVUVzUlVGQlFVRXNRMEZCUzJ0Q0xFTkJRVUZCTEVOQlFVVnNRaXhEUVVGQlFTeERRVUZCUVN4RFFVRkxReXhEUVVGQlFTeERRVUZGUkN4RFFVRkJRU3hEUVVGQlFTeERRVU5zUXl4SlFVRkxRU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVbEJMRU5CUVVGQkxFVkJRVUZCTEVOQlEyeENMRWxCUVV0elNDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1N4RlFVRkJMRU5CUVVsQkxFTkJRVUZCTEVWQlFVRkJMRU5CUTJ4Q2NFY3NRMEZCUVVFc1EwRkJSV3hDTEVOQlFVRkJMRU5CUVVWelNDeERRVUZCUVN4RFFVRkJRU3hGUVVGTmJrY3NRMEZCUVVFc1EwRkJSVzVDTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXN3UWl4RFFVRkJRU3hEUVVGRk5FWXNRMEZCUVVFc1EwRkJRVUVzUTBGTGRrSXNUMEZFUVRKS0xFbEJRVUZCTEVOQlFVdEpMRVZCUVVGQkxFTkJRVWN4Unl4UlFVRkJRU3hEUVVGVExFVkJRVUVzUTBGQlFTeERRVUZMZWtvc1EwRkJRVUVzUTBGQlFVRXNRMEZEWm05UkxFdEJRVUZCTEVOQmVVTlVMRk5CUVZORExHZENRVUZCUVN4RFFVRnBRalZOTEVOQlFVRkJMRU5CUVVjd1RTeEZRVUZCUVN4RFFVRkpOVkFzUTBGQlFVRXNRMEZCUjI5UUxFVkJRVUZCTEVOQlFVRkJMRU5CUTJ4RExFbEJRVWszVVN4RFFVRkJRU3hEUVVOQmIwZ3NRMEZCUVVFc1EwRkJTU3hKUVVGSk4wY3NWVUZCUVVFc1EwRkJWeXhGUVVGQkxFTkJRVUVzUTBGQlMxa3NRMEZCUVVFc1EwRkJTU3hKUVVGSldpeFZRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJRU3hEUVVNelF6UkNMRU5CUVVGQkxFTkJRVWtzUTBGQlEzSkRMRVZCUVVGQkxFVkJRVUZCTEVOQlFVMUJMRVZCUVVGQkxFVkJRVUZCTEVOQlFVMUJMRVZCUVVGQkxFVkJRVUZCTEVOQlFVMUJMRVZCUVVGQkxFVkJRVUZCTEVOQlFVRkJMRU5CUTNaQ2NVZ3NRMEZCUVVFc1EwRkJTU3hEUVVGRGNrZ3NSVUZCUVVFc1JVRkJRVUVzUTBGQlRVRXNSVUZCUVVFc1JVRkJRVUVzUTBGQlRVRXNSVUZCUVVFc1JVRkJRVUVzUTBGQlRVRXNSVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZGTTBJc1IwRkJTVEpDTEVOQlFVRkJMRU5CUVVrc1JVRkJRU3hEUVVGSkxFMUJRVUVzUTBGQlVTeERRVUZCTEVOQlJYQkNMRWRCT1VOR0xGTkJRVzFDZUVJc1EwRkJRVUVzUTBGQlIydERMRU5CUVVGQkxFTkJRVUZCTEVOQlEzQkNMRWxCUVVscFJpeERRVUZCUVN4RFFVRkpkRWdzUlVGQlFVRXNSVUZCUVVFc1EwRkJUVEJTTEVkQlFVRkJMRU5CUVUweFVpeEZRVUZCUVN4RlFVRkJRU3hEUVVGTk1sSXNSMEZCUVVFc1EwRkJUVE5TTEVWQlFVRkJMRVZCUVVGQkxFTkJRelZDTkZJc1IwRkJRVUVzUTBGQlRUVlNMRVZCUVVGQkxFVkJRVUZCTEVOQlFVMDJVaXhKUVVGQlFTeERRVUZQTjFJc1JVRkJRVUVzUlVGQlFVRXNRMEZCVFRoU0xFbEJRVUZCTEVOQlFVODVVaXhGUVVGQlFTeEZRVUZCUVN4RFFVTm9ReXRTTEVsQlFVRkJMRU5CUVU4dlVpeEZRVUZCUVN4RlFVRkJRU3hEUVRKQ1dDeFBRWHBDUVRoSExGRkJRVUZCTEVOQlFWTXpSeXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkpVeXhIUVVGQlFTeERRVUZCUVN4RFFVTm1LMGNzVjBGQlFVRXNRMEZCV1hoSUxFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVsclF5eERRVUZCUVN4RFFVRkJRU3hEUVVOc1FtbEpMRU5CUVVGQkxFTkJRVVZ4U0N4SFFVRkJRU3hEUVVGTGVGSXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVU5VTWtnc1EwRkJRVUVzUTBGQlJUaEtMRWRCUVVGQkxFTkJRVXRFTEVkQlFVRkJMRU5CUVVzM1VTeERRVUZCUVN4RFFVRkJRU3hEUVVOYUswY3NRMEZCUVVFc1EwRkJSVGhLTEVkQlFVRkJMRU5CUVV0QkxFZEJRVUZCTEVOQlFVdDRVaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTJSNVNDeERRVUZCUVN4RFFVRkZaMHNzUjBGQlFVRXNRMEZCUzNwU0xFTkJRVUZCTEVOQlFVVXNRMEZCUVN4RFFVRkJMRU5CUVVsNVVpeEhRVUZCUVN4RFFVRkJRU3hEUVVWaWRFZ3NRMEZCUVVFc1EwRkJSWFZJTEVsQlFVRkJMRU5CUVUxRUxFZEJRVUZCTEVOQlFVRkJMRU5CUTFKMFNDeERRVUZCUVN4RFFVRkZkMGdzU1VGQlFVRXNRMEZCVFVRc1NVRkJRVUVzUTBGQlFVRXNRMEZEVWk5S0xFTkJRVUZCTEVOQlFVVnBTeXhKUVVGQlFTeERRVUZOUkN4SlFVRkJRU3hEUVVGTlJDeEpRVUZCUVN4RFFVRkJRU3hEUVVOa0wwb3NRMEZCUVVFc1EwRkJSVklzUTBGQlFVRXNRMEZCUjNsTExFbEJRVUZCTEVOQlFVMUtMRWRCUVVGQkxFTkJRVUZCTEVOQlExZzNTaXhEUVVGQlFTeERRVUZGVWl4RFFVRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkhjMHNzUjBGQlFVRXNRMEZCUVVFc1EwRkZVbkJJTEU5QlFVRkJMRU5CUVZGc1JDeERRVUZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZCUVN4RFFVTllVU3hEUVVGQlFTeERRVUZGVWl4RFFVRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkhjVXNzUjBGQlFVRXNRMEZCUVVFc1EwRkRVamRLTEVOQlFVRkJMRU5CUVVWU0xFTkJRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWR6U3l4SFFVRkJRU3hEUVVGQlFTeERRVU5TT1Vvc1EwRkJRVUVzUTBGQlJWSXNRMEZCUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCUjNOTExFZEJRVUZCTEVOQlFVRkJMRU5CUTFJNVNpeERRVUZCUVN4RFFVRkZNMGdzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJTVzFJTEVOQlFVRkJMRU5CUVVkelN5eEhRVUZCUVN4RFFVRkJRU3hEUVVWWWRFZ3NRMEZCUVVFc1EwRkJSVzlJTEVkQlFVRkJMRU5CUVV0MlVpeERRVUZCUVN4RFFVRkZMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRMVF5U0N4RFFVRkJRU3hEUVVGRk5Fb3NSMEZCUVVFc1EwRkJTMEVzUjBGQlFVRXNRMEZCUzBVc1IwRkJRVUVzUTBGQlFVRXNRMEZEVW01TExGRkJRVUZCTEVOQlFWTnBTeXhIUVVGQlFTeERRVUZMUXl4SFFVRkJRU3hEUVVGQlFTeEZRVUZOTjBvc1EwRkJRVUVzUTBGQlJUTklMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVbEJMRU5CUVVGQkxFTkJRVVVzUTBGQlFTeERRVUZCTEVOQlFVbGxMRU5CUVVGQkxFTkJRVUZCTEVOQlJYUkRiMG9zUTBGQlFVRXNRMEZCUlc5SUxFZEJRVUZCTEVOQlFVdDJVaXhEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTFReVNDeERRVUZCUVN4RFFVRkZORW9zUjBGQlFVRXNRMEZCUzBFc1IwRkJRVUVzUTBGQlMwVXNSMEZCUVVFc1EwRkJRVUVzUTBGRFVtNUxMRkZCUVVGQkxFTkJRVk5wU3l4SFFVRkJRU3hEUVVGTFF5eEhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZqTEVOQlFVRXNSVUZGTlVKcVN5eFJRVUZCUVN4RFFVRlRka2dzUTBGQlFVRXNRMEZCUlN4RFFVRkJMRU5CUVVFc1EwRkJRU3hIUVVGVGEwTXNRMEZCUVVFc1EwRkJSU3hGUVVGQkxFTkJRVUVzUlVGQlN5eERRVUZCTEVWQlFVbDNSaXhEUVVGQlFTeERRVUZGTVVnc1EwRkJRVUVzUTBGQlJTeERRVUZCTEVOQlFVRXNRMEZCU1ZFc1IwRkJRVUVzUTBGQlMxSXNRMEZCUVVFc1EwRkJSU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVVZzUkRKSUxFTkJRVUZCTEVOQlFVVXpTQ3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZGTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTFRc1EwRkJRU3hEUVVGQkxFTkJWMGcyVWl4RFFVRlZNMHNzUTBGQlFVRXNRMEZCUnpCS0xFVkJRVUZCTEVOQlFVRkJMRU5CUVVzc1RVRkJRU3hEUVVGUkxFTkJRVUVzUTBGRk9VSXNTVUZCU3pkUkxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKZVVJc1EwRkJRVUVzUTBGQlIzcENMRU5CUVVGQkxFVkJRVUZCTEVOQlFVc3lSU3hEUVVGQlFTeERRVUZGTTBVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzNGU0xFVkJRVUZCTEVOQlFVZHlVaXhEUVVGQlFTeERRVUZCUVN4RFFVTnNReXhKUVVGTFFTeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1N4RlFVRkJMRU5CUVVsQkxFTkJRVUZCTEVWQlFVRkJMRU5CUVVzeVJTeERRVUZCUVN4RFFVRkZNMFVzUTBGQlFVRXNRMEZCUlN4RlFVRkJMRU5CUVVFc1EwRkJUVFpSTEVWQlFVRkJMRU5CUVVjM1VTeERRVUZCUVN4RFFVRkJRU3hEUVZWMFF5eEhRVlJCYlZFc1YwRkJRVUVzUTBGQldXaFFMRU5CUVVGQkxFTkJRVWQzUkN4RFFVRkJRU3hEUVVGSGJFUXNRMEZCUVVFc1EwRkJRVUVzUTBGRGJFSXdVQ3hOUVVGQlFTeERRVUZQYUZFc1EwRkJRVUVzUTBGQlFVRXNRMEZEVUhWUUxGVkJRVUZCTEVOQlFWZDJUeXhEUVVGQlFTeERRVUZIWjBZc1EwRkJRVUVzUTBGQlIyaEhMRU5CUVVGQkxFTkJRVUZCTEVOQlJXcENkMUFzVlVGQlFVRXNRMEZCVjNoS0xFTkJRVUZCTEVOQlFVZHJTeXhGUVVGQlFTeERRVUZITVVjc1VVRkJRVUVzUTBGQlV5eEZRVUZCTEVOQlFVRXNRMEZCUVN4RFFVTXhRbmxHTEVkQlFVRkJMRU5CUVVscVR5eERRVUZCUVN4RFFVRkhaMFlzUTBGQlFVRXNRMEZCUVVFc1EwRkRVRzFLTEVsQlFVRkJMRU5CUVV0c1NpeERRVUZCUVN4RFFVRkhha1lzUTBGQlFVRXNRMEZCUVVFc1EwRkZVbFlzUTBGQlFVRXNSVUZCU3l4RlFVRkJMRU5CUTBSSExHZENRVUZCUVN4RFFVRnBRbmxRTEVWQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSGFrc3NRMEZCUVVFc1EwRkJSeXhEUVVGQkxFTkJRVUVzUTBGQlNTeERRVU5xUXl4SlFVRkxjRWdzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbDVRaXhEUVVGQlFTeERRVUZIZWtJc1EwRkJRVUVzUlVGQlFVRXNRMEZCU3pKRkxFTkJRVUZCTEVOQlFVVXpSU3hEUVVGQlFTeERRVUZCUVN4RFFVRkxMRU5CUVVFc1EwRkRMMElzVFVGQlFTeERRVUZSTEVOQlFVRXNRMEZIVml4SlFVRkxRU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNYbENMRU5CUVVGQkxFTkJRVWQ2UWl4RFFVRkJRU3hGUVVGQlFTeERRVUZMTWtVc1EwRkJRVUVzUTBGQlJUTkZMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdHhVaXhGUVVGQlFTeERRVUZIY2xJc1EwRkJRVUVzUTBGQlNTeEZRVUZCTEVOQlFVRXNRMEZEZEVNc1QwRkJUM2xDTEVOQlFVRkJMRU5CUjFRc1NVRkJTWE5STEhsQ1FVRkJRU3hEUVVFMFFpeEZRVUZCTEVOQlF6VkNReXd5UWtGQlFVRXNRMEZCT0VJc1JVRkJRU3hEUVVzNVFrTXNlVUpCUVVGQkxFTkJRVFJDTEVWQlFVRXNRMEZETlVKRExIbENRVUZCUVN4RFFVRTBRaXhGUVVGQkxFTkJSVFZDUXl4eFFrRkJRVUVzUTBGQmQwSklMREpDUVVGQlFTeERRWE5GTlVJc1UwRkJVMGtzV1VGQlFVRXNRMEZCWVhCUkxFTkJRVUZCTEVOQlFVZFFMRU5CUVVGQkxFTkJRVUZCTEVOQlEzWkNMRWRCUVVsUExFTkJRVUZCTEVOQlFVVTNRaXhOUVVGQlFTeEhRVUZYTkZJc2VVSkJRVUZCTEVOQlFUSkNMRTFCUVUwc1NVRkJTVEZTTEV0QlFVRkJMRU5CUVUwc1kwRkJRU3hEUVVGQkxFTkJRelZFTEVkQlFVbHZRaXhEUVVGQlFTeERRVUZGZEVJc1RVRkJRVUVzUjBGQlZ6WlNMREpDUVVGQlFTeERRVUUyUWl4TlFVRk5MRWxCUVVrelVpeExRVUZCUVN4RFFVRk5MR2RDUVVGQkxFTkJRVUVzUTBGUmFFVXNVMEZCVTJkVExHVkJRVUZCTEVWQlFVRkJMRU5CUTFBc1NVRkJTeXhKUVVGSmNsTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVselV5eFRRVUZCUVN4RFFVRlZibE1zVFVGQlFVRXNRMEZCVVVnc1EwRkJRVUVzUlVGQlFVRXNRMEZEY0VNc1IwRkJRU3hGUVVGTmMxTXNVMEZCUVVFc1EwRkJWWFJUTEVOQlFVRkJMRU5CUVVGQkxGZEJRV05QTEZWQlFVRkJMRU5CUVVGQkxFTkJRelZDTEUxQlFVMHNTVUZCU1dkVExGTkJRVUZCTEVOQlFWVXNhVU5CUVVFc1EwRkJRU3hEUVVreFFpeFRRVUZUUXl4UFFVRkJRU3hEUVVGUlF5eEhRVUZCUVN4RFFVRkJRU3hEUVVObUxFbEJRVXNzU1VGQlNYcFRMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmVWTXNSMEZCUVVFc1EwRkJTWFJUTEUxQlFVRkJMRU5CUVZGSUxFTkJRVUZCTEVWQlFVRkJMRU5CUVV0NVV5eEhRVUZCUVN4RFFVRkplbE1zUTBGQlFVRXNRMEZCUVVFc1EwRkJTeXhEUVVGQkxFTkJMMFZvUkVnc1NVRkJRVUVzUTBGQlN6WlRMRkZCUVVGQkxFTkJRVmNzUTBGRFpIQlBMRzlDUVVGQlFTeERRVUZ6UWtFc2IwSkJRVUZCTEVOQlEzUkNZU3hwUWtGQlFVRXNRMEZCYlVKQkxHbENRVUZCUVN4RFFVTnVRa2dzWVVGQlFVRXNRMEZCWlVFc1lVRkJRVUVzUTBGRFpsQXNlVUpCUVVGQkxFTkJRVEpDUVN4NVFrRkJRVUVzUTBGRE0wSk5MSEZDUVVGQlFTeERRVUYxUWtFc2NVSkJRVUZCTEVOQlEzWkNjVUlzYTBKQlFVRkJMRU5CUVc5Q1FTeHJRa0ZCUVVFc1EwRkRjRUpKTEhsQ1FVRkJRU3hEUVVFeVFrRXNlVUpCUVVGQkxFTkJRek5DTjBVc1owSkJRVUZCTEVOQlFXdENRU3huUWtGQlFVRXNRMEZEYkVKRExHZENRVUZCUVN4RFFVRnJRa0VzWjBKQlFVRkJMRU5CUTJ4Q09FVXNaMEpCUVVGQkxFTkJRV3RDUVN4blFrRkJRVUVzUTBGRGJFSkRMSEZDUVVGQlFTeERRVUYxUWtFc2NVSkJRVUZCTEVOQlEzWkNORVFzYVVKQlFVRkJMRU5CUVcxQ1FTeHBRa0ZCUVVFc1EwRkRia0pOTEhOQ1FVRkJRU3hEUVVGM1FrRXNjMEpCUVVGQkxFTkJRM2hDUlN4dFFrRkJRVUVzUTBGQmNVSkJMRzFDUVVGQlFTeERRVU55UW5kRExHdENRVUZCUVN4RFFVRnZRa0VzYTBKQlFVRkJMRU5CUTNCQ2IwWXNWVUZCUVVFc1EwRjRjMEpHTEZOQlFXOUNNVkVzUTBGQlFVRXNRMEZCUnpCRExFTkJRVUZCTEVOQlFVZHFSQ3hEUVVGQlFTeERRVUZIUkN4RFFVRkJRU3hEUVVGSFJpeERRVUZCUVN4RFFVRkhUQ3hEUVVGQlFTeERRVUZCUVN4RFFVTnFReXhKUVVGSll5eERRVUZCUVN4RFFVRkpMRWxCUVVsNlFpeFZRVUZCUVN4RFFVRlhMRVZCUVVFc1EwRkJRU3hEUVVWMlFpeFBRVVJCZDBzc2JVSkJRVUZCTEVOQlFXOUNMMGtzUTBGQlFVRXNRMEZCUjFRc1EwRkJRVUVzUTBGQlIwd3NRMEZCUVVFc1EwRkJRVUVzUTBGRGJrSnhUU3hyUWtGQlFVRXNRMEZCYlVKMFRDeERRVUZCUVN4RFFVRkhNRU1zUTBGQlFVRXNRMEZCUjJwRUxFTkJRVUZCTEVOQlFVZEVMRU5CUVVGQkxFTkJRVWRQTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQmMzTkNkRU0wVVN4bFFVRkJRU3hEUVc1elFrWXNVMEZCZVVKcVR5eERRVUZCUVN4RFFVRkhNVU1zUTBGQlFVRXNRMEZCUjFBc1EwRkJRVUVzUTBGQlIwUXNRMEZCUVVFc1EwRkJSMFlzUTBGQlFVRXNRMEZCUjB3c1EwRkJRVUVzUTBGQlFVRXNRMEZEZEVNc1NVRkJTV01zUTBGQlFVRXNRMEZCU1N4SlFVRkpla0lzVlVGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUVVFc1EwRkZka0lzVDBGRVFYZExMRzFDUVVGQlFTeERRVUZ2UWk5SkxFTkJRVUZCTEVOQlFVZFVMRU5CUVVGQkxFTkJRVWRNTEVOQlFVRkJMRU5CUVVGQkxFTkJRMjVDYzAwc2RVSkJRVUZCTEVOQlFYZENOMGtzUTBGQlFVRXNRMEZCUnpGRExFTkJRVUZCTEVOQlFVZFFMRU5CUVVGQkxFTkJRVWRFTEVOQlFVRkJMRU5CUVVkUExFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJhWE5DTTBNNFNTeHJRa0ZCUVVFc1EwRkJiMEpCTEd0Q1FVRkJRU3hEUVVOd1FuRkdMRmRCUVVGQkxFTkJRV0ZCTEZkQlFVRkJMRU5CUTJKcFFpeFhRVUZCUVN4RFFVRmhRU3hYUVVGQlFTeERRVU5pVWl4dFFrRkJRVUVzUTBGQmNVSkJMRzFDUVVGQlFTeERRVU55UWxjc1owSkJRVUZCTEVOQlFXdENRU3huUWtGQlFVRXNRMEZGYkVKUkxIbENRVUZCUVN4RFFVRXlRa0VzZVVKQlFVRkJMRU5CUXpOQ1F5d3lRa0ZCUVVFc1EwRkJOa0pCTERKQ1FVRkJRU3hEUVVNM1FtRXNNRUpCUVVGQkxFTkJNVU1yUWl4RlFVRkJMRU5CTWtNdlFrTXNOa0pCUVVGQkxFTkJNVU5yUXl4RlFVRkJMRU5CTWtOc1EwTXNkVUpCUVVGQkxFTkJNVU0wUWl4RlFVRkJMRU5CTWtNMVFrTXNOa0pCUVVGQkxFTkJNVU5yUXl4RlFVRkJMRU5CTWtOc1EyWXNlVUpCUVVGQkxFTkJRVEpDUVN4NVFrRkJRVUVzUTBGRE0wSkRMSGxDUVVGQlFTeERRVUV5UWtFc2VVSkJRVUZCTEVOQlF6TkNaU3gzUWtGQlFVRXNRMEV4UXpaQ0xFVkJRVUVzUTBFeVF6ZENaQ3h4UWtGQlFVRXNRMEZCZFVKQkxIRkNRVUZCUVN4RFFVTjJRbVVzYjBKQlFVRkJMRU5CYkVRclFpeEZRVUZCTEVOQmJVUXZRa01zZFVKQlFVRkJMRU5CYkVSclF5eEZRVUZCTEVOQmJVUnNRME1zYVVKQlFVRkJMRU5CTVVOelFpeEZRVUZCTEVOQk1rTjBRa01zTUVKQlFVRkJMRU5CTVVNclFpeEZRVUZCTEVOQk1rTXZRa01zTUVKQlFVRkJMRU5CTVVNclFpeEZRVUZCTEVOQk1rTXZRa01zY1VKQlFVRkJMRU5CTVVNd1FpeEZRVUZCTEVOQk1rTXhRa01zYVVKQlFVRkJMRU5CTVVOelFpeEZRVUZCTEVOQk5FTjBRakZVTEVWQlFVRkJMRU5CUVVsQkxFVkJRVUZCTEVOQlEwcGpMRU5CUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUTBodlVTeERRVUZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVU5JTTBvc1UwRkJRVUVzUTBGQlYwRXNVMEZCUVVFc1EwRkRXRWtzVjBGQlFVRXNRMEZCWVVFc1YwRkJRVUVzUTBGRFlrY3NRMEZCUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZEU0VZc1EwRkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkRTREJETEVOQlFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlEwaDZReXhEUVVGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVOSU1rTXNUMEZCUVVFc1EwRkJVMEVzVDBGQlFVRXNRMEZEVkRoR0xFZEJRVUZCTEVOQlFVdEJMRWRCUVVGQkxFTkJRMHg0U2l4UlFVRkJRU3hEUVVGVlFTeFJRVUZCUVN4RFFVTldjVXNzU1VGQlFVRXNRMEZCVFVFc1NVRkJRVUVzUTBGRFRsQXNWVUZCUVVFc1EwRkJXVUVzVlVGQlFVRXNRMEZEV2tNc1ZVRkJRVUVzUTBGQldVRXNWVUZCUVVFc1EwRkJRVUVzUTBFd1FtUTVVU3hKUVVGQlFTeERRVUZMTkZRc1YwRkJRVUVzUTBGQll5eFRRVUZUYUZNc1EwRkJRVUVzUTBGQlFVRXNRMEZETVVJc1NVRkJTVzlFTEVOQlFVRkJMRU5CUVVrc1NVRkJTWFJGTEZWQlFVRkJMRU5CUVZkclFpeERRVUZCUVN4RFFVRkJRU3hEUVVWMlFpeFBRVVJCY2tJc1YwRkJRVUVzUTBGQldYbEZMRU5CUVVGQkxFTkJRVWR3UkN4RFFVRkJRU3hEUVVGQlFTeERRVU5TYjBRc1EwRkJRVUVzUTBGQlFVRXNRMEZIVkdoR0xFbEJRVUZCTEVOQlFVczJWQ3hUUVVGQlFTeERRVUZaTEZOQlFWTkRMRWRCUVVGQkxFTkJRVXRETEV0QlFVRkJMRU5CUVU5MlR5eEhRVUZCUVN4RFFVRkJRU3hEUVVOd1EyZE9MR1ZCUVVGQkxFTkJRV2RDYzBJc1IwRkJRVUVzUTBGQlMwTXNTMEZCUVVFc1EwRkJUM1pQTEVkQlFVRkJMRU5CUVVGQkxFTkJRelZDSzAwc1dVRkJRVUVzUTBGQllTOU5MRWRCUVVGQkxFTkJRVXQxVHl4TFFVRkJRU3hEUVVGQlFTeERRVWRzUWl4SlFVWkJMRWxCUVVscVVDeERRVUZCUVN4RFFVRkpMRWxCUVVsd1JTeFZRVUZCUVN4RFFUTkhiVUlzUlVGQlFTeERRVEpIY1VKdlZDeEhRVUZCUVN4RFFVRkplRlFzVFVGQlFVRXNRMEZCUVVFc1EwRkRjRVE0UWl4RFFVRkJRU3hEUVVGSkxFbEJRVWt4UWl4VlFVRkJRU3hEUVVGWGIwVXNRMEZCUVVFc1EwRkJSWGhGTEUxQlFVRkJMRU5CUVVGQkxFTkJRMmhDU0N4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVEpVTEVkQlFVRkJMRU5CUVVsNFZDeE5RVUZCUVN4RFFVRlJTQ3hEUVVGQlFTeEZRVUZCUVN4RFFVRkxNa1VzUTBGQlFVRXNRMEZCUlRORkxFTkJRVUZCTEVOQk4wZFNMRVZCUVVFc1EwRkJRU3hEUVRaSGQwTXlWQ3hIUVVGQlFTeERRVUZKTTFRc1EwRkJRVUVzUTBGQlFVRXNRMEZGTTBVc1QwRkVRVEJITEdkQ1FVRkJRU3hEUVVGcFFucEZMRU5CUVVGQkxFTkJRVWN3UXl4RFFVRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkZlRVVzVFVGQlFVRXNRMEZCVVhsVUxFdEJRVUZCTEVOQlFVOTJUeXhIUVVGQlFTeERRVUZCUVN4RFFVTnFRM0JFTEVOQlFVRkJMRU5CUVVVd1NTeFJRVUZCUVN4RFFUbEhlVUlzUlVGQlFTeERRVUZCTEVOQlFVRXNRMEZwU0hCRE9Vc3NTVUZCUVVFc1EwRkJTelpVTEZOQlFVRkJMRU5CUVZWSExFbEJRVUZCTEVOQlFVOHNVMEZCVTBNc1IwRkJRVUVzUTBGQlMwWXNTMEZCUVVFc1EwRkJUM1pQTEVkQlFVRkJMRU5CUVVGQkxFTkJRM3BEWjA0c1pVRkJRVUVzUTBGQlowSjVRaXhIUVVGQlFTeERRVUZMUml4TFFVRkJRU3hEUVVGUGRrOHNSMEZCUVVFc1EwRkJRVUVzUTBGRE5VSXJUU3haUVVGQlFTeERRVUZoTDAwc1IwRkJRVUVzUTBGQlMzVlBMRXRCUVVGQkxFTkJRVUZCTEVOQlIyeENMRWxCUmtFc1NVRkJTVE5TTEVOQlFVRkJMRU5CUVVrc1NVRkJTVEZDTEZWQlFVRkJMRU5CY0VoelFpeEZRVUZCTEVOQmIwaHhRblZVTEVkQlFVRkJMRU5CUVVrelZDeE5RVUZCUVN4RFFVRkJRU3hEUVVOMlJIZEZMRU5CUVVGQkxFTkJRVWtzU1VGQlNYQkZMRlZCUVVGQkxFTkJRVmN3UWl4RFFVRkJRU3hEUVVGRk9VSXNUVUZCUVVFc1EwRkJRVUVzUTBGRGFFSklMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSk9GUXNSMEZCUVVFc1EwRkJTVE5VTEUxQlFVRkJMRU5CUVZGSUxFTkJRVUZCTEVWQlFVRkJMRU5CUVV0cFF5eERRVUZCUVN4RFFVRkZha01zUTBGQlFVRXNRMEYwU0V3c1JVRkJRU3hEUVVGQkxFTkJjMGgzUXpoVUxFZEJRVUZCTEVOQlFVazVWQ3hEUVVGQlFTeERRVUZCUVN4RFFVTTVSU3hQUVVGSmFVTXNRMEZCUVVFc1EwRkJSVGxDTEUxQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGWExFbEJRVUVzUTBGRFowTXNRMEZCUVN4SFFVRjBSSGRITEhGQ1FVRkJRU3hEUVVGelFtaERMRU5CUVVGQkxFTkJRVWN4UXl4RFFVRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkZPVUlzVFVGQlFVRXNRMEZCVVhsVUxFdEJRVUZCTEVOQlFVOTJUeXhIUVVGQlFTeERRVUZCUVN4RFFVRnRRaXhKUVVGQkxFTkJRemRFVml4RFFVRkJRU3hEUVVGRlowY3NVVUZCUVVFc1EwRXhTSE5DTEVWQlFVRXNRMEZCUVN4RFFVRkJMRU5CTmtocVF6bExMRWxCUVVGQkxFTkJRVXMyVkN4VFFVRkJRU3hEUVVGVlN5eFRRVUZCUVN4RFFVRlphRU1zZVVKQlFVRkJMRU5CUXpOQ2JGTXNTVUZCUVVFc1EwRkJTelpVTEZOQlFVRkJMRU5CUVZWTkxGZEJRVUZCTEVOQlFXTm9ReXd5UWtGQlFVRXNRMEZETjBKdVV5eEpRVUZCUVN4RFFVRkxObFFzVTBGQlFVRXNRMEZCVlU4c1kwRkJRVUVzUTBFNVNIRkNMRVZCUVVFc1EwRm5TWEJEY0ZVc1NVRkJRVUVzUTBGQlMzRlZMRlZCUVVGQkxFTkJRV0VzVTBGQlUzcFRMRU5CUVVGQkxFTkJRVWRWTEVOQlFVRkJMRU5CUVVGQkxFTkJSVFZDTEVkQlJFRnJVU3hsUVVGQlFTeERRVUZuUWpWUkxFTkJRVUZCTEVOQlFVZFZMRU5CUVVGQkxFTkJRVUZCTEVOQkwwaGxMRVZCUVVFc1IwRm5TVGxDVml4RFFVRkJRU3hEUVVGRmRFSXNUVUZCUVVFc1EwRkJNRU1zVFVGQlRTeEpRVUZKUlN4TFFVRkJRU3hEUVVGTkxGbEJRVUVzUTBGQlFTeERRVU5vUlN4SFFXeEpORUlzUlVGQlFTeEhRV3RKZUVJNFFpeERRVUZCUVN4RFFVRkZhRU1zVFVGQlFVRXNRMEZCYjBNc1RVRkJUU3hKUVVGSlJTeExRVUZCUVN4RFFVRk5MRmxCUVVFc1EwRkJRU3hEUVVNeFJDeEpRVUZKT0Vjc1EwRkJRVUVzUTBGQlNTeEpRVUZKTlVjc1ZVRkJRVUVzUTBGdVNXZENMRVZCUVVFc1EwRkJRU3hEUVhGSk5VSXNUMEZFUVdkTExHbENRVUZCUVN4RFFVRnJRbkJFTEVOQlFVRkJMRU5CUVVjeFJpeERRVUZCUVN4RFFVRkhWU3hEUVVGQlFTeERRVUZCUVN4RFFVTnFRbWRHTEVOQlFVRkJMRU5CUVVGQkxFTkJSMVIwU0N4SlFVRkJRU3hEUVVGTGNWVXNWVUZCUVVFc1EwRkJWME1zU1VGQlFVRXNRMEZCVHl4VFFVRlRNVk1zUTBGQlFVRXNRMEZCUVVFc1EwRkZPVUlzUjBGRVFUUlJMR1ZCUVVGQkxFTkJRV2RDTlZFc1EwRkJRVUVzUTBGQlFVRXNRMEY0U1d0Q0xFVkJRVUVzUjBGNVNUbENRU3hEUVVGQlFTeERRVUZGZEVJc1RVRkJRVUVzUTBGQk1FTXNUVUZCVFN4SlFVRkpSU3hMUVVGQlFTeERRVUZOTEZsQlFVRXNRMEZCUVN4RFFVTm9SU3hKUVVGSk9FY3NRMEZCUVVFc1EwRkJTU3hKUVVGSk5VY3NWVUZCUVVFc1EwRXpTV2RDTEVWQlFVRXNRMEZCUVN4RFFUWkpOVUlzVDBGRVFYTkxMSE5DUVVGQlFTeERRVUYxUWpGRUxFTkJRVUZCTEVOQlFVY3hSaXhEUVVGQlFTeERRVUZCUVN4RFFVTnVRakJHTEVOQlFVRkJMRU5CUVVGQkxFTkJSMVIwU0N4SlFVRkJRU3hEUVVGTGNWVXNWVUZCUVVFc1EwRkJWMFVzV1VGQlFVRXNRMEV2U1c5Q0xFVkJRVUVzUTBGblNuQkRkbFVzU1VGQlFVRXNRMEZCUzNGVkxGVkJRVUZCTEVOQlFWZEhMR3RDUVVGQlFTeERRV3BLWXl4RlFVRkJMRU5CYlVvNVFuaFZMRWxCUVVGQkxFTkJRVXRwVlN4SFFVRkJRU3hEUVVGTkxGTkJRVk5JTEVkQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVOVZMRk5CUVVGQkxFTkJRVmRETEZOQlFVRkJMRU5CUVVGQkxFTkJRM3BETEVsQlFVbDJVeXhEUVVGQlFTeERRVUZKYmtNc1NVRkJRVUVzUTBGQlMybFZMRWRCUVVGQkxFTkJRVWxWTEUxQlFVRkJMRU5CUVU5R0xGTkJRVUZCTEVOQlFWZERMRk5CUVVGQkxFTkJRVUZCTEVOQlEyNURMRTlCUVU4eFZTeEpRVUZCUVN4RFFVRkxObFFzVTBGQlFVRXNRMEZCVlVNc1IwRkJRVUVzUTBGQlMwTXNTMEZCUVVFc1EwRkJUelZTTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzQkRia01zU1VGQlFVRXNRMEZCUzJsVkxFZEJRVUZCTEVOQlFVbFZMRTFCUVVGQkxFTkJRVk1zVTBGQlUwWXNVMEZCUVVFc1EwRkJWME1zVTBGQlFVRXNRMEZCUVVFc1EwRkRjRU5zUXl4bFFVRkJRU3hEUVVGblFtbERMRk5CUVVGQkxFTkJRVmRETEZOQlFVRkJMRU5CUVVGQkxFTkJla1UzUWl4VFFVRjVRakZFTEVWQlFVRkJMRU5CUVVsRExFVkJRVUZCTEVOQlFVRkJMRU5CUXpOQ0xFZEJRVWxFTEVWQlFVRkJMRU5CUVVjeFVTeE5RVUZCUVN4SFFVRlhPRklzZVVKQlFVRkJMRU5CUVRKQ0xFMUJRVTBzU1VGQlNUVlNMRXRCUVVGQkxFTkJRVTBzY1VKQlFVRXNRMEZCUVN4RFFVTTNSQ3hIUVVGSmVWRXNSVUZCUVVFc1EwRkJSek5STEUxQlFVRkJMRWRCUVZjclVpeDVRa0ZCUVVFc1EwRkJNa0lzVFVGQlRTeEpRVUZKTjFJc1MwRkJRVUVzUTBGQlRTeHhRa0ZCUVN4RFFVRkJMRU5CZDBVM1JHOVZMRU5CUVdkQ1NDeFRRVUZCUVN4RFFVRlhReXhUUVVGQlFTeERRVUZCUVN4RFFVTXpRaXhKUVVGSmRsTXNRMEZCUVVFc1EwRkJTU3hKUVVGSmVrSXNWVUZCUVVFc1EwRjJTbWxDTEVWQlFVRXNRMEZCUVN4RFFYbEtOMElzVDBGRVFYZExMRzFDUVVGQlFTeERRVUZ2UWk5SkxFTkJRVUZCTEVOQlFVZHpVeXhUUVVGQlFTeERRVUZYUXl4VFFVRkJRU3hEUVVGQlFTeERRVU16UW5aVExFTkJRVUZCTEVOQlFVRkJMRU5CUjFSdVF5eEpRVUZCUVN4RFFVRkxhVlVzUjBGQlFVRXNRMEZCU1Zrc1MwRkJRVUVzUTBGQlVUZFZMRWxCUVVGQkxFTkJRVXMyVkN4VFFVRkJRU3hEUVVWMFFqZFVMRWxCUVVGQkxFTkJRVXRwVlN4SFFVRkJRU3hEUVVGSlJDeEpRVUZCUVN4RFFVRlBMRk5CUVZOR0xFZEJRVUZCTEVOQlFVdERMRXRCUVVGQkxFTkJRVTlWTEZOQlFVRkJMRU5CUVZkRExGTkJRVUZCTEVOQlFVRkJMRU5CUXpsRExFbEJRVWwyVXl4RFFVRkJRU3hEUVVGSmJrTXNTVUZCUVVFc1EwRkJTMmxWTEVkQlFVRkJMRU5CUVVsVkxFMUJRVUZCTEVOQlFVOUdMRk5CUVVGQkxFTkJRVmRETEZOQlFVRkJMRU5CUVVGQkxFTkJRMjVETEU5QlFVOHhWU3hKUVVGQlFTeERRVUZMTmxRc1UwRkJRVUVzUTBGQlZVY3NTVUZCUVVFc1EwRkJTMFlzUjBGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlR6VlNMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNwRGJrTXNTVUZCUVVFc1EwRkJTMmxWTEVkQlFVRkJMRU5CUVVsRUxFbEJRVUZCTEVOQlFVdGhMRXRCUVVGQkxFTkJRVkUzVlN4SlFVRkJRU3hEUVVGTE5sUXNVMEZCUVVFc1EwRkJWVWNzU1VGQlFVRXNRMEZGY2tOb1ZTeEpRVUZCUVN4RFFVRkxhVlVzUjBGQlFVRXNRMEZCU1dFc1QwRkJRVUVzUTBGQlZTeFZRVUZCTEVOQlEycENMRWxCUVVrNVJDeEZRVUZCUVN4RFFVRkxMRWxCUVVsMFVTeFZRVUZCUVN4RFFVRlhNRklzZVVKQlFVRkJMRU5CUVVGQkxFTkJRM0JDYmtJc1JVRkJRVUVzUTBGQlN5eEpRVUZKZGxFc1ZVRkJRVUVzUTBGQlZ6SlNMSGxDUVVGQlFTeERRVUZCUVN4RFFVVjRRaXhQUVVSQmNFZ3NhMEpCUVVGQkxFTkJRVzFDSzBZc1JVRkJRVUVzUTBGQlNVTXNSVUZCUVVFc1EwRkJRVUVzUTBGRGFFSXNRMEZCUTNkRUxGTkJRVUZCTEVOQlFWZDZSQ3hGUVVGQlFTeERRVUZKTUVRc1UwRkJRVUVzUTBGQlYzcEVMRVZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNCRGFsSXNTVUZCUVVFc1EwRkJTMmxWTEVkQlFVRkJMRU5CUVVsaExFOUJRVUZCTEVOQlFWRkRMR0ZCUVVGQkxFTkJRV2RDTEZOQlFWTk1MRk5CUVVGQkxFTkJRVUZCTEVOQlJYaERMRWRCUkVGc1F5eGxRVUZCUVN4RFFVRm5RbXRETEZOQlFVRkJMRU5CUVVGQkxFTkJRMXBCTEZOQlFVRkJMRU5CUVZWd1ZTeE5RVUZCUVN4SFFVRlhLMUlzZVVKQlFVRkJMRU5CUTNaQ0xFMUJRVTBzU1VGQlNUZFNMRXRCUVVGQkxFTkJRVTBzY1VKQlFVRXNRMEZCUVN4RFFVTnNRaXhKUVVGSmQxRXNSVUZCUVVFc1EwRkJTeXhKUVVGSmRGRXNWVUZCUVVFc1EwRkJWekJTTEhsQ1FVRkJRU3hEUVVGQlFTeERRVVY0UWl4UFFVUkJjRWdzYzBKQlFVRkJMRU5CUVhWQ1owY3NSVUZCUVVFc1EwRkJTVEJFTEZOQlFVRkJMRU5CUVVGQkxFTkJRM0JDTEVOQlFVTkVMRk5CUVVGQkxFTkJRVmQ2UkN4RlFVRkJRU3hEUVVGSk1FUXNVMEZCUVVFc1EwRkJWeXhKUVVGSmFGVXNWVUZCUVVFc1EwRkJWMmRWTEZOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjI1RU1WVXNTVUZCUVVFc1EwRkJTMmxWTEVkQlFVRkJMRU5CUVVsbExHVkJRVUZCTEVOQlFXdENOVU1zZVVKQlFVRkJMRU5CUXpOQ2NGTXNTVUZCUVVFc1EwRkJTMmxWTEVkQlFVRkJMRU5CUVVsblFpeGxRVUZCUVN4RFFVRnJRalZETEhsQ1FVRkJRU3hEUVVNelFuSlRMRWxCUVVGQkxFTkJRVXRwVlN4SFFVRkJRU3hEUVVGSmFVSXNaVUZCUVVFc1EwRjJUSE5DTEVWQlFVRXNRMEYzVEM5Q2JGWXNTVUZCUVVFc1EwRkJTMmxWTEVkQlFVRkJMRU5CUVVsRkxGZEJRVUZCTEVOQlFXTTNRaXh4UWtGQlFVRXNRMEZEZGtKMFV5eEpRVUZCUVN4RFFVRkxhVlVzUjBGQlFVRXNRMEZCU1Vjc1kwRkJRVUVzUTBGQmFVSndWU3hKUVVGQlFTeERRVUZMTmxRc1UwRkJRVUVzUTBGQlZVOHNZMEZCUVVFc1EwRkZla053VlN4SlFVRkJRU3hEUVVGTGJWWXNTVUZCUVVFc1EwRkJUeXhUUVVGVGNrSXNSMEZCUVVFc1EwRkJTMWtzVTBGQlFVRXNRMEZCUVVFc1EwRkZlRUlzUjBGRVFXeERMR1ZCUVVGQkxFTkJRV2RDYzBJc1IwRkJRVUVzUTBGQlMxa3NVMEZCUVVFc1EwRkJRVUVzUTBGMFRGVXNSVUZCUVN4SFFYVk1NMEpCTEZOQlFVRkJMRU5CUVZWd1ZTeE5RVUZCUVN4RFFVTmFMRTFCUVUwc1NVRkJTVVVzUzBGQlFVRXNRMEZCVFN4eFFrRkJRU3hEUVVGQkxFTkJRMnhDTEVsQlFVazBWU3hUUVVGQlFTeERRVUZaTEVsQlFVa3hWU3hWUVVGQlFTeERRVE5NUlN4RlFVRkJMRU5CTWt3eVFtOVVMRWRCUVVGQkxFTkJRVWw0VkN4TlFVRkJRU3hEUVVGQlFTeERRVVZ5UkN4UFFVUkJhVklzVjBGQlFVRXNRMEZCV1RaRUxGTkJRVUZCTEVOQlFWZDBRaXhIUVVGQlFTeERRVUZMUVN4SFFVRkJRU3hEUVVGSmVGUXNUVUZCUVVFc1EwRkJVVzlWTEZOQlFVRkJMRU5CUVVGQkxFTkJRMnBEVlN4VFFVRkJRU3hEUVVGQlFTeERRVWRVY0ZZc1NVRkJRVUVzUTBGQlMyMVdMRWxCUVVGQkxFTkJRVXR1UWl4SlFVRkJRU3hEUVVGUExGTkJRVk52UWl4VFFVRkJRU3hEUVVGWFdDeFRRVUZCUVN4RFFVRkJRU3hEUVVWdVF5eEhRVVJCYWtNc1pVRkJRVUVzUTBGQlowSTBReXhUUVVGQlFTeERRVUZYV0N4VFFVRkJRU3hEUVVGQlFTeERRV2hOU1N4RlFVRkJMRWRCYVUwelFrRXNVMEZCUVVFc1EwRkJWVzVWTEUxQlFVRkJMRU5CUTFvc1RVRkJUU3hKUVVGSlJTeExRVUZCUVN4RFFVRk5MSEZDUVVGQkxFTkJRVUVzUTBGRGJFSXNTVUZCU1RaVkxFZEJRVUZCTEVOQlFVMHNTVUZCU1ROVkxGVkJRVUZCTEVOQlFWY3dWU3hUUVVGQlFTeERRVUZWT1ZVc1RVRkJRVUVzUTBGQlFVRXNRMEZETDBKblZpeEpRVUZCUVN4RFFVRlBOVVFzWjBKQlFVRkJMRU5CUVdsQ01rUXNSMEZCUVVFc1EwRkJTMFFzVTBGQlFVRXNRMEZCVjBFc1UwRkJRVUVzUTBGQlZUbFZMRTFCUVVGQkxFTkJRVkZ0VlN4VFFVRkJRU3hEUVVGQlFTeERRVU01UkN4SFFVRkpZU3hKUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZCUnl4UFFVRlBMRWxCUVVFc1EwRkZja0lzU1VGRVFTeEpRVUZKZUZFc1EwRkJRVUVzUTBGQlNTeEpRVUZKY0VVc1ZVRkJRVUVzUTBGQlZ6UlZMRWxCUVVGQkxFTkJRVUZCTEVOQlEyUnVWaXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNUSkZMRU5CUVVGQkxFTkJRVVY0UlN4TlFVRkJRU3hEUVVGUlNDeERRVUZCUVN4RlFVRkJRU3hEUVVGTE1rVXNRMEZCUVVFc1EwRkJSVE5GTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXRyVml4SFFVRkJRU3hEUVVGSmJGWXNRMEZCUVVFc1EwRkJRVUVzUTBGRE9VTXNUMEZCVHpKRkxFTkJRVUZCTEVOQlFVRkJMRU5CUjFRNVJTeEpRVUZCUVN4RFFVRkxiVllzU1VGQlFVRXNRMEZCUzBrc1VVRkJRVUVzUTBGQlZ5eFRRVUZUZWtJc1IwRkJRVUVzUTBGQlMxa3NVMEZCUVVFc1EwRkJRVUVzUTBGSGFrTXNTVUZHUVN4SlFVRkpWU3hUUVVGQlFTeERRVUZaY0ZZc1NVRkJRVUVzUTBGQlMyMVdMRWxCUVVGQkxFTkJRVXR5UWl4SFFVRkJRU3hEUVVGTFdTeFRRVUZCUVN4RFFVRkJRU3hEUVVNelFtTXNSMEZCUVVFc1EwRkJUU3hKUVVGSk9WVXNWVUZCUVVFc1EwRTVUVkVzUlVGQlFTeERRVUZCTEVOQkswMWlVQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNYRldMRWRCUVVGQkxFTkJRVWxzVml4TlFVRkJRU3hEUVVGUlNDeERRVUZCUVN4RlFVRkJRU3hEUVVGTGNWWXNSMEZCUVVFc1EwRkJTWEpXTEVOQlFVRkJMRU5CUVVGQkxFTkJRVXRwVml4VFFVRkJRU3hEUVVGVmFsWXNRMEZCUVVFc1EwRkJRVUVzUTBGRGVFUXNUMEZCVDNGV0xFZEJRVUZCTEVOQlFVRkJMRU5CUjFSNFZpeEpRVUZCUVN4RFFVRkxiVllzU1VGQlFVRXNRMEZCUzBrc1VVRkJRVUVzUTBGQlUwVXNUVUZCUVVFc1EwRkJVeXhUUVVGVE0wSXNSMEZCUVVFc1EwRkJTekJDTEVkQlFVRkJMRU5CUVV0bUxGTkJRVUZCTEVOQlFVRkJMRU5CUlRkRExFZEJSRUZxUXl4bFFVRkJRU3hEUVVGblFuTkNMRWRCUVVGQkxFTkJRVXN3UWl4SFFVRkJRU3hEUVVGTFppeFRRVUZCUVN4RFFVRkJRU3hEUVhCT1NpeEZRVUZCTEVkQmNVNXNRbVVzUjBGQlFVRXNRMEZCU1d4V0xFMUJRVUZCTEVOQlEwNHNUVUZCVFN4SlFVRkpSU3hMUVVGQlFTeERRVUZOTEc5Q1FVRkJMRU5CUVVFc1EwRkRiRUlzUjBGMFRpdENMRVZCUVVFc1IwRnpUak5DYVZVc1UwRkJRVUVzUTBGQlZXNVZMRTFCUVVGQkxFTkJRMW9zVFVGQlRTeEpRVUZKUlN4TFFVRkJRU3hEUVVGTkxIRkNRVUZCTEVOQlFVRXNRMEZEYkVJc1NVRkZTVXdzUTBGQlFVRXNRMEZHUVhGU0xFVkJRVUZCTEVOQlFVc3NTVUZCU1RsUkxGVkJRVUZCTEVOQmVrNVRMRVZCUVVFc1EwRjVUbk5DYjFRc1IwRkJRVUVzUTBGQlNYaFVMRTFCUVVGQkxFTkJRVUZCTEVOQlF6VkRkMFVzUTBGQlFVRXNRMEZCU1N4SlFVRkpjRVVzVlVGQlFVRXNRMEV4VGxVc1JVRkJRU3hEUVRCT2NVSnZWQ3hIUVVGQlFTeERRVUZKZUZRc1RVRkJRVUVzUTBGQlFVRXNRMEZGTDBNc1NVRkJTMGdzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQk5VNVZMRVZCUVVFc1EwRTBUbUZCTEVOQlFVRkJMRVZCUVVGQkxFTkJRVXR4VWl4RlFVRkJRU3hEUVVGSGNsSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlMzRldMRWRCUVVGQkxFTkJRVWx5Vml4RFFVRkJRU3hEUVVGQlFTeERRVU53UkN4SlFVRkxRU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNUSlVMRWRCUVVGQkxFTkJRVWw0VkN4TlFVRkJRU3hEUVVGUlNDeERRVUZCUVN4RlFVRkJRU3hEUVVGTGNWSXNSVUZCUVVFc1EwRkJSM0pTTEVOQlFVRkJMRU5CTjA1a0xFVkJRVUVzUTBGQlFTeERRVFpPY1VNeVZDeEhRVUZCUVN4RFFVRkpNMVFzUTBGQlFVRXNRMEZCUVVFc1EwRkRMMFFzVDBGQlVYVlNMR2RDUVVGQlFTeERRVUZwUWpWTkxFTkJRVUZCTEVOQlFVY3dUU3hGUVVGQlFTeERRVUZKUVN4RlFVRkJRU3hEUVVGSGJGSXNUVUZCUVVFc1EwRkJVVzFWTEZOQlFVRkJMRU5CUVVGQkxFVkJRV01zUTBGQlFTeERRVUZCTEVOQlJ6TkVlbFVzU1VGQlFVRXNRMEZCUzIxV0xFbEJRVUZCTEVOQlFVdE1MRTlCUVVGQkxFTkJRVlVzVlVGQlFTeERRVU5zUWl4SlFVRkpPVVFzUlVGQlFVRXNRMEZCU3l4SlFVRkpkRkVzVlVGQlFVRXNRMEZxVDJ0Q0xFVkJRVUVzUTBGQlFTeERRV3RQTTBKMVVTeEZRVUZCUVN4RFFVRkxMRWxCUVVsMlVTeFZRVUZCUVN4RFFXcFBhMElzUlVGQlFTeERRVUZCTEVOQmJVOHZRaXhQUVVSQmNWRXNiVUpCUVVGQkxFTkJRVzlDUXl4RlFVRkJRU3hEUVVGSlF5eEZRVUZCUVN4RFFVRkJRU3hEUVVOcVFpeERRVUZEZDBRc1UwRkJRVUVzUTBGQlYzcEVMRVZCUVVGQkxFTkJRVWt3UkN4VFFVRkJRU3hEUVVGWGVrUXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIY0VOcVVpeEpRVUZCUVN4RFFVRkxiVllzU1VGQlFVRXNRMEZCUzB3c1QwRkJRVUVzUTBGQlVVTXNZVUZCUVVFc1EwRkJaMElzVTBGQlUwd3NVMEZCUVVFc1EwRkJRVUVzUTBGRmVrTXNSMEZFUVd4RExHVkJRVUZCTEVOQlFXZENhME1zVTBGQlFVRXNRMEZCUVVFc1EwRjJUMlVzUlVGQlFTeEhRWGRQTTBKQkxGTkJRVUZCTEVOQlFWVndWU3hOUVVGQlFTeERRVU5hTEUxQlFVMHNTVUZCU1VVc1MwRkJRVUVzUTBGQlRTeHhRa0ZCUVN4RFFVRkJMRU5CUld4Q0xFbEJSRUVzU1VGQlNYZFJMRVZCUVVGQkxFTkJRVXNzU1VGQlNYUlJMRlZCUVVGQkxFTkJNMDlyUWl4RlFVRkJMRU5CUVVFc1EwRTBUM1JDVUN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVFpSTEVWQlFVRkJMRU5CUVVjeFVTeE5RVUZCUVN4RFFVRlJTQ3hEUVVGQlFTeEZRVUZCUVN4RFFVRkxObEVzUlVGQlFVRXNRMEZCUnpkUkxFTkJRVUZCTEVOQlFVRkJMRU5CUVV0MVZTeFRRVUZCUVN4RFFVRlZMRVZCUVVFc1EwRkJSM1pWTEVOQlFVRkJMRU5CUVVGQkxFTkJRM3BFTEUxQlFVOHNRMEZCUTNOVkxGTkJRVUZCTEVOQlFWZDZSQ3hGUVVGQlFTeERRVUZKTUVRc1UwRkJRVUVzUTBGQlZ5eEpRVUZKYUZVc1ZVRkJRVUVzUTBGQlYyZFZMRk5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMjVFTVZVc1NVRkJRVUVzUTBGQlMyMVdMRWxCUVVGQkxFTkJRVXRNTEU5QlFVRkJMRU5CUVZGWkxGRkJRVUZCTEVOQlFWY3NVMEZCVTBNc1NVRkJRVUVzUTBGQlFVRXNRMEZGY0VNc1IwRkVRVzVFTEdWQlFVRkJMRU5CUVdkQ2JVUXNTVUZCUVVFc1EwRkJRVUVzUTBFdlQxVXNSVUZCUVN4SFFXZFFkRUpCTEVsQlFVRkJMRU5CUVV0eVZpeE5RVUZCUVN4RFFVTlFMRTFCUVUwc1NVRkJTVVVzUzBGQlFVRXNRMEZCVFN4bFFVRkJMRU5CUVVFc1EwRkhiRUlzU1VGR1FTeEpRVUZKZDFFc1JVRkJRVUVzUTBGQlN5eEpRVUZKZEZFc1ZVRkJRVUVzUTBGd1VHdENMRVZCUVVFc1EwRkJRU3hEUVhGUU0wSjFVU3hGUVVGQlFTeERRVUZMTEVsQlFVbDJVU3hWUVVGQlFTeERRWEJRYTBJc1JVRkJRU3hEUVVGQkxFTkJjVkIwUWxBc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZEJMRU5CUVVGQkxFTkJRVWtzUlVGQlFTeERRVUZKUVN4RFFVRkJRU3hGUVVGQlFTeERRVUZMT0ZFc1JVRkJRVUVzUTBGQlJ6bFJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVdDNWaXhKUVVGQlFTeERRVUZMZUZZc1EwRkJRVUVzUTBGQlFVRXNRMEZGTVVNc1QwRkVRVFJSTEcxQ1FVRkJRU3hEUVVGdlFrTXNSVUZCUVVFc1EwRkJTVU1zUlVGQlFVRXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGRGNrSXNRMEZCUTNkRUxGTkJRVUZCTEVOQlFWZDZSQ3hGUVVGQlFTeERRVUZKTUVRc1UwRkJRVUVzUTBGQlYzcEVMRVZCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNCRGFsSXNTVUZCUVVFc1EwRkJTMjFXTEVsQlFVRkJMRU5CUVV0SUxHVkJRVUZCTEVOQk0xQjFRaXhGUVVGQkxFTkJORkJxUTJoV0xFbEJRVUZCTEVOQlFVdHRWaXhKUVVGQlFTeERRVUZMUml4bFFVRkJRU3hEUVROUWRVSXNSVUZCUVN4RFFUUlFha05xVml4SlFVRkJRU3hEUVVGTGJWWXNTVUZCUVVFc1EwRkJTMU1zVlVGQlFVRXNRMEV6VUd0Q0xFVkJRVUVzUTBFMFVEVkNOVllzU1VGQlFVRXNRMEZCUzIxV0xFbEJRVUZCTEVOQlFVdFZMR1ZCUVVGQkxFTkJMMUJqTEVWQlFVRXNRMEZwVVhoQ04xWXNTVUZCUVVFc1EwRkJTemhXTEVsQlFVRkJMRU5CUVU4c1UwRkJVMmhETEVkQlFVRkJMRU5CUVVGQkxFTkJRMjVDZEVJc1pVRkJRVUVzUTBGQlowSnpRaXhIUVVGQlFTeERRVUZCUVN4RFFVTm9RaXhKUVVGSmVGTXNRMEZCUVVFc1EwRkJTU3hKUVVGSldpeFZRVUZCUVN4RFFTOVFWU3hGUVVGQkxFTkJRVUVzUTBGcFVYUkNMRTlCUkVFMFVDeFhRVUZCUVN4RFFVRlphRkFzUTBGQlFVRXNRMEZCUjNkVExFZEJRVUZCTEVOQlFVdEJMRWRCUVVGQkxFTkJRVWw0VkN4TlFVRkJRU3hEUVVGQlFTeERRVU5xUW1kQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUjFSMFFpeEpRVUZCUVN4RFFVRkxPRllzU1VGQlFVRXNRMEZCUzBNc1ZVRkJRVUVzUTBGd1VXTXNSVUZCUVN4RFFYTlJlRUl2Vml4SlFVRkJRU3hEUVVGTGVWWXNUVUZCUVVFc1EwRkJVeXhUUVVGVGNGVXNRMEZCUVVFc1EwRkJSMHNzUTBGQlFVRXNRMEZCUVVFc1EwRkhlRUlzVDBGR1FUaFJMR1ZCUVVGQkxFTkJRV2RDYmxJc1EwRkJRVUVzUTBGQlIwc3NRMEZCUVVFc1EwRkJRVUVzUTBGRlJpeERRVUZCTEVkQlFXSk1MRU5CUVVGQkxFTkJRVVZtTEUxQlFVRkJMRVZCUVRaQ0xFTkJRVUVzUjBGQlltOUNMRU5CUVVGQkxFTkJRVVZ3UWl4TlFVRkJRU3hIUVVOd1FtVXNRMEZCUVVFc1EwRkJSV1lzVFVGQlFVRXNSMEZCVjI5Q0xFTkJRVUZCTEVOQlFVVndRaXhOUVVGQlFTeEZRVU5yUWl4RFFVRkJMRWRCUVRkQ2EwSXNSVUZCUVVFc1EwRkJSMGdzUTBGQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVkTExFTkJRVUZCTEVOQlFVY3NRMEZCUVN4RFFVRkhUQ3hEUVVGQlFTeERRVUZGWml4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVjelFrNHNTVUZCUVVFc1EwRkJTMmRYTEU5QlFVRkJMRU5CUVZVc1UwRkJVME1zUlVGQlFVRXNRMEZCUVVFc1EwRkRkRUl4Vml4WFFVRkJRU3hEUVVGak1GWXNSVUZCUVVFc1EwRkJRVUVzUTBGSGFFSXNWVUZCUVN4RFFVZEZMRWxCUVVsRExFMUJRVUZCTEVOQlFYbENMRmRCUVVFc1JVRkJRU3hQUVVGVVF5eEpRVUZCUVN4RFFVRjNRa0VzU1VGQlFVRXNRMEZCUzBRc1RVRkJRVUVzUlVGQlZVTXNTVUZCUVVFc1EwRkJTME1zVVVGQlFVRXNRMEZCV1N4SlFVRkJMRU5CUXpWRkxFZEJRVWxHTEUxQlFVRkJMRVZCUVZWQkxFMUJRVUZCTEVOQlFVOUhMR1ZCUVVGQkxFTkJRV2xDTEVOQlIzQkRjbGNzU1VGQlFVRXNRMEZCUzJkWExFOUJRVUZCTEVOQlFWRXNVMEZCVXpOVkxFTkJRVUZCTEVOQlFVZFBMRU5CUVVGQkxFTkJRVUZCTEVOQlEzWkNMRWxCUVVsNlFpeERRVUZCUVN4RFFVRkhLMGNzUTBGQlFVRXNRMEZCU1N4SlFVRkplRWNzVlVGQlFVRXNRMEZCVjJ0Q0xFTkJRVUZCTEVOQlFVRkJMRU5CUXpGQ0xFbEJRVXQ2UWl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTWGxDTEVOQlFVRkJMRU5CUVVkNlFpeERRVUZCUVN4RlFVaFVMRXRCUVVFc1EwRkpVaXRXTEUxQlFVRkJMRU5CUVU5SExHVkJRVUZCTEVOQlFXZENibEFzUTBGQlFVRXNRMEZCUlRSRUxGRkJRVUZCTEVOQlFWTXpTeXhEUVVGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlowZ3NTVUZCUVVFc1EwRkJTMjFRTEVkQlFVRkJMRU5CUVVreFZTeERRVUZCUVN4RFFVRkpla0lzUTBGQlFVRXNRMEZLT1VNc1MwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVTFXTEVsQlFVdEJMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmVVSXNRMEZCUVVFc1EwRkJSM3BDTEVOQlFVRkJMRVZCUVVGQkxFTkJRVXRyUWl4RFFVRkJRU3hEUVVGRmJFSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlN5dEhMRU5CUVVGQkxFTkJRVVV2Unl4RFFVRkJRU3hEUVVGQlFTeERRVU5xUTNkVExFOUJRVUZCTEVOQlFWRjZUQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4SlFVVnJRaXhYUVVGQkxFVkJRVUVzVlVGQlduRlFMRWRCUldoQ1RDeE5RVUZCUVN4RFFVRlRTeXhoUVVGUkxFTkJRVUVzUlVGRFNFd3NUVUZCUVVFc1EwRkJUM1JETEZkQlFVRkJMRVZCUTI1Q05WUXNTVUZCUVVFc1EwRkJTMmRYTEU5QlFVRkJMRU5CUVZFc1UwRkJVek5WTEVOQlFVRkJMRU5CUVVkUExFTkJRVUZCTEVOQlFVRkJMRU5CUTNaQ0xFbEJRVWw2UWl4RFFVRkJRU3hEUVVGSEswY3NRMEZCUVVFc1EwRkJTV2RRTEUxQlFVRkJMRU5CUVU5MFF5eFhRVUZCUVN4RFFVRlphRk1zUTBGQlFVRXNRMEZCUVVFc1EwRkRPVUlzU1VGQlMzcENMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSmVVSXNRMEZCUVVFc1EwRkJSM3BDTEVOQlFVRkJMRVZCUVVGQkxFTkJRVXRyUWl4RFFVRkJRU3hEUVVGRmJFSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlN5dEhMRU5CUVVGQkxFTkJRVVV2Unl4RFFVRkJRU3hEUVVGQlFTeERRVU5xUTNkVExFOUJRVUZCTEVOQlFWRjZUQ3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRWFJDYUVJc1JVRkJRU3hEUVRGNlJVRXNRMEZ6TVVWeFFpeFhRVUZCTEVWQlFVRXNVVUZCV0hOUUxFVkJRVEJDUVN4eFFrRkJUME1zUTBGQlZVUXNjVUpCUVU5RExFTkJRVmRPTEVsQlFVRkJMRU5CUVV0dVZ5eEpRVUZCUVN4RFFVRlBiVmNzU1VGQlFVRXNRMEZCUzI1WExFbEJRVUZCTEVWQlFWRXNSVUZCUVN4RFFVRkJMRU5CUVVFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNlcyNTFiR3hkZlE9PSIsIiFmdW5jdGlvbihyb290LGYpe1widXNlIHN0cmljdFwiO1widW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWYoKTpyb290Lm5hY2w/cm9vdC5uYWNsLnV0aWw9ZigpOihyb290Lm5hY2w9e30scm9vdC5uYWNsLnV0aWw9ZigpKX0odGhpcyxmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO3ZhciB1dGlsPXt9O2Z1bmN0aW9uIHZhbGlkYXRlQmFzZTY0KHMpe2lmKCEvXig/OltBLVphLXowLTkrXFwvXXsyfVtBLVphLXowLTkrXFwvXXsyfSkqKD86W0EtWmEtejAtOStcXC9dezJ9PT18W0EtWmEtejAtOStcXC9dezN9PSk/JC8udGVzdChzKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiaW52YWxpZCBlbmNvZGluZ1wiKX1yZXR1cm4gdXRpbC5kZWNvZGVVVEY4PWZ1bmN0aW9uKHMpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBzKXRocm93IG5ldyBUeXBlRXJyb3IoXCJleHBlY3RlZCBzdHJpbmdcIik7dmFyIGksZD11bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQocykpLGI9bmV3IFVpbnQ4QXJyYXkoZC5sZW5ndGgpO2ZvcihpPTA7aTxkLmxlbmd0aDtpKyspYltpXT1kLmNoYXJDb2RlQXQoaSk7cmV0dXJuIGJ9LHV0aWwuZW5jb2RlVVRGOD1mdW5jdGlvbihhcnIpe3ZhciBpLHM9W107Zm9yKGk9MDtpPGFyci5sZW5ndGg7aSsrKXMucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGFycltpXSkpO3JldHVybiBkZWNvZGVVUklDb21wb25lbnQoZXNjYXBlKHMuam9pbihcIlwiKSkpfSxcInVuZGVmaW5lZFwiPT10eXBlb2YgYXRvYj92b2lkIDAhPT1CdWZmZXIuZnJvbT8odXRpbC5lbmNvZGVCYXNlNjQ9ZnVuY3Rpb24oYXJyKXtyZXR1cm4gQnVmZmVyLmZyb20oYXJyKS50b1N0cmluZyhcImJhc2U2NFwiKX0sdXRpbC5kZWNvZGVCYXNlNjQ9ZnVuY3Rpb24ocyl7cmV0dXJuIHZhbGlkYXRlQmFzZTY0KHMpLG5ldyBVaW50OEFycmF5KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKEJ1ZmZlci5mcm9tKHMsXCJiYXNlNjRcIiksMCkpfSk6KHV0aWwuZW5jb2RlQmFzZTY0PWZ1bmN0aW9uKGFycil7cmV0dXJuIG5ldyBCdWZmZXIoYXJyKS50b1N0cmluZyhcImJhc2U2NFwiKX0sdXRpbC5kZWNvZGVCYXNlNjQ9ZnVuY3Rpb24ocyl7cmV0dXJuIHZhbGlkYXRlQmFzZTY0KHMpLG5ldyBVaW50OEFycmF5KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG5ldyBCdWZmZXIocyxcImJhc2U2NFwiKSwwKSl9KToodXRpbC5lbmNvZGVCYXNlNjQ9ZnVuY3Rpb24oYXJyKXt2YXIgaSxzPVtdLGxlbj1hcnIubGVuZ3RoO2ZvcihpPTA7aTxsZW47aSsrKXMucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGFycltpXSkpO3JldHVybiBidG9hKHMuam9pbihcIlwiKSl9LHV0aWwuZGVjb2RlQmFzZTY0PWZ1bmN0aW9uKHMpe3ZhbGlkYXRlQmFzZTY0KHMpO3ZhciBpLGQ9YXRvYihzKSxiPW5ldyBVaW50OEFycmF5KGQubGVuZ3RoKTtmb3IoaT0wO2k8ZC5sZW5ndGg7aSsrKWJbaV09ZC5jaGFyQ29kZUF0KGkpO3JldHVybiBifSksdXRpbH0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW01aFkyd3RkWFJwYkM1cWN5SmRMQ0p1WVcxbGN5STZXeUp5YjI5MElpd2laaUlzSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKdVlXTnNJaXdpZFhScGJDSXNJblJvYVhNaUxDSjJZV3hwWkdGMFpVSmhjMlUyTkNJc0luTWlMQ0owWlhOMElpd2lWSGx3WlVWeWNtOXlJaXdpWkdWamIyUmxWVlJHT0NJc0lta2lMQ0prSWl3aWRXNWxjMk5oY0dVaUxDSmxibU52WkdWVlVrbERiMjF3YjI1bGJuUWlMQ0ppSWl3aVZXbHVkRGhCY25KaGVTSXNJbXhsYm1kMGFDSXNJbU5vWVhKRGIyUmxRWFFpTENKbGJtTnZaR1ZWVkVZNElpd2lZWEp5SWl3aWNIVnphQ0lzSWxOMGNtbHVaeUlzSW1aeWIyMURhR0Z5UTI5a1pTSXNJbVJsWTI5a1pWVlNTVU52YlhCdmJtVnVkQ0lzSW1WelkyRndaU0lzSW1wdmFXNGlMQ0poZEc5aUlpd2lRblZtWm1WeUlpd2labkp2YlNJc0ltVnVZMjlrWlVKaGMyVTJOQ0lzSW5SdlUzUnlhVzVuSWl3aVpHVmpiMlJsUW1GelpUWTBJaXdpUVhKeVlYa2lMQ0p3Y205MGIzUjVjR1VpTENKemJHbGpaU0lzSW1OaGJHd2lMQ0pzWlc0aUxDSmlkRzloSWwwc0ltMWhjSEJwYm1keklqb2lRMEZGUXl4VFFVRlRRU3hMUVVGTlF5eEhRVU5rTEdGQlEzTkNMRzlDUVVGWVF5eFJRVUV3UWtFc1QwRkJUME1zVVVGQlUwUXNUMEZCVDBNc1VVRkJWVVlzU1VGRE4wUkVMRXRCUVV0SkxFdEJRVTFLTEV0QlFVdEpMRXRCUVV0RExFdEJRVTlLTEV0QlJXNURSQ3hMUVVGTFNTeExRVUZQTEVkQlExcEtMRXRCUVV0SkxFdEJRVXRETEV0QlFVOUtMRXRCVG5KQ0xFTkJVVVZMTEV0QlFVMHNWMEZEVGl4aFFVVkJMRWxCUVVsRUxFdEJRVThzUjBGRldDeFRRVUZUUlN4bFFVRmxReXhIUVVOMFFpeEpRVUZOTEhWR1FVRjFSa01zUzBGQlMwUXNSMEZEYUVjc1RVRkJUU3hKUVVGSlJTeFZRVUZWTEc5Q1FUWkVlRUlzVDBGNlJFRk1MRXRCUVV0TkxGZEJRV0VzVTBGQlUwZ3NSMEZEZWtJc1IwRkJhVUlzYVVKQlFVNUJMRVZCUVdkQ0xFMUJRVTBzU1VGQlNVVXNWVUZCVlN4dFFrRkRMME1zU1VGQlNVVXNSVUZCUjBNc1JVRkJTVU1zVTBGQlUwTXNiVUpCUVcxQ1VDeEpRVUZMVVN4RlFVRkpMRWxCUVVsRExGZEJRVmRLTEVWQlFVVkxMRkZCUTJwRkxFbEJRVXRPTEVWQlFVa3NSVUZCUjBFc1JVRkJTVU1zUlVGQlJVc3NUMEZCVVU0c1NVRkJTMGtzUlVGQlJVb3NSMEZCUzBNc1JVRkJSVTBzVjBGQlYxQXNSMEZEYmtRc1QwRkJUMGtzUjBGSFZGZ3NTMEZCUzJVc1YwRkJZU3hUUVVGVFF5eExRVU42UWl4SlFVRkpWQ3hGUVVGSFNpeEZRVUZKTEVkQlExZ3NTVUZCUzBrc1JVRkJTU3hGUVVGSFFTeEZRVUZKVXl4SlFVRkpTQ3hQUVVGUlRpeEpRVUZMU2l4RlFVRkZZeXhMUVVGTFF5eFBRVUZQUXl4aFFVRmhTQ3hKUVVGSlZDeExRVU5vUlN4UFFVRlBZU3h0UWtGQmJVSkRMRTlCUVU5c1FpeEZRVUZGYlVJc1MwRkJTeXhQUVVkMFFpeHZRa0ZCVkVNc1ZVRkhhMElzU1VGQmFFSkRMRTlCUVU5RExFMUJSV2hDZWtJc1MwRkJTekJDTEdGQlFXVXNVMEZCVlZZc1MwRkRNVUlzVDBGQlQxRXNUMEZCVDBNc1MwRkJTMVFzUzBGQlMxY3NVMEZCVXl4WFFVZHlRek5DTEV0QlFVczBRaXhoUVVGbExGTkJRVlY2UWl4SFFVVTFRaXhQUVVSQlJDeGxRVUZsUXl4SFFVTlNMRWxCUVVsVExGZEJRVmRwUWl4TlFVRk5ReXhWUVVGVlF5eE5RVUZOUXl4TFFVRkxVaXhQUVVGUFF5eExRVUZMZEVJc1JVRkJSeXhWUVVGWExFOUJTemRGU0N4TFFVRkxNRUlzWVVGQlpTeFRRVUZWVml4TFFVTTFRaXhQUVVGUExFbEJRVXRSTEU5QlFVOVNMRXRCUVUxWExGTkJRVk1zVjBGSGNFTXpRaXhMUVVGTE5FSXNZVUZCWlN4VFFVRlRla0lzUjBGRk0wSXNUMEZFUVVRc1pVRkJaVU1zUjBGRFVpeEpRVUZKVXl4WFFVRlhhVUlzVFVGQlRVTXNWVUZCVlVNc1RVRkJUVU1zUzBGQlN5eEpRVUZKVWl4UFFVRlBja0lzUlVGQlJ5eFZRVUZYTEU5QlR6bEZTQ3hMUVVGTE1FSXNZVUZCWlN4VFFVRlRWaXhMUVVNelFpeEpRVUZKVkN4RlFVRkhTaXhGUVVGSkxFZEJRVWs0UWl4SlFVRk5ha0lzU1VGQlNVZ3NUMEZEZWtJc1NVRkJTMDRzUlVGQlNTeEZRVUZIUVN4RlFVRkpNRUlzU1VGQlN6RkNMRWxCUVV0S0xFVkJRVVZqTEV0QlFVdERMRTlCUVU5RExHRkJRV0ZJTEVsQlFVbFVMRXRCUTNwRUxFOUJRVTh5UWl4TFFVRkxMMElzUlVGQlJXMUNMRXRCUVVzc1RVRkhja0owUWl4TFFVRkxORUlzWVVGQlpTeFRRVUZUZWtJc1IwRkRNMEpFTEdWQlFXVkRMRWRCUTJZc1NVRkJTVWtzUlVGQlIwTXNSVUZCU1dVc1MwRkJTM0JDTEVkQlFVbFJMRVZCUVVrc1NVRkJTVU1zVjBGQlYwb3NSVUZCUlVzc1VVRkRla01zU1VGQlMwNHNSVUZCU1N4RlFVRkhRU3hGUVVGSlF5eEZRVUZGU3l4UFFVRlJUaXhKUVVGTFNTeEZRVUZGU2l4SFFVRkxReXhGUVVGRlRTeFhRVUZYVUN4SFFVTnVSQ3hQUVVGUFNTeEpRVXRLV0NJc0ltWnBiR1VpT2lJdmFHOXRaUzl0YUMxalltOXVMMmR2ZHk5emNtTXZaMmwwYUhWaUxtTnZiUzlyYm1Ga2FDOXVhV3gwWVd4ckwzTjBZWFJwWXk5MGFHVnRaWE12YTI1aFpHZ3ZjM1JoZEdsakwyeHBZaTEzYUdsemNHVnlNaTl1YjJSbFgyMXZaSFZzWlhNdmRIZGxaWFJ1WVdOc0xYVjBhV3d2Ym1GamJDMTFkR2xzTG1wekluMD0iLCJ2YXIgXyRpc0FyZ3VtZW50c18yMSA9IHt9O1xuXCJ1c2Ugc3RyaWN0XCI7dmFyIGhhc1RvU3RyaW5nVGFnPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC50b1N0cmluZ1RhZyx0b1N0cj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLGlzU3RhbmRhcmRBcmd1bWVudHM9ZnVuY3Rpb24odmFsdWUpe3JldHVybiEoaGFzVG9TdHJpbmdUYWcmJnZhbHVlJiZcIm9iamVjdFwiPT10eXBlb2YgdmFsdWUmJlN5bWJvbC50b1N0cmluZ1RhZyBpbiB2YWx1ZSkmJlwiW29iamVjdCBBcmd1bWVudHNdXCI9PT10b1N0ci5jYWxsKHZhbHVlKX0saXNMZWdhY3lBcmd1bWVudHM9ZnVuY3Rpb24odmFsdWUpe3JldHVybiEhaXNTdGFuZGFyZEFyZ3VtZW50cyh2YWx1ZSl8fG51bGwhPT12YWx1ZSYmXCJvYmplY3RcIj09dHlwZW9mIHZhbHVlJiZcIm51bWJlclwiPT10eXBlb2YgdmFsdWUubGVuZ3RoJiZ2YWx1ZS5sZW5ndGg+PTAmJlwiW29iamVjdCBBcnJheV1cIiE9PXRvU3RyLmNhbGwodmFsdWUpJiZcIltvYmplY3QgRnVuY3Rpb25dXCI9PT10b1N0ci5jYWxsKHZhbHVlLmNhbGxlZSl9LHN1cHBvcnRzU3RhbmRhcmRBcmd1bWVudHM9ZnVuY3Rpb24oKXtyZXR1cm4gaXNTdGFuZGFyZEFyZ3VtZW50cyhhcmd1bWVudHMpfSgpO2lzU3RhbmRhcmRBcmd1bWVudHMuaXNMZWdhY3lBcmd1bWVudHM9aXNMZWdhY3lBcmd1bWVudHMsXyRpc0FyZ3VtZW50c18yMT1zdXBwb3J0c1N0YW5kYXJkQXJndW1lbnRzP2lzU3RhbmRhcmRBcmd1bWVudHM6aXNMZWdhY3lBcmd1bWVudHM7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltbHVaR1Y0TG1weklsMHNJbTVoYldWeklqcGJJbWhoYzFSdlUzUnlhVzVuVkdGbklpd2lVM2x0WW05c0lpd2lkRzlUZEhKcGJtZFVZV2NpTENKMGIxTjBjaUlzSWs5aWFtVmpkQ0lzSW5CeWIzUnZkSGx3WlNJc0luUnZVM1J5YVc1bklpd2lhWE5UZEdGdVpHRnlaRUZ5WjNWdFpXNTBjeUlzSW5aaGJIVmxJaXdpWTJGc2JDSXNJbWx6VEdWbllXTjVRWEpuZFcxbGJuUnpJaXdpYkdWdVozUm9JaXdpWTJGc2JHVmxJaXdpYzNWd2NHOXlkSE5UZEdGdVpHRnlaRUZ5WjNWdFpXNTBjeUlzSW1GeVozVnRaVzUwY3lJc0ltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaVhTd2liV0Z3Y0dsdVozTWlPaUk3UVVGQlFTeFpRVUZCTEVOQlJVRXNTVUZCU1VFc1kwRkJRVUVzUTBGQmJVTXNWVUZCUVN4RlFVRkJMRTlCUVZoRExFMUJRVUZCTEVWQlFYVkVMRkZCUVVFc1JVRkJRU3hQUVVGMlFrRXNUVUZCUVVFc1EwRkJUME1zVjBGQlFVRXNRMEZETDBSRExFdEJRVUZCTEVOQlFWRkRMRTFCUVVGQkxFTkJRVTlETEZOQlFVRkJMRU5CUVZWRExGRkJRVUZCTEVOQlJYcENReXh0UWtGQlFVRXNRMEZCYzBJc1UwRkJjVUpETEV0QlFVRkJMRU5CUVVGQkxFTkJRemxETEUxQlFVRXNSVUZCU1ZJc1kwRkJRVUVzUlVGQmEwSlJMRXRCUVVGQkxFVkJRVEJDTEZGQlFVRXNSVUZCUVN4UFFVRldRU3hMUVVGQlFTeEZRVUZ6UWxBc1RVRkJRVUVzUTBGQlQwTXNWMEZCUVVFc1NVRkJaVTBzUzBGQlFVRXNRMEZCUVVFc1JVRkhja1FzYjBKQlFVRXNSMEZCZEVKTUxFdEJRVUZCTEVOQlFVMU5MRWxCUVVGQkxFTkJRVXRFTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIyWkZMR2xDUVVGQlFTeERRVUZ2UWl4VFFVRnhRa1lzUzBGQlFVRXNRMEZCUVVFc1EwRkROVU1zVFVGQlFTeERRVUZCTEVOQlFVbEVMRzFDUVVGQlFTeERRVUZ2UWtNc1MwRkJRVUVzUTBGQlFVRXNSVUZIVUN4SlFVRkJMRWRCUVZaQkxFdEJRVUZCTEVWQlExY3NVVUZCUVN4RlFVRkJMRTlCUVZaQkxFdEJRVUZCTEVWQlEybENMRkZCUVVFc1JVRkJRU3hQUVVGcVFrRXNTMEZCUVVFc1EwRkJUVWNzVFVGQlFVRXNSVUZEWWtnc1MwRkJRVUVzUTBGQlRVY3NUVUZCUVVFc1JVRkJWU3hEUVVGQkxFVkJRMDBzWjBKQlFVRXNSMEZCZEVKU0xFdEJRVUZCTEVOQlFVMU5MRWxCUVVGQkxFTkJRVXRFTEV0QlFVRkJMRU5CUVVGQkxFVkJRMnRDTEcxQ1FVRkJMRWRCUVRkQ1RDeExRVUZCUVN4RFFVRk5UU3hKUVVGQlFTeERRVUZMUkN4TFFVRkJRU3hEUVVGTlNTeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRtUXl4NVFrRkJRVUVzUTBGQk5rSXNWVUZCUVN4RFFVTm9ReXhQUVVGUFRpeHRRa0ZCUVVFc1EwRkJiMEpQTEZOQlFVRkJMRU5CUVVGQkxFTkJSRWtzUlVGQlFTeERRVWxvUTFBc2JVSkJRVUZCTEVOQlFXOUNSeXhwUWtGQlFVRXNRMEZCYjBKQkxHbENRVUZCUVN4RFFVVjRRMHNzWjBKQlFVOURMRU5CUVZWSUxIbENRVUZCUVN4RFFVRTBRazRzYlVKQlFVRkJMRU5CUVhOQ1J5eHBRa0ZCUVVFc1EwRkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIF9fdG9TdHJfMjI9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZyxmblRvU3RyPUZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZyxpc0ZuUmVnZXg9L15cXHMqKD86ZnVuY3Rpb24pP1xcKi8sX19oYXNUb1N0cmluZ1RhZ18yMj1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wudG9TdHJpbmdUYWcsZ2V0UHJvdG89T2JqZWN0LmdldFByb3RvdHlwZU9mLGdlbmVyYXRvckZ1bmM9ZnVuY3Rpb24oKXtpZighX19oYXNUb1N0cmluZ1RhZ18yMilyZXR1cm4hMTt0cnl7cmV0dXJuIEZ1bmN0aW9uKFwicmV0dXJuIGZ1bmN0aW9uKigpIHt9XCIpKCl9Y2F0Y2goZSl7fX0oKSxHZW5lcmF0b3JGdW5jdGlvbj1nZW5lcmF0b3JGdW5jP2dldFByb3RvKGdlbmVyYXRvckZ1bmMpOnt9O3ZhciBfJGlzR2VuZXJhdG9yRnVuY3Rpb25fMjI9ZnVuY3Rpb24oZm4pe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGZuJiYoISFpc0ZuUmVnZXgudGVzdChmblRvU3RyLmNhbGwoZm4pKXx8KF9faGFzVG9TdHJpbmdUYWdfMjI/Z2V0UHJvdG8oZm4pPT09R2VuZXJhdG9yRnVuY3Rpb246XCJbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXVwiPT09X190b1N0cl8yMi5jYWxsKGZuKSkpfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1sdVpHVjRMbXB6SWwwc0ltNWhiV1Z6SWpwYkluUnZVM1J5SWl3aVQySnFaV04wSWl3aWNISnZkRzkwZVhCbElpd2lkRzlUZEhKcGJtY2lMQ0ptYmxSdlUzUnlJaXdpUm5WdVkzUnBiMjRpTENKcGMwWnVVbVZuWlhnaUxDSm9ZWE5VYjFOMGNtbHVaMVJoWnlJc0lsTjViV0p2YkNJc0luUnZVM1J5YVc1blZHRm5JaXdpWjJWMFVISnZkRzhpTENKblpYUlFjbTkwYjNSNWNHVlBaaUlzSW1kbGJtVnlZWFJ2Y2taMWJtTWlMQ0psSWl3aVoyVjBSMlZ1WlhKaGRHOXlSblZ1WXlJc0lrZGxibVZ5WVhSdmNrWjFibU4wYVc5dUlpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SXNJbVp1SWl3aWRHVnpkQ0lzSW1OaGJHd2lYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRmxCUVVFc1EwRkZRU3hKUVVGSlFTeFZRVUZCUVN4RFFVRlJReXhOUVVGQlFTeERRVUZQUXl4VFFVRkJRU3hEUVVGVlF5eFJRVUZCUVN4RFFVTjZRa01zVDBGQlFVRXNRMEZCVlVNc1VVRkJRVUVzUTBGQlUwZ3NVMEZCUVVFc1EwRkJWVU1zVVVGQlFVRXNRMEZETjBKSExGTkJRVUZCTEVOQlFWa3NjVUpCUVVFc1EwRkRXa01zYlVKQlFVRkJMRU5CUVcxRExGVkJRVUVzUlVGQlFTeFBRVUZZUXl4TlFVRkJRU3hGUVVGMVJDeFJRVUZCTEVWQlFVRXNUMEZCZGtKQkxFMUJRVUZCTEVOQlFVOURMRmRCUVVGQkxFTkJReTlFUXl4UlFVRkJRU3hEUVVGWFZDeE5RVUZCUVN4RFFVRlBWU3hqUVVGQlFTeERRVlZzUWtNc1lVRkJRVUVzUTBGVWJVSXNWVUZCUVN4RFFVTjBRaXhIUVVGQkxFTkJRVXRNTEcxQ1FVRkJRU3hEUVVOS0xFMUJRVUVzUTBGQlR5eERRVUZCTEVOQlJWSXNSMEZCUVN4RFFVTkRMRTlCUVU5R0xGRkJRVUZCTEVOQlFWTXNkVUpCUVVFc1EwRkJWRUVzUlVGQlFVRXNRMEZEVGl4TlFVRlBVU3hEUVVGQlFTeERRVUZCUVN4RlFVRkJRU3hEUVVkVlF5eEZRVUZCUVN4RFFVTm9Ra01zYVVKQlFVRkJMRU5CUVc5Q1NDeGhRVUZCUVN4RFFVRm5Ra1lzVVVGQlFVRXNRMEZCVTBVc1lVRkJRVUVzUTBGQlFVRXNRMEZCYVVJc1JVRkJRU3hEUVVWc1JVa3NORUpCUVU5RExFTkJRVlVzVTBGQk5rSkRMRVZCUVVGQkxFTkJRVUZCTEVOQlF6ZERMRTFCUVd0Q0xGVkJRVUVzUlVGQlFTeFBRVUZRUVN4RlFVRkJRU3hIUVVGQlFTeERRVUZCUVN4RFFVZFFXaXhUUVVGQlFTeERRVUZWWVN4SlFVRkJRU3hEUVVGTFppeFBRVUZCUVN4RFFVRlJaMElzU1VGQlFVRXNRMEZCUzBZc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1IwRkhNMEpZTEcxQ1FVRkJRU3hEUVVsRlJ5eFJRVUZCUVN4RFFVRlRVU3hGUVVGQlFTeERRVUZCUVN4SFFVRlJTQ3hwUWtGQlFVRXNRMEZHVWl3MFFrRkJRU3hIUVVSTVppeFZRVUZCUVN4RFFVRk5iMElzU1VGQlFVRXNRMEZCUzBZc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNlcyNTFiR3hkZlE9PSIsInZhciBoYXNPd249T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSx0b1N0cmluZz1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO3ZhciBfJGZvcmVhY2hfMTQ9ZnVuY3Rpb24ob2JqLGZuLGN0eCl7aWYoXCJbb2JqZWN0IEZ1bmN0aW9uXVwiIT09dG9TdHJpbmcuY2FsbChmbikpdGhyb3cgbmV3IFR5cGVFcnJvcihcIml0ZXJhdG9yIG11c3QgYmUgYSBmdW5jdGlvblwiKTt2YXIgbD1vYmoubGVuZ3RoO2lmKGw9PT0rbClmb3IodmFyIGk9MDtpPGw7aSsrKWZuLmNhbGwoY3R4LG9ialtpXSxpLG9iaik7ZWxzZSBmb3IodmFyIGsgaW4gb2JqKWhhc093bi5jYWxsKG9iaixrKSYmZm4uY2FsbChjdHgsb2JqW2tdLGssb2JqKX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltbHVaR1Y0TG1weklsMHNJbTVoYldWeklqcGJJbWhoYzA5M2JpSXNJazlpYW1WamRDSXNJbkJ5YjNSdmRIbHdaU0lzSW1oaGMwOTNibEJ5YjNCbGNuUjVJaXdpZEc5VGRISnBibWNpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aWIySnFJaXdpWm00aUxDSmpkSGdpTENKallXeHNJaXdpVkhsd1pVVnljbTl5SWl3aWJDSXNJbXhsYm1kMGFDSXNJbWtpTENKcklsMHNJbTFoY0hCcGJtZHpJam9pUVVGRFFTeEpRVUZKUVN4TlFVRkJRU3hEUVVGVFF5eE5RVUZCUVN4RFFVRlBReXhUUVVGQlFTeERRVUZWUXl4alFVRkJRU3hEUVVNeFFrTXNVVUZCUVVFc1EwRkJWMGdzVFVGQlFVRXNRMEZCVDBNc1UwRkJRVUVzUTBGQlZVVXNVVUZCUVVFc1EwRkZhRU5ETEdkQ1FVRlBReXhEUVVGVkxGTkJRV3RDUXl4SFFVRkJRU3hEUVVGTFF5eEZRVUZCUVN4RFFVRkpReXhIUVVGQlFTeERRVUZCUVN4RFFVTjRReXhIUVVFd1FpeHRRa0ZCUVN4SFFVRjBRa3dzVVVGQlFVRXNRMEZCVTAwc1NVRkJRVUVzUTBGQlMwWXNSVUZCUVVFc1EwRkJRVUVzUTBGRFpDeE5RVUZOTEVsQlFVbEhMRk5CUVVGQkxFTkJRVlVzTmtKQlFVRXNRMEZCUVN4RFFVVjRRaXhKUVVGSlF5eERRVUZCUVN4RFFVRkpUQ3hIUVVGQlFTeERRVUZKVFN4TlFVRkJRU3hEUVVOYUxFZEJRVWxFTEVOQlFVRkJMRWRCUVVGQkxFTkJRVTlCTEVOQlFVRkJMRU5CUTFBc1NVRkJTeXhKUVVGSlJTeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1VZc1EwRkJRVUVzUTBGQlIwVXNRMEZCUVVFc1JVRkJRVUVzUTBGRGJrSk9MRVZCUVVGQkxFTkJRVWRGTEVsQlFVRkJMRU5CUVV0RUxFZEJRVUZCTEVOQlFVdEdMRWRCUVVGQkxFTkJRVWxQTEVOQlFVRkJMRU5CUVVGQkxFTkJRVWxCTEVOQlFVRkJMRU5CUVVkUUxFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJSelZDTEVsQlFVc3NTVUZCU1ZFc1EwRkJRVUVzU1VGQlMxSXNSMEZCUVVFc1EwRkRUbEFzVFVGQlFVRXNRMEZCVDFVc1NVRkJRVUVzUTBGQlMwZ3NSMEZCUVVFc1EwRkJTMUVzUTBGQlFVRXNRMEZCUVVFc1JVRkRha0pRTEVWQlFVRkJMRU5CUVVkRkxFbEJRVUZCTEVOQlFVdEVMRWRCUVVGQkxFTkJRVXRHTEVkQlFVRkJMRU5CUVVsUkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVsQkxFTkJRVUZCTEVOQlFVZFNMRWRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sdHVkV3hzWFgwPSIsInZhciBfJGFycmF5RmlsdGVyXzM9ZnVuY3Rpb24oYXJyLGZuLHNlbGYpe2lmKGFyci5maWx0ZXIpcmV0dXJuIGFyci5maWx0ZXIoZm4sc2VsZik7aWYobnVsbD09YXJyKXRocm93IG5ldyBUeXBlRXJyb3I7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZm4pdGhyb3cgbmV3IFR5cGVFcnJvcjtmb3IodmFyIHJldD1bXSxpPTA7aTxhcnIubGVuZ3RoO2krKylpZihfX2hhc093bl8zLmNhbGwoYXJyLGkpKXt2YXIgdmFsPWFycltpXTtmbi5jYWxsKHNlbGYsdmFsLGksYXJyKSYmcmV0LnB1c2godmFsKX1yZXR1cm4gcmV0fTt2YXIgX19oYXNPd25fMz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx1WkdWNExtcHpJbDBzSW01aGJXVnpJanBiSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKaGNuSWlMQ0ptYmlJc0luTmxiR1lpTENKbWFXeDBaWElpTENKVWVYQmxSWEp5YjNJaUxDSnlaWFFpTENKcElpd2liR1Z1WjNSb0lpd2lhR0Z6VDNkdUlpd2lZMkZzYkNJc0luWmhiQ0lzSW5CMWMyZ2lMQ0pQWW1wbFkzUWlMQ0p3Y205MGIzUjVjR1VpTENKb1lYTlBkMjVRY205d1pYSjBlU0pkTENKdFlYQndhVzVuY3lJNklrRkJWMEZCTEcxQ1FVRlBReXhEUVVGVkxGTkJRVlZETEVkQlFVRkJMRU5CUVV0RExFVkJRVUZCTEVOQlFVbERMRWxCUVVGQkxFTkJRVUZCTEVOQlEyeERMRWRCUVVsR0xFZEJRVUZCTEVOQlFVbEhMRTFCUVVGQkxFTkJRVkVzVDBGQlQwZ3NSMEZCUVVFc1EwRkJTVWNzVFVGQlFVRXNRMEZCVDBZc1JVRkJRVUVzUTBGQlNVTXNTVUZCUVVFc1EwRkJRVUVzUTBGRGRFTXNSMEZCU1N4SlFVRkJMRVZCUVZkR0xFZEJRVUZCTEVOQlFYRkNMRTFCUVUwc1NVRkJTVWtzVTBGQlFVRXNRMEZET1VNc1IwRkJTU3hWUVVGQkxFVkJRVUVzVDBGQmNVSklMRVZCUVVGQkxFTkJRVWtzVFVGQlRTeEpRVUZKUnl4VFFVRkJRU3hEUVVWMlF5eEpRVVJCTEVsQlFVbERMRWRCUVVGQkxFTkJRVTBzUlVGQlFTeERRVU5FUXl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVTRzUjBGQlFVRXNRMEZCU1U4c1RVRkJRVUVzUTBGQlVVUXNRMEZCUVVFc1JVRkJRVUVzUTBGRE9VSXNSMEZCUzBVc1ZVRkJRVUVzUTBGQlQwTXNTVUZCUVVFc1EwRkJTMVFzUjBGQlFVRXNRMEZCUzAwc1EwRkJRVUVzUTBGQlFVRXNRMEZCZEVJc1EwRkRRU3hKUVVGSlNTeEhRVUZCUVN4RFFVRk5WaXhIUVVGQlFTeERRVUZKVFN4RFFVRkJRU3hEUVVGQlFTeERRVU5XVEN4RlFVRkJRU3hEUVVGSFVTeEpRVUZCUVN4RFFVRkxVQ3hKUVVGQlFTeERRVUZOVVN4SFFVRkJRU3hEUVVGTFNpeERRVUZCUVN4RFFVRkhUaXhIUVVGQlFTeERRVUZCUVN4RlFVRk5TeXhIUVVGQlFTeERRVUZKVFN4SlFVRkJRU3hEUVVGTFJDeEhRVUZCUVN4RFFVRkJRU3hEUVVVelF5eFBRVUZQVEN4SFFVRkJRU3hEUVVGQlFTeERRVWRVTEVsQlFVbEhMRlZCUVVGQkxFTkJRVk5KTEUxQlFVRkJMRU5CUVU5RExGTkJRVUZCTEVOQlFWVkRMR05CUVVGQkxFTkJRVUZCSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2x0dWRXeHNYWDA9IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIGZpbHRlcj1yZXF1aXJlKFwiYXJyYXktZmlsdGVyXCIpO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKCl7cmV0dXJuIGZpbHRlcihbXCJCaWdJbnQ2NEFycmF5XCIsXCJCaWdVaW50NjRBcnJheVwiLFwiRmxvYXQzMkFycmF5XCIsXCJGbG9hdDY0QXJyYXlcIixcIkludDE2QXJyYXlcIixcIkludDMyQXJyYXlcIixcIkludDhBcnJheVwiLFwiVWludDE2QXJyYXlcIixcIlVpbnQzMkFycmF5XCIsXCJVaW50OEFycmF5XCIsXCJVaW50OENsYW1wZWRBcnJheVwiXSxmdW5jdGlvbih0eXBlZEFycmF5KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBnbG9iYWxbdHlwZWRBcnJheV19KX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx1WkdWNExtcHpJbDBzSW01aGJXVnpJanBiSW1acGJIUmxjaUlzSW5KbGNYVnBjbVVpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aWRIbHdaV1JCY25KaGVTSXNJbWRzYjJKaGJDSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNZVUZGUVN4SlFVRkpRU3hQUVVGVFF5eFJRVUZSTEdkQ1FVVnlRa01zVDBGQlQwTXNVVUZCVlN4WFFVTm9RaXhQUVVGUFNDeFBRVUZQTEVOQlEySXNaMEpCUTBFc2FVSkJRMEVzWlVGRFFTeGxRVU5CTEdGQlEwRXNZVUZEUVN4WlFVTkJMR05CUTBFc1kwRkRRU3hoUVVOQkxIRkNRVU5GTEZOQlFWVkpMRmxCUTFvc1RVRkJjVU1zYlVKQlFYWkNReXhQUVVGUFJDSXNJbVpwYkdVaU9pSXZhRzl0WlM5dGFDMWpZbTl1TDJkdmR5OXpjbU12WjJsMGFIVmlMbU52YlM5cmJtRmthQzl1YVd4MFlXeHJMM04wWVhScFl5OTBhR1Z0WlhNdmEyNWhaR2d2YzNSaGRHbGpMMnhwWWkxM2FHbHpjR1Z5TWk5dWIyUmxYMjF2WkhWc1pYTXZZWFpoYVd4aFlteGxMWFI1Y0dWa0xXRnljbUY1Y3k5cGJtUmxlQzVxY3lKOSIsIlwidXNlIHN0cmljdFwiO3ZhciBfJHNoYW1zXzE4PWZ1bmN0aW9uKCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgU3ltYm9sfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXJldHVybiExO2lmKFwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3IpcmV0dXJuITA7dmFyIG9iaj17fSxzeW09U3ltYm9sKFwidGVzdFwiKSxzeW1PYmo9T2JqZWN0KHN5bSk7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHN5bSlyZXR1cm4hMTtpZihcIltvYmplY3QgU3ltYm9sXVwiIT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHN5bSkpcmV0dXJuITE7aWYoXCJbb2JqZWN0IFN5bWJvbF1cIiE9PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChzeW1PYmopKXJldHVybiExO2ZvcihzeW0gaW4gb2JqW3N5bV09NDIsb2JqKXJldHVybiExO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIE9iamVjdC5rZXlzJiYwIT09T2JqZWN0LmtleXMob2JqKS5sZW5ndGgpcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMmJjAhPT1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmopLmxlbmd0aClyZXR1cm4hMTt2YXIgc3ltcz1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iaik7aWYoMSE9PXN5bXMubGVuZ3RofHxzeW1zWzBdIT09c3ltKXJldHVybiExO2lmKCFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwob2JqLHN5bSkpcmV0dXJuITE7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcil7dmFyIGRlc2NyaXB0b3I9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosc3ltKTtpZig0MiE9PWRlc2NyaXB0b3IudmFsdWV8fCEwIT09ZGVzY3JpcHRvci5lbnVtZXJhYmxlKXJldHVybiExfXJldHVybiEwfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5Ob1lXMXpMbXB6SWwwc0ltNWhiV1Z6SWpwYkltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaUxDSlRlVzFpYjJ3aUxDSlBZbXBsWTNRaUxDSm5aWFJQZDI1UWNtOXdaWEowZVZONWJXSnZiSE1pTENKcGRHVnlZWFJ2Y2lJc0ltOWlhaUlzSW5ONWJTSXNJbk41YlU5aWFpSXNJbkJ5YjNSdmRIbHdaU0lzSW5SdlUzUnlhVzVuSWl3aVkyRnNiQ0lzSW10bGVYTWlMQ0pzWlc1bmRHZ2lMQ0puWlhSUGQyNVFjbTl3WlhKMGVVNWhiV1Z6SWl3aWMzbHRjeUlzSW5CeWIzQmxjblI1U1hORmJuVnRaWEpoWW14bElpd2laMlYwVDNkdVVISnZjR1Z5ZEhsRVpYTmpjbWx3ZEc5eUlpd2laR1Z6WTNKcGNIUnZjaUlzSW5aaGJIVmxJaXdpWlc1MWJXVnlZV0pzWlNKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1dVRkJRU3hEUVVkQlFTeGpRVUZQUXl4RFFVRlZMRlZCUVVFc1EwRkRhRUlzUjBGQmMwSXNWVUZCUVN4RlFVRkJMRTlCUVZoRExFMUJRVUZCTEVWQlFXbEZMRlZCUVVFc1JVRkJRU3hQUVVGcVEwTXNUVUZCUVVFc1EwRkJUME1zY1VKQlFVRkJMRU5CUVhkRExFMUJRVUVzUTBGQlR5eERRVUZCTEVOQlEycEhMRWRCUVN0Q0xGRkJRVUVzUlVGQlFTeFBRVUZ3UWtZc1RVRkJRVUVzUTBGQlQwY3NVVUZCUVVFc1EwRkJlVUlzVFVGQlFTeERRVUZQTEVOQlFVRXNRMEZGYkVRc1NVRkJTVU1zUjBGQlFVRXNRMEZCVFN4RlFVRkJMRU5CUTA1RExFZEJRVUZCTEVOQlFVMU1MRTFCUVVGQkxFTkJRVThzVFVGQlFTeERRVUZCTEVOQlEySk5MRTFCUVVGQkxFTkJRVk5NTEUxQlFVRkJMRU5CUVU5SkxFZEJRVUZCTEVOQlFVRkJMRU5CUTNCQ0xFZEJRVzFDTEZGQlFVRXNSVUZCUVN4UFFVRlNRU3hIUVVGQlFTeERRVUZ2UWl4TlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVWMFF5eEhRVUUwUXl4cFFrRkJRU3hIUVVGNFEwb3NUVUZCUVVFc1EwRkJUMDBzVTBGQlFVRXNRMEZCVlVNc1VVRkJRVUVzUTBGQlUwTXNTVUZCUVVFc1EwRkJTMG9zUjBGQlFVRXNRMEZCUVVFc1EwRkJPRUlzVFVGQlFTeERRVUZQTEVOQlFVRXNRMEZEZUVVc1IwRkJLME1zYVVKQlFVRXNSMEZCTTBOS0xFMUJRVUZCTEVOQlFVOU5MRk5CUVVGQkxFTkJRVlZETEZGQlFVRkJMRU5CUVZORExFbEJRVUZCTEVOQlFVdElMRTFCUVVGQkxFTkJRVUZCTEVOQlFXbERMRTFCUVVFc1EwRkJUeXhEUVVGQkxFTkJXVE5GTEVsQlFVdEVMRWRCUVVGQkxFbEJSRXhFTEVkQlFVRkJMRU5CUVVsRExFZEJRVUZCTEVOQlFVRkJMRU5CUkZNc1JVRkJRU3hEUVVWRVJDeEhRVUZCUVN4RFFVRlBMRTFCUVVFc1EwRkJUeXhEUVVGQkxFTkJRekZDTEVkQlFUSkNMRlZCUVVFc1JVRkJRU3hQUVVGb1FrZ3NUVUZCUVVFc1EwRkJUMU1zU1VGQlFVRXNSVUZCYlVRc1EwRkJRU3hIUVVFMVFsUXNUVUZCUVVFc1EwRkJUMU1zU1VGQlFVRXNRMEZCUzA0c1IwRkJRVUVzUTBGQlFVRXNRMEZCUzA4c1RVRkJRVUVzUTBGQlowSXNUVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkZha1lzUjBGQk1FTXNWVUZCUVN4RlFVRkJMRTlCUVM5Q1ZpeE5RVUZCUVN4RFFVRlBWeXh0UWtGQlFVRXNSVUZCYVVZc1EwRkJRU3hIUVVFelExZ3NUVUZCUVVFc1EwRkJUMWNzYlVKQlFVRkJMRU5CUVc5Q1VpeEhRVUZCUVN4RFFVRkJRU3hEUVVGTFR5eE5RVUZCUVN4RFFVRm5RaXhOUVVGQkxFTkJRVThzUTBGQlFTeERRVVV2Unl4SlFVRkpSU3hKUVVGQlFTeERRVUZQV2l4TlFVRkJRU3hEUVVGUFF5eHhRa0ZCUVVFc1EwRkJjMEpGTEVkQlFVRkJMRU5CUVVGQkxFTkJRM2hETEVkQlFXOUNMRU5CUVVFc1IwRkJhRUpUTEVsQlFVRkJMRU5CUVV0R0xFMUJRVUZCTEVWQlFXZENSU3hKUVVGQlFTeERRVUZMTEVOQlFVRXNRMEZCUVN4SFFVRlBVaXhIUVVGQlFTeERRVUZQTEUxQlFVRXNRMEZCVHl4RFFVRkJMRU5CUlc1RUxFZEJRVUVzUTBGQlMwb3NUVUZCUVVFc1EwRkJUMDBzVTBGQlFVRXNRMEZCVlU4c2IwSkJRVUZCTEVOQlFYRkNUQ3hKUVVGQlFTeERRVUZMVEN4SFFVRkJRU3hEUVVGTFF5eEhRVUZCUVN4RFFVRkJRU3hEUVVGUkxFMUJRVUVzUTBGQlR5eERRVUZCTEVOQlJYQkZMRWRCUVN0RExGVkJRVUVzUlVGQlFTeFBRVUZ3UTBvc1RVRkJRVUVzUTBGQlQyTXNkMEpCUVVGQkxFTkJRWGxETEVOQlF6RkVMRWxCUVVsRExGVkJRVUZCTEVOQlFXRm1MRTFCUVVGQkxFTkJRVTlqTEhkQ1FVRkJRU3hEUVVGNVFsZ3NSMEZCUVVFc1EwRkJTME1zUjBGQlFVRXNRMEZCUVVFc1EwRkRkRVFzUjBGa1dTeEZRVUZCTEVkQlkxSlhMRlZCUVVGQkxFTkJRVmRETEV0QlFVRkJMRVZCUVVGQkxFTkJRVGhETEVOQlFVRXNSMEZCTVVKRUxGVkJRVUZCTEVOQlFWZEZMRlZCUVVGQkxFTkJRWFZDTEUxQlFVRXNRMEZCVHl4RFFVRkJMRU5CUnpkRkxFMUJRVUVzUTBGQlR5eERRVUZCTEVOQlFVRXNRMEZCUVNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYmJuVnNiRjE5IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIG9yaWdTeW1ib2w9Z2xvYmFsLlN5bWJvbCxoYXNTeW1ib2xTaGFtPXJlcXVpcmUoXCIuL3NoYW1zXCIpO21vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2Ygb3JpZ1N5bWJvbCYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmKFwic3ltYm9sXCI9PXR5cGVvZiBvcmlnU3ltYm9sKFwiZm9vXCIpJiYoXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbChcImJhclwiKSYmaGFzU3ltYm9sU2hhbSgpKSkpfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltbHVaR1Y0TG1weklsMHNJbTVoYldWeklqcGJJbTl5YVdkVGVXMWliMndpTENKbmJHOWlZV3dpTENKVGVXMWliMndpTENKb1lYTlRlVzFpYjJ4VGFHRnRJaXdpY21WeGRXbHlaU0lzSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEdGQlJVRXNTVUZCU1VFc1YwRkJZVU1zVDBGQlQwTXNUMEZEY0VKRExHTkJRV2RDUXl4UlFVRlJMRmRCUlRWQ1F5eFBRVUZQUXl4UlFVRlZMRmRCUTJoQ0xFMUJRVEJDTEcxQ1FVRm1UaXhoUVVOWExHMUNRVUZZUlN4VFFVTnpRaXhwUWtGQmRFSkdMRmRCUVZjc1UwRkRUeXhwUWtGQmJFSkZMRTlCUVU4c1VVRkZXRU1pTENKbWFXeGxJam9pTDJodmJXVXZiV2d0WTJKdmJpOW5iM2N2YzNKakwyZHBkR2gxWWk1amIyMHZhMjVoWkdndmJtbHNkR0ZzYXk5emRHRjBhV012ZEdobGJXVnpMMnR1WVdSb0wzTjBZWFJwWXk5c2FXSXRkMmhwYzNCbGNqSXZibTlrWlY5dGIyUjFiR1Z6TDJoaGN5MXplVzFpYjJ4ekwybHVaR1Y0TG1wekluMD0iLCJcInVzZSBzdHJpY3RcIjt2YXIgc2xpY2U9QXJyYXkucHJvdG90eXBlLnNsaWNlLF9fdG9TdHJfMTU9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZzt2YXIgXyRpbXBsZW1lbnRhdGlvbl8xNT1mdW5jdGlvbih0aGF0KXt2YXIgdGFyZ2V0PXRoaXM7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdGFyZ2V0fHxcIltvYmplY3QgRnVuY3Rpb25dXCIhPT1fX3RvU3RyXzE1LmNhbGwodGFyZ2V0KSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQgY2FsbGVkIG9uIGluY29tcGF0aWJsZSBcIit0YXJnZXQpO2Zvcih2YXIgYm91bmQsYXJncz1zbGljZS5jYWxsKGFyZ3VtZW50cywxKSxib3VuZExlbmd0aD1NYXRoLm1heCgwLHRhcmdldC5sZW5ndGgtYXJncy5sZW5ndGgpLGJvdW5kQXJncz1bXSxpPTA7aTxib3VuZExlbmd0aDtpKyspYm91bmRBcmdzLnB1c2goXCIkXCIraSk7aWYoYm91bmQ9RnVuY3Rpb24oXCJiaW5kZXJcIixcInJldHVybiBmdW5jdGlvbiAoXCIrYm91bmRBcmdzLmpvaW4oXCIsXCIpK1wiKXsgcmV0dXJuIGJpbmRlci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7IH1cIikoZnVuY3Rpb24oKXtpZih0aGlzIGluc3RhbmNlb2YgYm91bmQpe3ZhciByZXN1bHQ9dGFyZ2V0LmFwcGx5KHRoaXMsYXJncy5jb25jYXQoc2xpY2UuY2FsbChhcmd1bWVudHMpKSk7cmV0dXJuIE9iamVjdChyZXN1bHQpPT09cmVzdWx0P3Jlc3VsdDp0aGlzfXJldHVybiB0YXJnZXQuYXBwbHkodGhhdCxhcmdzLmNvbmNhdChzbGljZS5jYWxsKGFyZ3VtZW50cykpKX0pLHRhcmdldC5wcm90b3R5cGUpe3ZhciBFbXB0eT1mdW5jdGlvbigpe307RW1wdHkucHJvdG90eXBlPXRhcmdldC5wcm90b3R5cGUsYm91bmQucHJvdG90eXBlPW5ldyBFbXB0eSxFbXB0eS5wcm90b3R5cGU9bnVsbH1yZXR1cm4gYm91bmR9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx0Y0d4bGJXVnVkR0YwYVc5dUxtcHpJbDBzSW01aGJXVnpJanBiSW5Oc2FXTmxJaXdpUVhKeVlYa2lMQ0p3Y205MGIzUjVjR1VpTENKMGIxTjBjaUlzSWs5aWFtVmpkQ0lzSW5SdlUzUnlhVzVuSWl3aWJXOWtkV3hsSWl3aVpYaHdiM0owY3lJc0luUm9ZWFFpTENKMFlYSm5aWFFpTENKMGFHbHpJaXdpWTJGc2JDSXNJbFI1Y0dWRmNuSnZjaUlzSW1KdmRXNWtJaXdpWVhKbmN5SXNJbUZ5WjNWdFpXNTBjeUlzSW1KdmRXNWtUR1Z1WjNSb0lpd2lUV0YwYUNJc0ltMWhlQ0lzSW14bGJtZDBhQ0lzSW1KdmRXNWtRWEpuY3lJc0lta2lMQ0p3ZFhOb0lpd2lSblZ1WTNScGIyNGlMQ0pxYjJsdUlpd2ljbVZ6ZFd4MElpd2lZWEJ3YkhraUxDSmpiMjVqWVhRaUxDSkZiWEIwZVNKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFc1dVRkJRU3hEUVVsQkxFbEJRMGxCTEV0QlFVRkJMRU5CUVZGRExFdEJRVUZCTEVOQlFVMURMRk5CUVVGQkxFTkJRVlZHTEV0QlFVRkJMRU5CUTNoQ1J5eFZRVUZCUVN4RFFVRlJReXhOUVVGQlFTeERRVUZQUml4VFFVRkJRU3hEUVVGVlJ5eFJRVUZCUVN4RFFVYzNRa01zZFVKQlFVOURMRU5CUVZVc1UwRkJZME1zU1VGQlFVRXNRMEZCUVVFc1EwRkRNMElzU1VGQlNVTXNUVUZCUVVFc1EwRkJVME1zU1VGQlFVRXNRMEZEWWl4SFFVRnpRaXhWUVVGQkxFVkJRVUVzVDBGQldFUXNUVUZCUVVFc1JVRktRU3h0UWtGQlFTeEhRVWw1UWs0c1ZVRkJRVUVzUTBGQlRWRXNTVUZCUVVFc1EwRkJTMFlzVFVGQlFVRXNRMEZCUVVFc1EwRkRNME1zVFVGQlRTeEpRVUZKUnl4VFFVRkJRU3hEUVZKRkxHbEVRVUZCTEVOQlVYZENTQ3hOUVVGQlFTeERRVUZCUVN4RFFYbENlRU1zU1VGMlFrRXNTVUZGU1Vrc1MwRkJRVUVzUTBGR1FVTXNTVUZCUVVFc1EwRkJUMlFzUzBGQlFVRXNRMEZCVFZjc1NVRkJRVUVzUTBGQlMwa3NVMEZCUVVFc1EwRkJWeXhEUVVGQkxFTkJRVUVzUTBGeFFqZENReXhYUVVGQlFTeERRVUZqUXl4SlFVRkJRU3hEUVVGTFF5eEhRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMVFzVFVGQlFVRXNRMEZCVDFVc1RVRkJRVUVzUTBGQlUwd3NTVUZCUVVFc1EwRkJTMHNzVFVGQlFVRXNRMEZCUVVFc1EwRkRMME5ETEZOQlFVRkJMRU5CUVZrc1JVRkJRU3hEUVVOUVF5eERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJSMEVzUTBGQlFVRXNRMEZCU1V3c1YwRkJRVUVzUTBGQllVc3NRMEZCUVVFc1JVRkJRVUVzUTBGRE4wSkVMRk5CUVVGQkxFTkJRVlZGTEVsQlFVRkJMRU5CUVVzc1IwRkJRU3hEUVVGTlJDeERRVUZCUVN4RFFVRkJRU3hEUVV0NlFpeEhRVVpCVWl4TFFVRkJRU3hEUVVGUlZTeFJRVUZCUVN4RFFVRlRMRkZCUVVFc1EwRkJWU3h0UWtGQlFTeERRVUZ6UWtnc1UwRkJRVUVzUTBGQlZVa3NTVUZCUVVFc1EwRkJTeXhIUVVGQkxFTkJRVUVzUTBGQlR5d3lRMEZCUVN4RFFVRXZSRVFzUTBGNFFrc3NWVUZCUVN4RFFVTlVMRWRCUVVsaUxFbEJRVUZCTEZsQlFXZENSeXhMUVVGQlFTeERRVUZQTEVOQlEzWkNMRWxCUVVsWkxFMUJRVUZCTEVOQlFWTm9RaXhOUVVGQlFTeERRVUZQYVVJc1MwRkJRVUVzUTBGRGFFSm9RaXhKUVVGQlFTeERRVU5CU1N4SlFVRkJRU3hEUVVGTFlTeE5RVUZCUVN4RFFVRlBNMElzUzBGQlFVRXNRMEZCVFZjc1NVRkJRVUVzUTBGQlMwa3NVMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZNMElzVDBGQlNWZ3NUVUZCUVVFc1EwRkJUM0ZDTEUxQlFVRkJMRU5CUVVGQkxFZEJRVmxCTEUxQlFVRkJMRU5CUTFwQkxFMUJRVUZCTEVOQlJVcG1MRWxCUVVGQkxFTkJSVkFzVDBGQlQwUXNUVUZCUVVFc1EwRkJUMmxDTEV0QlFVRkJMRU5CUTFac1FpeEpRVUZCUVN4RFFVTkJUU3hKUVVGQlFTeERRVUZMWVN4TlFVRkJRU3hEUVVGUE0wSXNTMEZCUVVFc1EwRkJUVmNzU1VGQlFVRXNRMEZCUzBrc1UwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRmhMMEpPTEUxQlFVRkJMRU5CUVU5UUxGTkJRVUZCTEVOQlFWY3NRMEZEYkVJc1NVRkJTVEJDTEV0QlFVRkJMRU5CUVZFc1ZVRkJRU3hGUVVGQkxFTkJRMXBCTEV0QlFVRkJMRU5CUVUweFFpeFRRVUZCUVN4RFFVRlpUeXhOUVVGQlFTeERRVUZQVUN4VFFVRkJRU3hEUVVONlFsY3NTMEZCUVVFc1EwRkJUVmdzVTBGQlFVRXNRMEZCV1N4SlFVRkpNRUlzUzBGQlFVRXNRMEZEZEVKQkxFdEJRVUZCTEVOQlFVMHhRaXhUUVVGQlFTeERRVUZaTEVsQlFVRXNRMEZIZEVJc1QwRkJUMWNzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwiXCJ1c2Ugc3RyaWN0XCI7LyogcmVtb3ZlZDogdmFyIF8kaW1wbGVtZW50YXRpb25fMTU9cmVxdWlyZShcIi4vaW1wbGVtZW50YXRpb25cIik7ICovO3ZhciBfJGZ1bmN0aW9uQmluZF8xNj1GdW5jdGlvbi5wcm90b3R5cGUuYmluZHx8XyRpbXBsZW1lbnRhdGlvbl8xNTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1sdVpHVjRMbXB6SWwwc0ltNWhiV1Z6SWpwYkltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaUxDSkdkVzVqZEdsdmJpSXNJbkJ5YjNSdmRIbHdaU0lzSW1KcGJtUWlMQ0pwYlhCc1pXMWxiblJoZEdsdmJpSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNXVUZCUVN4RFFVVkJMRzlGUVVWQlFTeHhRa0ZCVDBNc1EwRkJWVU1zVVVGQlFVRXNRMEZCVTBNc1UwRkJRVUVzUTBGQlZVTXNTVUZCUVVFc1JVRkJVVU1zYlVKQlFVRkJMRU5CUVVGQklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sdHVkV3hzWFgwPSIsIlwidXNlIHN0cmljdFwiO3ZhciAkVHlwZUVycm9yPVR5cGVFcnJvciwkZ09QRD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2lmKCRnT1BEKXRyeXskZ09QRCh7fSxcIlwiKX1jYXRjaChlKXskZ09QRD1udWxsfXZhciB0aHJvd1R5cGVFcnJvcj1mdW5jdGlvbigpe3Rocm93IG5ldyAkVHlwZUVycm9yfSxUaHJvd1R5cGVFcnJvcj0kZ09QRD9mdW5jdGlvbigpe3RyeXtyZXR1cm4gYXJndW1lbnRzLmNhbGxlZSx0aHJvd1R5cGVFcnJvcn1jYXRjaChjYWxsZWVUaHJvd3Mpe3RyeXtyZXR1cm4gJGdPUEQoYXJndW1lbnRzLFwiY2FsbGVlXCIpLmdldH1jYXRjaChnT1BEdGhyb3dzKXtyZXR1cm4gdGhyb3dUeXBlRXJyb3J9fX0oKTp0aHJvd1R5cGVFcnJvcixoYXNTeW1ib2xzPV8kaGFzU3ltYm9sc18xNygpLF9fZ2V0UHJvdG9fOT1PYmplY3QuZ2V0UHJvdG90eXBlT2Z8fGZ1bmN0aW9uKHgpe3JldHVybiB4Ll9fcHJvdG9fX30sYXN5bmNHZW5JdGVyYXRvcj12b2lkIDAsVHlwZWRBcnJheT1cInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDhBcnJheT92b2lkIDA6X19nZXRQcm90b185KFVpbnQ4QXJyYXkpLElOVFJJTlNJQ1M9e1wiJUFycmF5JVwiOkFycmF5LFwiJUFycmF5QnVmZmVyJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBBcnJheUJ1ZmZlcj92b2lkIDA6QXJyYXlCdWZmZXIsXCIlQXJyYXlCdWZmZXJQcm90b3R5cGUlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEFycmF5QnVmZmVyP3ZvaWQgMDpBcnJheUJ1ZmZlci5wcm90b3R5cGUsXCIlQXJyYXlJdGVyYXRvclByb3RvdHlwZSVcIjpoYXNTeW1ib2xzP19fZ2V0UHJvdG9fOShbXVtTeW1ib2wuaXRlcmF0b3JdKCkpOnZvaWQgMCxcIiVBcnJheVByb3RvdHlwZSVcIjpBcnJheS5wcm90b3R5cGUsXCIlQXJyYXlQcm90b19lbnRyaWVzJVwiOkFycmF5LnByb3RvdHlwZS5lbnRyaWVzLFwiJUFycmF5UHJvdG9fZm9yRWFjaCVcIjpBcnJheS5wcm90b3R5cGUuZm9yRWFjaCxcIiVBcnJheVByb3RvX2tleXMlXCI6QXJyYXkucHJvdG90eXBlLmtleXMsXCIlQXJyYXlQcm90b192YWx1ZXMlXCI6QXJyYXkucHJvdG90eXBlLnZhbHVlcyxcIiVBc3luY0Zyb21TeW5jSXRlcmF0b3JQcm90b3R5cGUlXCI6dm9pZCAwLFwiJUFzeW5jRnVuY3Rpb24lXCI6dm9pZCAwLFwiJUFzeW5jRnVuY3Rpb25Qcm90b3R5cGUlXCI6dm9pZCAwLFwiJUFzeW5jR2VuZXJhdG9yJVwiOnZvaWQgMCxcIiVBc3luY0dlbmVyYXRvckZ1bmN0aW9uJVwiOnZvaWQgMCxcIiVBc3luY0dlbmVyYXRvclByb3RvdHlwZSVcIjp2b2lkIDAsXCIlQXN5bmNJdGVyYXRvclByb3RvdHlwZSVcIjphc3luY0dlbkl0ZXJhdG9yJiZoYXNTeW1ib2xzJiZTeW1ib2wuYXN5bmNJdGVyYXRvcj9hc3luY0dlbkl0ZXJhdG9yW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpOnZvaWQgMCxcIiVBdG9taWNzJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBBdG9taWNzP3ZvaWQgMDpBdG9taWNzLFwiJUJvb2xlYW4lXCI6Qm9vbGVhbixcIiVCb29sZWFuUHJvdG90eXBlJVwiOkJvb2xlYW4ucHJvdG90eXBlLFwiJURhdGFWaWV3JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBEYXRhVmlldz92b2lkIDA6RGF0YVZpZXcsXCIlRGF0YVZpZXdQcm90b3R5cGUlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIERhdGFWaWV3P3ZvaWQgMDpEYXRhVmlldy5wcm90b3R5cGUsXCIlRGF0ZSVcIjpEYXRlLFwiJURhdGVQcm90b3R5cGUlXCI6RGF0ZS5wcm90b3R5cGUsXCIlZGVjb2RlVVJJJVwiOmRlY29kZVVSSSxcIiVkZWNvZGVVUklDb21wb25lbnQlXCI6ZGVjb2RlVVJJQ29tcG9uZW50LFwiJWVuY29kZVVSSSVcIjplbmNvZGVVUkksXCIlZW5jb2RlVVJJQ29tcG9uZW50JVwiOmVuY29kZVVSSUNvbXBvbmVudCxcIiVFcnJvciVcIjpFcnJvcixcIiVFcnJvclByb3RvdHlwZSVcIjpFcnJvci5wcm90b3R5cGUsXCIlZXZhbCVcIjpldmFsLFwiJUV2YWxFcnJvciVcIjpFdmFsRXJyb3IsXCIlRXZhbEVycm9yUHJvdG90eXBlJVwiOkV2YWxFcnJvci5wcm90b3R5cGUsXCIlRmxvYXQzMkFycmF5JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBGbG9hdDMyQXJyYXk/dm9pZCAwOkZsb2F0MzJBcnJheSxcIiVGbG9hdDMyQXJyYXlQcm90b3R5cGUlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEZsb2F0MzJBcnJheT92b2lkIDA6RmxvYXQzMkFycmF5LnByb3RvdHlwZSxcIiVGbG9hdDY0QXJyYXklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEZsb2F0NjRBcnJheT92b2lkIDA6RmxvYXQ2NEFycmF5LFwiJUZsb2F0NjRBcnJheVByb3RvdHlwZSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgRmxvYXQ2NEFycmF5P3ZvaWQgMDpGbG9hdDY0QXJyYXkucHJvdG90eXBlLFwiJUZ1bmN0aW9uJVwiOkZ1bmN0aW9uLFwiJUZ1bmN0aW9uUHJvdG90eXBlJVwiOkZ1bmN0aW9uLnByb3RvdHlwZSxcIiVHZW5lcmF0b3IlXCI6dm9pZCAwLFwiJUdlbmVyYXRvckZ1bmN0aW9uJVwiOnZvaWQgMCxcIiVHZW5lcmF0b3JQcm90b3R5cGUlXCI6dm9pZCAwLFwiJUludDhBcnJheSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgSW50OEFycmF5P3ZvaWQgMDpJbnQ4QXJyYXksXCIlSW50OEFycmF5UHJvdG90eXBlJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBJbnQ4QXJyYXk/dm9pZCAwOkludDhBcnJheS5wcm90b3R5cGUsXCIlSW50MTZBcnJheSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgSW50MTZBcnJheT92b2lkIDA6SW50MTZBcnJheSxcIiVJbnQxNkFycmF5UHJvdG90eXBlJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBJbnQxNkFycmF5P3ZvaWQgMDpJbnQ4QXJyYXkucHJvdG90eXBlLFwiJUludDMyQXJyYXklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIEludDMyQXJyYXk/dm9pZCAwOkludDMyQXJyYXksXCIlSW50MzJBcnJheVByb3RvdHlwZSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgSW50MzJBcnJheT92b2lkIDA6SW50MzJBcnJheS5wcm90b3R5cGUsXCIlaXNGaW5pdGUlXCI6aXNGaW5pdGUsXCIlaXNOYU4lXCI6aXNOYU4sXCIlSXRlcmF0b3JQcm90b3R5cGUlXCI6aGFzU3ltYm9scz9fX2dldFByb3RvXzkoX19nZXRQcm90b185KFtdW1N5bWJvbC5pdGVyYXRvcl0oKSkpOnZvaWQgMCxcIiVKU09OJVwiOlwib2JqZWN0XCI9PXR5cGVvZiBKU09OP0pTT046dm9pZCAwLFwiJUpTT05QYXJzZSVcIjpcIm9iamVjdFwiPT10eXBlb2YgSlNPTj9KU09OLnBhcnNlOnZvaWQgMCxcIiVNYXAlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIE1hcD92b2lkIDA6TWFwLFwiJU1hcEl0ZXJhdG9yUHJvdG90eXBlJVwiOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBNYXAmJmhhc1N5bWJvbHM/X19nZXRQcm90b185KChuZXcgTWFwKVtTeW1ib2wuaXRlcmF0b3JdKCkpOnZvaWQgMCxcIiVNYXBQcm90b3R5cGUlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIE1hcD92b2lkIDA6TWFwLnByb3RvdHlwZSxcIiVNYXRoJVwiOk1hdGgsXCIlTnVtYmVyJVwiOk51bWJlcixcIiVOdW1iZXJQcm90b3R5cGUlXCI6TnVtYmVyLnByb3RvdHlwZSxcIiVPYmplY3QlXCI6T2JqZWN0LFwiJU9iamVjdFByb3RvdHlwZSVcIjpPYmplY3QucHJvdG90eXBlLFwiJU9ialByb3RvX3RvU3RyaW5nJVwiOk9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsXCIlT2JqUHJvdG9fdmFsdWVPZiVcIjpPYmplY3QucHJvdG90eXBlLnZhbHVlT2YsXCIlcGFyc2VGbG9hdCVcIjpwYXJzZUZsb2F0LFwiJXBhcnNlSW50JVwiOnBhcnNlSW50LFwiJVByb21pc2UlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFByb21pc2U/dm9pZCAwOlByb21pc2UsXCIlUHJvbWlzZVByb3RvdHlwZSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgUHJvbWlzZT92b2lkIDA6UHJvbWlzZS5wcm90b3R5cGUsXCIlUHJvbWlzZVByb3RvX3RoZW4lXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFByb21pc2U/dm9pZCAwOlByb21pc2UucHJvdG90eXBlLnRoZW4sXCIlUHJvbWlzZV9hbGwlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFByb21pc2U/dm9pZCAwOlByb21pc2UuYWxsLFwiJVByb21pc2VfcmVqZWN0JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBQcm9taXNlP3ZvaWQgMDpQcm9taXNlLnJlamVjdCxcIiVQcm9taXNlX3Jlc29sdmUlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFByb21pc2U/dm9pZCAwOlByb21pc2UucmVzb2x2ZSxcIiVQcm94eSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgUHJveHk/dm9pZCAwOlByb3h5LFwiJVJhbmdlRXJyb3IlXCI6UmFuZ2VFcnJvcixcIiVSYW5nZUVycm9yUHJvdG90eXBlJVwiOlJhbmdlRXJyb3IucHJvdG90eXBlLFwiJVJlZmVyZW5jZUVycm9yJVwiOlJlZmVyZW5jZUVycm9yLFwiJVJlZmVyZW5jZUVycm9yUHJvdG90eXBlJVwiOlJlZmVyZW5jZUVycm9yLnByb3RvdHlwZSxcIiVSZWZsZWN0JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBSZWZsZWN0P3ZvaWQgMDpSZWZsZWN0LFwiJVJlZ0V4cCVcIjpSZWdFeHAsXCIlUmVnRXhwUHJvdG90eXBlJVwiOlJlZ0V4cC5wcm90b3R5cGUsXCIlU2V0JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBTZXQ/dm9pZCAwOlNldCxcIiVTZXRJdGVyYXRvclByb3RvdHlwZSVcIjpcInVuZGVmaW5lZFwiIT10eXBlb2YgU2V0JiZoYXNTeW1ib2xzP19fZ2V0UHJvdG9fOSgobmV3IFNldClbU3ltYm9sLml0ZXJhdG9yXSgpKTp2b2lkIDAsXCIlU2V0UHJvdG90eXBlJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBTZXQ/dm9pZCAwOlNldC5wcm90b3R5cGUsXCIlU2hhcmVkQXJyYXlCdWZmZXIlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFNoYXJlZEFycmF5QnVmZmVyP3ZvaWQgMDpTaGFyZWRBcnJheUJ1ZmZlcixcIiVTaGFyZWRBcnJheUJ1ZmZlclByb3RvdHlwZSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgU2hhcmVkQXJyYXlCdWZmZXI/dm9pZCAwOlNoYXJlZEFycmF5QnVmZmVyLnByb3RvdHlwZSxcIiVTdHJpbmclXCI6U3RyaW5nLFwiJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJVwiOmhhc1N5bWJvbHM/X19nZXRQcm90b185KFwiXCJbU3ltYm9sLml0ZXJhdG9yXSgpKTp2b2lkIDAsXCIlU3RyaW5nUHJvdG90eXBlJVwiOlN0cmluZy5wcm90b3R5cGUsXCIlU3ltYm9sJVwiOmhhc1N5bWJvbHM/U3ltYm9sOnZvaWQgMCxcIiVTeW1ib2xQcm90b3R5cGUlXCI6aGFzU3ltYm9scz9TeW1ib2wucHJvdG90eXBlOnZvaWQgMCxcIiVTeW50YXhFcnJvciVcIjpTeW50YXhFcnJvcixcIiVTeW50YXhFcnJvclByb3RvdHlwZSVcIjpTeW50YXhFcnJvci5wcm90b3R5cGUsXCIlVGhyb3dUeXBlRXJyb3IlXCI6VGhyb3dUeXBlRXJyb3IsXCIlVHlwZWRBcnJheSVcIjpUeXBlZEFycmF5LFwiJVR5cGVkQXJyYXlQcm90b3R5cGUlXCI6VHlwZWRBcnJheT9UeXBlZEFycmF5LnByb3RvdHlwZTp2b2lkIDAsXCIlVHlwZUVycm9yJVwiOiRUeXBlRXJyb3IsXCIlVHlwZUVycm9yUHJvdG90eXBlJVwiOiRUeXBlRXJyb3IucHJvdG90eXBlLFwiJVVpbnQ4QXJyYXklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFVpbnQ4QXJyYXk/dm9pZCAwOlVpbnQ4QXJyYXksXCIlVWludDhBcnJheVByb3RvdHlwZSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDhBcnJheT92b2lkIDA6VWludDhBcnJheS5wcm90b3R5cGUsXCIlVWludDhDbGFtcGVkQXJyYXklXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFVpbnQ4Q2xhbXBlZEFycmF5P3ZvaWQgMDpVaW50OENsYW1wZWRBcnJheSxcIiVVaW50OENsYW1wZWRBcnJheVByb3RvdHlwZSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDhDbGFtcGVkQXJyYXk/dm9pZCAwOlVpbnQ4Q2xhbXBlZEFycmF5LnByb3RvdHlwZSxcIiVVaW50MTZBcnJheSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDE2QXJyYXk/dm9pZCAwOlVpbnQxNkFycmF5LFwiJVVpbnQxNkFycmF5UHJvdG90eXBlJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBVaW50MTZBcnJheT92b2lkIDA6VWludDE2QXJyYXkucHJvdG90eXBlLFwiJVVpbnQzMkFycmF5JVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBVaW50MzJBcnJheT92b2lkIDA6VWludDMyQXJyYXksXCIlVWludDMyQXJyYXlQcm90b3R5cGUlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFVpbnQzMkFycmF5P3ZvaWQgMDpVaW50MzJBcnJheS5wcm90b3R5cGUsXCIlVVJJRXJyb3IlXCI6VVJJRXJyb3IsXCIlVVJJRXJyb3JQcm90b3R5cGUlXCI6VVJJRXJyb3IucHJvdG90eXBlLFwiJVdlYWtNYXAlXCI6XCJ1bmRlZmluZWRcIj09dHlwZW9mIFdlYWtNYXA/dm9pZCAwOldlYWtNYXAsXCIlV2Vha01hcFByb3RvdHlwZSVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgV2Vha01hcD92b2lkIDA6V2Vha01hcC5wcm90b3R5cGUsXCIlV2Vha1NldCVcIjpcInVuZGVmaW5lZFwiPT10eXBlb2YgV2Vha1NldD92b2lkIDA6V2Vha1NldCxcIiVXZWFrU2V0UHJvdG90eXBlJVwiOlwidW5kZWZpbmVkXCI9PXR5cGVvZiBXZWFrU2V0P3ZvaWQgMDpXZWFrU2V0LnByb3RvdHlwZX0sJHJlcGxhY2U9XyRmdW5jdGlvbkJpbmRfMTYuY2FsbChGdW5jdGlvbi5jYWxsLFN0cmluZy5wcm90b3R5cGUucmVwbGFjZSkscmVQcm9wTmFtZT0vW14lLltcXF1dK3xcXFsoPzooLT9cXGQrKD86XFwuXFxkKyk/KXwoW1wiJ10pKCg/Oig/IVxcMilbXlxcXFxdfFxcXFwuKSo/KVxcMilcXF18KD89KD86XFwufFxcW1xcXSkoPzpcXC58XFxbXFxdfCUkKSkvZyxyZUVzY2FwZUNoYXI9L1xcXFwoXFxcXCk/L2c7dmFyIF8kR2V0SW50cmluc2ljXzk9ZnVuY3Rpb24obmFtZSxhbGxvd01pc3Npbmcpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBuYW1lfHwwPT09bmFtZS5sZW5ndGgpdGhyb3cgbmV3IFR5cGVFcnJvcihcImludHJpbnNpYyBuYW1lIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nXCIpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSYmXCJib29sZWFuXCIhPXR5cGVvZiBhbGxvd01pc3NpbmcpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJhbGxvd01pc3NpbmdcIiBhcmd1bWVudCBtdXN0IGJlIGEgYm9vbGVhbicpO2Zvcih2YXIgcmVzdWx0LHBhcnRzPShyZXN1bHQ9W10sJHJlcGxhY2UobmFtZSxyZVByb3BOYW1lLGZ1bmN0aW9uKG1hdGNoLG51bWJlcixxdW90ZSxzdWJTdHJpbmcpe3Jlc3VsdFtyZXN1bHQubGVuZ3RoXT1xdW90ZT8kcmVwbGFjZShzdWJTdHJpbmcscmVFc2NhcGVDaGFyLFwiJDFcIik6bnVtYmVyfHxtYXRjaH0pLHJlc3VsdCksdmFsdWU9ZnVuY3Rpb24obmFtZSxhbGxvd01pc3Npbmcpe2lmKCEobmFtZSBpbiBJTlRSSU5TSUNTKSl0aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJpbnRyaW5zaWMgXCIrbmFtZStcIiBkb2VzIG5vdCBleGlzdCFcIik7aWYodm9pZCAwPT09SU5UUklOU0lDU1tuYW1lXSYmIWFsbG93TWlzc2luZyl0aHJvdyBuZXcgJFR5cGVFcnJvcihcImludHJpbnNpYyBcIituYW1lK1wiIGV4aXN0cywgYnV0IGlzIG5vdCBhdmFpbGFibGUuIFBsZWFzZSBmaWxlIGFuIGlzc3VlIVwiKTtyZXR1cm4gSU5UUklOU0lDU1tuYW1lXX0oXCIlXCIrKHBhcnRzLmxlbmd0aD4wP3BhcnRzWzBdOlwiXCIpK1wiJVwiLGFsbG93TWlzc2luZyksaT0xO2k8cGFydHMubGVuZ3RoO2krPTEpaWYobnVsbCE9dmFsdWUpaWYoJGdPUEQmJmkrMT49cGFydHMubGVuZ3RoKXt2YXIgZGVzYz0kZ09QRCh2YWx1ZSxwYXJ0c1tpXSk7aWYoIShhbGxvd01pc3Npbmd8fHBhcnRzW2ldaW4gdmFsdWUpKXRocm93IG5ldyAkVHlwZUVycm9yKFwiYmFzZSBpbnRyaW5zaWMgZm9yIFwiK25hbWUrXCIgZXhpc3RzLCBidXQgdGhlIHByb3BlcnR5IGlzIG5vdCBhdmFpbGFibGUuXCIpO3ZhbHVlPWRlc2MmJlwiZ2V0XCJpbiBkZXNjJiYhKFwib3JpZ2luYWxWYWx1ZVwiaW4gZGVzYy5nZXQpP2Rlc2MuZ2V0OnZhbHVlW3BhcnRzW2ldXX1lbHNlIHZhbHVlPXZhbHVlW3BhcnRzW2ldXTtyZXR1cm4gdmFsdWV9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJa2RsZEVsdWRISnBibk5wWXk1cWN5SmRMQ0p1WVcxbGN5STZXeUlrVkhsd1pVVnljbTl5SWl3aVZIbHdaVVZ5Y205eUlpd2lKR2RQVUVRaUxDSlBZbXBsWTNRaUxDSm5aWFJQZDI1UWNtOXdaWEowZVVSbGMyTnlhWEIwYjNJaUxDSmxJaXdpZEdoeWIzZFVlWEJsUlhKeWIzSWlMQ0pVYUhKdmQxUjVjR1ZGY25KdmNpSXNJbUZ5WjNWdFpXNTBjeUlzSW1OaGJHeGxaU0lzSW1OaGJHeGxaVlJvY205M2N5SXNJbWRsZENJc0ltZFBVRVIwYUhKdmQzTWlMQ0pvWVhOVGVXMWliMnh6SWl3aWNtVnhkV2x5WlNJc0ltZGxkRkJ5YjNSdklpd2laMlYwVUhKdmRHOTBlWEJsVDJZaUxDSjRJaXdpWDE5d2NtOTBiMTlmSWl3aVlYTjVibU5IWlc1SmRHVnlZWFJ2Y2lJc0luVnVaR1ZtYVc1bFpDSXNJbFI1Y0dWa1FYSnlZWGtpTENKVmFXNTBPRUZ5Y21GNUlpd2lTVTVVVWtsT1UwbERVeUlzSWlWQmNuSmhlU1VpTENKQmNuSmhlU0lzSWlWQmNuSmhlVUoxWm1abGNpVWlMQ0pCY25KaGVVSjFabVpsY2lJc0lpVkJjbkpoZVVKMVptWmxjbEJ5YjNSdmRIbHdaU1VpTENKd2NtOTBiM1I1Y0dVaUxDSWxRWEp5WVhsSmRHVnlZWFJ2Y2xCeWIzUnZkSGx3WlNVaUxDSlRlVzFpYjJ3aUxDSnBkR1Z5WVhSdmNpSXNJaVZCY25KaGVWQnliM1J2ZEhsd1pTVWlMQ0lsUVhKeVlYbFFjbTkwYjE5bGJuUnlhV1Z6SlNJc0ltVnVkSEpwWlhNaUxDSWxRWEp5WVhsUWNtOTBiMTltYjNKRllXTm9KU0lzSW1admNrVmhZMmdpTENJbFFYSnlZWGxRY205MGIxOXJaWGx6SlNJc0ltdGxlWE1pTENJbFFYSnlZWGxRY205MGIxOTJZV3gxWlhNbElpd2lkbUZzZFdWeklpd2lKVUZ6ZVc1alJuSnZiVk41Ym1OSmRHVnlZWFJ2Y2xCeWIzUnZkSGx3WlNVaUxDSWxRWE41Ym1OR2RXNWpkR2x2YmlVaUxDSWxRWE41Ym1OR2RXNWpkR2x2YmxCeWIzUnZkSGx3WlNVaUxDSWxRWE41Ym1OSFpXNWxjbUYwYjNJbElpd2lKVUZ6ZVc1alIyVnVaWEpoZEc5eVJuVnVZM1JwYjI0bElpd2lKVUZ6ZVc1alIyVnVaWEpoZEc5eVVISnZkRzkwZVhCbEpTSXNJaVZCYzNsdVkwbDBaWEpoZEc5eVVISnZkRzkwZVhCbEpTSXNJbUZ6ZVc1alNYUmxjbUYwYjNJaUxDSWxRWFJ2YldsamN5VWlMQ0pCZEc5dGFXTnpJaXdpSlVKdmIyeGxZVzRsSWl3aVFtOXZiR1ZoYmlJc0lpVkNiMjlzWldGdVVISnZkRzkwZVhCbEpTSXNJaVZFWVhSaFZtbGxkeVVpTENKRVlYUmhWbWxsZHlJc0lpVkVZWFJoVm1sbGQxQnliM1J2ZEhsd1pTVWlMQ0lsUkdGMFpTVWlMQ0pFWVhSbElpd2lKVVJoZEdWUWNtOTBiM1I1Y0dVbElpd2lKV1JsWTI5a1pWVlNTU1VpTENKa1pXTnZaR1ZWVWtraUxDSWxaR1ZqYjJSbFZWSkpRMjl0Y0c5dVpXNTBKU0lzSW1SbFkyOWtaVlZTU1VOdmJYQnZibVZ1ZENJc0lpVmxibU52WkdWVlVra2xJaXdpWlc1amIyUmxWVkpKSWl3aUpXVnVZMjlrWlZWU1NVTnZiWEJ2Ym1WdWRDVWlMQ0psYm1OdlpHVlZVa2xEYjIxd2IyNWxiblFpTENJbFJYSnliM0lsSWl3aVJYSnliM0lpTENJbFJYSnliM0pRY205MGIzUjVjR1VsSWl3aUpXVjJZV3dsSWl3aVpYWmhiQ0lzSWlWRmRtRnNSWEp5YjNJbElpd2lSWFpoYkVWeWNtOXlJaXdpSlVWMllXeEZjbkp2Y2xCeWIzUnZkSGx3WlNVaUxDSWxSbXh2WVhRek1rRnljbUY1SlNJc0lrWnNiMkYwTXpKQmNuSmhlU0lzSWlWR2JHOWhkRE15UVhKeVlYbFFjbTkwYjNSNWNHVWxJaXdpSlVac2IyRjBOalJCY25KaGVTVWlMQ0pHYkc5aGREWTBRWEp5WVhraUxDSWxSbXh2WVhRMk5FRnljbUY1VUhKdmRHOTBlWEJsSlNJc0lpVkdkVzVqZEdsdmJpVWlMQ0pHZFc1amRHbHZiaUlzSWlWR2RXNWpkR2x2YmxCeWIzUnZkSGx3WlNVaUxDSWxSMlZ1WlhKaGRHOXlKU0lzSWlWSFpXNWxjbUYwYjNKR2RXNWpkR2x2YmlVaUxDSWxSMlZ1WlhKaGRHOXlVSEp2ZEc5MGVYQmxKU0lzSWlWSmJuUTRRWEp5WVhrbElpd2lTVzUwT0VGeWNtRjVJaXdpSlVsdWREaEJjbkpoZVZCeWIzUnZkSGx3WlNVaUxDSWxTVzUwTVRaQmNuSmhlU1VpTENKSmJuUXhOa0Z5Y21GNUlpd2lKVWx1ZERFMlFYSnlZWGxRY205MGIzUjVjR1VsSWl3aUpVbHVkRE15UVhKeVlYa2xJaXdpU1c1ME16SkJjbkpoZVNJc0lpVkpiblF6TWtGeWNtRjVVSEp2ZEc5MGVYQmxKU0lzSWlWcGMwWnBibWwwWlNVaUxDSnBjMFpwYm1sMFpTSXNJaVZwYzA1aFRpVWlMQ0pwYzA1aFRpSXNJaVZKZEdWeVlYUnZjbEJ5YjNSdmRIbHdaU1VpTENJbFNsTlBUaVVpTENKS1UwOU9JaXdpSlVwVFQwNVFZWEp6WlNVaUxDSndZWEp6WlNJc0lpVk5ZWEFsSWl3aVRXRndJaXdpSlUxaGNFbDBaWEpoZEc5eVVISnZkRzkwZVhCbEpTSXNJaVZOWVhCUWNtOTBiM1I1Y0dVbElpd2lKVTFoZEdnbElpd2lUV0YwYUNJc0lpVk9kVzFpWlhJbElpd2lUblZ0WW1WeUlpd2lKVTUxYldKbGNsQnliM1J2ZEhsd1pTVWlMQ0lsVDJKcVpXTjBKU0lzSWlWUFltcGxZM1JRY205MGIzUjVjR1VsSWl3aUpVOWlhbEJ5YjNSdlgzUnZVM1J5YVc1bkpTSXNJblJ2VTNSeWFXNW5JaXdpSlU5aWFsQnliM1J2WDNaaGJIVmxUMllsSWl3aWRtRnNkV1ZQWmlJc0lpVndZWEp6WlVac2IyRjBKU0lzSW5CaGNuTmxSbXh2WVhRaUxDSWxjR0Z5YzJWSmJuUWxJaXdpY0dGeWMyVkpiblFpTENJbFVISnZiV2x6WlNVaUxDSlFjbTl0YVhObElpd2lKVkJ5YjIxcGMyVlFjbTkwYjNSNWNHVWxJaXdpSlZCeWIyMXBjMlZRY205MGIxOTBhR1Z1SlNJc0luUm9aVzRpTENJbFVISnZiV2x6WlY5aGJHd2xJaXdpWVd4c0lpd2lKVkJ5YjIxcGMyVmZjbVZxWldOMEpTSXNJbkpsYW1WamRDSXNJaVZRY205dGFYTmxYM0psYzI5c2RtVWxJaXdpY21WemIyeDJaU0lzSWlWUWNtOTRlU1VpTENKUWNtOTRlU0lzSWlWU1lXNW5aVVZ5Y205eUpTSXNJbEpoYm1kbFJYSnliM0lpTENJbFVtRnVaMlZGY25KdmNsQnliM1J2ZEhsd1pTVWlMQ0lsVW1WbVpYSmxibU5sUlhKeWIzSWxJaXdpVW1WbVpYSmxibU5sUlhKeWIzSWlMQ0lsVW1WbVpYSmxibU5sUlhKeWIzSlFjbTkwYjNSNWNHVWxJaXdpSlZKbFpteGxZM1FsSWl3aVVtVm1iR1ZqZENJc0lpVlNaV2RGZUhBbElpd2lVbVZuUlhod0lpd2lKVkpsWjBWNGNGQnliM1J2ZEhsd1pTVWlMQ0lsVTJWMEpTSXNJbE5sZENJc0lpVlRaWFJKZEdWeVlYUnZjbEJ5YjNSdmRIbHdaU1VpTENJbFUyVjBVSEp2ZEc5MGVYQmxKU0lzSWlWVGFHRnlaV1JCY25KaGVVSjFabVpsY2lVaUxDSlRhR0Z5WldSQmNuSmhlVUoxWm1abGNpSXNJaVZUYUdGeVpXUkJjbkpoZVVKMVptWmxjbEJ5YjNSdmRIbHdaU1VpTENJbFUzUnlhVzVuSlNJc0lsTjBjbWx1WnlJc0lpVlRkSEpwYm1kSmRHVnlZWFJ2Y2xCeWIzUnZkSGx3WlNVaUxDSWxVM1J5YVc1blVISnZkRzkwZVhCbEpTSXNJaVZUZVcxaWIyd2xJaXdpSlZONWJXSnZiRkJ5YjNSdmRIbHdaU1VpTENJbFUzbHVkR0Y0UlhKeWIzSWxJaXdpVTNsdWRHRjRSWEp5YjNJaUxDSWxVM2x1ZEdGNFJYSnliM0pRY205MGIzUjVjR1VsSWl3aUpWUm9jbTkzVkhsd1pVVnljbTl5SlNJc0lpVlVlWEJsWkVGeWNtRjVKU0lzSWlWVWVYQmxaRUZ5Y21GNVVISnZkRzkwZVhCbEpTSXNJaVZVZVhCbFJYSnliM0lsSWl3aUpWUjVjR1ZGY25KdmNsQnliM1J2ZEhsd1pTVWlMQ0lsVldsdWREaEJjbkpoZVNVaUxDSWxWV2x1ZERoQmNuSmhlVkJ5YjNSdmRIbHdaU1VpTENJbFZXbHVkRGhEYkdGdGNHVmtRWEp5WVhrbElpd2lWV2x1ZERoRGJHRnRjR1ZrUVhKeVlYa2lMQ0lsVldsdWREaERiR0Z0Y0dWa1FYSnlZWGxRY205MGIzUjVjR1VsSWl3aUpWVnBiblF4TmtGeWNtRjVKU0lzSWxWcGJuUXhOa0Z5Y21GNUlpd2lKVlZwYm5ReE5rRnljbUY1VUhKdmRHOTBlWEJsSlNJc0lpVlZhVzUwTXpKQmNuSmhlU1VpTENKVmFXNTBNekpCY25KaGVTSXNJaVZWYVc1ME16SkJjbkpoZVZCeWIzUnZkSGx3WlNVaUxDSWxWVkpKUlhKeWIzSWxJaXdpVlZKSlJYSnliM0lpTENJbFZWSkpSWEp5YjNKUWNtOTBiM1I1Y0dVbElpd2lKVmRsWVd0TllYQWxJaXdpVjJWaGEwMWhjQ0lzSWlWWFpXRnJUV0Z3VUhKdmRHOTBlWEJsSlNJc0lpVlhaV0ZyVTJWMEpTSXNJbGRsWVd0VFpYUWlMQ0lsVjJWaGExTmxkRkJ5YjNSdmRIbHdaU1VpTENJa2NtVndiR0ZqWlNJc0ltTmhiR3dpTENKeVpYQnNZV05sSWl3aWNtVlFjbTl3VG1GdFpTSXNJbkpsUlhOallYQmxRMmhoY2lJc0ltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaUxDSnVZVzFsSWl3aVlXeHNiM2ROYVhOemFXNW5JaXdpYkdWdVozUm9JaXdpY21WemRXeDBJaXdpY0dGeWRITWlMQ0p0WVhSamFDSXNJbTUxYldKbGNpSXNJbkYxYjNSbElpd2ljM1ZpVTNSeWFXNW5JaXdpZG1Gc2RXVWlMQ0puWlhSQ1lYTmxTVzUwY21sdWMybGpJaXdpYVNJc0ltUmxjMk1pWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEZsQlFVRXNRMEZQUVN4SlFVVkpRU3hWUVVGQlFTeERRVUZoUXl4VFFVRkJRU3hEUVVWaVF5eExRVUZCUVN4RFFVRlJReXhOUVVGQlFTeERRVUZQUXl4M1FrRkJRVUVzUTBGRGJrSXNSMEZCU1VZc1MwRkJRVUVzUTBGRFNDeEhRVUZCTEVOQlEwTkJMRXRCUVVGQkxFTkJRVTBzUlVGQlFTeERRVUZKTEVWQlFVRXNRMEZCUVN4RFFVTlVMRTFCUVU5SExFTkJRVUZCTEVOQlFVRkJMRU5CUTFKSUxFdEJRVUZCTEVOQlFWRXNTVUZCUVN4RFFVbFdMRWxCUVVsSkxHTkJRVUZCTEVOQlFXbENMRlZCUVVFc1EwRkJZeXhOUVVGTkxFbEJRVWxPTEZWQlFVRkJMRU5CUVVGQkxFTkJRM3BEVHl4alFVRkJRU3hEUVVGcFFrd3NTMEZCUVVFc1EwRkRha0lzVlVGQlFTeERRVU5HTEVkQlFVRXNRMEZIUXl4UFFVUkJUU3hUUVVGQlFTeERRVUZWUXl4TlFVRkJRU3hEUVVOSVNDeGpRVUZCUVN4RFFVTk9MRTFCUVU5SkxGbEJRVUZCTEVOQlFVRkJMRU5CUTFJc1IwRkJRU3hEUVVWRExFOUJRVTlTTEV0QlFVRkJMRU5CUVUxTkxGTkJRVUZCTEVOQlFWY3NVVUZCUVN4RFFVRkJMRU5CUVZWSExFZEJRVUZCTEVOQlEycERMRTFCUVU5RExGVkJRVUZCTEVOQlFVRkJMRU5CUTFJc1QwRkJUMDRzWTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGV1VpeEZRVUZCTEVOQlkwRkJMR05CUVVGQkxFTkJSVU5QTEZWQlFVRkJMRU5CUVdGRExHVkJRVUZCTEVWQlFVRkJMRU5CUldKRExGbEJRVUZCTEVOQlFWZGFMRTFCUVVGQkxFTkJRVTloTEdOQlFVRkJMRVZCUVd0Q0xGTkJRVlZETEVOQlFVRkJMRU5CUVVGQkxFTkJRVXNzVDBGQlQwRXNRMEZCUVVFc1EwRkJSVU1zVTBGQlFVRXNRMEZCUVVFc1EwRlJOVVJETEdkQ1FVRkJRU3hEUVVGQlFTeExRWHBEUVVNc1EwRkJRVUVzUTBFeVEwRkRMRlZCUVVGQkxFTkJRVzFETEZkQlFVRXNSVUZCUVN4UFFVRm1ReXhWUVVGQlFTeERRVUZCUVN4TFFUTkRjRUpHTEVOQlFVRkJMRU5CTWtNMlJFd3NXVUZCUVVFc1EwRkJVMDhzVlVGQlFVRXNRMEZCUVVFc1EwRkZkRVZETEZWQlFVRkJMRU5CUVdFc1EwRkRhRUpETEZOQlFVRkJMRU5CUVZkRExFdEJRVUZCTEVOQlExaERMR1ZCUVVGQkxFTkJRWGRETEZkQlFVRXNSVUZCUVN4UFFVRm9Ra01zVjBGQlFVRXNRMEZCUVVFc1MwRXZRM0pDVUN4RFFVRkJRU3hEUVN0REswUlBMRmRCUVVGQkxFTkJRMnhGUXl4M1FrRkJRVUVzUTBGQmFVUXNWMEZCUVN4RlFVRkJMRTlCUVdoQ1JDeFhRVUZCUVN4RFFVRkJRU3hMUVdoRU9VSlFMRU5CUVVGQkxFTkJaMFIzUlU4c1YwRkJRVUVzUTBGQldVVXNVMEZCUVVFc1EwRkRka1pETERCQ1FVRkJRU3hEUVVFMFFtcENMRlZCUVVGQkxFTkJRV0ZGTEZsQlFVRkJMRU5CUVZNc1JVRkJRU3hEUVVGSFowSXNUVUZCUVVFc1EwRkJUME1zVVVGQlFVRXNRMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1MwRnFSSHBFV2l4RFFVRkJRU3hEUVd0RVNHRXNhMEpCUVVGQkxFTkJRVzlDVWl4TFFVRkJRU3hEUVVGTlNTeFRRVUZCUVN4RFFVTXhRa3NzYzBKQlFVRkJMRU5CUVhkQ1ZDeExRVUZCUVN4RFFVRk5TU3hUUVVGQlFTeERRVUZWVFN4UFFVRkJRU3hEUVVONFEwTXNjMEpCUVVGQkxFTkJRWGRDV0N4TFFVRkJRU3hEUVVGTlNTeFRRVUZCUVN4RFFVRlZVU3hQUVVGQlFTeERRVU40UTBNc2JVSkJRVUZCTEVOQlFYRkNZaXhMUVVGQlFTeERRVUZOU1N4VFFVRkJRU3hEUVVGVlZTeEpRVUZCUVN4RFFVTnlRME1zY1VKQlFVRkJMRU5CUVhWQ1ppeExRVUZCUVN4RFFVRk5TU3hUUVVGQlFTeERRVUZWV1N4TlFVRkJRU3hEUVVOMlEwTXNhME5CUVVGQkxFTkJRVUZCTEV0QmRrUkhkRUlzUTBGQlFVRXNRMEYzUkVoMVFpeHBRa0ZCUVVFc1EwRkJRVUVzUzBGNFJFZDJRaXhEUVVGQlFTeERRWGxFU0hkQ0xEQkNRVUZCUVN4RFFVRkJRU3hMUVhwRVIzaENMRU5CUVVGQkxFTkJNRVJJZVVJc2EwSkJRVUZCTEVOQlFVRkJMRXRCTVVSSGVrSXNRMEZCUVVFc1EwRXlSRWd3UWl3d1FrRkJRVUVzUTBGQlFVRXNTMEV6UkVjeFFpeERRVUZCUVN4RFFUUkVTREpDTERKQ1FVRkJRU3hEUVVGQlFTeExRVFZFUnpOQ0xFTkJRVUZCTEVOQk5rUklORUlzTUVKQlFVRkJMRU5CUVRSQ04wSXNaMEpCUVVGQkxFVkJRVzlDVGl4VlFVRkJRU3hGUVVGamEwSXNUVUZCUVVFc1EwRkJUMnRDTEdGQlFVRkJMRU5CUVdkQ09VSXNaMEpCUVVGQkxFTkJRV2xDV1N4TlFVRkJRU3hEUVVGUGEwSXNZVUZCUVVFc1EwRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1MwRTNSREZITjBJc1EwRkJRVUVzUTBFNFJFZzRRaXhYUVVGQlFTeERRVUZuUXl4WFFVRkJMRVZCUVVFc1QwRkJXa01zVDBGQlFVRXNRMEZCUVVFc1MwRTVSR3BDTDBJc1EwRkJRVUVzUTBFNFJIVkVLMElzVDBGQlFVRXNRMEZETVVSRExGZEJRVUZCTEVOQlFXRkRMRTlCUVVGQkxFTkJRMkpETEc5Q1FVRkJRU3hEUVVGelFrUXNUMEZCUVVFc1EwRkJVWGhDTEZOQlFVRkJMRU5CUXpsQ01FSXNXVUZCUVVFc1EwRkJhME1zVjBGQlFTeEZRVUZCTEU5QlFXSkRMRkZCUVVGQkxFTkJRVUZCTEV0QmFrVnNRbkJETEVOQlFVRkJMRU5CYVVWNVJHOURMRkZCUVVGQkxFTkJRelZFUXl4eFFrRkJRVUVzUTBGQk1rTXNWMEZCUVN4RlFVRkJMRTlCUVdKRUxGRkJRVUZCTEVOQlFVRkJMRXRCYkVVelFuQkRMRU5CUVVGQkxFTkJhMFZyUlc5RExGRkJRVUZCTEVOQlFWTXpRaXhUUVVGQlFTeERRVU01UlRaQ0xGRkJRVUZCTEVOQlFWVkRMRWxCUVVGQkxFTkJRMVpETEdsQ1FVRkJRU3hEUVVGdFFrUXNTVUZCUVVFc1EwRkJTemxDTEZOQlFVRkJMRU5CUTNoQ1owTXNZVUZCUVVFc1EwRkJaVU1zVTBGQlFVRXNRMEZEWmtNc2MwSkJRVUZCTEVOQlFYZENReXhyUWtGQlFVRXNRMEZEZUVKRExHRkJRVUZCTEVOQlFXVkRMRk5CUVVGQkxFTkJRMlpETEhOQ1FVRkJRU3hEUVVGM1FrTXNhMEpCUVVGQkxFTkJRM2hDUXl4VFFVRkJRU3hEUVVGWFF5eExRVUZCUVN4RFFVTllReXhyUWtGQlFVRXNRMEZCYjBKRUxFdEJRVUZCTEVOQlFVMTZReXhUUVVGQlFTeERRVU14UWpKRExGRkJRVUZCTEVOQlFWVkRMRWxCUVVGQkxFTkJRMVpETEdGQlFVRkJMRU5CUVdWRExGTkJRVUZCTEVOQlEyWkRMSE5DUVVGQlFTeERRVUYzUWtRc1UwRkJRVUVzUTBGQlZUbERMRk5CUVVGQkxFTkJRMnhEWjBRc1owSkJRVUZCTEVOQlFUQkRMRmRCUVVFc1JVRkJRU3hQUVVGcVFrTXNXVUZCUVVFc1EwRkJRVUVzUzBFNVJYUkNNVVFzUTBGQlFVRXNRMEU0UldsRk1FUXNXVUZCUVVFc1EwRkRjRVZETEhsQ1FVRkJRU3hEUVVGdFJDeFhRVUZCTEVWQlFVRXNUMEZCYWtKRUxGbEJRVUZCTEVOQlFVRkJMRXRCTDBVdlFqRkVMRU5CUVVGQkxFTkJLMFV3UlRCRUxGbEJRVUZCTEVOQlFXRnFSQ3hUUVVGQlFTeERRVU14Um0xRUxHZENRVUZCUVN4RFFVRXdReXhYUVVGQkxFVkJRVUVzVDBGQmFrSkRMRmxCUVVGQkxFTkJRVUZCTEV0QmFFWjBRamRFTEVOQlFVRkJMRU5CWjBacFJUWkVMRmxCUVVGQkxFTkJRM0JGUXl4NVFrRkJRVUVzUTBGQmJVUXNWMEZCUVN4RlFVRkJMRTlCUVdwQ1JDeFpRVUZCUVN4RFFVRkJRU3hMUVdwR0wwSTNSQ3hEUVVGQlFTeERRV2xHTUVVMlJDeFpRVUZCUVN4RFFVRmhjRVFzVTBGQlFVRXNRMEZETVVaelJDeFpRVUZCUVN4RFFVRmpReXhSUVVGQlFTeERRVU5rUXl4eFFrRkJRVUVzUTBGQmRVSkVMRkZCUVVGQkxFTkJRVk4yUkN4VFFVRkJRU3hEUVVOb1EzbEVMR0ZCUVVGQkxFTkJRVUZCTEV0QmNFWkhiRVVzUTBGQlFVRXNRMEZ4UmtodFJTeHhRa0ZCUVVFc1EwRkJRVUVzUzBGeVJrZHVSU3hEUVVGQlFTeERRWE5HU0c5RkxITkNRVUZCUVN4RFFVRkJRU3hMUVhSR1IzQkZMRU5CUVVGQkxFTkJkVVpJY1VVc1lVRkJRVUVzUTBGQmIwTXNWMEZCUVN4RlFVRkJMRTlCUVdSRExGTkJRVUZCTEVOQlFVRkJMRXRCZGtadVFuUkZMRU5CUVVGQkxFTkJkVVl5UkhORkxGTkJRVUZCTEVOQlF6bEVReXh6UWtGQlFVRXNRMEZCTmtNc1YwRkJRU3hGUVVGQkxFOUJRV1JFTEZOQlFVRkJMRU5CUVVGQkxFdEJlRVkxUW5SRkxFTkJRVUZCTEVOQmQwWnZSWE5GTEZOQlFVRkJMRU5CUVZVM1JDeFRRVUZCUVN4RFFVTnFSaXRFTEdOQlFVRkJMRU5CUVhORExGZEJRVUVzUlVGQlFTeFBRVUZtUXl4VlFVRkJRU3hEUVVGQlFTeExRWHBHY0VKNlJTeERRVUZCUVN4RFFYbEdOa1I1UlN4VlFVRkJRU3hEUVVOb1JVTXNkVUpCUVVGQkxFTkJRU3RETEZkQlFVRXNSVUZCUVN4UFFVRm1SQ3hWUVVGQlFTeERRVUZCUVN4TFFURkdOMEo2UlN4RFFVRkJRU3hEUVRCR2MwVnpSU3hUUVVGQlFTeERRVUZWTjBRc1UwRkJRVUVzUTBGRGJrWnJSU3hqUVVGQlFTeERRVUZ6UXl4WFFVRkJMRVZCUVVFc1QwRkJaa01zVlVGQlFVRXNRMEZCUVVFc1MwRXpSbkJDTlVVc1EwRkJRVUVzUTBFeVJqWkVORVVzVlVGQlFVRXNRMEZEYUVWRExIVkNRVUZCUVN4RFFVRXJReXhYUVVGQkxFVkJRVUVzVDBGQlprUXNWVUZCUVVFc1EwRkJRVUVzUzBFMVJqZENOVVVzUTBGQlFVRXNRMEUwUm5ORk5FVXNWVUZCUVVFc1EwRkJWMjVGTEZOQlFVRkJMRU5CUTNCR2NVVXNXVUZCUVVFc1EwRkJZME1zVVVGQlFVRXNRMEZEWkVNc1UwRkJRVUVzUTBGQlYwTXNTMEZCUVVFc1EwRkRXRU1zY1VKQlFVRkJMRU5CUVhWQ2VrWXNWVUZCUVVFc1EwRkJZVVVzV1VGQlFVRXNRMEZCVTBFc1dVRkJRVUVzUTBGQlV5eEZRVUZCTEVOQlFVZG5RaXhOUVVGQlFTeERRVUZQUXl4UlFVRkJRU3hEUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4TFFTOUdOMFJhTEVOQlFVRkJMRU5CWjBkSWJVWXNVVUZCUVVFc1EwRkJNRUlzVVVGQlFTeEZRVUZCTEU5QlFWUkRMRWxCUVVGQkxFTkJRVzlDUVN4SlFVRkJRU3hEUVVGQlFTeExRV2hIYkVOd1JpeERRVUZCUVN4RFFXbEhTSEZHTEdGQlFVRkJMRU5CUVN0Q0xGRkJRVUVzUlVGQlFTeFBRVUZVUkN4SlFVRkJRU3hEUVVGdlFrRXNTVUZCUVVFc1EwRkJTMFVzUzBGQlFVRXNRMEZCUVVFc1MwRnFSelZEZEVZc1EwRkJRVUVzUTBGclIwaDFSaXhQUVVGQlFTeERRVUYzUWl4WFFVRkJMRVZCUVVFc1QwRkJVa01zUjBGQlFVRXNRMEZCUVVFc1MwRnNSMko0Uml4RFFVRkJRU3hEUVd0SEswTjNSaXhIUVVGQlFTeERRVU5zUkVNc2QwSkJRVUZCTEVOQlFYbERMRmRCUVVFc1JVRkJRU3hQUVVGU1JDeEhRVUZCUVN4RlFVRjNRaTlHTEZWQlFVRkJMRU5CUVhsQ1JTeFpRVUZCUVN4RFFVRkJRU3hEUVVGVExFbEJRVWsyUml4SFFVRkJRU3hGUVVGTk4wVXNUVUZCUVVFc1EwRkJUME1zVVVGQlFVRXNRMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1MwRnVSM3BIV2l4RFFVRkJRU3hEUVc5SFNEQkdMR2RDUVVGQlFTeERRVUZwUXl4WFFVRkJMRVZCUVVFc1QwRkJVa1lzUjBGQlFVRXNRMEZCUVVFc1MwRndSM1JDZUVZc1EwRkJRVUVzUTBGdlIzZEVkMFlzUjBGQlFVRXNRMEZCU1M5RkxGTkJRVUZCTEVOQlF5OUVhMFlzVVVGQlFVRXNRMEZCVlVNc1NVRkJRVUVzUTBGRFZrTXNWVUZCUVVFc1EwRkJXVU1zVFVGQlFVRXNRMEZEV2tNc2JVSkJRVUZCTEVOQlFYRkNSQ3hOUVVGQlFTeERRVUZQY2tZc1UwRkJRVUVzUTBGRE5VSjFSaXhWUVVGQlFTeERRVUZaYWtnc1RVRkJRVUVzUTBGRFdtdElMRzFDUVVGQlFTeERRVUZ4UW14SUxFMUJRVUZCTEVOQlFVOHdRaXhUUVVGQlFTeERRVU0xUW5sR0xIRkNRVUZCUVN4RFFVRjFRbTVJTEUxQlFVRkJMRU5CUVU4d1FpeFRRVUZCUVN4RFFVRlZNRVlzVVVGQlFVRXNRMEZEZUVORExHOUNRVUZCUVN4RFFVRnpRbkpJTEUxQlFVRkJMRU5CUVU4d1FpeFRRVUZCUVN4RFFVRlZORVlzVDBGQlFVRXNRMEZEZGtORExHTkJRVUZCTEVOQlFXZENReXhWUVVGQlFTeERRVU5vUWtNc1dVRkJRVUVzUTBGQlkwTXNVVUZCUVVFc1EwRkRaRU1zVjBGQlFVRXNRMEZCWjBNc1YwRkJRU3hGUVVGQkxFOUJRVnBETEU5QlFVRkJMRU5CUVVGQkxFdEJPVWRxUWpOSExFTkJRVUZCTEVOQk9FZDFSREpITEU5QlFVRkJMRU5CUXpGRVF5eHZRa0ZCUVVFc1EwRkJlVU1zVjBGQlFTeEZRVUZCTEU5QlFWcEVMRTlCUVVGQkxFTkJRVUZCTEV0QkwwY3hRak5ITEVOQlFVRkJMRU5CSzBkblJUSkhMRTlCUVVGQkxFTkJRVkZzUnl4VFFVRkJRU3hEUVVNelJXOUhMSEZDUVVGQlFTeERRVUV3UXl4WFFVRkJMRVZCUVVFc1QwRkJXa1lzVDBGQlFVRXNRMEZCUVVFc1MwRm9TRE5DTTBjc1EwRkJRVUVzUTBGblNHbEZNa2NzVDBGQlFVRXNRMEZCVVd4SExGTkJRVUZCTEVOQlFWVnhSeXhKUVVGQlFTeERRVU4wUmtNc1pVRkJRVUVzUTBGQmIwTXNWMEZCUVN4RlFVRkJMRTlCUVZwS0xFOUJRVUZCTEVOQlFVRkJMRXRCYWtoeVFqTkhMRU5CUVVGQkxFTkJhVWd5UkRKSExFOUJRVUZCTEVOQlFWRkxMRWRCUVVGQkxFTkJRM1JGUXl4clFrRkJRVUVzUTBGQmRVTXNWMEZCUVN4RlFVRkJMRTlCUVZwT0xFOUJRVUZCTEVOQlFVRkJMRXRCYkVoNFFqTkhMRU5CUVVGQkxFTkJhMGc0UkRKSExFOUJRVUZCTEVOQlFWRlBMRTFCUVVGQkxFTkJRM3BGUXl4dFFrRkJRVUVzUTBGQmQwTXNWMEZCUVN4RlFVRkJMRTlCUVZwU0xFOUJRVUZCTEVOQlFVRkJMRXRCYmtoNlFqTkhMRU5CUVVGQkxFTkJiVWdyUkRKSExFOUJRVUZCTEVOQlFWRlRMRTlCUVVGQkxFTkJRekZGUXl4VFFVRkJRU3hEUVVFMFFpeFhRVUZCTEVWQlFVRXNUMEZCVmtNc1MwRkJRVUVzUTBGQlFVRXNTMEZ3U0daMFNDeERRVUZCUVN4RFFXOUliVVJ6U0N4TFFVRkJRU3hEUVVOMFJFTXNZMEZCUVVFc1EwRkJaMEpETEZWQlFVRkJMRU5CUTJoQ1F5eDFRa0ZCUVVFc1EwRkJlVUpFTEZWQlFVRkJMRU5CUVZjdlJ5eFRRVUZCUVN4RFFVTndRMmxJTEd0Q1FVRkJRU3hEUVVGdlFrTXNZMEZCUVVFc1EwRkRjRUpETERKQ1FVRkJRU3hEUVVFMlFrUXNZMEZCUVVFc1EwRkJaV3hJTEZOQlFVRkJMRU5CUXpWRGIwZ3NWMEZCUVVFc1EwRkJaME1zVjBGQlFTeEZRVUZCTEU5QlFWcERMRTlCUVVGQkxFTkJRVUZCTEV0QmVraHFRamxJTEVOQlFVRkJMRU5CZVVoMVJEaElMRTlCUVVGQkxFTkJRekZFUXl4VlFVRkJRU3hEUVVGWlF5eE5RVUZCUVN4RFFVTmFReXh0UWtGQlFVRXNRMEZCY1VKRUxFMUJRVUZCTEVOQlFVOTJTQ3hUUVVGQlFTeERRVU0xUW5sSUxFOUJRVUZCTEVOQlFYZENMRmRCUVVFc1JVRkJRU3hQUVVGU1F5eEhRVUZCUVN4RFFVRkJRU3hMUVRWSVltNUpMRU5CUVVGQkxFTkJORWdyUTIxSkxFZEJRVUZCTEVOQlEyeEVReXgzUWtGQlFVRXNRMEZCZVVNc1YwRkJRU3hGUVVGQkxFOUJRVkpFTEVkQlFVRkJMRVZCUVhkQ01Va3NWVUZCUVVFc1EwRkJlVUpGTEZsQlFVRkJMRU5CUVVGQkxFTkJRVk1zU1VGQlNYZEpMRWRCUVVGQkxFVkJRVTE0U0N4TlFVRkJRU3hEUVVGUFF5eFJRVUZCUVN4RFFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hMUVRkSWVrZGFMRU5CUVVGQkxFTkJPRWhJY1Vrc1owSkJRVUZCTEVOQlFXbERMRmRCUVVFc1JVRkJRU3hQUVVGU1JpeEhRVUZCUVN4RFFVRkJRU3hMUVRsSWRFSnVTU3hEUVVGQlFTeERRVGhJZDBSdFNTeEhRVUZCUVN4RFFVRkpNVWdzVTBGQlFVRXNRMEZETDBRMlNDeHhRa0ZCUVVFc1EwRkJiMFFzVjBGQlFTeEZRVUZCTEU5QlFYUkNReXhwUWtGQlFVRXNRMEZCUVVFc1MwRXZTRE5DZGtrc1EwRkJRVUVzUTBFclNESkZkVWtzYVVKQlFVRkJMRU5CUXpsRlF5dzRRa0ZCUVVFc1EwRkJOa1FzVjBGQlFTeEZRVUZCTEU5QlFYUkNSQ3hwUWtGQlFVRXNRMEZCUVVFc1MwRm9TWEJEZGtrc1EwRkJRVUVzUTBGblNXOUdkVWtzYVVKQlFVRkJMRU5CUVd0Q09VZ3NVMEZCUVVFc1EwRkRla2RuU1N4VlFVRkJRU3hEUVVGWlF5eE5RVUZCUVN4RFFVTmFReXd5UWtGQlFVRXNRMEZCTmtKc1NpeFZRVUZCUVN4RFFVRmhSU3haUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZCUjJkQ0xFMUJRVUZCTEVOQlFVOURMRkZCUVVGQkxFTkJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QmJFa3hSRm9zUTBGQlFVRXNRMEZ0U1VnMFNTeHRRa0ZCUVVFc1EwRkJjVUpHTEUxQlFVRkJMRU5CUVU5cVNTeFRRVUZCUVN4RFFVTTFRbTlKTEZWQlFVRkJMRU5CUVZsd1NpeFZRVUZCUVN4RFFVRmhhMElzVFVGQlFVRXNRMEZCUVVFc1MwRndTWFJDV0N4RFFVRkJRU3hEUVhGSlNEaEpMRzFDUVVGQlFTeERRVUZ4UW5KS0xGVkJRVUZCTEVOQlFXRnJRaXhOUVVGQlFTeERRVUZQUml4VFFVRkJRU3hEUVVGQlFTeExRWEpKZEVOVUxFTkJRVUZCTEVOQmMwbElLMGtzWlVGQlFVRXNRMEZCYVVKRExGZEJRVUZCTEVOQlEycENReXgzUWtGQlFVRXNRMEZCTUVKRUxGZEJRVUZCTEVOQlFWbDJTU3hUUVVGQlFTeERRVU4wUTNsSkxHdENRVUZCUVN4RFFVRnZRaTlLTEdOQlFVRkJMRU5CUTNCQ1owc3NZMEZCUVVFc1EwRkJaMEpzU2l4VlFVRkJRU3hEUVVOb1FtMUtMSFZDUVVGQlFTeERRVUY1UW01S0xGVkJRVUZCTEVOQlFXRkJMRlZCUVVGQkxFTkJRVmRSTEZOQlFVRkJMRU5CUVVGQkxFdEJNVWs1UTFRc1EwRkJRVUVzUTBFeVNVaHhTaXhoUVVGQlFTeERRVUZsZWtzc1ZVRkJRVUVzUTBGRFpqQkxMSE5DUVVGQlFTeERRVUYzUWpGTExGVkJRVUZCTEVOQlFWYzJRaXhUUVVGQlFTeERRVU51UXpoSkxHTkJRVUZCTEVOQlFYTkRMRmRCUVVFc1JVRkJRU3hQUVVGbWNrb3NWVUZCUVVFc1EwRkJRVUVzUzBFM1NYQkNSaXhEUVVGQlFTeERRVFpKTmtSRkxGVkJRVUZCTEVOQlEyaEZjMG9zZFVKQlFVRkJMRU5CUVN0RExGZEJRVUVzUlVGQlFTeFBRVUZtZEVvc1ZVRkJRVUVzUTBGQlFVRXNTMEU1U1RkQ1JpeERRVUZCUVN4RFFUaEpjMFZGTEZWQlFVRkJMRU5CUVZkUExGTkJRVUZCTEVOQlEzQkdaMG9zY1VKQlFVRkJMRU5CUVc5RUxGZEJRVUVzUlVGQlFTeFBRVUYwUWtNc2FVSkJRVUZCTEVOQlFVRkJMRXRCTDBrelFqRktMRU5CUVVGQkxFTkJLMGt5UlRCS0xHbENRVUZCUVN4RFFVTTVSVU1zT0VKQlFVRkJMRU5CUVRaRUxGZEJRVUVzUlVGQlFTeFBRVUYwUWtRc2FVSkJRVUZCTEVOQlFVRkJMRXRCYUVwd1F6RktMRU5CUVVGQkxFTkJaMHB2UmpCS0xHbENRVUZCUVN4RFFVRnJRbXBLTEZOQlFVRkJMRU5CUTNwSGJVb3NaVUZCUVVFc1EwRkJkME1zVjBGQlFTeEZRVUZCTEU5QlFXaENReXhYUVVGQlFTeERRVUZCUVN4TFFXcEtja0kzU2l4RFFVRkJRU3hEUVdsS0swUTJTaXhYUVVGQlFTeERRVU5zUlVNc2QwSkJRVUZCTEVOQlFXbEVMRmRCUVVFc1JVRkJRU3hQUVVGb1FrUXNWMEZCUVVFc1EwRkJRVUVzUzBGc1NqbENOMG9zUTBGQlFVRXNRMEZyU25kRk5rb3NWMEZCUVVFc1EwRkJXWEJLTEZOQlFVRkJMRU5CUTNaR2Mwb3NaVUZCUVVFc1EwRkJkME1zVjBGQlFTeEZRVUZCTEU5QlFXaENReXhYUVVGQlFTeERRVUZCUVN4TFFXNUtja0pvU3l4RFFVRkJRU3hEUVcxS0swUm5TeXhYUVVGQlFTeERRVU5zUlVNc2QwSkJRVUZCTEVOQlFXbEVMRmRCUVVFc1JVRkJRU3hQUVVGb1FrUXNWMEZCUVVFc1EwRkJRVUVzUzBGd1NqbENhRXNzUTBGQlFVRXNRMEZ2U25kRlowc3NWMEZCUVVFc1EwRkJXWFpLTEZOQlFVRkJMRU5CUTNaR2VVb3NXVUZCUVVFc1EwRkJZME1zVVVGQlFVRXNRMEZEWkVNc2NVSkJRVUZCTEVOQlFYVkNSQ3hSUVVGQlFTeERRVUZUTVVvc1UwRkJRVUVzUTBGRGFFTTBTaXhYUVVGQlFTeERRVUZuUXl4WFFVRkJMRVZCUVVFc1QwRkJXa01zVDBGQlFVRXNRMEZCUVVFc1MwRjJTbXBDZEVzc1EwRkJRVUVzUTBGMVNuVkVjMHNzVDBGQlFVRXNRMEZETVVSRExHOUNRVUZCUVN4RFFVRjVReXhYUVVGQkxFVkJRVUVzVDBGQldrUXNUMEZCUVVFc1EwRkJRVUVzUzBGNFNqRkNkRXNzUTBGQlFVRXNRMEYzU21kRmMwc3NUMEZCUVVFc1EwRkJVVGRLTEZOQlFVRkJMRU5CUXpORkswb3NWMEZCUVVFc1EwRkJaME1zVjBGQlFTeEZRVUZCTEU5QlFWcERMRTlCUVVGQkxFTkJRVUZCTEV0QmVrcHFRbnBMTEVOQlFVRkJMRU5CZVVwMVJIbExMRTlCUVVGQkxFTkJRekZFUXl4dlFrRkJRVUVzUTBGQmVVTXNWMEZCUVN4RlFVRkJMRTlCUVZwRUxFOUJRVUZCTEVOQlFVRkJMRXRCTVVveFFucExMRU5CUVVGQkxFTkJNRXBuUlhsTExFOUJRVUZCTEVOQlFWRm9TeXhUUVVGQlFTeERRVUZCUVN4RFFVbDRSV3RMTEZGQlFVRkJMRU5CUkU5cVRDeHBRa0ZCVVN4RFFVTkRhMHdzU1VGQlFVRXNRMEZCU3pWSExGRkJRVUZCTEVOQlFWTTBSeXhKUVVGQlFTeERRVUZOYkVNc1RVRkJRVUVzUTBGQlQycEpMRk5CUVVGQkxFTkJRVlZ2U3l4UFFVRkJRU3hEUVVGQlFTeERRVWR5UkVNc1ZVRkJRVUVzUTBGQllTeHZSMEZCUVN4RFFVTmlReXhaUVVGQlFTeERRVUZsTEZWQlFVRXNRMEYxUW01Q1F5eHZRa0ZCVDBNc1EwRkJWU3hUUVVGelFrTXNTVUZCUVVFc1EwRkJUVU1zV1VGQlFVRXNRMEZCUVVFc1EwRkROVU1zUjBGQmIwSXNVVUZCUVN4RlFVRkJMRTlCUVZSRUxFbEJRVUZCTEVWQlFYRkRMRU5CUVVFc1IwRkJhRUpCTEVsQlFVRkJMRU5CUVV0RkxFMUJRVUZCTEVOQlEzQkRMRTFCUVUwc1NVRkJTWFpOTEZOQlFVRkJMRU5CUVZVc01rTkJRVUVzUTBGQlFTeERRVVZ5UWl4SFFVRkpUeXhUUVVGQlFTeERRVUZWWjAwc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVWQlFUWkNMRk5CUVVFc1JVRkJRU3hQUVVGcVFrUXNXVUZCUVVFc1EwRkRiRU1zVFVGQlRTeEpRVUZKZEUwc1UwRkJRVUVzUTBGQlZTd3lRMEZCUVN4RFFVRkJMRU5CVFhKQ0xFbEJTRUVzU1VFM1FrbDNUU3hOUVVGQlFTeERRVFpDUVVNc1MwRkJRVUVzUlVFM1FrRkVMRTFCUVVGQkxFTkJRVk1zUlVGQlFTeERRVU5pVml4UlFVRkJRU3hEUVRSQ2VVSlBMRWxCUVVGQkxFTkJOVUpTU2l4VlFVRkJRU3hEUVVGWkxGTkJRVlZUTEV0QlFVRkJMRU5CUVU5RExFMUJRVUZCTEVOQlFWRkRMRXRCUVVGQkxFTkJRVTlETEZOQlFVRkJMRU5CUVVGQkxFTkJRelZFVEN4TlFVRkJRU3hEUVVGUFFTeE5RVUZCUVN4RFFVRlBSQ3hOUVVGQlFTeERRVUZCUVN4RFFVRlZTeXhMUVVGQlFTeERRVUZSWkN4UlFVRkJRU3hEUVVGVFpTeFRRVUZCUVN4RFFVRlhXQ3haUVVGQlFTeERRVUZqTEVsQlFVRXNRMEZCUVN4RFFVRlRVeXhOUVVGQlFTeEZRVUZWUkN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVXZSVVlzVFVGQlFVRXNRMEZCUVVFc1EwRXlRa2hOTEV0QlFVRkJMRU5CZGtKclFpeFRRVUV3UWxRc1NVRkJRVUVzUTBGQlRVTXNXVUZCUVVFc1EwRkJRVUVzUTBGRGRFUXNSMEZCUVN4RlFVRk5SQ3hKUVVGQlFTeEpRVUZSTDBzc1ZVRkJRVUVzUTBGQlFVRXNRMEZEWWl4TlFVRk5MRWxCUVVrMlNTeFhRVUZCUVN4RFFVRlpMRmxCUVVFc1EwRkJaV3RETEVsQlFVRkJMRU5CUVU4c2EwSkJRVUVzUTBGQlFTeERRVWszUXl4SFFVRkJMRXRCUVdkRExFTkJRVUVzUjBGQmNrSXZTeXhWUVVGQlFTeERRVUZYSzBzc1NVRkJRVUVzUTBGQlFVRXNSVUZCUVVFc1EwRkJNRUpETEZsQlFVRkJMRU5CUXk5RExFMUJRVTBzU1VGQlNYWk5MRlZCUVVGQkxFTkJRVmNzV1VGQlFTeERRVUZsYzAwc1NVRkJRVUVzUTBGQlR5eHpSRUZCUVN4RFFVRkJMRU5CUnpWRExFOUJRVTh2U3l4VlFVRkJRU3hEUVVGWEswc3NTVUZCUVVFc1EwRkJRVUVzUTBGaFRsVXNRMEZCYVVJc1IwRkJRU3hGUVVGUFRpeExRVUZCUVN4RFFVRk5SaXhOUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZCU1VVc1MwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRXNRMEZCU3l4RlFVRkJMRU5CUVVFc1EwRkJUU3hIUVVGQkxFTkJRVXRJTEZsQlFVRkJMRU5CUVVGQkxFTkJRM0JGVlN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVkFzUzBGQlFVRXNRMEZCVFVZc1RVRkJRVUVzUTBGQlVWTXNRMEZCUVVFc1JVRkJTeXhEUVVGQkxFTkJRM1JETEVkQlFXRXNTVUZCUVN4RlFVRlVSaXhMUVVGQlFTeERRVU5JTEVkQlFVazNUU3hMUVVGQlFTeEZRVUZWSzAwc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVWQlFVMVFMRXRCUVVGQkxFTkJRVTFHTEUxQlFVRkJMRU5CUVZFc1EwRkRja01zU1VGQlNWVXNTVUZCUVVFc1EwRkJUMmhPTEV0QlFVRkJMRU5CUVUwMlRTeExRVUZCUVN4RFFVRlBUQ3hMUVVGQlFTeERRVUZOVHl4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTTVRaXhIUVVGQkxFVkJRVXRXTEZsQlFVRkJMRVZCUVd0Q1J5eExRVUZCUVN4RFFVRk5UeXhEUVVGQlFTeERRVUZCUVN4SFFVRk5SaXhMUVVGQlFTeERRVUZCUVN4RFFVTnNReXhOUVVGTkxFbEJRVWt2VFN4VlFVRkJRU3hEUVVGWExIRkNRVUZCTEVOQlFYZENjMDBzU1VGQlFVRXNRMEZCVHl3MlEwRkJRU3hEUVVGQkxFTkJVM0pFVXl4TFFVRkJRU3hEUVVGUlJ5eEpRVUZCUVN4RlFVRlJMRXRCUVVFc1IwRkJVMEVzU1VGQlFVRXNSVUZCUVVFc1JVRkJWU3hsUVVGQkxFZEJRVzFDUVN4SlFVRkJRU3hEUVVGTGRrMHNSMEZCUVVFc1EwRkJRVUVzUTBGQlQzVk5MRWxCUVVGQkxFTkJRVXQyVFN4SFFVRkJRU3hEUVVGTmIwMHNTMEZCUVVFc1EwRkJUVXdzUzBGQlFVRXNRMEZCVFU4c1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGRmVrWkdMRXRCUVVGQkxFTkJRVkZCTEV0QlFVRkJMRU5CUVUxTUxFdEJRVUZCTEVOQlFVMVBMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CU1haQ0xFOUJRVTlHTEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2x0dWRXeHNYWDA9IiwidmFyIF8kY2FsbEJpbmRfMTAgPSB7fTtcblwidXNlIHN0cmljdFwiO3ZhciAkYXBwbHk9XyRHZXRJbnRyaW5zaWNfOShcIiVGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHklXCIpLCRjYWxsPV8kR2V0SW50cmluc2ljXzkoXCIlRnVuY3Rpb24ucHJvdG90eXBlLmNhbGwlXCIpLCRyZWZsZWN0QXBwbHk9XyRHZXRJbnRyaW5zaWNfOShcIiVSZWZsZWN0LmFwcGx5JVwiLCEwKXx8XyRmdW5jdGlvbkJpbmRfMTYuY2FsbCgkY2FsbCwkYXBwbHkpLCRkZWZpbmVQcm9wZXJ0eT1fJEdldEludHJpbnNpY185KFwiJU9iamVjdC5kZWZpbmVQcm9wZXJ0eSVcIiwhMCk7aWYoJGRlZmluZVByb3BlcnR5KXRyeXskZGVmaW5lUHJvcGVydHkoe30sXCJhXCIse3ZhbHVlOjF9KX1jYXRjaChlKXskZGVmaW5lUHJvcGVydHk9bnVsbH1fJGNhbGxCaW5kXzEwPWZ1bmN0aW9uKCl7cmV0dXJuICRyZWZsZWN0QXBwbHkoXyRmdW5jdGlvbkJpbmRfMTYsJGNhbGwsYXJndW1lbnRzKX07dmFyIGFwcGx5QmluZD1mdW5jdGlvbigpe3JldHVybiAkcmVmbGVjdEFwcGx5KF8kZnVuY3Rpb25CaW5kXzE2LCRhcHBseSxhcmd1bWVudHMpfTskZGVmaW5lUHJvcGVydHk/JGRlZmluZVByb3BlcnR5KF8kY2FsbEJpbmRfMTAsXCJhcHBseVwiLHt2YWx1ZTphcHBseUJpbmR9KTpfJGNhbGxCaW5kXzEwLmFwcGx5PWFwcGx5QmluZDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1OaGJHeENhVzVrTG1weklsMHNJbTVoYldWeklqcGJJbUpwYm1RaUxDSWtZWEJ3YkhraUxDSkhaWFJKYm5SeWFXNXphV01pTENJa1kyRnNiQ0lzSWlSeVpXWnNaV04wUVhCd2JIa2lMQ0pqWVd4c0lpd2lKR1JsWm1sdVpWQnliM0JsY25SNUlpd2lkbUZzZFdVaUxDSmxJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW1GeVozVnRaVzUwY3lJc0ltRndjR3g1UW1sdVpDSXNJbUZ3Y0d4NUlsMHNJbTFoY0hCcGJtZHpJam9pTzBGQlFVRXNXVUZCUVN4RFFVVkJMRWxCUVVsQkxFRkJTVUZETEUxQlFVRkJMRU5CUVZORExHZENRVUZCUVN4RFFVRmhMRFJDUVVGQkxFTkJRVUVzUTBGRGRFSkRMRXRCUVVGQkxFTkJRVkZFTEdkQ1FVRkJRU3hEUVVGaExESkNRVUZCTEVOQlFVRXNRMEZEY2tKRkxHRkJRVUZCTEVOQlFXZENSaXhuUWtGQlFVRXNRMEZCWVN4cFFrRkJRU3hEUVVGQkxFTkJRVzFDTEVOQlFVRXNRMEZCUVN4RlFVRlRSaXhwUWtGQlFVRXNRMEZCUzBzc1NVRkJRVUVzUTBGQlMwWXNTMEZCUVVFc1EwRkJUMFlzVFVGQlFVRXNRMEZCUVVFc1EwRkZNVVZMTEdWQlFVRkJMRU5CUVd0Q1NpeG5Ra0ZCUVVFc1EwRkJZU3g1UWtGQlFTeERRVUZCTEVOQlFUSkNMRU5CUVVFc1EwRkJRU3hEUVVVNVJDeEhRVUZKU1N4bFFVRkJRU3hEUVVOSUxFZEJRVUVzUTBGRFEwRXNaVUZCUVVFc1EwRkJaMElzUlVGQlFTeERRVUZKTEVkQlFVRXNRMEZCU3l4RFFVRkZReXhMUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUTJwRExFMUJRVTlETEVOQlFVRkJMRU5CUVVGQkxFTkJSVkpHTEdWQlFVRkJMRU5CUVd0Q0xFbEJRVUVzUTBGSmNFSkhMR0ZCUVU5RExFTkJRVlVzVlVGQlFTeERRVU5vUWl4UFFVRlBUaXhoUVVGQlFTeERRVUZqU2l4cFFrRkJRVUVzUTBGQlRVY3NTMEZCUVVFc1EwRkJUMUVzVTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGJrTXNTVUZCU1VNc1UwRkJRVUVzUTBGQldTeFZRVUZCTEVOQlEyWXNUMEZCVDFJc1lVRkJRVUVzUTBGQlkwb3NhVUpCUVVGQkxFTkJRVTFETEUxQlFVRkJMRU5CUVZGVkxGTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMmhEVEN4bFFVRkJRU3hEUVVOSVFTeGxRVUZCUVN4RFFVRm5Ra2NzWVVGQlQwTXNRMEZCVXl4UFFVRkJMRU5CUVZNc1EwRkJSVWdzUzBGQlFVRXNRMEZCVDBzc1UwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZiRVJJTEdGQlFVOURMRU5CUVZGSExFdEJRVUZCTEVOQlFWRkVMRk5CUVVGQkxFTkJRVUZCSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2x0dWRXeHNYWDA9IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyICRpbmRleE9mPV8kY2FsbEJpbmRfMTAoXyRHZXRJbnRyaW5zaWNfOShcIlN0cmluZy5wcm90b3R5cGUuaW5kZXhPZlwiKSk7dmFyIF8kY2FsbEJvdW5kXzExPWZ1bmN0aW9uKG5hbWUsYWxsb3dNaXNzaW5nKXt2YXIgaW50cmluc2ljPV8kR2V0SW50cmluc2ljXzkobmFtZSwhIWFsbG93TWlzc2luZyk7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgaW50cmluc2ljJiYkaW5kZXhPZihuYW1lLFwiLnByb3RvdHlwZS5cIik/XyRjYWxsQmluZF8xMChpbnRyaW5zaWMpOmludHJpbnNpY307XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltTmhiR3hDYjNWdVpDNXFjeUpkTENKdVlXMWxjeUk2V3lKSFpYUkpiblJ5YVc1emFXTWlMQ0lrYVc1a1pYaFBaaUlzSW1OaGJHeENhVzVrSWl3aWJXOWtkV3hsSWl3aVpYaHdiM0owY3lJc0ltNWhiV1VpTENKaGJHeHZkMDFwYzNOcGJtY2lMQ0pwYm5SeWFXNXphV01pWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTEZsQlFVRXNRMEZGUVN4SlFVRkpRU3hCUVVsQlF5eFJRVUZCUVN4RFFVRlhReXhoUVVGQlFTeERRVUZUUml4blFrRkJRVUVzUTBGQllTd3dRa0ZCUVN4RFFVRkJMRU5CUVVFc1EwRkZja05ITEd0Q1FVRlBReXhEUVVGVkxGTkJRVFJDUXl4SlFVRkJRU3hEUVVGTlF5eFpRVUZCUVN4RFFVRkJRU3hEUVVOc1JDeEpRVUZKUXl4VFFVRkJRU3hEUVVGWlVDeG5Ra0ZCUVVFc1EwRkJZVXNzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlVVTXNXVUZCUVVFc1EwRkJRVUVzUTBGRGNrTXNUVUZCZVVJc1ZVRkJRU3hGUVVGQkxFOUJRV1JETEZOQlFVRkJMRVZCUVRSQ1RpeFJRVUZCUVN4RFFVRlRTU3hKUVVGQlFTeERRVUZOTEdGQlFVRXNRMEZCUVN4RFFVTTVRMGdzWVVGQlFVRXNRMEZCVTBzc1UwRkJRVUVzUTBGQlFVRXNRMEZGVmtFc1UwRkJRVUVzUTBGQlFVRXNRMEZCUVVFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNlcyNTFiR3hkZlE9PSIsIlwidXNlIHN0cmljdFwiO3ZhciBfXyRnT1BEXzEyPV8kR2V0SW50cmluc2ljXzkoXCIlT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvciVcIik7aWYoX18kZ09QRF8xMil0cnl7X18kZ09QRF8xMihbXSxcImxlbmd0aFwiKX1jYXRjaChlKXtfXyRnT1BEXzEyPW51bGx9dmFyIF8kJGdPUERfMTI9X18kZ09QRF8xMjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1kbGRFOTNibEJ5YjNCbGNuUjVSR1Z6WTNKcGNIUnZjaTVxY3lKZExDSnVZVzFsY3lJNld5SWtaMDlRUkNJc0luSmxjWFZwY21VaUxDSkhaWFJKYm5SeWFXNXphV01pTENKbElpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRXNXVUZCUVN4RFFVVkJMRWxCUlVsQkxGVkJRVUZCTEVOQlJtVkRMR2RDUVVWUVF5eERRVUZoTEcxRFFVRkJMRU5CUVVFc1EwRkRla0lzUjBGQlNVWXNWVUZCUVVFc1EwRkRTQ3hIUVVGQkxFTkJRME5CTEZWQlFVRkJMRU5CUVUwc1JVRkJRU3hEUVVGSkxGRkJRVUVzUTBGQlFTeERRVU5VTEUxQlFVOUhMRU5CUVVGQkxFTkJRVUZCTEVOQlJWSklMRlZCUVVGQkxFTkJRVkVzU1VGQlFTeERRVWxXU1N4alFVRlBReXhEUVVGVlRDeFZRVUZCUVN4RFFVRkJRU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiYm5Wc2JGMTkiLCJcInVzZSBzdHJpY3RcIjt2YXIgZm9yRWFjaD1yZXF1aXJlKFwiZm9yZWFjaFwiKSxhdmFpbGFibGVUeXBlZEFycmF5cz1yZXF1aXJlKFwiYXZhaWxhYmxlLXR5cGVkLWFycmF5c1wiKSxjYWxsQm91bmQ9cmVxdWlyZShcImVzLWFic3RyYWN0L2hlbHBlcnMvY2FsbEJvdW5kXCIpLCR0b1N0cmluZz1jYWxsQm91bmQoXCJPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nXCIpLGhhc1RvU3RyaW5nVGFnPXJlcXVpcmUoXCJoYXMtc3ltYm9sc1wiKSgpJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLnRvU3RyaW5nVGFnLHR5cGVkQXJyYXlzPWF2YWlsYWJsZVR5cGVkQXJyYXlzKCksJGluZGV4T2Y9Y2FsbEJvdW5kKFwiQXJyYXkucHJvdG90eXBlLmluZGV4T2ZcIiwhMCl8fGZ1bmN0aW9uKGFycmF5LHZhbHVlKXtmb3IodmFyIGk9MDtpPGFycmF5Lmxlbmd0aDtpKz0xKWlmKGFycmF5W2ldPT09dmFsdWUpcmV0dXJuIGk7cmV0dXJuLTF9LCRzbGljZT1jYWxsQm91bmQoXCJTdHJpbmcucHJvdG90eXBlLnNsaWNlXCIpLHRvU3RyVGFncz17fSxnT1BEPXJlcXVpcmUoXCJlcy1hYnN0cmFjdC9oZWxwZXJzL2dldE93blByb3BlcnR5RGVzY3JpcHRvclwiKSxnZXRQcm90b3R5cGVPZj1PYmplY3QuZ2V0UHJvdG90eXBlT2Y7aGFzVG9TdHJpbmdUYWcmJmdPUEQmJmdldFByb3RvdHlwZU9mJiZmb3JFYWNoKHR5cGVkQXJyYXlzLGZ1bmN0aW9uKHR5cGVkQXJyYXkpe3ZhciBhcnI9bmV3IGdsb2JhbFt0eXBlZEFycmF5XTtpZighKFN5bWJvbC50b1N0cmluZ1RhZyBpbiBhcnIpKXRocm93IG5ldyBFdmFsRXJyb3IoXCJ0aGlzIGVuZ2luZSBoYXMgc3VwcG9ydCBmb3IgU3ltYm9sLnRvU3RyaW5nVGFnLCBidXQgXCIrdHlwZWRBcnJheStcIiBkb2VzIG5vdCBoYXZlIHRoZSBwcm9wZXJ0eSEgUGxlYXNlIHJlcG9ydCB0aGlzLlwiKTt2YXIgcHJvdG89Z2V0UHJvdG90eXBlT2YoYXJyKSxkZXNjcmlwdG9yPWdPUEQocHJvdG8sU3ltYm9sLnRvU3RyaW5nVGFnKTtpZighZGVzY3JpcHRvcil7dmFyIHN1cGVyUHJvdG89Z2V0UHJvdG90eXBlT2YocHJvdG8pO2Rlc2NyaXB0b3I9Z09QRChzdXBlclByb3RvLFN5bWJvbC50b1N0cmluZ1RhZyl9dG9TdHJUYWdzW3R5cGVkQXJyYXldPWRlc2NyaXB0b3IuZ2V0fSk7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24odmFsdWUpe2lmKCF2YWx1ZXx8XCJvYmplY3RcIiE9dHlwZW9mIHZhbHVlKXJldHVybiExO2lmKCFoYXNUb1N0cmluZ1RhZyl7dmFyIHRhZz0kc2xpY2UoJHRvU3RyaW5nKHZhbHVlKSw4LC0xKTtyZXR1cm4gJGluZGV4T2YodHlwZWRBcnJheXMsdGFnKT4tMX1yZXR1cm4hIWdPUEQmJmZ1bmN0aW9uKHZhbHVlKXt2YXIgYW55VHJ1ZT0hMTtyZXR1cm4gZm9yRWFjaCh0b1N0clRhZ3MsZnVuY3Rpb24oZ2V0dGVyLHR5cGVkQXJyYXkpe2lmKCFhbnlUcnVlKXRyeXthbnlUcnVlPWdldHRlci5jYWxsKHZhbHVlKT09PXR5cGVkQXJyYXl9Y2F0Y2goZSl7fX0pLGFueVRydWV9KHZhbHVlKX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx1WkdWNExtcHpJbDBzSW01aGJXVnpJanBiSW1admNrVmhZMmdpTENKeVpYRjFhWEpsSWl3aVlYWmhhV3hoWW14bFZIbHdaV1JCY25KaGVYTWlMQ0pqWVd4c1FtOTFibVFpTENJa2RHOVRkSEpwYm1jaUxDSm9ZWE5VYjFOMGNtbHVaMVJoWnlJc0lsTjViV0p2YkNJc0luUnZVM1J5YVc1blZHRm5JaXdpZEhsd1pXUkJjbkpoZVhNaUxDSWthVzVrWlhoUFppSXNJbUZ5Y21GNUlpd2lkbUZzZFdVaUxDSnBJaXdpYkdWdVozUm9JaXdpSkhOc2FXTmxJaXdpZEc5VGRISlVZV2R6SWl3aVowOVFSQ0lzSW1kbGRGQnliM1J2ZEhsd1pVOW1JaXdpVDJKcVpXTjBJaXdpZEhsd1pXUkJjbkpoZVNJc0ltRnljaUlzSW1kc2IySmhiQ0lzSWtWMllXeEZjbkp2Y2lJc0luQnliM1J2SWl3aVpHVnpZM0pwY0hSdmNpSXNJbk4xY0dWeVVISnZkRzhpTENKblpYUWlMQ0p0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpZEdGbklpd2lZVzU1VkhKMVpTSXNJbWRsZEhSbGNpSXNJbU5oYkd3aUxDSmxJaXdpZEhKNVZIbHdaV1JCY25KaGVYTWlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMR0ZCUlVFc1NVRkJTVUVzVVVGQlZVTXNVVUZCVVN4WFFVTnNRa01zY1VKQlFYVkNSQ3hSUVVGUkxEQkNRVU12UWtVc1ZVRkJXVVlzVVVGQlVTeHBRMEZGY0VKSExGVkJRVmxFTEZWQlFWVXNOa0pCUlhSQ1JTeGxRVVJoU2l4UlFVRlJMR05CUVZKQkxFbEJRMmRFTEdsQ1FVRjJRa3NzVDBGQlQwTXNXVUZGTjBORExGbEJRV05PTEhWQ1FVVmtUeXhUUVVGWFRpeFZRVUZWTERKQ1FVRXlRaXhKUVVGVExGTkJRV2xDVHl4TlFVRlBReXhQUVVOd1JpeEpRVUZMTEVsQlFVbERMRVZCUVVrc1JVRkJSMEVzUlVGQlNVWXNUVUZCVFVjc1QwRkJVVVFzUjBGQlN5eEZRVU4wUXl4SFFVRkpSaXhOUVVGTlJTeExRVUZQUkN4TlFVTm9RaXhQUVVGUFF5eEZRVWRVTEU5QlFWRXNSMEZGVEVVc1QwRkJVMWdzVlVGQlZTd3dRa0ZEYmtKWkxGVkJRVmtzUjBGRFdrTXNTMEZCVDJZc1VVRkJVU3huUkVGRFptZENMR1ZCUVdsQ1F5eFBRVUZQUkN4bFFVTjRRbG9zWjBKQlFXdENWeXhOUVVGUlF5eG5Ra0ZETjBKcVFpeFJRVUZSVVN4WlFVRmhMRk5CUVZWWExGbEJRemxDTEVsQlFVbERMRWxCUVUwc1NVRkJTVU1zVDBGQlQwWXNXVUZEY2tJc1MwRkJUV0lzVDBGQlQwTXNaVUZCWldFc1MwRkRNMElzVFVGQlRTeEpRVUZKUlN4VlFVRlZMSFZFUVVGNVJFZ3NWMEZCWVN4dlJFRkZNMFlzU1VGQlNVa3NUVUZCVVU0c1pVRkJaVWNzUzBGRGRrSkpMRmRCUVdGU0xFdEJRVXRQTEUxQlFVOXFRaXhQUVVGUFF5eGhRVU53UXl4SlFVRkxhVUlzVjBGQldTeERRVU5vUWl4SlFVRkpReXhYUVVGaFVpeGxRVUZsVFN4UFFVTm9RME1zVjBGQllWSXNTMEZCUzFNc1YwRkJXVzVDTEU5QlFVOURMR0ZCUlhSRFVTeFZRVUZWU1N4WlFVRmpTeXhYUVVGWFJTeE5RV2RDY2tORExFOUJRVTlETEZGQlFWVXNVMEZCYzBKcVFpeFBRVU4wUXl4SlFVRkxRU3hQUVVFd1FpeHBRa0ZCVmtFc1RVRkJjMElzVDBGQlR5eEZRVU5zUkN4SlFVRkxUaXhsUVVGblFpeERRVU53UWl4SlFVRkpkMElzU1VGQlRXWXNUMEZCVDFZc1ZVRkJWVThzVDBGQlVTeEhRVUZKTEVkQlEzWkRMRTlCUVU5R0xGTkJRVk5FTEZsQlFXRnhRaXhOUVVGUkxFVkJSWFJETEZGQlFVdGlMRTFCYkVKbExGTkJRVEpDVEN4UFFVTXZReXhKUVVGSmJVSXNVMEZCVlN4RlFWRmtMRTlCVUVFNVFpeFJRVUZSWlN4VlFVRlhMRk5CUVZWblFpeFBRVUZSV2l4WlFVTndReXhKUVVGTFZ5eFJRVU5LTEVsQlEwTkJMRkZCUVZWRExFOUJRVTlETEV0QlFVdHlRaXhUUVVGWFVTeFhRVU5vUXl4TlFVRlBZeXhQUVVkS1NDeFJRVlZCU1N4RFFVRmxka0lpTENKbWFXeGxJam9pTDJodmJXVXZiV2d0WTJKdmJpOW5iM2N2YzNKakwyZHBkR2gxWWk1amIyMHZhMjVoWkdndmJtbHNkR0ZzYXk5emRHRjBhV012ZEdobGJXVnpMMnR1WVdSb0wzTjBZWFJwWXk5c2FXSXRkMmhwYzNCbGNqSXZibTlrWlY5dGIyUjFiR1Z6TDJsekxYUjVjR1ZrTFdGeWNtRjVMMmx1WkdWNExtcHpJbjA9IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIGZvckVhY2g9cmVxdWlyZShcImZvcmVhY2hcIiksYXZhaWxhYmxlVHlwZWRBcnJheXM9cmVxdWlyZShcImF2YWlsYWJsZS10eXBlZC1hcnJheXNcIiksY2FsbEJvdW5kPXJlcXVpcmUoXCJlcy1hYnN0cmFjdC9oZWxwZXJzL2NhbGxCb3VuZFwiKSwkdG9TdHJpbmc9Y2FsbEJvdW5kKFwiT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ1wiKSxoYXNUb1N0cmluZ1RhZz1yZXF1aXJlKFwiaGFzLXN5bWJvbHNcIikoKSYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC50b1N0cmluZ1RhZyx0eXBlZEFycmF5cz1hdmFpbGFibGVUeXBlZEFycmF5cygpLCRzbGljZT1jYWxsQm91bmQoXCJTdHJpbmcucHJvdG90eXBlLnNsaWNlXCIpLHRvU3RyVGFncz17fSxnT1BEPXJlcXVpcmUoXCJlcy1hYnN0cmFjdC9oZWxwZXJzL2dldE93blByb3BlcnR5RGVzY3JpcHRvclwiKSxnZXRQcm90b3R5cGVPZj1PYmplY3QuZ2V0UHJvdG90eXBlT2Y7aGFzVG9TdHJpbmdUYWcmJmdPUEQmJmdldFByb3RvdHlwZU9mJiZmb3JFYWNoKHR5cGVkQXJyYXlzLGZ1bmN0aW9uKHR5cGVkQXJyYXkpe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGdsb2JhbFt0eXBlZEFycmF5XSl7dmFyIGFycj1uZXcgZ2xvYmFsW3R5cGVkQXJyYXldO2lmKCEoU3ltYm9sLnRvU3RyaW5nVGFnIGluIGFycikpdGhyb3cgbmV3IEV2YWxFcnJvcihcInRoaXMgZW5naW5lIGhhcyBzdXBwb3J0IGZvciBTeW1ib2wudG9TdHJpbmdUYWcsIGJ1dCBcIit0eXBlZEFycmF5K1wiIGRvZXMgbm90IGhhdmUgdGhlIHByb3BlcnR5ISBQbGVhc2UgcmVwb3J0IHRoaXMuXCIpO3ZhciBwcm90bz1nZXRQcm90b3R5cGVPZihhcnIpLGRlc2NyaXB0b3I9Z09QRChwcm90byxTeW1ib2wudG9TdHJpbmdUYWcpO2lmKCFkZXNjcmlwdG9yKXt2YXIgc3VwZXJQcm90bz1nZXRQcm90b3R5cGVPZihwcm90byk7ZGVzY3JpcHRvcj1nT1BEKHN1cGVyUHJvdG8sU3ltYm9sLnRvU3RyaW5nVGFnKX10b1N0clRhZ3NbdHlwZWRBcnJheV09ZGVzY3JpcHRvci5nZXR9fSk7dmFyIGlzVHlwZWRBcnJheT1yZXF1aXJlKFwiaXMtdHlwZWQtYXJyYXlcIik7bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24odmFsdWUpe3JldHVybiEhaXNUeXBlZEFycmF5KHZhbHVlKSYmKGhhc1RvU3RyaW5nVGFnP2Z1bmN0aW9uKHZhbHVlKXt2YXIgZm91bmROYW1lPSExO3JldHVybiBmb3JFYWNoKHRvU3RyVGFncyxmdW5jdGlvbihnZXR0ZXIsdHlwZWRBcnJheSl7aWYoIWZvdW5kTmFtZSl0cnl7dmFyIG5hbWU9Z2V0dGVyLmNhbGwodmFsdWUpO25hbWU9PT10eXBlZEFycmF5JiYoZm91bmROYW1lPW5hbWUpfWNhdGNoKGUpe319KSxmb3VuZE5hbWV9KHZhbHVlKTokc2xpY2UoJHRvU3RyaW5nKHZhbHVlKSw4LC0xKSl9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1sdVpHVjRMbXB6SWwwc0ltNWhiV1Z6SWpwYkltWnZja1ZoWTJnaUxDSnlaWEYxYVhKbElpd2lZWFpoYVd4aFlteGxWSGx3WldSQmNuSmhlWE1pTENKallXeHNRbTkxYm1RaUxDSWtkRzlUZEhKcGJtY2lMQ0pvWVhOVWIxTjBjbWx1WjFSaFp5SXNJbE41YldKdmJDSXNJblJ2VTNSeWFXNW5WR0ZuSWl3aWRIbHdaV1JCY25KaGVYTWlMQ0lrYzJ4cFkyVWlMQ0owYjFOMGNsUmhaM01pTENKblQxQkVJaXdpWjJWMFVISnZkRzkwZVhCbFQyWWlMQ0pQWW1wbFkzUWlMQ0owZVhCbFpFRnljbUY1SWl3aVoyeHZZbUZzSWl3aVlYSnlJaXdpUlhaaGJFVnljbTl5SWl3aWNISnZkRzhpTENKa1pYTmpjbWx3ZEc5eUlpd2ljM1Z3WlhKUWNtOTBieUlzSW1kbGRDSXNJbWx6Vkhsd1pXUkJjbkpoZVNJc0ltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaUxDSjJZV3gxWlNJc0ltWnZkVzVrVG1GdFpTSXNJbWRsZEhSbGNpSXNJbTVoYldVaUxDSmpZV3hzSWl3aVpTSXNJblJ5ZVZSNWNHVmtRWEp5WVhseklsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFTeGhRVVZCTEVsQlFVbEJMRkZCUVZWRExGRkJRVkVzVjBGRGJFSkRMSEZDUVVGMVFrUXNVVUZCVVN3d1FrRkRMMEpGTEZWQlFWbEdMRkZCUVZFc2FVTkJSWEJDUnl4VlFVRlpSQ3hWUVVGVkxEWkNRVVYwUWtVc1pVRkVZVW9zVVVGQlVTeGpRVUZTUVN4SlFVTm5SQ3hwUWtGQmRrSkxMRTlCUVU5RExGbEJSVGREUXl4WlFVRmpUaXgxUWtGRlpFOHNUMEZCVTA0c1ZVRkJWU3d3UWtGRGJrSlBMRlZCUVZrc1IwRkRXa01zUzBGQlQxWXNVVUZCVVN4blJFRkRabGNzWlVGQmFVSkRMRTlCUVU5RUxHVkJRM2hDVUN4blFrRkJhMEpOTEUxQlFWRkRMR2RDUVVNM1Fsb3NVVUZCVVZFc1dVRkJZU3hUUVVGVlRTeFpRVU01UWl4SFFVRnJReXh0UWtGQmRrSkRMRTlCUVU5RUxGbEJRVFJDTEVOQlF6ZERMRWxCUVVsRkxFbEJRVTBzU1VGQlNVUXNUMEZCVDBRc1dVRkRja0lzUzBGQlRWSXNUMEZCVDBNc1pVRkJaVk1zUzBGRE0wSXNUVUZCVFN4SlFVRkpReXhWUVVGVkxIVkVRVUY1UkVnc1YwRkJZU3h2UkVGRk0wWXNTVUZCU1Vrc1RVRkJVVTRzWlVGQlpVa3NTMEZEZGtKSExGZEJRV0ZTTEV0QlFVdFBMRTFCUVU5YUxFOUJRVTlETEdGQlEzQkRMRWxCUVV0WkxGZEJRVmtzUTBGRGFFSXNTVUZCU1VNc1YwRkJZVklzWlVGQlpVMHNUMEZEYUVORExGZEJRV0ZTTEV0QlFVdFRMRmRCUVZsa0xFOUJRVTlETEdGQlJYUkRSeXhWUVVGVlNTeFpRVUZqU3l4WFFVRlhSU3hQUVV0MFF5eEpRV1ZKUXl4aFFVRmxja0lzVVVGQlVTeHJRa0ZGTTBKelFpeFBRVUZQUXl4UlFVRlZMRk5CUVhsQ1F5eFBRVU42UXl4UlFVRkxTQ3hoUVVGaFJ5eFRRVU5pY0VJc1pVRnVRbVVzVTBGQk1rSnZRaXhQUVVNdlF5eEpRVUZKUXl4WFFVRlpMRVZCVjJoQ0xFOUJWa0V4UWl4UlFVRlJWU3hWUVVGWExGTkJRVlZwUWl4UFFVRlJZaXhaUVVOd1F5eEpRVUZMV1N4VlFVTktMRWxCUTBNc1NVRkJTVVVzUzBGQlQwUXNUMEZCVDBVc1MwRkJTMG9zVDBGRGJrSkhMRTlCUVZOa0xHRkJRMXBaTEZWQlFWbEZMRTFCUlZvc1RVRkJUMFVzVDBGSFNrb3NWVUZSUVVzc1EwRkJaVTRzVDBGRVVXaENMRTlCUVU5TUxGVkJRVlZ4UWl4UFFVRlJMRWRCUVVraUxDSm1hV3hsSWpvaUwyaHZiV1V2YldndFkySnZiaTluYjNjdmMzSmpMMmRwZEdoMVlpNWpiMjB2YTI1aFpHZ3ZibWxzZEdGc2F5OXpkR0YwYVdNdmRHaGxiV1Z6TDJ0dVlXUm9MM04wWVhScFl5OXNhV0l0ZDJocGMzQmxjakl2Ym05a1pWOXRiMlIxYkdWekwzZG9hV05vTFhSNWNHVmtMV0Z5Y21GNUwybHVaR1Y0TG1wekluMD0iLCJ2YXIgXyR0eXBlc182OCA9IHt9O1xuXCJ1c2Ugc3RyaWN0XCI7LyogcmVtb3ZlZDogdmFyIF8kaXNUeXBlZEFycmF5XzIzPXJlcXVpcmUoXCJpcy10eXBlZC1hcnJheVwiKTsgKi87ZnVuY3Rpb24gdW5jdXJyeVRoaXMoZil7cmV0dXJuIGYuY2FsbC5iaW5kKGYpfXZhciBCaWdJbnRTdXBwb3J0ZWQ9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIEJpZ0ludCxTeW1ib2xTdXBwb3J0ZWQ9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCxPYmplY3RUb1N0cmluZz11bmN1cnJ5VGhpcyhPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKSxudW1iZXJWYWx1ZT11bmN1cnJ5VGhpcyhOdW1iZXIucHJvdG90eXBlLnZhbHVlT2YpLHN0cmluZ1ZhbHVlPXVuY3VycnlUaGlzKFN0cmluZy5wcm90b3R5cGUudmFsdWVPZiksYm9vbGVhblZhbHVlPXVuY3VycnlUaGlzKEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YpO2lmKEJpZ0ludFN1cHBvcnRlZCl2YXIgYmlnSW50VmFsdWU9dW5jdXJyeVRoaXMoQmlnSW50LnByb3RvdHlwZS52YWx1ZU9mKTtpZihTeW1ib2xTdXBwb3J0ZWQpdmFyIHN5bWJvbFZhbHVlPXVuY3VycnlUaGlzKFN5bWJvbC5wcm90b3R5cGUudmFsdWVPZik7ZnVuY3Rpb24gY2hlY2tCb3hlZFByaW1pdGl2ZSh2YWx1ZSxwcm90b3R5cGVWYWx1ZU9mKXtpZihcIm9iamVjdFwiIT10eXBlb2YgdmFsdWUpcmV0dXJuITE7dHJ5e3JldHVybiBwcm90b3R5cGVWYWx1ZU9mKHZhbHVlKSwhMH1jYXRjaChlKXtyZXR1cm4hMX19ZnVuY3Rpb24gaXNNYXBUb1N0cmluZyh2YWx1ZSl7cmV0dXJuXCJbb2JqZWN0IE1hcF1cIj09PU9iamVjdFRvU3RyaW5nKHZhbHVlKX1mdW5jdGlvbiBpc1NldFRvU3RyaW5nKHZhbHVlKXtyZXR1cm5cIltvYmplY3QgU2V0XVwiPT09T2JqZWN0VG9TdHJpbmcodmFsdWUpfWZ1bmN0aW9uIGlzV2Vha01hcFRvU3RyaW5nKHZhbHVlKXtyZXR1cm5cIltvYmplY3QgV2Vha01hcF1cIj09PU9iamVjdFRvU3RyaW5nKHZhbHVlKX1mdW5jdGlvbiBpc1dlYWtTZXRUb1N0cmluZyh2YWx1ZSl7cmV0dXJuXCJbb2JqZWN0IFdlYWtTZXRdXCI9PT1PYmplY3RUb1N0cmluZyh2YWx1ZSl9ZnVuY3Rpb24gaXNBcnJheUJ1ZmZlclRvU3RyaW5nKHZhbHVlKXtyZXR1cm5cIltvYmplY3QgQXJyYXlCdWZmZXJdXCI9PT1PYmplY3RUb1N0cmluZyh2YWx1ZSl9ZnVuY3Rpb24gaXNBcnJheUJ1ZmZlcih2YWx1ZSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIEFycmF5QnVmZmVyJiYoaXNBcnJheUJ1ZmZlclRvU3RyaW5nLndvcmtpbmc/aXNBcnJheUJ1ZmZlclRvU3RyaW5nKHZhbHVlKTp2YWx1ZSBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKX1mdW5jdGlvbiBpc0RhdGFWaWV3VG9TdHJpbmcodmFsdWUpe3JldHVyblwiW29iamVjdCBEYXRhVmlld11cIj09PU9iamVjdFRvU3RyaW5nKHZhbHVlKX1mdW5jdGlvbiBpc0RhdGFWaWV3KHZhbHVlKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgRGF0YVZpZXcmJihpc0RhdGFWaWV3VG9TdHJpbmcud29ya2luZz9pc0RhdGFWaWV3VG9TdHJpbmcodmFsdWUpOnZhbHVlIGluc3RhbmNlb2YgRGF0YVZpZXcpfWZ1bmN0aW9uIGlzU2hhcmVkQXJyYXlCdWZmZXJUb1N0cmluZyh2YWx1ZSl7cmV0dXJuXCJbb2JqZWN0IFNoYXJlZEFycmF5QnVmZmVyXVwiPT09T2JqZWN0VG9TdHJpbmcodmFsdWUpfWZ1bmN0aW9uIGlzU2hhcmVkQXJyYXlCdWZmZXIodmFsdWUpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBTaGFyZWRBcnJheUJ1ZmZlciYmKGlzU2hhcmVkQXJyYXlCdWZmZXJUb1N0cmluZy53b3JraW5nP2lzU2hhcmVkQXJyYXlCdWZmZXJUb1N0cmluZyh2YWx1ZSk6dmFsdWUgaW5zdGFuY2VvZiBTaGFyZWRBcnJheUJ1ZmZlcil9ZnVuY3Rpb24gaXNOdW1iZXJPYmplY3QodmFsdWUpe3JldHVybiBjaGVja0JveGVkUHJpbWl0aXZlKHZhbHVlLG51bWJlclZhbHVlKX1mdW5jdGlvbiBpc1N0cmluZ09iamVjdCh2YWx1ZSl7cmV0dXJuIGNoZWNrQm94ZWRQcmltaXRpdmUodmFsdWUsc3RyaW5nVmFsdWUpfWZ1bmN0aW9uIGlzQm9vbGVhbk9iamVjdCh2YWx1ZSl7cmV0dXJuIGNoZWNrQm94ZWRQcmltaXRpdmUodmFsdWUsYm9vbGVhblZhbHVlKX1mdW5jdGlvbiBpc0JpZ0ludE9iamVjdCh2YWx1ZSl7cmV0dXJuIEJpZ0ludFN1cHBvcnRlZCYmY2hlY2tCb3hlZFByaW1pdGl2ZSh2YWx1ZSxiaWdJbnRWYWx1ZSl9ZnVuY3Rpb24gaXNTeW1ib2xPYmplY3QodmFsdWUpe3JldHVybiBTeW1ib2xTdXBwb3J0ZWQmJmNoZWNrQm94ZWRQcmltaXRpdmUodmFsdWUsc3ltYm9sVmFsdWUpfV8kdHlwZXNfNjguaXNBcmd1bWVudHNPYmplY3Q9XyRpc0FyZ3VtZW50c18yMSxfJHR5cGVzXzY4LmlzR2VuZXJhdG9yRnVuY3Rpb249XyRpc0dlbmVyYXRvckZ1bmN0aW9uXzIyLF8kdHlwZXNfNjguaXNUeXBlZEFycmF5PV8kaXNUeXBlZEFycmF5XzIzLF8kdHlwZXNfNjguaXNQcm9taXNlPWZ1bmN0aW9uKGlucHV0KXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgUHJvbWlzZSYmaW5wdXQgaW5zdGFuY2VvZiBQcm9taXNlfHxudWxsIT09aW5wdXQmJlwib2JqZWN0XCI9PXR5cGVvZiBpbnB1dCYmXCJmdW5jdGlvblwiPT10eXBlb2YgaW5wdXQudGhlbiYmXCJmdW5jdGlvblwiPT10eXBlb2YgaW5wdXQuY2F0Y2h9LF8kdHlwZXNfNjguaXNBcnJheUJ1ZmZlclZpZXc9ZnVuY3Rpb24odmFsdWUpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBBcnJheUJ1ZmZlciYmQXJyYXlCdWZmZXIuaXNWaWV3P0FycmF5QnVmZmVyLmlzVmlldyh2YWx1ZSk6XyRpc1R5cGVkQXJyYXlfMjModmFsdWUpfHxpc0RhdGFWaWV3KHZhbHVlKX0sXyR0eXBlc182OC5pc1VpbnQ4QXJyYXk9ZnVuY3Rpb24odmFsdWUpe3JldHVyblwiVWludDhBcnJheVwiPT09XyR3aGljaFR5cGVkQXJyYXlfNzAodmFsdWUpfSxfJHR5cGVzXzY4LmlzVWludDhDbGFtcGVkQXJyYXk9ZnVuY3Rpb24odmFsdWUpe3JldHVyblwiVWludDhDbGFtcGVkQXJyYXlcIj09PV8kd2hpY2hUeXBlZEFycmF5XzcwKHZhbHVlKX0sXyR0eXBlc182OC5pc1VpbnQxNkFycmF5PWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm5cIlVpbnQxNkFycmF5XCI9PT1fJHdoaWNoVHlwZWRBcnJheV83MCh2YWx1ZSl9LF8kdHlwZXNfNjguaXNVaW50MzJBcnJheT1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuXCJVaW50MzJBcnJheVwiPT09XyR3aGljaFR5cGVkQXJyYXlfNzAodmFsdWUpfSxfJHR5cGVzXzY4LmlzSW50OEFycmF5PWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm5cIkludDhBcnJheVwiPT09XyR3aGljaFR5cGVkQXJyYXlfNzAodmFsdWUpfSxfJHR5cGVzXzY4LmlzSW50MTZBcnJheT1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuXCJJbnQxNkFycmF5XCI9PT1fJHdoaWNoVHlwZWRBcnJheV83MCh2YWx1ZSl9LF8kdHlwZXNfNjguaXNJbnQzMkFycmF5PWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm5cIkludDMyQXJyYXlcIj09PV8kd2hpY2hUeXBlZEFycmF5XzcwKHZhbHVlKX0sXyR0eXBlc182OC5pc0Zsb2F0MzJBcnJheT1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuXCJGbG9hdDMyQXJyYXlcIj09PV8kd2hpY2hUeXBlZEFycmF5XzcwKHZhbHVlKX0sXyR0eXBlc182OC5pc0Zsb2F0NjRBcnJheT1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuXCJGbG9hdDY0QXJyYXlcIj09PV8kd2hpY2hUeXBlZEFycmF5XzcwKHZhbHVlKX0sXyR0eXBlc182OC5pc0JpZ0ludDY0QXJyYXk9ZnVuY3Rpb24odmFsdWUpe3JldHVyblwiQmlnSW50NjRBcnJheVwiPT09XyR3aGljaFR5cGVkQXJyYXlfNzAodmFsdWUpfSxfJHR5cGVzXzY4LmlzQmlnVWludDY0QXJyYXk9ZnVuY3Rpb24odmFsdWUpe3JldHVyblwiQmlnVWludDY0QXJyYXlcIj09PV8kd2hpY2hUeXBlZEFycmF5XzcwKHZhbHVlKX0saXNNYXBUb1N0cmluZy53b3JraW5nPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBNYXAmJmlzTWFwVG9TdHJpbmcobmV3IE1hcCksXyR0eXBlc182OC5pc01hcD1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIE1hcCYmKGlzTWFwVG9TdHJpbmcud29ya2luZz9pc01hcFRvU3RyaW5nKHZhbHVlKTp2YWx1ZSBpbnN0YW5jZW9mIE1hcCl9LGlzU2V0VG9TdHJpbmcud29ya2luZz1cInVuZGVmaW5lZFwiIT10eXBlb2YgU2V0JiZpc1NldFRvU3RyaW5nKG5ldyBTZXQpLF8kdHlwZXNfNjguaXNTZXQ9ZnVuY3Rpb24odmFsdWUpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBTZXQmJihpc1NldFRvU3RyaW5nLndvcmtpbmc/aXNTZXRUb1N0cmluZyh2YWx1ZSk6dmFsdWUgaW5zdGFuY2VvZiBTZXQpfSxpc1dlYWtNYXBUb1N0cmluZy53b3JraW5nPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBXZWFrTWFwJiZpc1dlYWtNYXBUb1N0cmluZyhuZXcgV2Vha01hcCksXyR0eXBlc182OC5pc1dlYWtNYXA9ZnVuY3Rpb24odmFsdWUpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBXZWFrTWFwJiYoaXNXZWFrTWFwVG9TdHJpbmcud29ya2luZz9pc1dlYWtNYXBUb1N0cmluZyh2YWx1ZSk6dmFsdWUgaW5zdGFuY2VvZiBXZWFrTWFwKX0saXNXZWFrU2V0VG9TdHJpbmcud29ya2luZz1cInVuZGVmaW5lZFwiIT10eXBlb2YgV2Vha1NldCYmaXNXZWFrU2V0VG9TdHJpbmcobmV3IFdlYWtTZXQpLF8kdHlwZXNfNjguaXNXZWFrU2V0PWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gaXNXZWFrU2V0VG9TdHJpbmcodmFsdWUpfSxpc0FycmF5QnVmZmVyVG9TdHJpbmcud29ya2luZz1cInVuZGVmaW5lZFwiIT10eXBlb2YgQXJyYXlCdWZmZXImJmlzQXJyYXlCdWZmZXJUb1N0cmluZyhuZXcgQXJyYXlCdWZmZXIpLF8kdHlwZXNfNjguaXNBcnJheUJ1ZmZlcj1pc0FycmF5QnVmZmVyLGlzRGF0YVZpZXdUb1N0cmluZy53b3JraW5nPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBBcnJheUJ1ZmZlciYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIERhdGFWaWV3JiZpc0RhdGFWaWV3VG9TdHJpbmcobmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigxKSwwLDEpKSxfJHR5cGVzXzY4LmlzRGF0YVZpZXc9aXNEYXRhVmlldyxpc1NoYXJlZEFycmF5QnVmZmVyVG9TdHJpbmcud29ya2luZz1cInVuZGVmaW5lZFwiIT10eXBlb2YgU2hhcmVkQXJyYXlCdWZmZXImJmlzU2hhcmVkQXJyYXlCdWZmZXJUb1N0cmluZyhuZXcgU2hhcmVkQXJyYXlCdWZmZXIpLF8kdHlwZXNfNjguaXNTaGFyZWRBcnJheUJ1ZmZlcj1pc1NoYXJlZEFycmF5QnVmZmVyLF8kdHlwZXNfNjguaXNBc3luY0Z1bmN0aW9uPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm5cIltvYmplY3QgQXN5bmNGdW5jdGlvbl1cIj09PU9iamVjdFRvU3RyaW5nKHZhbHVlKX0sXyR0eXBlc182OC5pc01hcEl0ZXJhdG9yPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm5cIltvYmplY3QgTWFwIEl0ZXJhdG9yXVwiPT09T2JqZWN0VG9TdHJpbmcodmFsdWUpfSxfJHR5cGVzXzY4LmlzU2V0SXRlcmF0b3I9ZnVuY3Rpb24odmFsdWUpe3JldHVyblwiW29iamVjdCBTZXQgSXRlcmF0b3JdXCI9PT1PYmplY3RUb1N0cmluZyh2YWx1ZSl9LF8kdHlwZXNfNjguaXNHZW5lcmF0b3JPYmplY3Q9ZnVuY3Rpb24odmFsdWUpe3JldHVyblwiW29iamVjdCBHZW5lcmF0b3JdXCI9PT1PYmplY3RUb1N0cmluZyh2YWx1ZSl9LF8kdHlwZXNfNjguaXNXZWJBc3NlbWJseUNvbXBpbGVkTW9kdWxlPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm5cIltvYmplY3QgV2ViQXNzZW1ibHkuTW9kdWxlXVwiPT09T2JqZWN0VG9TdHJpbmcodmFsdWUpfSxfJHR5cGVzXzY4LmlzTnVtYmVyT2JqZWN0PWlzTnVtYmVyT2JqZWN0LF8kdHlwZXNfNjguaXNTdHJpbmdPYmplY3Q9aXNTdHJpbmdPYmplY3QsXyR0eXBlc182OC5pc0Jvb2xlYW5PYmplY3Q9aXNCb29sZWFuT2JqZWN0LF8kdHlwZXNfNjguaXNCaWdJbnRPYmplY3Q9aXNCaWdJbnRPYmplY3QsXyR0eXBlc182OC5pc1N5bWJvbE9iamVjdD1pc1N5bWJvbE9iamVjdCxfJHR5cGVzXzY4LmlzQm94ZWRQcmltaXRpdmU9ZnVuY3Rpb24odmFsdWUpe3JldHVybiBpc051bWJlck9iamVjdCh2YWx1ZSl8fGlzU3RyaW5nT2JqZWN0KHZhbHVlKXx8aXNCb29sZWFuT2JqZWN0KHZhbHVlKXx8aXNCaWdJbnRPYmplY3QodmFsdWUpfHxpc1N5bWJvbE9iamVjdCh2YWx1ZSl9LF8kdHlwZXNfNjguaXNBbnlBcnJheUJ1ZmZlcj1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFVpbnQ4QXJyYXkmJihpc0FycmF5QnVmZmVyKHZhbHVlKXx8aXNTaGFyZWRBcnJheUJ1ZmZlcih2YWx1ZSkpfSxbXCJpc1Byb3h5XCIsXCJpc0V4dGVybmFsXCIsXCJpc01vZHVsZU5hbWVzcGFjZU9iamVjdFwiXS5mb3JFYWNoKGZ1bmN0aW9uKG1ldGhvZCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KF8kdHlwZXNfNjgsbWV0aG9kLHtlbnVtZXJhYmxlOiExLHZhbHVlOmZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKG1ldGhvZCtcIiBpcyBub3Qgc3VwcG9ydGVkIGluIHVzZXJsYW5kXCIpfX0pfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluUjVjR1Z6TG1weklsMHNJbTVoYldWeklqcGJJblZ1WTNWeWNubFVhR2x6SWl3aVppSXNJbU5oYkd3aUxDSmlhVzVrSWl3aVFtbG5TVzUwVTNWd2NHOXlkR1ZrSWl3aVFtbG5TVzUwSWl3aVUzbHRZbTlzVTNWd2NHOXlkR1ZrSWl3aVUzbHRZbTlzSWl3aVQySnFaV04wVkc5VGRISnBibWNpTENKUFltcGxZM1FpTENKd2NtOTBiM1I1Y0dVaUxDSjBiMU4wY21sdVp5SXNJbTUxYldKbGNsWmhiSFZsSWl3aVRuVnRZbVZ5SWl3aWRtRnNkV1ZQWmlJc0luTjBjbWx1WjFaaGJIVmxJaXdpVTNSeWFXNW5JaXdpWW05dmJHVmhibFpoYkhWbElpd2lRbTl2YkdWaGJpSXNJbUpwWjBsdWRGWmhiSFZsSWl3aWMzbHRZbTlzVm1Gc2RXVWlMQ0pqYUdWamEwSnZlR1ZrVUhKcGJXbDBhWFpsSWl3aWRtRnNkV1VpTENKd2NtOTBiM1I1Y0dWV1lXeDFaVTltSWl3aVpTSXNJbWx6VFdGd1ZHOVRkSEpwYm1jaUxDSnBjMU5sZEZSdlUzUnlhVzVuSWl3aWFYTlhaV0ZyVFdGd1ZHOVRkSEpwYm1jaUxDSnBjMWRsWVd0VFpYUlViMU4wY21sdVp5SXNJbWx6UVhKeVlYbENkV1ptWlhKVWIxTjBjbWx1WnlJc0ltbHpRWEp5WVhsQ2RXWm1aWElpTENKQmNuSmhlVUoxWm1abGNpSXNJbmR2Y210cGJtY2lMQ0pwYzBSaGRHRldhV1YzVkc5VGRISnBibWNpTENKcGMwUmhkR0ZXYVdWM0lpd2lSR0YwWVZacFpYY2lMQ0pwYzFOb1lYSmxaRUZ5Y21GNVFuVm1abVZ5Vkc5VGRISnBibWNpTENKcGMxTm9ZWEpsWkVGeWNtRjVRblZtWm1WeUlpd2lVMmhoY21Wa1FYSnlZWGxDZFdabVpYSWlMQ0pwYzA1MWJXSmxjazlpYW1WamRDSXNJbWx6VTNSeWFXNW5UMkpxWldOMElpd2lhWE5DYjI5c1pXRnVUMkpxWldOMElpd2lhWE5DYVdkSmJuUlBZbXBsWTNRaUxDSnBjMU41YldKdmJFOWlhbVZqZENJc0ltVjRjRzl5ZEhNaUxDSnBjMEZ5WjNWdFpXNTBjMDlpYW1WamRDSXNJbWx6UjJWdVpYSmhkRzl5Um5WdVkzUnBiMjRpTENKcGMxUjVjR1ZrUVhKeVlYa2lMQ0pwYzFCeWIyMXBjMlVpTENKcGJuQjFkQ0lzSWxCeWIyMXBjMlVpTENKMGFHVnVJaXdpWTJGMFkyZ2lMQ0pwYzBGeWNtRjVRblZtWm1WeVZtbGxkeUlzSW1selZtbGxkeUlzSW1selZXbHVkRGhCY25KaGVTSXNJbmRvYVdOb1ZIbHdaV1JCY25KaGVTSXNJbWx6VldsdWREaERiR0Z0Y0dWa1FYSnlZWGtpTENKcGMxVnBiblF4TmtGeWNtRjVJaXdpYVhOVmFXNTBNekpCY25KaGVTSXNJbWx6U1c1ME9FRnljbUY1SWl3aWFYTkpiblF4TmtGeWNtRjVJaXdpYVhOSmJuUXpNa0Z5Y21GNUlpd2lhWE5HYkc5aGRETXlRWEp5WVhraUxDSnBjMFpzYjJGME5qUkJjbkpoZVNJc0ltbHpRbWxuU1c1ME5qUkJjbkpoZVNJc0ltbHpRbWxuVldsdWREWTBRWEp5WVhraUxDSk5ZWEFpTENKcGMwMWhjQ0lzSWxObGRDSXNJbWx6VTJWMElpd2lWMlZoYTAxaGNDSXNJbWx6VjJWaGEwMWhjQ0lzSWxkbFlXdFRaWFFpTENKcGMxZGxZV3RUWlhRaUxDSnBjMEZ6ZVc1alJuVnVZM1JwYjI0aUxDSnBjMDFoY0VsMFpYSmhkRzl5SWl3aWFYTlRaWFJKZEdWeVlYUnZjaUlzSW1selIyVnVaWEpoZEc5eVQySnFaV04wSWl3aWFYTlhaV0pCYzNObGJXSnNlVU52YlhCcGJHVmtUVzlrZFd4bElpd2lhWE5DYjNobFpGQnlhVzFwZEdsMlpTSXNJbWx6UVc1NVFYSnlZWGxDZFdabVpYSWlMQ0pWYVc1ME9FRnljbUY1SWl3aVptOXlSV0ZqYUNJc0ltMWxkR2h2WkNJc0ltUmxabWx1WlZCeWIzQmxjblI1SWl3aVpXNTFiV1Z5WVdKc1pTSXNJa1Z5Y205eUlsMHNJbTFoY0hCcGJtZHpJam9pTzBGQlIwRXNXVUZCUVN4RFFVVkJMR2RGUVV0QkxGTkJRVk5CTEZkQlFVRkJMRU5CUVZsRExFTkJRVUZCTEVOQlFVRkJMRU5CUTI1Q0xFOUJRVTlCTEVOQlFVRkJMRU5CUVVWRExFbEJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXRHTEVOQlFVRkJMRU5CUVVGQkxFTkJSM0pDTEVsQlFVbEhMR1ZCUVVGQkxFTkJRVzlETEZkQlFVRXNSVUZCUVN4UFFVRllReXhOUVVGQlFTeERRVU42UWtNc1pVRkJRVUVzUTBGQmIwTXNWMEZCUVN4RlFVRkJMRTlCUVZoRExFMUJRVUZCTEVOQlJYcENReXhqUVVGQlFTeERRVUZwUWxJc1YwRkJRVUVzUTBGQldWTXNUVUZCUVVFc1EwRkJUME1zVTBGQlFVRXNRMEZCVlVNc1VVRkJRVUVzUTBGQlFVRXNRMEZGT1VORExGZEJRVUZCTEVOQlFXTmFMRmRCUVVGQkxFTkJRVmxoTEUxQlFVRkJMRU5CUVU5SUxGTkJRVUZCTEVOQlFWVkpMRTlCUVVGQkxFTkJRVUZCTEVOQlF6TkRReXhYUVVGQlFTeERRVUZqWml4WFFVRkJRU3hEUVVGWlowSXNUVUZCUVVFc1EwRkJUMDRzVTBGQlFVRXNRMEZCVlVrc1QwRkJRVUVzUTBGQlFVRXNRMEZETTBOSExGbEJRVUZCTEVOQlFXVnFRaXhYUVVGQlFTeERRVUZaYTBJc1QwRkJRVUVzUTBGQlVWSXNVMEZCUVVFc1EwRkJWVWtzVDBGQlFVRXNRMEZCUVVFc1EwRkZha1FzUjBGQlNWWXNaVUZCUVVFc1EwRkRSaXhKUVVGSlpTeFhRVUZCUVN4RFFVRmpia0lzVjBGQlFVRXNRMEZCV1Vzc1RVRkJRVUVzUTBGQlQwc3NVMEZCUVVFc1EwRkJWVWtzVDBGQlFVRXNRMEZCUVVFc1EwRkhha1FzUjBGQlNWSXNaVUZCUVVFc1EwRkRSaXhKUVVGSll5eFhRVUZCUVN4RFFVRmpjRUlzVjBGQlFVRXNRMEZCV1U4c1RVRkJRVUVzUTBGQlQwY3NVMEZCUVVFc1EwRkJWVWtzVDBGQlFVRXNRMEZCUVVFc1EwRkhha1FzVTBGQlUwOHNiVUpCUVVGQkxFTkJRVzlDUXl4TFFVRkJRU3hEUVVGUFF5eG5Ra0ZCUVVFc1EwRkJRVUVzUTBGRGJFTXNSMEZCY1VJc1VVRkJRU3hGUVVGQkxFOUJRVlpFTEV0QlFVRkJMRU5CUTFRc1RVRkJRU3hEUVVGUExFTkJRVUVzUTBGRlZDeEhRVUZCTEVOQlJVVXNUMEZFUVVNc1owSkJRVUZCTEVOQlFXbENSQ3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVOV0xFTkJRVUVzUTBGRFVDeE5RVUZOUlN4RFFVRkJRU3hEUVVGQlFTeERRVU5PTEUxQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVVFc1EwRTRSbGdzVTBGQlUwTXNZVUZCUVVFc1EwRkJZMGdzUzBGQlFVRXNRMEZCUVVFc1EwRkRja0lzVFVGQmFVTXNZMEZCUVN4SFFVRXhRbVFzWTBGQlFVRXNRMEZCWldNc1MwRkJRVUVzUTBGQlFVRXNRMEZyUW5oQ0xGTkJRVk5KTEdGQlFVRkJMRU5CUVdOS0xFdEJRVUZCTEVOQlFVRkJMRU5CUTNKQ0xFMUJRV2xETEdOQlFVRXNSMEZCTVVKa0xHTkJRVUZCTEVOQlFXVmpMRXRCUVVGQkxFTkJRVUZCTEVOQmFVSjRRaXhUUVVGVFN5eHBRa0ZCUVVFc1EwRkJhMEpNTEV0QlFVRkJMRU5CUVVGQkxFTkJRM3BDTEUxQlFXbERMR3RDUVVGQkxFZEJRVEZDWkN4alFVRkJRU3hEUVVGbFl5eExRVUZCUVN4RFFVRkJRU3hEUVdsQ2VFSXNVMEZCVTAwc2FVSkJRVUZCTEVOQlFXdENUaXhMUVVGQlFTeERRVUZCUVN4RFFVTjZRaXhOUVVGcFF5eHJRa0ZCUVN4SFFVRXhRbVFzWTBGQlFVRXNRMEZCWldNc1MwRkJRVUVzUTBGQlFVRXNRMEZYZUVJc1UwRkJVMDhzY1VKQlFVRkJMRU5CUVhOQ1VDeExRVUZCUVN4RFFVRkJRU3hEUVVNM1FpeE5RVUZwUXl4elFrRkJRU3hIUVVFeFFtUXNZMEZCUVVFc1EwRkJaV01zUzBGQlFVRXNRMEZCUVVFc1EwRk5lRUlzVTBGQlUxRXNZVUZCUVVFc1EwRkJZMUlzUzBGQlFVRXNRMEZCUVVFc1EwRkRja0lzVFVGQk1rSXNWMEZCUVN4RlFVRkJMRTlCUVdoQ1V5eFhRVUZCUVN4SFFVbEtSaXh4UWtGQlFVRXNRMEZCYzBKSExFOUJRVUZCTEVOQlEzcENTQ3h4UWtGQlFVRXNRMEZCYzBKUUxFdEJRVUZCTEVOQlFVRkJMRU5CUTNSQ1FTeExRVUZCUVN4WlFVRnBRbE1zVjBGQlFVRXNRMEZCUVVFc1EwRkpka0lzVTBGQlUwVXNhMEpCUVVGQkxFTkJRVzFDV0N4TFFVRkJRU3hEUVVGQlFTeERRVU14UWl4TlFVRnBReXh0UWtGQlFTeEhRVUV4UW1Rc1kwRkJRVUVzUTBGQlpXTXNTMEZCUVVFc1EwRkJRVUVzUTBGUGVFSXNVMEZCVTFrc1ZVRkJRVUVzUTBGQlYxb3NTMEZCUVVFc1EwRkJRVUVzUTBGRGJFSXNUVUZCZDBJc1YwRkJRU3hGUVVGQkxFOUJRV0poTEZGQlFVRkJMRWRCU1VwR0xHdENRVUZCUVN4RFFVRnRRa1FzVDBGQlFVRXNRMEZEZEVKRExHdENRVUZCUVN4RFFVRnRRbGdzUzBGQlFVRXNRMEZCUVVFc1EwRkRia0pCTEV0QlFVRkJMRmxCUVdsQ1lTeFJRVUZCUVN4RFFVRkJRU3hEUVVsMlFpeFRRVUZUUXl3eVFrRkJRVUVzUTBGQk5FSmtMRXRCUVVGQkxFTkJRVUZCTEVOQlEyNURMRTFCUVdsRExEUkNRVUZCTEVkQlFURkNaQ3hqUVVGQlFTeERRVUZsWXl4TFFVRkJRU3hEUVVGQlFTeERRVTE0UWl4VFFVRlRaU3h0UWtGQlFVRXNRMEZCYjBKbUxFdEJRVUZCTEVOQlFVRkJMRU5CUXpOQ0xFMUJRV2xETEZkQlFVRXNSVUZCUVN4UFFVRjBRbWRDTEdsQ1FVRkJRU3hIUVVsS1Jpd3lRa0ZCUVVFc1EwRkJORUpLTEU5QlFVRkJMRU5CUXk5Q1NTd3lRa0ZCUVVFc1EwRkJORUprTEV0QlFVRkJMRU5CUVVGQkxFTkJRelZDUVN4TFFVRkJRU3haUVVGcFFtZENMR2xDUVVGQlFTeERRVUZCUVN4RFFUWkNka0lzVTBGQlUwTXNZMEZCUVVFc1EwRkJaV3BDTEV0QlFVRkJMRU5CUVVGQkxFTkJRM1JDTEU5QlFVOUVMRzFDUVVGQlFTeERRVUZ2UWtNc1MwRkJRVUVzUTBGQlQxWXNWMEZCUVVFc1EwRkJRVUVzUTBGSmNFTXNVMEZCVXpSQ0xHTkJRVUZCTEVOQlFXVnNRaXhMUVVGQlFTeERRVUZCUVN4RFFVTjBRaXhQUVVGUFJDeHRRa0ZCUVVFc1EwRkJiMEpETEV0QlFVRkJMRU5CUVU5UUxGZEJRVUZCTEVOQlFVRkJMRU5CU1hCRExGTkJRVk13UWl4bFFVRkJRU3hEUVVGblFtNUNMRXRCUVVGQkxFTkJRVUZCTEVOQlEzWkNMRTlCUVU5RUxHMUNRVUZCUVN4RFFVRnZRa01zUzBGQlFVRXNRMEZCVDB3c1dVRkJRVUVzUTBGQlFVRXNRMEZKY0VNc1UwRkJVM2xDTEdOQlFVRkJMRU5CUVdWd1FpeExRVUZCUVN4RFFVRkJRU3hEUVVOMFFpeFBRVUZQYkVJc1pVRkJRVUVzUlVGQmJVSnBRaXh0UWtGQlFVRXNRMEZCYjBKRExFdEJRVUZCTEVOQlFVOUlMRmRCUVVGQkxFTkJRVUZCTEVOQlNYWkVMRk5CUVZOM1FpeGpRVUZCUVN4RFFVRmxja0lzUzBGQlFVRXNRMEZCUVVFc1EwRkRkRUlzVDBGQlQyaENMR1ZCUVVGQkxFVkJRVzFDWlN4dFFrRkJRVUVzUTBGQmIwSkRMRXRCUVVGQkxFTkJRVTlHTEZkQlFVRkJMRU5CUVVGQkxFTkJiRkYyUkhkQ0xGVkJRVUZCTEVOQlFWRkRMR2xDUVVGQlFTeERRVUZ2UWtFc1owSkJRVUZCTEVOQlF6VkNSQ3hWUVVGQlFTeERRVUZSUlN4dFFrRkJRVUVzUTBGQmMwSkJMSGRDUVVGQlFTeERRVU01UWtZc1ZVRkJRVUVzUTBGQlVVY3NXVUZCUVVFc1EwRkJaVUVzYVVKQlFVRkJMRU5CYTBKMlFrZ3NWVUZCUVVFc1EwRkJVVWtzVTBGQlFVRXNRMEZrVWl4VFFVRnRRa01zUzBGQlFVRXNRMEZCUVVFc1EwRkRiRUlzVFVGRmNVSXNWMEZCUVN4RlFVRkJMRTlCUVZwRExFOUJRVUZCTEVWQlExQkVMRXRCUVVGQkxGbEJRV2xDUXl4UFFVRkJRU3hGUVVkUUxFbEJRVUVzUjBGQlZrUXNTMEZCUVVFc1JVRkRhVUlzVVVGQlFTeEZRVUZCTEU5QlFWWkJMRXRCUVVGQkxFVkJRMlVzVlVGQlFTeEZRVUZCTEU5QlFXWkJMRXRCUVVGQkxFTkJRVTFGTEVsQlFVRkJMRVZCUTFVc1ZVRkJRU3hGUVVGQkxFOUJRV2hDUml4TFFVRkJRU3hEUVVGTlJ5eExRVUZCUVN4RFFVRkJRU3hEUVdkQ2FFSlNMRlZCUVVGQkxFTkJRVkZUTEdsQ1FVRkJRU3hEUVZaU0xGTkJRVEpDTDBJc1MwRkJRVUVzUTBGQlFVRXNRMEZEZWtJc1RVRkJNa0lzVjBGQlFTeEZRVUZCTEU5QlFXaENVeXhYUVVGQlFTeEZRVUVyUWtFc1YwRkJRVUVzUTBGQldYVkNMRTFCUVVGQkxFTkJRemREZGtJc1YwRkJRVUVzUTBGQldYVkNMRTFCUVVGQkxFTkJRVTlvUXl4TFFVRkJRU3hEUVVGQlFTeERRVWt4UW5sQ0xHbENRVUZCUVN4RFFVRmhla0lzUzBGQlFVRXNRMEZCUVVFc1JVRkRZbGtzVlVGQlFVRXNRMEZCVjFvc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRlRabk5DTEZWQlFVRkJMRU5CUVZGWExGbEJRVUZCTEVOQlNGSXNVMEZCYzBKcVF5eExRVUZCUVN4RFFVRkJRU3hEUVVOd1FpeE5RVUZyUXl4WlFVRkJMRWRCUVROQ2EwTXNiMEpCUVVGQkxFTkJRV2RDYkVNc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRlBla0p6UWl4VlFVRkJRU3hEUVVGUllTeHRRa0ZCUVVFc1EwRklVaXhUUVVFMlFtNURMRXRCUVVGQkxFTkJRVUZCTEVOQlF6TkNMRTFCUVd0RExHMUNRVUZCTEVkQlFUTkNhME1zYjBKQlFVRkJMRU5CUVdkQ2JFTXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZQZWtKelFpeFZRVUZCUVN4RFFVRlJZeXhoUVVGQlFTeERRVWhTTEZOQlFYVkNjRU1zUzBGQlFVRXNRMEZCUVVFc1EwRkRja0lzVFVGQmEwTXNZVUZCUVN4SFFVRXpRbXRETEc5Q1FVRkJRU3hEUVVGblFteERMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CVDNwQ2MwSXNWVUZCUVVFc1EwRkJVV1VzWVVGQlFVRXNRMEZJVWl4VFFVRjFRbkpETEV0QlFVRkJMRU5CUVVGQkxFTkJRM0pDTEUxQlFXdERMR0ZCUVVFc1IwRkJNMEpyUXl4dlFrRkJRVUVzUTBGQlowSnNReXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVU5NlFuTkNMRlZCUVVGQkxFTkJRVkZuUWl4WFFVRkJRU3hEUVVoU0xGTkJRWEZDZEVNc1MwRkJRVUVzUTBGQlFVRXNRMEZEYmtJc1RVRkJhME1zVjBGQlFTeEhRVUV6UW10RExHOUNRVUZCUVN4RFFVRm5RbXhETEV0QlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlQzcENjMElzVlVGQlFVRXNRMEZCVVdsQ0xGbEJRVUZCTEVOQlNGSXNVMEZCYzBKMlF5eExRVUZCUVN4RFFVRkJRU3hEUVVOd1FpeE5RVUZyUXl4WlFVRkJMRWRCUVROQ2EwTXNiMEpCUVVGQkxFTkJRV2RDYkVNc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRlBla0p6UWl4VlFVRkJRU3hEUVVGUmEwSXNXVUZCUVVFc1EwRklVaXhUUVVGelFuaERMRXRCUVVGQkxFTkJRVUZCTEVOQlEzQkNMRTFCUVd0RExGbEJRVUVzUjBGQk0wSnJReXh2UWtGQlFVRXNRMEZCWjBKc1F5eExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVTk2UW5OQ0xGVkJRVUZCTEVOQlFWRnRRaXhqUVVGQlFTeERRVWhTTEZOQlFYZENla01zUzBGQlFVRXNRMEZCUVVFc1EwRkRkRUlzVFVGQmEwTXNZMEZCUVN4SFFVRXpRbXRETEc5Q1FVRkJRU3hEUVVGblFteERMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CVDNwQ2MwSXNWVUZCUVVFc1EwRkJVVzlDTEdOQlFVRkJMRU5CU0ZJc1UwRkJkMEl4UXl4TFFVRkJRU3hEUVVGQlFTeERRVU4wUWl4TlFVRnJReXhqUVVGQkxFZEJRVE5DYTBNc2IwSkJRVUZCTEVOQlFXZENiRU1zUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGUGVrSnpRaXhWUVVGQlFTeERRVUZSY1VJc1pVRkJRVUVzUTBGSVVpeFRRVUY1UWpORExFdEJRVUZCTEVOQlFVRkJMRU5CUTNaQ0xFMUJRV3RETEdWQlFVRXNSMEZCTTBKclF5eHZRa0ZCUVVFc1EwRkJaMEpzUXl4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVOTZRbk5DTEZWQlFVRkJMRU5CUVZGelFpeG5Ra0ZCUVVFc1EwRklVaXhUUVVFd1FqVkRMRXRCUVVGQkxFTkJRVUZCTEVOQlEzaENMRTFCUVd0RExHZENRVUZCTEVkQlFUTkNhME1zYjBKQlFVRkJMRU5CUVdkQ2JFTXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZQZWtKSExHRkJRVUZCTEVOQlFXTlBMRTlCUVVGQkxFTkJRMGNzVjBGQlFTeEZRVUZCTEU5QlFWSnRReXhIUVVGQlFTeEZRVU5RTVVNc1lVRkJRVUVzUTBGQll5eEpRVUZKTUVNc1IwRkJRVUVzUTBGQlFVRXNRMEZaY0VKMlFpeFZRVUZCUVN4RFFVRlJkMElzUzBGQlFVRXNRMEZVVWl4VFFVRmxPVU1zUzBGQlFVRXNRMEZCUVVFc1EwRkRZaXhOUVVGdFFpeFhRVUZCTEVWQlFVRXNUMEZCVWpaRExFZEJRVUZCTEVkQlNVb3hReXhoUVVGQlFTeERRVUZqVHl4UFFVRkJRU3hEUVVOcVFsQXNZVUZCUVVFc1EwRkJZMGdzUzBGQlFVRXNRMEZCUVVFc1EwRkRaRUVzUzBGQlFVRXNXVUZCYVVJMlF5eEhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVTkyUW5wRExHRkJRVUZCTEVOQlFXTk5MRTlCUVVGQkxFTkJRMGNzVjBGQlFTeEZRVUZCTEU5QlFWSnhReXhIUVVGQlFTeEZRVU5RTTBNc1lVRkJRVUVzUTBGQll5eEpRVUZKTWtNc1IwRkJRVUVzUTBGQlFVRXNRMEZYY0VKNlFpeFZRVUZCUVN4RFFVRlJNRUlzUzBGQlFVRXNRMEZVVWl4VFFVRmxhRVFzUzBGQlFVRXNRMEZCUVVFc1EwRkRZaXhOUVVGdFFpeFhRVUZCTEVWQlFVRXNUMEZCVWl0RExFZEJRVUZCTEVkQlNVb3pReXhoUVVGQlFTeERRVUZqVFN4UFFVRkJRU3hEUVVOcVFrNHNZVUZCUVVFc1EwRkJZMG9zUzBGQlFVRXNRMEZCUVVFc1EwRkRaRUVzUzBGQlFVRXNXVUZCYVVJclF5eEhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVTkyUWpGRExHbENRVUZCUVN4RFFVRnJRa3NzVDBGQlFVRXNRMEZEUnl4WFFVRkJMRVZCUVVFc1QwRkJXblZETEU5QlFVRkJMRVZCUTFBMVF5eHBRa0ZCUVVFc1EwRkJhMElzU1VGQlNUUkRMRTlCUVVGQkxFTkJRVUZCTEVOQlYzaENNMElzVlVGQlFVRXNRMEZCVVRSQ0xGTkJRVUZCTEVOQlZGSXNVMEZCYlVKc1JDeExRVUZCUVN4RFFVRkJRU3hEUVVOcVFpeE5RVUYxUWl4WFFVRkJMRVZCUVVFc1QwRkJXbWxFTEU5QlFVRkJMRWRCU1VvMVF5eHBRa0ZCUVVFc1EwRkJhMEpMTEU5QlFVRkJMRU5CUTNKQ1RDeHBRa0ZCUVVFc1EwRkJhMEpNTEV0QlFVRkJMRU5CUVVGQkxFTkJRMnhDUVN4TFFVRkJRU3haUVVGcFFtbEVMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CVDNaQ00wTXNhVUpCUVVGQkxFTkJRV3RDU1N4UFFVRkJRU3hEUVVOSExGZEJRVUVzUlVGQlFTeFBRVUZhZVVNc1QwRkJRVUVzUlVGRFVEZERMR2xDUVVGQlFTeERRVUZyUWl4SlFVRkpOa01zVDBGQlFVRXNRMEZCUVVFc1EwRkxlRUkzUWl4VlFVRkJRU3hEUVVGUk9FSXNVMEZCUVVFc1EwRklVaXhUUVVGdFFuQkVMRXRCUVVGQkxFTkJRVUZCTEVOQlEycENMRTlCUVU5TkxHbENRVUZCUVN4RFFVRnJRazRzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGUE0wSlBMSEZDUVVGQlFTeERRVUZ6UWtjc1QwRkJRVUVzUTBGRFJ5eFhRVUZCTEVWQlFVRXNUMEZCYUVKRUxGZEJRVUZCTEVWQlExQkdMSEZDUVVGQlFTeERRVUZ6UWl4SlFVRkpSU3hYUVVGQlFTeERRVUZCUVN4RFFWYzFRbUVzVlVGQlFVRXNRMEZCVVdRc1lVRkJRVUVzUTBGQlowSkJMR0ZCUVVGQkxFTkJTM2hDUnl4clFrRkJRVUVzUTBGQmJVSkVMRTlCUVVGQkxFTkJRMDBzVjBGQlFTeEZRVUZCTEU5QlFXaENSQ3hYUVVGQlFTeEZRVU5oTEZkQlFVRXNSVUZCUVN4UFFVRmlTU3hSUVVGQlFTeEZRVU5RUml4clFrRkJRVUVzUTBGQmJVSXNTVUZCU1VVc1VVRkJRVUVzUTBGQlV5eEpRVUZKU2l4WFFVRkJRU3hEUVVGWkxFTkJRVUVzUTBGQlFTeERRVUZKTEVOQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVZkNlJHRXNWVUZCUVVFc1EwRkJVVllzVlVGQlFVRXNRMEZCWVVFc1ZVRkJRVUVzUTBGTGNrSkZMREpDUVVGQlFTeERRVUUwUWtvc1QwRkJRVUVzUTBGRFJ5eFhRVUZCTEVWQlFVRXNUMEZCZEVKTkxHbENRVUZCUVN4RlFVTlFSaXd5UWtGQlFVRXNRMEZCTkVJc1NVRkJTVVVzYVVKQlFVRkJMRU5CUVVGQkxFTkJWMnhEVFN4VlFVRkJRU3hEUVVGUlVDeHRRa0ZCUVVFc1EwRkJjMEpCTEcxQ1FVRkJRU3hEUVVzNVFrOHNWVUZCUVVFc1EwRkJVU3RDTEdWQlFVRkJMRU5CU0ZJc1UwRkJlVUp5UkN4TFFVRkJRU3hEUVVGQlFTeERRVU4yUWl4TlFVRnBReXgzUWtGQlFTeEhRVUV4UW1Rc1kwRkJRVUVzUTBGQlpXTXNTMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZQZUVKelFpeFZRVUZCUVN4RFFVRlJaME1zWVVGQlFVRXNRMEZJVWl4VFFVRjFRblJFTEV0QlFVRkJMRU5CUVVGQkxFTkJRM0pDTEUxQlFXbERMSFZDUVVGQkxFZEJRVEZDWkN4alFVRkJRU3hEUVVGbFl5eExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVTk0UW5OQ0xGVkJRVUZCTEVOQlFWRnBReXhoUVVGQlFTeERRVWhTTEZOQlFYVkNka1FzUzBGQlFVRXNRMEZCUVVFc1EwRkRja0lzVFVGQmFVTXNkVUpCUVVFc1IwRkJNVUprTEdOQlFVRkJMRU5CUVdWakxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJUM2hDYzBJc1ZVRkJRVUVzUTBGQlVXdERMR2xDUVVGQlFTeERRVWhTTEZOQlFUSkNlRVFzUzBGQlFVRXNRMEZCUVVFc1EwRkRla0lzVFVGQmFVTXNiMEpCUVVFc1IwRkJNVUprTEdOQlFVRkJMRU5CUVdWakxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJUM2hDYzBJc1ZVRkJRVUVzUTBGQlVXMURMREpDUVVGQlFTeERRVWhTTEZOQlFYRkRla1FzUzBGQlFVRXNRMEZCUVVFc1EwRkRia01zVFVGQmFVTXNOa0pCUVVFc1IwRkJNVUprTEdOQlFVRkJMRU5CUVdWakxFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJUM2hDYzBJc1ZVRkJRVUVzUTBGQlVVd3NZMEZCUVVFc1EwRkJhVUpCTEdOQlFVRkJMRU5CUzNwQ1N5eFZRVUZCUVN4RFFVRlJTaXhqUVVGQlFTeERRVUZwUWtFc1kwRkJRVUVzUTBGTGVrSkpMRlZCUVVGQkxFTkJRVkZJTEdWQlFVRkJMRU5CUVd0Q1FTeGxRVUZCUVN4RFFVc3hRa2NzVlVGQlFVRXNRMEZCVVVZc1kwRkJRVUVzUTBGQmFVSkJMR05CUVVGQkxFTkJTM3BDUlN4VlFVRkJRU3hEUVVGUlJDeGpRVUZCUVN4RFFVRnBRa0VzWTBGQlFVRXNRMEZYZWtKRExGVkJRVUZCTEVOQlFWRnZReXhuUWtGQlFVRXNRMEZVVWl4VFFVRXdRakZFTEV0QlFVRkJMRU5CUVVGQkxFTkJRM2hDTEU5QlEwVnBRaXhqUVVGQlFTeERRVUZsYWtJc1MwRkJRVUVzUTBGQlFVRXNSVUZEWm10Q0xHTkJRVUZCTEVOQlFXVnNRaXhMUVVGQlFTeERRVUZCUVN4RlFVTm1iVUlzWlVGQlFVRXNRMEZCWjBKdVFpeExRVUZCUVN4RFFVRkJRU3hGUVVOb1FtOUNMR05CUVVGQkxFTkJRV1Z3UWl4TFFVRkJRU3hEUVVGQlFTeEZRVU5tY1VJc1kwRkJRVUVzUTBGQlpYSkNMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CVjI1Q2MwSXNWVUZCUVVFc1EwRkJVWEZETEdkQ1FVRkJRU3hEUVU1U0xGTkJRVEJDTTBRc1MwRkJRVUVzUTBGQlFVRXNRMEZEZUVJc1RVRkJOa0lzVjBGQlFTeEZRVUZCTEU5QlFXWTBSQ3hWUVVGQlFTeEhRVU5hY0VRc1lVRkJRVUVzUTBGQlkxSXNTMEZCUVVFc1EwRkJRVUVzUlVGRFpHVXNiVUpCUVVGQkxFTkJRVzlDWml4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVV0NFFpeERRVUZETEZOQlFVRXNRMEZCVnl4WlFVRkJMRU5CUVdNc2VVSkJRVUVzUTBGQlFTeERRVUV5UWpaRUxFOUJRVUZCTEVOQlFWRXNVMEZCVTBNc1RVRkJRVUVzUTBGQlFVRXNRMEZEY0VVelJTeE5RVUZCUVN4RFFVRlBORVVzWTBGQlFVRXNRMEZCWlhwRExGVkJRVUZCTEVOQlFWTjNReXhOUVVGQlFTeERRVUZSTEVOQlEzSkRSU3hWUVVGQlFTeERRVUZCUVN4RFFVRlpMRU5CUVVFc1EwRkRXbWhGTEV0QlFVRkJMRU5CUVU4c1ZVRkJRU3hEUVVOTUxFMUJRVTBzU1VGQlNXbEZMRXRCUVVGQkxFTkJRVTFJTEUxQlFVRkJMRU5CUVZNc0swSkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiYm5Wc2JGMTkiLCJ2YXIgXyRpc0J1ZmZlckJyb3dzZXJfNjc9ZnVuY3Rpb24oYXJnKXtyZXR1cm4gYXJnJiZcIm9iamVjdFwiPT10eXBlb2YgYXJnJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBhcmcuY29weSYmXCJmdW5jdGlvblwiPT10eXBlb2YgYXJnLmZpbGwmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGFyZy5yZWFkVUludDh9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx6UW5WbVptVnlRbkp2ZDNObGNpNXFjeUpkTENKdVlXMWxjeUk2V3lKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aVlYSm5JaXdpWTI5d2VTSXNJbVpwYkd3aUxDSnlaV0ZrVlVsdWREZ2lYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJRU3gzUWtGQlQwTXNRMEZCVlN4VFFVRnJRa01zUjBGQlFVRXNRMEZCUVVFc1EwRkRha01zVDBGQlQwRXNSMEZCUVVFc1JVRkJjMElzVVVGQlFTeEZRVUZCTEU5QlFWSkJMRWRCUVVGQkxFVkJRMGtzVlVGQlFTeEZRVUZCTEU5QlFXSkJMRWRCUVVGQkxFTkJRVWxETEVsQlFVRkJMRVZCUTFNc1ZVRkJRU3hGUVVGQkxFOUJRV0pFTEVkQlFVRkJMRU5CUVVsRkxFbEJRVUZCTEVWQlEyTXNWVUZCUVN4RlFVRkJMRTlCUVd4Q1JpeEhRVUZCUVN4RFFVRkpSeXhUUVVGQlFTeERRVUZCUVN4RFFVRkJRU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiYm5Wc2JGMTkiLCJ2YXIgXyRpbmhlcml0c19icm93c2VyXzIwID0ge307XG5cImZ1bmN0aW9uXCI9PXR5cGVvZiBPYmplY3QuY3JlYXRlP18kaW5oZXJpdHNfYnJvd3Nlcl8yMD1mdW5jdGlvbihjdG9yLHN1cGVyQ3Rvcil7c3VwZXJDdG9yJiYoY3Rvci5zdXBlcl89c3VwZXJDdG9yLGN0b3IucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoc3VwZXJDdG9yLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmN0b3IsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSkpfTpfJGluaGVyaXRzX2Jyb3dzZXJfMjA9ZnVuY3Rpb24oY3RvcixzdXBlckN0b3Ipe2lmKHN1cGVyQ3Rvcil7Y3Rvci5zdXBlcl89c3VwZXJDdG9yO3ZhciBUZW1wQ3Rvcj1mdW5jdGlvbigpe307VGVtcEN0b3IucHJvdG90eXBlPXN1cGVyQ3Rvci5wcm90b3R5cGUsY3Rvci5wcm90b3R5cGU9bmV3IFRlbXBDdG9yLGN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yPWN0b3J9fTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1sdWFHVnlhWFJ6WDJKeWIzZHpaWEl1YW5NaVhTd2libUZ0WlhNaU9sc2lUMkpxWldOMElpd2lZM0psWVhSbElpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SXNJbU4wYjNJaUxDSnpkWEJsY2tOMGIzSWlMQ0p6ZFhCbGNsOGlMQ0p3Y205MGIzUjVjR1VpTENKamIyNXpkSEoxWTNSdmNpSXNJblpoYkhWbElpd2laVzUxYldWeVlXSnNaU0lzSW5keWFYUmhZbXhsSWl3aVkyOXVabWxuZFhKaFlteGxJaXdpVkdWdGNFTjBiM0lpWFN3aWJXRndjR2x1WjNNaU9pSTdRVUZCTmtJc1ZVRkJRU3hGUVVGQkxFOUJRV3hDUVN4TlFVRkJRU3hEUVVGUFF5eE5RVUZCUVN4RFFVVm9Ra01zY1VKQlFVOURMRU5CUVZVc1UwRkJhMEpETEVsQlFVRkJMRU5CUVUxRExGTkJRVUZCTEVOQlFVRkJMRU5CUTI1RFFTeFRRVUZCUVN4SFFVTkdSQ3hKUVVGQlFTeERRVUZMUlN4TlFVRkJRU3hEUVVGVFJDeFRRVUZCUVN4RFFVTmtSQ3hKUVVGQlFTeERRVUZMUnl4VFFVRkJRU3hEUVVGWlVDeE5RVUZCUVN4RFFVRlBReXhOUVVGQlFTeERRVUZQU1N4VFFVRkJRU3hEUVVGVlJTeFRRVUZCUVN4RFFVRlhMRU5CUTJ4RVF5eFhRVUZCUVN4RFFVRmhMRU5CUTFoRExFdEJRVUZCTEVOQlFVOU1MRWxCUVVGQkxFTkJRMUJOTEZWQlFVRkJMRU5CUVVGQkxFTkJRVmtzUTBGQlFTeERRVU5hUXl4UlFVRkJRU3hEUVVGQlFTeERRVUZWTEVOQlFVRXNRMEZEVmtNc1dVRkJRVUVzUTBGQlFVRXNRMEZCWXl4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVTkwUWxZc2NVSkJRVTlETEVOQlFWVXNVMEZCYTBKRExFbEJRVUZCTEVOQlFVMURMRk5CUVVGQkxFTkJRVUZCTEVOQlEzWkRMRWRCUVVsQkxGTkJRVUZCTEVOQlFWY3NRMEZEWWtRc1NVRkJRVUVzUTBGQlMwVXNUVUZCUVVFc1EwRkJVMFFzVTBGQlFVRXNRMEZEWkN4SlFVRkpVU3hSUVVGQlFTeERRVUZYTEZWQlFVRXNSVUZCUVN4RFFVTm1RU3hSUVVGQlFTeERRVUZUVGl4VFFVRkJRU3hEUVVGWlJpeFRRVUZCUVN4RFFVRlZSU3hUUVVGQlFTeERRVU12UWtnc1NVRkJRVUVzUTBGQlMwY3NVMEZCUVVFc1EwRkJXU3hKUVVGSlRTeFJRVUZCUVN4RFFVTnlRbFFzU1VGQlFVRXNRMEZCUzBjc1UwRkJRVUVzUTBGQlZVTXNWMEZCUVVFc1EwRkJZMG9zU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJ2YXIgXyRicm93c2VyXzQ1ID0ge307XG52YXIgY2FjaGVkU2V0VGltZW91dCxjYWNoZWRDbGVhclRpbWVvdXQscHJvY2Vzcz1fJGJyb3dzZXJfNDU9e307ZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpe3Rocm93IG5ldyBFcnJvcihcInNldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9ZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCgpe3Rocm93IG5ldyBFcnJvcihcImNsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bil7aWYoY2FjaGVkU2V0VGltZW91dD09PXNldFRpbWVvdXQpcmV0dXJuIHNldFRpbWVvdXQoZnVuLDApO2lmKChjYWNoZWRTZXRUaW1lb3V0PT09ZGVmYXVsdFNldFRpbW91dHx8IWNhY2hlZFNldFRpbWVvdXQpJiZzZXRUaW1lb3V0KXJldHVybiBjYWNoZWRTZXRUaW1lb3V0PXNldFRpbWVvdXQsc2V0VGltZW91dChmdW4sMCk7dHJ5e3JldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwwKX1jYXRjaChlKXt0cnl7cmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLGZ1biwwKX1jYXRjaChlKXtyZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsZnVuLDApfX19IWZ1bmN0aW9uKCl7dHJ5e2NhY2hlZFNldFRpbWVvdXQ9XCJmdW5jdGlvblwiPT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OmRlZmF1bHRTZXRUaW1vdXR9Y2F0Y2goZSl7Y2FjaGVkU2V0VGltZW91dD1kZWZhdWx0U2V0VGltb3V0fXRyeXtjYWNoZWRDbGVhclRpbWVvdXQ9XCJmdW5jdGlvblwiPT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDpkZWZhdWx0Q2xlYXJUaW1lb3V0fWNhdGNoKGUpe2NhY2hlZENsZWFyVGltZW91dD1kZWZhdWx0Q2xlYXJUaW1lb3V0fX0oKTt2YXIgY3VycmVudFF1ZXVlLHF1ZXVlPVtdLGRyYWluaW5nPSExLHF1ZXVlSW5kZXg9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7ZHJhaW5pbmcmJmN1cnJlbnRRdWV1ZSYmKGRyYWluaW5nPSExLGN1cnJlbnRRdWV1ZS5sZW5ndGg/cXVldWU9Y3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk6cXVldWVJbmRleD0tMSxxdWV1ZS5sZW5ndGgmJmRyYWluUXVldWUoKSl9ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKCFkcmFpbmluZyl7dmFyIHRpbWVvdXQ9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO2RyYWluaW5nPSEwO2Zvcih2YXIgbGVuPXF1ZXVlLmxlbmd0aDtsZW47KXtmb3IoY3VycmVudFF1ZXVlPXF1ZXVlLHF1ZXVlPVtdOysrcXVldWVJbmRleDxsZW47KWN1cnJlbnRRdWV1ZSYmY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpO3F1ZXVlSW5kZXg9LTEsbGVuPXF1ZXVlLmxlbmd0aH1jdXJyZW50UXVldWU9bnVsbCxkcmFpbmluZz0hMSxmdW5jdGlvbihtYXJrZXIpe2lmKGNhY2hlZENsZWFyVGltZW91dD09PWNsZWFyVGltZW91dClyZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7aWYoKGNhY2hlZENsZWFyVGltZW91dD09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFjYWNoZWRDbGVhclRpbWVvdXQpJiZjbGVhclRpbWVvdXQpcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dD1jbGVhclRpbWVvdXQsY2xlYXJUaW1lb3V0KG1hcmtlcik7dHJ5e2NhY2hlZENsZWFyVGltZW91dChtYXJrZXIpfWNhdGNoKGUpe3RyeXtyZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCxtYXJrZXIpfWNhdGNoKGUpe3JldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbCh0aGlzLG1hcmtlcil9fX0odGltZW91dCl9fWZ1bmN0aW9uIEl0ZW0oZnVuLGFycmF5KXt0aGlzLmZ1bj1mdW4sdGhpcy5hcnJheT1hcnJheX1mdW5jdGlvbiBub29wKCl7fXByb2Nlc3MubmV4dFRpY2s9ZnVuY3Rpb24oZnVuKXt2YXIgYXJncz1uZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aC0xKTtpZihhcmd1bWVudHMubGVuZ3RoPjEpZm9yKHZhciBpPTE7aTxhcmd1bWVudHMubGVuZ3RoO2krKylhcmdzW2ktMV09YXJndW1lbnRzW2ldO3F1ZXVlLnB1c2gobmV3IEl0ZW0oZnVuLGFyZ3MpKSwxIT09cXVldWUubGVuZ3RofHxkcmFpbmluZ3x8cnVuVGltZW91dChkcmFpblF1ZXVlKX0sSXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX0scHJvY2Vzcy50aXRsZT1cImJyb3dzZXJcIixwcm9jZXNzLmJyb3dzZXI9ITAscHJvY2Vzcy5lbnY9e30scHJvY2Vzcy5hcmd2PVtdLHByb2Nlc3MudmVyc2lvbj1cIlwiLHByb2Nlc3MudmVyc2lvbnM9e30scHJvY2Vzcy5vbj1ub29wLHByb2Nlc3MuYWRkTGlzdGVuZXI9bm9vcCxwcm9jZXNzLm9uY2U9bm9vcCxwcm9jZXNzLm9mZj1ub29wLHByb2Nlc3MucmVtb3ZlTGlzdGVuZXI9bm9vcCxwcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycz1ub29wLHByb2Nlc3MuZW1pdD1ub29wLHByb2Nlc3MucHJlcGVuZExpc3RlbmVyPW5vb3AscHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3AscHJvY2Vzcy5saXN0ZW5lcnM9ZnVuY3Rpb24obmFtZSl7cmV0dXJuW119LHByb2Nlc3MuYmluZGluZz1mdW5jdGlvbihuYW1lKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX0scHJvY2Vzcy5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn0scHJvY2Vzcy5jaGRpcj1mdW5jdGlvbihkaXIpe3Rocm93IG5ldyBFcnJvcihcInByb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZFwiKX0scHJvY2Vzcy51bWFzaz1mdW5jdGlvbigpe3JldHVybiAwfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1KeWIzZHpaWEl1YW5NaVhTd2libUZ0WlhNaU9sc2lZMkZqYUdWa1UyVjBWR2x0Wlc5MWRDSXNJbU5oWTJobFpFTnNaV0Z5VkdsdFpXOTFkQ0lzSW5CeWIyTmxjM01pTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aVpHVm1ZWFZzZEZObGRGUnBiVzkxZENJc0lrVnljbTl5SWl3aVpHVm1ZWFZzZEVOc1pXRnlWR2x0Wlc5MWRDSXNJbkoxYmxScGJXVnZkWFFpTENKbWRXNGlMQ0p6WlhSVWFXMWxiM1YwSWl3aVpTSXNJbU5oYkd3aUxDSjBhR2x6SWl3aVkyeGxZWEpVYVcxbGIzVjBJaXdpWTNWeWNtVnVkRkYxWlhWbElpd2ljWFZsZFdVaUxDSmtjbUZwYm1sdVp5SXNJbkYxWlhWbFNXNWtaWGdpTENKamJHVmhibFZ3VG1WNGRGUnBZMnNpTENKc1pXNW5kR2dpTENKamIyNWpZWFFpTENKa2NtRnBibEYxWlhWbElpd2lkR2x0Wlc5MWRDSXNJbXhsYmlJc0luSjFiaUlzSW0xaGNtdGxjaUlzSW5KMWJrTnNaV0Z5VkdsdFpXOTFkQ0lzSWtsMFpXMGlMQ0poY25KaGVTSXNJbTV2YjNBaUxDSnVaWGgwVkdsamF5SXNJbUZ5WjNNaUxDSkJjbkpoZVNJc0ltRnlaM1Z0Wlc1MGN5SXNJbWtpTENKd2RYTm9JaXdpY0hKdmRHOTBlWEJsSWl3aVlYQndiSGtpTENKMGFYUnNaU0lzSW1KeWIzZHpaWElpTENKbGJuWWlMQ0poY21kMklpd2lkbVZ5YzJsdmJpSXNJblpsY25OcGIyNXpJaXdpYjI0aUxDSmhaR1JNYVhOMFpXNWxjaUlzSW05dVkyVWlMQ0p2Wm1ZaUxDSnlaVzF2ZG1WTWFYTjBaVzVsY2lJc0luSmxiVzkyWlVGc2JFeHBjM1JsYm1WeWN5SXNJbVZ0YVhRaUxDSndjbVZ3Wlc1a1RHbHpkR1Z1WlhJaUxDSndjbVZ3Wlc1a1QyNWpaVXhwYzNSbGJtVnlJaXdpYkdsemRHVnVaWEp6SWl3aWJtRnRaU0lzSW1KcGJtUnBibWNpTENKamQyUWlMQ0pqYUdScGNpSXNJbVJwY2lJc0luVnRZWE5ySWwwc0ltMWhjSEJwYm1keklqb2lPMEZCUTBFc1NVRlBTVUVzWjBKQlFVRkJMRU5CUTBGRExHdENRVUZCUVN4RFFWSkJReXhQUVVGQlFTeERRVUZWUXl4WlFVRlBReXhEUVVGVkxFVkJRVUVzUTBGVkwwSXNVMEZCVTBNc1owSkJRVUZCTEVWQlFVRkJMRU5CUTB3c1RVRkJUU3hKUVVGSlF5eExRVUZCUVN4RFFVRk5MR2xEUVVGQkxFTkJRVUVzUTBGRmNFSXNVMEZCVTBNc2JVSkJRVUZCTEVWQlFVRkJMRU5CUTB3c1RVRkJUU3hKUVVGSlJDeExRVUZCUVN4RFFVRk5MRzFEUVVGQkxFTkJRVUVzUTBGelFuQkNMRk5CUVZORkxGVkJRVUZCTEVOQlFWZERMRWRCUVVGQkxFTkJRVUZCTEVOQlEyaENMRWRCUVVsVUxHZENRVUZCUVN4SFFVRnhRbFVzVlVGQlFVRXNRMEZGY2tJc1QwRkJUMEVzVlVGQlFVRXNRMEZCVjBRc1IwRkJRVUVzUTBGQlN5eERRVUZCTEVOQlFVRXNRMEZITTBJc1IwRkJRU3hEUVVGTFZDeG5Ra0ZCUVVFc1IwRkJjVUpMTEdkQ1FVRkJRU3hGUVVGQlFTeERRVUZ4UWt3c1owSkJRVUZCTEVkQlFYRkNWU3hWUVVGQlFTeERRVVZvUlN4UFFVUkJWaXhuUWtGQlFVRXNRMEZCYlVKVkxGVkJRVUZCTEVOQlExcEJMRlZCUVVGQkxFTkJRVmRFTEVkQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJSVE5DTEVkQlFVRXNRMEZGU1N4UFFVRlBWQ3huUWtGQlFVRXNRMEZCYVVKVExFZEJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVRkJMRU5CUXk5Q0xFMUJRVTFGTEVOQlFVRkJMRU5CUVVGQkxFTkJRMG9zUjBGQlFTeERRVVZKTEU5QlFVOVlMR2RDUVVGQlFTeERRVUZwUWxrc1NVRkJRVUVzUTBGQlN5eEpRVUZCTEVOQlFVMUlMRWRCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVOQlF6RkRMRTFCUVUxRkxFTkJRVUZCTEVOQlFVRkJMRU5CUlVvc1QwRkJUMWdzWjBKQlFVRkJMRU5CUVdsQ1dTeEpRVUZCUVN4RFFVRkxReXhKUVVGQlFTeERRVUZOU2l4SFFVRkJRU3hEUVVGTExFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFYWkRia1FzVlVGQlFTeERRVU5ITEVkQlFVRXNRMEZGVVZRc1owSkJRVUZCTEVOQlJITkNMRlZCUVVFc1JVRkJRU3hQUVVGbVZTeFZRVUZCUVN4RFFVTlpRU3hWUVVGQlFTeERRVVZCVEN4blFrRkJRVUVzUTBGRmVrSXNUVUZCVDAwc1EwRkJRVUVzUTBGQlFVRXNRMEZEVEZnc1owSkJRVUZCTEVOQlFXMUNTeXhuUWtGQlFVRXNRMEZGZGtJc1IwRkJRU3hEUVVWUlNpeHJRa0ZCUVVFc1EwRkVkMElzVlVGQlFTeEZRVUZCTEU5QlFXcENZU3haUVVGQlFTeERRVU5qUVN4WlFVRkJRU3hEUVVWQlVDeHRRa0ZCUVVFc1EwRkZNMElzVFVGQlQwa3NRMEZCUVVFc1EwRkJRVUVzUTBGRFRGWXNhMEpCUVVGQkxFTkJRWEZDVFN4dFFrRkJRVUVzUTBGQlFVRXNRMEZxUWpkQ0xFVkJRVUVzUTBGM1JVRXNTVUZGU1ZFc1dVRkJRVUVzUTBGR1FVTXNTMEZCUVVFc1EwRkJVU3hGUVVGQkxFTkJRMUpETEZGQlFVRkJMRU5CUVVGQkxFTkJRVmNzUTBGQlFTeERRVVZZUXl4VlFVRkJRU3hEUVVGQlFTeERRVUZqTEVOQlFVRXNRMEZGYkVJc1UwRkJVME1zWlVGQlFVRXNSVUZCUVVFc1EwRkRRVVlzVVVGQlFVRXNSVUZCWVVZc1dVRkJRVUVzUjBGSGJFSkZMRkZCUVVGQkxFTkJRVUZCTEVOQlFWY3NRMEZCUVN4RFFVTlFSaXhaUVVGQlFTeERRVUZoU3l4TlFVRkJRU3hEUVVOaVNpeExRVUZCUVN4RFFVRlJSQ3haUVVGQlFTeERRVUZoVFN4TlFVRkJRU3hEUVVGUFRDeExRVUZCUVN4RFFVRkJRU3hEUVVVMVFrVXNWVUZCUVVFc1EwRkJRVUVzUTBGQll5eERRVUZCTEVOQlJXUkdMRXRCUVVGQkxFTkJRVTFKTEUxQlFVRkJMRVZCUTA1RkxGVkJRVUZCTEVWQlFVRkJMRU5CUVVGQkxFTkJTVklzVTBGQlUwRXNWVUZCUVVFc1JVRkJRVUVzUTBGRFRDeEhRVUZCTEVOQlFVbE1MRkZCUVVGQkxFTkJRVW9zUTBGSFFTeEpRVUZKVFN4UFFVRkJRU3hEUVVGVlppeFZRVUZCUVN4RFFVRlhWeXhsUVVGQlFTeERRVUZCUVN4RFFVTjZRa1lzVVVGQlFVRXNRMEZCUVVFc1EwRkJWeXhEUVVGQkxFTkJSMWdzU1VGRVFTeEpRVUZKVHl4SFFVRkJRU3hEUVVGTlVpeExRVUZCUVN4RFFVRk5TU3hOUVVGQlFTeERRVU5XU1N4SFFVRkJRU3hGUVVGTExFTkJSMUFzU1VGR1FWUXNXVUZCUVVFc1EwRkJaVU1zUzBGQlFVRXNRMEZEWmtFc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlFVRXNSVUZEUTBVc1ZVRkJRVUVzUTBGQllVMHNSMEZCUVVFc1JVRkRaRlFzV1VGQlFVRXNSVUZEUVVFc1dVRkJRVUVzUTBGQllVY3NWVUZCUVVFc1EwRkJRVUVzUTBGQldVOHNSMEZCUVVFc1JVRkJRVUVzUTBGSGFrTlFMRlZCUVVGQkxFTkJRVUZCTEVOQlFXTXNRMEZCUVN4RFFVTmtUU3hIUVVGQlFTeERRVUZOVWl4TFFVRkJRU3hEUVVGTlNTeE5RVUZCUVN4RFFVVm9Ra3dzV1VGQlFVRXNRMEZCWlN4SlFVRkJMRU5CUTJaRkxGRkJRVUZCTEVOQlFVRkJMRU5CUVZjc1EwRkJRU3hEUVc1RlppeFRRVUY1UWxNc1RVRkJRVUVzUTBGQlFVRXNRMEZEY2tJc1IwRkJTWHBDTEd0Q1FVRkJRU3hIUVVGMVFtRXNXVUZCUVVFc1EwRkZka0lzVDBGQlQwRXNXVUZCUVVFc1EwRkJZVmtzVFVGQlFVRXNRMEZCUVVFc1EwRkhlRUlzUjBGQlFTeERRVUZMZWtJc2EwSkJRVUZCTEVkQlFYVkNUU3h0UWtGQlFVRXNSVUZCUVVFc1EwRkJkMEpPTEd0Q1FVRkJRU3hIUVVGMVFtRXNXVUZCUVVFc1EwRkZka1VzVDBGRVFXSXNhMEpCUVVGQkxFTkJRWEZDWVN4WlFVRkJRU3hEUVVOa1FTeFpRVUZCUVN4RFFVRmhXU3hOUVVGQlFTeERRVUZCUVN4RFFVVjRRaXhIUVVGQkxFTkJSVmQ2UWl4clFrRkJRVUVzUTBGQmJVSjVRaXhOUVVGQlFTeERRVUZCUVN4RFFVTTFRaXhOUVVGUFppeERRVUZCUVN4RFFVRkJRU3hEUVVOTUxFZEJRVUVzUTBGRlNTeFBRVUZQVml4clFrRkJRVUVzUTBGQmJVSlhMRWxCUVVGQkxFTkJRVXNzU1VGQlFTeERRVUZOWXl4TlFVRkJRU3hEUVVGQlFTeERRVU4yUXl4TlFVRlBaaXhEUVVGQlFTeERRVUZCUVN4RFFVZE1MRTlCUVU5V0xHdENRVUZCUVN4RFFVRnRRbGNzU1VGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlRXRXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRm5SRGREUXl4RFFVRm5Ra29zVDBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGcFFuQkNMRk5CUVZOTExFbEJRVUZCTEVOQlFVdHVRaXhIUVVGQlFTeERRVUZMYjBJc1MwRkJRVUVzUTBGQlFVRXNRMEZEWm1oQ0xFbEJRVUZCTEVOQlFVdEtMRWRCUVVGQkxFTkJRVTFCTEVkQlFVRkJMRU5CUTFoSkxFbEJRVUZCTEVOQlFVdG5RaXhMUVVGQlFTeERRVUZSUVN4TFFVRkJRU3hEUVZscVFpeFRRVUZUUXl4SlFVRkJRU3hGUVVGQlFTeEZRVFZDVkRWQ0xFOUJRVUZCTEVOQlFWRTJRaXhSUVVGQlFTeERRVUZYTEZOQlFWVjBRaXhIUVVGQlFTeERRVUZCUVN4RFFVTjZRaXhKUVVGSmRVSXNTVUZCUVVFc1EwRkJUeXhKUVVGSlF5eExRVUZCUVN4RFFVRk5ReXhUUVVGQlFTeERRVUZWWkN4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeERRVU40UXl4SFFVRkpZeXhUUVVGQlFTeERRVUZWWkN4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGRGJrSXNTVUZCU3l4SlFVRkpaU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBFc1EwRkJRVUVzUTBGQlNVUXNVMEZCUVVFc1EwRkJWV1FzVFVGQlFVRXNRMEZCVVdVc1EwRkJRVUVzUlVGQlFVRXNRMEZEYkVOSUxFbEJRVUZCTEVOQlFVdEhMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVdEVMRk5CUVVGQkxFTkJRVlZETEVOQlFVRkJMRU5CUVVGQkxFTkJSMmhEYmtJc1MwRkJRVUVzUTBGQlRXOUNMRWxCUVVGQkxFTkJRVXNzU1VGQlNWSXNTVUZCUVVFc1EwRkJTMjVDTEVkQlFVRkJMRU5CUVV0MVFpeEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVU5LTEVOQlFVRXNSMEZCYWtKb1FpeExRVUZCUVN4RFFVRk5TU3hOUVVGQlFTeEZRVUZwUWtnc1VVRkJRVUVzUlVGRGRrSlVMRlZCUVVGQkxFTkJRVmRqTEZWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlUyNUNUU3hKUVVGQlFTeERRVUZMVXl4VFFVRkJRU3hEUVVGVldpeEhRVUZCUVN4RFFVRk5MRlZCUVVFc1EwRkRha0phTEVsQlFVRkJMRU5CUVV0S0xFZEJRVUZCTEVOQlFVazJRaXhMUVVGQlFTeERRVUZOTEVsQlFVRXNRMEZCVFhwQ0xFbEJRVUZCTEVOQlFVdG5RaXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVVNVFqTkNMRTlCUVVGQkxFTkJRVkZ4UXl4TFFVRkJRU3hEUVVGUkxGTkJRVUVzUTBGRGFFSnlReXhQUVVGQlFTeERRVUZSYzBNc1QwRkJRVUVzUTBGQlFVRXNRMEZCVlN4RFFVRkJMRU5CUTJ4Q2RFTXNUMEZCUVVFc1EwRkJVWFZETEVkQlFVRkJMRU5CUVUwc1JVRkJRU3hEUVVOa2RrTXNUMEZCUVVFc1EwRkJVWGRETEVsQlFVRkJMRU5CUVU4c1JVRkJRU3hEUVVObWVFTXNUMEZCUVVFc1EwRkJVWGxETEU5QlFVRkJMRU5CUVZVc1JVRkJRU3hEUVVOc1FucERMRTlCUVVGQkxFTkJRVkV3UXl4UlFVRkJRU3hEUVVGWExFVkJRVUVzUTBGSmJrSXhReXhQUVVGQlFTeERRVUZSTWtNc1JVRkJRVUVzUTBGQlMyWXNTVUZCUVVFc1EwRkRZalZDTEU5QlFVRkJMRU5CUVZFMFF5eFhRVUZCUVN4RFFVRmphRUlzU1VGQlFVRXNRMEZEZEVJMVFpeFBRVUZCUVN4RFFVRlJOa01zU1VGQlFVRXNRMEZCVDJwQ0xFbEJRVUZCTEVOQlEyWTFRaXhQUVVGQlFTeERRVUZST0VNc1IwRkJRVUVzUTBGQlRXeENMRWxCUVVGQkxFTkJRMlExUWl4UFFVRkJRU3hEUVVGUkswTXNZMEZCUVVFc1EwRkJhVUp1UWl4SlFVRkJRU3hEUVVONlFqVkNMRTlCUVVGQkxFTkJRVkZuUkN4clFrRkJRVUVzUTBGQmNVSndRaXhKUVVGQlFTeERRVU0zUWpWQ0xFOUJRVUZCTEVOQlFWRnBSQ3hKUVVGQlFTeERRVUZQY2tJc1NVRkJRVUVzUTBGRFpqVkNMRTlCUVVGQkxFTkJRVkZyUkN4bFFVRkJRU3hEUVVGclFuUkNMRWxCUVVGQkxFTkJRekZDTlVJc1QwRkJRVUVzUTBGQlVXMUVMRzFDUVVGQlFTeERRVUZ6UW5aQ0xFbEJRVUZCTEVOQlJUbENOVUlzVDBGQlFVRXNRMEZCVVc5RUxGTkJRVUZCTEVOQlFWa3NVMEZCVlVNc1NVRkJRVUVzUTBGQlFVRXNRMEZCVVN4TlFVRlBMRVZCUVVFc1EwRkJRU3hEUVVVM1EzSkVMRTlCUVVGQkxFTkJRVkZ6UkN4UFFVRkJRU3hEUVVGVkxGTkJRVlZFTEVsQlFVRkJMRU5CUVVGQkxFTkJRM2hDTEUxQlFVMHNTVUZCU1dwRUxFdEJRVUZCTEVOQlFVMHNhME5CUVVFc1EwRkJRU3hEUVVGQkxFTkJSM0JDU2l4UFFVRkJRU3hEUVVGUmRVUXNSMEZCUVVFc1EwRkJUU3hWUVVGQkxFTkJRV01zVFVGQlR5eEhRVUZCTEVOQlFVRXNRMEZEYmtOMlJDeFBRVUZCUVN4RFFVRlJkMFFzUzBGQlFVRXNRMEZCVVN4VFFVRlZReXhIUVVGQlFTeERRVUZCUVN4RFFVTjBRaXhOUVVGTkxFbEJRVWx5UkN4TFFVRkJRU3hEUVVGTkxHZERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVVndRa29zVDBGQlFVRXNRMEZCVVRCRUxFdEJRVUZCTEVOQlFWRXNWVUZCUVN4RFFVRmhMRTlCUVU4c1EwRkJRU3hEUVVGQkxFTkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwidmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnN8fGZ1bmN0aW9uKG9iail7Zm9yKHZhciBrZXlzPU9iamVjdC5rZXlzKG9iaiksZGVzY3JpcHRvcnM9e30saT0wO2k8a2V5cy5sZW5ndGg7aSsrKWRlc2NyaXB0b3JzW2tleXNbaV1dPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLGtleXNbaV0pO3JldHVybiBkZXNjcmlwdG9yc30sZm9ybWF0UmVnRXhwPS8lW3NkaiVdL2c7ZXhwb3J0cy5mb3JtYXQ9ZnVuY3Rpb24oZil7aWYoIWlzU3RyaW5nKGYpKXtmb3IodmFyIG9iamVjdHM9W10saT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspb2JqZWN0cy5wdXNoKGluc3BlY3QoYXJndW1lbnRzW2ldKSk7cmV0dXJuIG9iamVjdHMuam9pbihcIiBcIil9aT0xO2Zvcih2YXIgYXJncz1hcmd1bWVudHMsbGVuPWFyZ3MubGVuZ3RoLHN0cj1TdHJpbmcoZikucmVwbGFjZShmb3JtYXRSZWdFeHAsZnVuY3Rpb24oeCl7aWYoXCIlJVwiPT09eClyZXR1cm5cIiVcIjtpZihpPj1sZW4pcmV0dXJuIHg7c3dpdGNoKHgpe2Nhc2VcIiVzXCI6cmV0dXJuIFN0cmluZyhhcmdzW2krK10pO2Nhc2VcIiVkXCI6cmV0dXJuIE51bWJlcihhcmdzW2krK10pO2Nhc2VcIiVqXCI6dHJ5e3JldHVybiBKU09OLnN0cmluZ2lmeShhcmdzW2krK10pfWNhdGNoKF8pe3JldHVyblwiW0NpcmN1bGFyXVwifWRlZmF1bHQ6cmV0dXJuIHh9fSkseD1hcmdzW2ldO2k8bGVuO3g9YXJnc1srK2ldKWlzTnVsbCh4KXx8IWlzT2JqZWN0KHgpP3N0cis9XCIgXCIreDpzdHIrPVwiIFwiK2luc3BlY3QoeCk7cmV0dXJuIHN0cn0sZXhwb3J0cy5kZXByZWNhdGU9ZnVuY3Rpb24oZm4sbXNnKXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgcHJvY2VzcyYmITA9PT1wcm9jZXNzLm5vRGVwcmVjYXRpb24pcmV0dXJuIGZuO2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBwcm9jZXNzKXJldHVybiBmdW5jdGlvbigpe3JldHVybiBleHBvcnRzLmRlcHJlY2F0ZShmbixtc2cpLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07dmFyIHdhcm5lZD0hMTtyZXR1cm4gZnVuY3Rpb24oKXtpZighd2FybmVkKXtpZihwcm9jZXNzLnRocm93RGVwcmVjYXRpb24pdGhyb3cgbmV3IEVycm9yKG1zZyk7cHJvY2Vzcy50cmFjZURlcHJlY2F0aW9uP2NvbnNvbGUudHJhY2UobXNnKTpjb25zb2xlLmVycm9yKG1zZyksd2FybmVkPSEwfXJldHVybiBmbi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fTt2YXIgZGVidWdzPXt9LGRlYnVnRW52UmVnZXg9L14kLztpZihwcm9jZXNzLmVudi5OT0RFX0RFQlVHKXt2YXIgZGVidWdFbnY9cHJvY2Vzcy5lbnYuTk9ERV9ERUJVRztkZWJ1Z0Vudj1kZWJ1Z0Vudi5yZXBsYWNlKC9bfFxcXFx7fSgpW1xcXV4kKz8uXS9nLFwiXFxcXCQmXCIpLnJlcGxhY2UoL1xcKi9nLFwiLipcIikucmVwbGFjZSgvLC9nLFwiJHxeXCIpLnRvVXBwZXJDYXNlKCksZGVidWdFbnZSZWdleD1uZXcgUmVnRXhwKFwiXlwiK2RlYnVnRW52K1wiJFwiLFwiaVwiKX1mdW5jdGlvbiBpbnNwZWN0KG9iaixvcHRzKXt2YXIgY3R4PXtzZWVuOltdLHN0eWxpemU6c3R5bGl6ZU5vQ29sb3J9O3JldHVybiBhcmd1bWVudHMubGVuZ3RoPj0zJiYoY3R4LmRlcHRoPWFyZ3VtZW50c1syXSksYXJndW1lbnRzLmxlbmd0aD49NCYmKGN0eC5jb2xvcnM9YXJndW1lbnRzWzNdKSxpc0Jvb2xlYW4ob3B0cyk/Y3R4LnNob3dIaWRkZW49b3B0czpvcHRzJiZleHBvcnRzLl9leHRlbmQoY3R4LG9wdHMpLGlzVW5kZWZpbmVkKGN0eC5zaG93SGlkZGVuKSYmKGN0eC5zaG93SGlkZGVuPSExKSxpc1VuZGVmaW5lZChjdHguZGVwdGgpJiYoY3R4LmRlcHRoPTIpLGlzVW5kZWZpbmVkKGN0eC5jb2xvcnMpJiYoY3R4LmNvbG9ycz0hMSksaXNVbmRlZmluZWQoY3R4LmN1c3RvbUluc3BlY3QpJiYoY3R4LmN1c3RvbUluc3BlY3Q9ITApLGN0eC5jb2xvcnMmJihjdHguc3R5bGl6ZT1zdHlsaXplV2l0aENvbG9yKSxmb3JtYXRWYWx1ZShjdHgsb2JqLGN0eC5kZXB0aCl9ZnVuY3Rpb24gc3R5bGl6ZVdpdGhDb2xvcihzdHIsc3R5bGVUeXBlKXt2YXIgc3R5bGU9aW5zcGVjdC5zdHlsZXNbc3R5bGVUeXBlXTtyZXR1cm4gc3R5bGU/XCJcXHgxYltcIitpbnNwZWN0LmNvbG9yc1tzdHlsZV1bMF0rXCJtXCIrc3RyK1wiXFx4MWJbXCIraW5zcGVjdC5jb2xvcnNbc3R5bGVdWzFdK1wibVwiOnN0cn1mdW5jdGlvbiBzdHlsaXplTm9Db2xvcihzdHIsc3R5bGVUeXBlKXtyZXR1cm4gc3RyfWZ1bmN0aW9uIGZvcm1hdFZhbHVlKGN0eCx2YWx1ZSxyZWN1cnNlVGltZXMpe2lmKGN0eC5jdXN0b21JbnNwZWN0JiZ2YWx1ZSYmaXNGdW5jdGlvbih2YWx1ZS5pbnNwZWN0KSYmdmFsdWUuaW5zcGVjdCE9PWV4cG9ydHMuaW5zcGVjdCYmKCF2YWx1ZS5jb25zdHJ1Y3Rvcnx8dmFsdWUuY29uc3RydWN0b3IucHJvdG90eXBlIT09dmFsdWUpKXt2YXIgcmV0PXZhbHVlLmluc3BlY3QocmVjdXJzZVRpbWVzLGN0eCk7cmV0dXJuIGlzU3RyaW5nKHJldCl8fChyZXQ9Zm9ybWF0VmFsdWUoY3R4LHJldCxyZWN1cnNlVGltZXMpKSxyZXR9dmFyIHByaW1pdGl2ZT1mdW5jdGlvbihjdHgsdmFsdWUpe2lmKGlzVW5kZWZpbmVkKHZhbHVlKSlyZXR1cm4gY3R4LnN0eWxpemUoXCJ1bmRlZmluZWRcIixcInVuZGVmaW5lZFwiKTtpZihpc1N0cmluZyh2YWx1ZSkpe3ZhciBzaW1wbGU9XCInXCIrSlNPTi5zdHJpbmdpZnkodmFsdWUpLnJlcGxhY2UoL15cInxcIiQvZyxcIlwiKS5yZXBsYWNlKC8nL2csXCJcXFxcJ1wiKS5yZXBsYWNlKC9cXFxcXCIvZywnXCInKStcIidcIjtyZXR1cm4gY3R4LnN0eWxpemUoc2ltcGxlLFwic3RyaW5nXCIpfWlmKGlzTnVtYmVyKHZhbHVlKSlyZXR1cm4gY3R4LnN0eWxpemUoXCJcIit2YWx1ZSxcIm51bWJlclwiKTtpZihpc0Jvb2xlYW4odmFsdWUpKXJldHVybiBjdHguc3R5bGl6ZShcIlwiK3ZhbHVlLFwiYm9vbGVhblwiKTtpZihpc051bGwodmFsdWUpKXJldHVybiBjdHguc3R5bGl6ZShcIm51bGxcIixcIm51bGxcIil9KGN0eCx2YWx1ZSk7aWYocHJpbWl0aXZlKXJldHVybiBwcmltaXRpdmU7dmFyIGtleXM9T2JqZWN0LmtleXModmFsdWUpLHZpc2libGVLZXlzPWZ1bmN0aW9uKGFycmF5KXt2YXIgaGFzaD17fTtyZXR1cm4gYXJyYXkuZm9yRWFjaChmdW5jdGlvbih2YWwsaWR4KXtoYXNoW3ZhbF09ITB9KSxoYXNofShrZXlzKTtpZihjdHguc2hvd0hpZGRlbiYmKGtleXM9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModmFsdWUpKSxpc0Vycm9yKHZhbHVlKSYmKGtleXMuaW5kZXhPZihcIm1lc3NhZ2VcIik+PTB8fGtleXMuaW5kZXhPZihcImRlc2NyaXB0aW9uXCIpPj0wKSlyZXR1cm4gZm9ybWF0RXJyb3IodmFsdWUpO2lmKDA9PT1rZXlzLmxlbmd0aCl7aWYoaXNGdW5jdGlvbih2YWx1ZSkpe3ZhciBuYW1lPXZhbHVlLm5hbWU/XCI6IFwiK3ZhbHVlLm5hbWU6XCJcIjtyZXR1cm4gY3R4LnN0eWxpemUoXCJbRnVuY3Rpb25cIituYW1lK1wiXVwiLFwic3BlY2lhbFwiKX1pZihpc1JlZ0V4cCh2YWx1ZSkpcmV0dXJuIGN0eC5zdHlsaXplKFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSksXCJyZWdleHBcIik7aWYoaXNEYXRlKHZhbHVlKSlyZXR1cm4gY3R4LnN0eWxpemUoRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSksXCJkYXRlXCIpO2lmKGlzRXJyb3IodmFsdWUpKXJldHVybiBmb3JtYXRFcnJvcih2YWx1ZSl9dmFyIG91dHB1dCxiYXNlPVwiXCIsYXJyYXk9ITEsYnJhY2VzPVtcIntcIixcIn1cIl07KGlzQXJyYXkodmFsdWUpJiYoYXJyYXk9ITAsYnJhY2VzPVtcIltcIixcIl1cIl0pLGlzRnVuY3Rpb24odmFsdWUpKSYmKGJhc2U9XCIgW0Z1bmN0aW9uXCIrKHZhbHVlLm5hbWU/XCI6IFwiK3ZhbHVlLm5hbWU6XCJcIikrXCJdXCIpO3JldHVybiBpc1JlZ0V4cCh2YWx1ZSkmJihiYXNlPVwiIFwiK1JlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkpLGlzRGF0ZSh2YWx1ZSkmJihiYXNlPVwiIFwiK0RhdGUucHJvdG90eXBlLnRvVVRDU3RyaW5nLmNhbGwodmFsdWUpKSxpc0Vycm9yKHZhbHVlKSYmKGJhc2U9XCIgXCIrZm9ybWF0RXJyb3IodmFsdWUpKSwwIT09a2V5cy5sZW5ndGh8fGFycmF5JiYwIT12YWx1ZS5sZW5ndGg/cmVjdXJzZVRpbWVzPDA/aXNSZWdFeHAodmFsdWUpP2N0eC5zdHlsaXplKFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSksXCJyZWdleHBcIik6Y3R4LnN0eWxpemUoXCJbT2JqZWN0XVwiLFwic3BlY2lhbFwiKTooY3R4LnNlZW4ucHVzaCh2YWx1ZSksb3V0cHV0PWFycmF5P2Z1bmN0aW9uKGN0eCx2YWx1ZSxyZWN1cnNlVGltZXMsdmlzaWJsZUtleXMsa2V5cyl7Zm9yKHZhciBvdXRwdXQ9W10saT0wLGw9dmFsdWUubGVuZ3RoO2k8bDsrK2kpaGFzT3duUHJvcGVydHkodmFsdWUsU3RyaW5nKGkpKT9vdXRwdXQucHVzaChmb3JtYXRQcm9wZXJ0eShjdHgsdmFsdWUscmVjdXJzZVRpbWVzLHZpc2libGVLZXlzLFN0cmluZyhpKSwhMCkpOm91dHB1dC5wdXNoKFwiXCIpO3JldHVybiBrZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KXtrZXkubWF0Y2goL15cXGQrJC8pfHxvdXRwdXQucHVzaChmb3JtYXRQcm9wZXJ0eShjdHgsdmFsdWUscmVjdXJzZVRpbWVzLHZpc2libGVLZXlzLGtleSwhMCkpfSksb3V0cHV0fShjdHgsdmFsdWUscmVjdXJzZVRpbWVzLHZpc2libGVLZXlzLGtleXMpOmtleXMubWFwKGZ1bmN0aW9uKGtleSl7cmV0dXJuIGZvcm1hdFByb3BlcnR5KGN0eCx2YWx1ZSxyZWN1cnNlVGltZXMsdmlzaWJsZUtleXMsa2V5LGFycmF5KX0pLGN0eC5zZWVuLnBvcCgpLGZ1bmN0aW9uKG91dHB1dCxiYXNlLGJyYWNlcyl7aWYob3V0cHV0LnJlZHVjZShmdW5jdGlvbihwcmV2LGN1cil7cmV0dXJuIDAsY3VyLmluZGV4T2YoXCJcXG5cIik+PTAmJjAscHJlditjdXIucmVwbGFjZSgvXFx1MDAxYlxcW1xcZFxcZD9tL2csXCJcIikubGVuZ3RoKzF9LDApPjYwKXJldHVybiBicmFjZXNbMF0rKFwiXCI9PT1iYXNlP1wiXCI6YmFzZStcIlxcbiBcIikrXCIgXCIrb3V0cHV0LmpvaW4oXCIsXFxuICBcIikrXCIgXCIrYnJhY2VzWzFdO3JldHVybiBicmFjZXNbMF0rYmFzZStcIiBcIitvdXRwdXQuam9pbihcIiwgXCIpK1wiIFwiK2JyYWNlc1sxXX0ob3V0cHV0LGJhc2UsYnJhY2VzKSk6YnJhY2VzWzBdK2Jhc2UrYnJhY2VzWzFdfWZ1bmN0aW9uIGZvcm1hdEVycm9yKHZhbHVlKXtyZXR1cm5cIltcIitFcnJvci5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSkrXCJdXCJ9ZnVuY3Rpb24gZm9ybWF0UHJvcGVydHkoY3R4LHZhbHVlLHJlY3Vyc2VUaW1lcyx2aXNpYmxlS2V5cyxrZXksYXJyYXkpe3ZhciBuYW1lLHN0cixkZXNjO2lmKChkZXNjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodmFsdWUsa2V5KXx8e3ZhbHVlOnZhbHVlW2tleV19KS5nZXQ/c3RyPWRlc2Muc2V0P2N0eC5zdHlsaXplKFwiW0dldHRlci9TZXR0ZXJdXCIsXCJzcGVjaWFsXCIpOmN0eC5zdHlsaXplKFwiW0dldHRlcl1cIixcInNwZWNpYWxcIik6ZGVzYy5zZXQmJihzdHI9Y3R4LnN0eWxpemUoXCJbU2V0dGVyXVwiLFwic3BlY2lhbFwiKSksaGFzT3duUHJvcGVydHkodmlzaWJsZUtleXMsa2V5KXx8KG5hbWU9XCJbXCIra2V5K1wiXVwiKSxzdHJ8fChjdHguc2Vlbi5pbmRleE9mKGRlc2MudmFsdWUpPDA/KHN0cj1pc051bGwocmVjdXJzZVRpbWVzKT9mb3JtYXRWYWx1ZShjdHgsZGVzYy52YWx1ZSxudWxsKTpmb3JtYXRWYWx1ZShjdHgsZGVzYy52YWx1ZSxyZWN1cnNlVGltZXMtMSkpLmluZGV4T2YoXCJcXG5cIik+LTEmJihzdHI9YXJyYXk/c3RyLnNwbGl0KFwiXFxuXCIpLm1hcChmdW5jdGlvbihsaW5lKXtyZXR1cm5cIiAgXCIrbGluZX0pLmpvaW4oXCJcXG5cIikuc3Vic3RyKDIpOlwiXFxuXCIrc3RyLnNwbGl0KFwiXFxuXCIpLm1hcChmdW5jdGlvbihsaW5lKXtyZXR1cm5cIiAgIFwiK2xpbmV9KS5qb2luKFwiXFxuXCIpKTpzdHI9Y3R4LnN0eWxpemUoXCJbQ2lyY3VsYXJdXCIsXCJzcGVjaWFsXCIpKSxpc1VuZGVmaW5lZChuYW1lKSl7aWYoYXJyYXkmJmtleS5tYXRjaCgvXlxcZCskLykpcmV0dXJuIHN0cjsobmFtZT1KU09OLnN0cmluZ2lmeShcIlwiK2tleSkpLm1hdGNoKC9eXCIoW2EtekEtWl9dW2EtekEtWl8wLTldKilcIiQvKT8obmFtZT1uYW1lLnN1YnN0cigxLG5hbWUubGVuZ3RoLTIpLG5hbWU9Y3R4LnN0eWxpemUobmFtZSxcIm5hbWVcIikpOihuYW1lPW5hbWUucmVwbGFjZSgvJy9nLFwiXFxcXCdcIikucmVwbGFjZSgvXFxcXFwiL2csJ1wiJykucmVwbGFjZSgvKF5cInxcIiQpL2csXCInXCIpLG5hbWU9Y3R4LnN0eWxpemUobmFtZSxcInN0cmluZ1wiKSl9cmV0dXJuIG5hbWUrXCI6IFwiK3N0cn1mdW5jdGlvbiBpc0FycmF5KGFyKXtyZXR1cm4gQXJyYXkuaXNBcnJheShhcil9ZnVuY3Rpb24gaXNCb29sZWFuKGFyZyl7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiBhcmd9ZnVuY3Rpb24gaXNOdWxsKGFyZyl7cmV0dXJuIG51bGw9PT1hcmd9ZnVuY3Rpb24gaXNOdW1iZXIoYXJnKXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgYXJnfWZ1bmN0aW9uIGlzU3RyaW5nKGFyZyl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGFyZ31mdW5jdGlvbiBpc1VuZGVmaW5lZChhcmcpe3JldHVybiB2b2lkIDA9PT1hcmd9ZnVuY3Rpb24gaXNSZWdFeHAocmUpe3JldHVybiBpc09iamVjdChyZSkmJlwiW29iamVjdCBSZWdFeHBdXCI9PT1vYmplY3RUb1N0cmluZyhyZSl9ZnVuY3Rpb24gaXNPYmplY3QoYXJnKXtyZXR1cm5cIm9iamVjdFwiPT10eXBlb2YgYXJnJiZudWxsIT09YXJnfWZ1bmN0aW9uIGlzRGF0ZShkKXtyZXR1cm4gaXNPYmplY3QoZCkmJlwiW29iamVjdCBEYXRlXVwiPT09b2JqZWN0VG9TdHJpbmcoZCl9ZnVuY3Rpb24gaXNFcnJvcihlKXtyZXR1cm4gaXNPYmplY3QoZSkmJihcIltvYmplY3QgRXJyb3JdXCI9PT1vYmplY3RUb1N0cmluZyhlKXx8ZSBpbnN0YW5jZW9mIEVycm9yKX1mdW5jdGlvbiBpc0Z1bmN0aW9uKGFyZyl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgYXJnfWZ1bmN0aW9uIG9iamVjdFRvU3RyaW5nKG8pe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobyl9ZnVuY3Rpb24gcGFkKG4pe3JldHVybiBuPDEwP1wiMFwiK24udG9TdHJpbmcoMTApOm4udG9TdHJpbmcoMTApfWV4cG9ydHMuZGVidWdsb2c9ZnVuY3Rpb24oc2V0KXtpZihzZXQ9c2V0LnRvVXBwZXJDYXNlKCksIWRlYnVnc1tzZXRdKWlmKGRlYnVnRW52UmVnZXgudGVzdChzZXQpKXt2YXIgcGlkPXByb2Nlc3MucGlkO2RlYnVnc1tzZXRdPWZ1bmN0aW9uKCl7dmFyIG1zZz1leHBvcnRzLmZvcm1hdC5hcHBseShleHBvcnRzLGFyZ3VtZW50cyk7Y29uc29sZS5lcnJvcihcIiVzICVkOiAlc1wiLHNldCxwaWQsbXNnKX19ZWxzZSBkZWJ1Z3Nbc2V0XT1mdW5jdGlvbigpe307cmV0dXJuIGRlYnVnc1tzZXRdfSxleHBvcnRzLmluc3BlY3Q9aW5zcGVjdCxpbnNwZWN0LmNvbG9ycz17Ym9sZDpbMSwyMl0saXRhbGljOlszLDIzXSx1bmRlcmxpbmU6WzQsMjRdLGludmVyc2U6WzcsMjddLHdoaXRlOlszNywzOV0sZ3JleTpbOTAsMzldLGJsYWNrOlszMCwzOV0sYmx1ZTpbMzQsMzldLGN5YW46WzM2LDM5XSxncmVlbjpbMzIsMzldLG1hZ2VudGE6WzM1LDM5XSxyZWQ6WzMxLDM5XSx5ZWxsb3c6WzMzLDM5XX0saW5zcGVjdC5zdHlsZXM9e3NwZWNpYWw6XCJjeWFuXCIsbnVtYmVyOlwieWVsbG93XCIsYm9vbGVhbjpcInllbGxvd1wiLHVuZGVmaW5lZDpcImdyZXlcIixudWxsOlwiYm9sZFwiLHN0cmluZzpcImdyZWVuXCIsZGF0ZTpcIm1hZ2VudGFcIixyZWdleHA6XCJyZWRcIn0sZXhwb3J0cy50eXBlcz1yZXF1aXJlKFwiLi9zdXBwb3J0L3R5cGVzXCIpLGV4cG9ydHMuaXNBcnJheT1pc0FycmF5LGV4cG9ydHMuaXNCb29sZWFuPWlzQm9vbGVhbixleHBvcnRzLmlzTnVsbD1pc051bGwsZXhwb3J0cy5pc051bGxPclVuZGVmaW5lZD1mdW5jdGlvbihhcmcpe3JldHVybiBudWxsPT1hcmd9LGV4cG9ydHMuaXNOdW1iZXI9aXNOdW1iZXIsZXhwb3J0cy5pc1N0cmluZz1pc1N0cmluZyxleHBvcnRzLmlzU3ltYm9sPWZ1bmN0aW9uKGFyZyl7cmV0dXJuXCJzeW1ib2xcIj09dHlwZW9mIGFyZ30sZXhwb3J0cy5pc1VuZGVmaW5lZD1pc1VuZGVmaW5lZCxleHBvcnRzLmlzUmVnRXhwPWlzUmVnRXhwLGV4cG9ydHMudHlwZXMuaXNSZWdFeHA9aXNSZWdFeHAsZXhwb3J0cy5pc09iamVjdD1pc09iamVjdCxleHBvcnRzLmlzRGF0ZT1pc0RhdGUsZXhwb3J0cy50eXBlcy5pc0RhdGU9aXNEYXRlLGV4cG9ydHMuaXNFcnJvcj1pc0Vycm9yLGV4cG9ydHMudHlwZXMuaXNOYXRpdmVFcnJvcj1pc0Vycm9yLGV4cG9ydHMuaXNGdW5jdGlvbj1pc0Z1bmN0aW9uLGV4cG9ydHMuaXNQcmltaXRpdmU9ZnVuY3Rpb24oYXJnKXtyZXR1cm4gbnVsbD09PWFyZ3x8XCJib29sZWFuXCI9PXR5cGVvZiBhcmd8fFwibnVtYmVyXCI9PXR5cGVvZiBhcmd8fFwic3RyaW5nXCI9PXR5cGVvZiBhcmd8fFwic3ltYm9sXCI9PXR5cGVvZiBhcmd8fHZvaWQgMD09PWFyZ30sZXhwb3J0cy5pc0J1ZmZlcj1yZXF1aXJlKFwiLi9zdXBwb3J0L2lzQnVmZmVyXCIpO3ZhciBtb250aHM9W1wiSmFuXCIsXCJGZWJcIixcIk1hclwiLFwiQXByXCIsXCJNYXlcIixcIkp1blwiLFwiSnVsXCIsXCJBdWdcIixcIlNlcFwiLFwiT2N0XCIsXCJOb3ZcIixcIkRlY1wiXTtmdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShvYmoscHJvcCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmoscHJvcCl9ZXhwb3J0cy5sb2c9ZnVuY3Rpb24oKXt2YXIgZCx0aW1lO2NvbnNvbGUubG9nKFwiJXMgLSAlc1wiLChkPW5ldyBEYXRlLHRpbWU9W3BhZChkLmdldEhvdXJzKCkpLHBhZChkLmdldE1pbnV0ZXMoKSkscGFkKGQuZ2V0U2Vjb25kcygpKV0uam9pbihcIjpcIiksW2QuZ2V0RGF0ZSgpLG1vbnRoc1tkLmdldE1vbnRoKCldLHRpbWVdLmpvaW4oXCIgXCIpKSxleHBvcnRzLmZvcm1hdC5hcHBseShleHBvcnRzLGFyZ3VtZW50cykpfSxleHBvcnRzLmluaGVyaXRzPXJlcXVpcmUoXCJpbmhlcml0c1wiKSxleHBvcnRzLl9leHRlbmQ9ZnVuY3Rpb24ob3JpZ2luLGFkZCl7aWYoIWFkZHx8IWlzT2JqZWN0KGFkZCkpcmV0dXJuIG9yaWdpbjtmb3IodmFyIGtleXM9T2JqZWN0LmtleXMoYWRkKSxpPWtleXMubGVuZ3RoO2ktLTspb3JpZ2luW2tleXNbaV1dPWFkZFtrZXlzW2ldXTtyZXR1cm4gb3JpZ2lufTt2YXIga0N1c3RvbVByb21pc2lmaWVkU3ltYm9sPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2w/U3ltYm9sKFwidXRpbC5wcm9taXNpZnkuY3VzdG9tXCIpOnZvaWQgMDtleHBvcnRzLnByb21pc2lmeT1mdW5jdGlvbihvcmlnaW5hbCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygb3JpZ2luYWwpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwib3JpZ2luYWxcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgRnVuY3Rpb24nKTtpZihrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2wmJm9yaWdpbmFsW2tDdXN0b21Qcm9taXNpZmllZFN5bWJvbF0pe3ZhciBmbjtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZihmbj1vcmlnaW5hbFtrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2xdKSl0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJ1dGlsLnByb21pc2lmeS5jdXN0b21cIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgRnVuY3Rpb24nKTtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGZuLGtDdXN0b21Qcm9taXNpZmllZFN5bWJvbCx7dmFsdWU6Zm4sZW51bWVyYWJsZTohMSx3cml0YWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxmbn1mdW5jdGlvbiBmbigpe2Zvcih2YXIgcHJvbWlzZVJlc29sdmUscHJvbWlzZVJlamVjdCxwcm9taXNlPW5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUscmVqZWN0KXtwcm9taXNlUmVzb2x2ZT1yZXNvbHZlLHByb21pc2VSZWplY3Q9cmVqZWN0fSksYXJncz1bXSxpPTA7aTxhcmd1bWVudHMubGVuZ3RoO2krKylhcmdzLnB1c2goYXJndW1lbnRzW2ldKTthcmdzLnB1c2goZnVuY3Rpb24oZXJyLHZhbHVlKXtlcnI/cHJvbWlzZVJlamVjdChlcnIpOnByb21pc2VSZXNvbHZlKHZhbHVlKX0pO3RyeXtvcmlnaW5hbC5hcHBseSh0aGlzLGFyZ3MpfWNhdGNoKGVycil7cHJvbWlzZVJlamVjdChlcnIpfXJldHVybiBwcm9taXNlfXJldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YoZm4sT2JqZWN0LmdldFByb3RvdHlwZU9mKG9yaWdpbmFsKSksa0N1c3RvbVByb21pc2lmaWVkU3ltYm9sJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sa0N1c3RvbVByb21pc2lmaWVkU3ltYm9sLHt2YWx1ZTpmbixlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGZuLGdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob3JpZ2luYWwpKX0sZXhwb3J0cy5wcm9taXNpZnkuY3VzdG9tPWtDdXN0b21Qcm9taXNpZmllZFN5bWJvbCxleHBvcnRzLmNhbGxiYWNraWZ5PWZ1bmN0aW9uKG9yaWdpbmFsKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBvcmlnaW5hbCl0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJvcmlnaW5hbFwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBGdW5jdGlvbicpO2Z1bmN0aW9uIGNhbGxiYWNraWZpZWQoKXtmb3IodmFyIGFyZ3M9W10saT0wO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspYXJncy5wdXNoKGFyZ3VtZW50c1tpXSk7dmFyIG1heWJlQ2I9YXJncy5wb3AoKTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBtYXliZUNiKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgbGFzdCBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgRnVuY3Rpb25cIik7dmFyIHNlbGY9dGhpcyxjYj1mdW5jdGlvbigpe3JldHVybiBtYXliZUNiLmFwcGx5KHNlbGYsYXJndW1lbnRzKX07b3JpZ2luYWwuYXBwbHkodGhpcyxhcmdzKS50aGVuKGZ1bmN0aW9uKHJldCl7cHJvY2Vzcy5uZXh0VGljayhjYi5iaW5kKG51bGwsbnVsbCxyZXQpKX0sZnVuY3Rpb24ocmVqKXtwcm9jZXNzLm5leHRUaWNrKGZ1bmN0aW9uKHJlYXNvbixjYil7aWYoIXJlYXNvbil7dmFyIG5ld1JlYXNvbj1uZXcgRXJyb3IoXCJQcm9taXNlIHdhcyByZWplY3RlZCB3aXRoIGEgZmFsc3kgdmFsdWVcIik7bmV3UmVhc29uLnJlYXNvbj1yZWFzb24scmVhc29uPW5ld1JlYXNvbn1yZXR1cm4gY2IocmVhc29uKX0uYmluZChudWxsLHJlaixjYikpfSl9cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZihjYWxsYmFja2lmaWVkLE9iamVjdC5nZXRQcm90b3R5cGVPZihvcmlnaW5hbCkpLE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGNhbGxiYWNraWZpZWQsZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhvcmlnaW5hbCkpLGNhbGxiYWNraWZpZWR9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5WMGFXd3Vhbk1pWFN3aWJtRnRaWE1pT2xzaVoyVjBUM2R1VUhKdmNHVnlkSGxFWlhOamNtbHdkRzl5Y3lJc0lrOWlhbVZqZENJc0ltOWlhaUlzSW10bGVYTWlMQ0prWlhOamNtbHdkRzl5Y3lJc0lta2lMQ0pzWlc1bmRHZ2lMQ0puWlhSUGQyNVFjbTl3WlhKMGVVUmxjMk55YVhCMGIzSWlMQ0ptYjNKdFlYUlNaV2RGZUhBaUxDSmxlSEJ2Y25Seklpd2labTl5YldGMElpd2laaUlzSW1selUzUnlhVzVuSWl3aWIySnFaV04wY3lJc0ltRnlaM1Z0Wlc1MGN5SXNJbkIxYzJnaUxDSnBibk53WldOMElpd2lhbTlwYmlJc0ltRnlaM01pTENKc1pXNGlMQ0p6ZEhJaUxDSlRkSEpwYm1jaUxDSnlaWEJzWVdObElpd2llQ0lzSWs1MWJXSmxjaUlzSWtwVFQwNGlMQ0p6ZEhKcGJtZHBabmtpTENKZklpd2lhWE5PZFd4c0lpd2lhWE5QWW1wbFkzUWlMQ0prWlhCeVpXTmhkR1VpTENKbWJpSXNJbTF6WnlJc0luQnliMk5sYzNNaUxDSnViMFJsY0hKbFkyRjBhVzl1SWl3aVlYQndiSGtpTENKMGFHbHpJaXdpZDJGeWJtVmtJaXdpZEdoeWIzZEVaWEJ5WldOaGRHbHZiaUlzSWtWeWNtOXlJaXdpZEhKaFkyVkVaWEJ5WldOaGRHbHZiaUlzSW1OdmJuTnZiR1VpTENKMGNtRmpaU0lzSW1WeWNtOXlJaXdpWkdWaWRXZHpJaXdpWkdWaWRXZEZiblpTWldkbGVDSXNJbVZ1ZGlJc0lrNVBSRVZmUkVWQ1ZVY2lMQ0prWldKMVowVnVkaUlzSW5SdlZYQndaWEpEWVhObElpd2lVbVZuUlhod0lpd2liM0IwY3lJc0ltTjBlQ0lzSW5ObFpXNGlMQ0p6ZEhsc2FYcGxJaXdpYzNSNWJHbDZaVTV2UTI5c2IzSWlMQ0prWlhCMGFDSXNJbU52Ykc5eWN5SXNJbWx6UW05dmJHVmhiaUlzSW5Ob2IzZElhV1JrWlc0aUxDSmZaWGgwWlc1a0lpd2lhWE5WYm1SbFptbHVaV1FpTENKamRYTjBiMjFKYm5Od1pXTjBJaXdpYzNSNWJHbDZaVmRwZEdoRGIyeHZjaUlzSW1admNtMWhkRlpoYkhWbElpd2ljM1I1YkdWVWVYQmxJaXdpYzNSNWJHVWlMQ0p6ZEhsc1pYTWlMQ0oyWVd4MVpTSXNJbkpsWTNWeWMyVlVhVzFsY3lJc0ltbHpSblZ1WTNScGIyNGlMQ0pqYjI1emRISjFZM1J2Y2lJc0luQnliM1J2ZEhsd1pTSXNJbkpsZENJc0luQnlhVzFwZEdsMlpTSXNJbk5wYlhCc1pTSXNJbWx6VG5WdFltVnlJaXdpWm05eWJXRjBVSEpwYldsMGFYWmxJaXdpZG1semFXSnNaVXRsZVhNaUxDSmhjbkpoZVNJc0ltaGhjMmdpTENKbWIzSkZZV05vSWl3aWRtRnNJaXdpYVdSNElpd2lZWEp5WVhsVWIwaGhjMmdpTENKblpYUlBkMjVRY205d1pYSjBlVTVoYldWeklpd2lhWE5GY25KdmNpSXNJbWx1WkdWNFQyWWlMQ0ptYjNKdFlYUkZjbkp2Y2lJc0ltNWhiV1VpTENKcGMxSmxaMFY0Y0NJc0luUnZVM1J5YVc1bklpd2lZMkZzYkNJc0ltbHpSR0YwWlNJc0lrUmhkR1VpTENKdmRYUndkWFFpTENKaVlYTmxJaXdpWW5KaFkyVnpJaXdpYVhOQmNuSmhlU0lzSW5SdlZWUkRVM1J5YVc1bklpd2liQ0lzSW1oaGMwOTNibEJ5YjNCbGNuUjVJaXdpWm05eWJXRjBVSEp2Y0dWeWRIa2lMQ0pyWlhraUxDSnRZWFJqYUNJc0ltWnZjbTFoZEVGeWNtRjVJaXdpYldGd0lpd2ljRzl3SWl3aWNtVmtkV05sSWl3aWNISmxkaUlzSW1OMWNpSXNJbTUxYlV4cGJtVnpSWE4wSWl3aWNtVmtkV05sVkc5VGFXNW5iR1ZUZEhKcGJtY2lMQ0prWlhOaklpd2laMlYwSWl3aWMyVjBJaXdpYzNCc2FYUWlMQ0pzYVc1bElpd2ljM1ZpYzNSeUlpd2lZWElpTENKQmNuSmhlU0lzSW1GeVp5SXNJbkpsSWl3aWIySnFaV04wVkc5VGRISnBibWNpTENKa0lpd2laU0lzSW04aUxDSndZV1FpTENKdUlpd2laR1ZpZFdkc2IyY2lMQ0owWlhOMElpd2ljR2xrSWl3aVltOXNaQ0lzSW1sMFlXeHBZeUlzSW5WdVpHVnliR2x1WlNJc0ltbHVkbVZ5YzJVaUxDSjNhR2wwWlNJc0ltZHlaWGtpTENKaWJHRmpheUlzSW1Kc2RXVWlMQ0pqZVdGdUlpd2laM0psWlc0aUxDSnRZV2RsYm5SaElpd2ljbVZrSWl3aWVXVnNiRzkzSWl3aWMzQmxZMmxoYkNJc0ltNTFiV0psY2lJc0ltSnZiMnhsWVc0aUxDSjFibVJsWm1sdVpXUWlMQ0p1ZFd4c0lpd2ljM1J5YVc1bklpd2laR0YwWlNJc0luSmxaMlY0Y0NJc0luUjVjR1Z6SWl3aWNtVnhkV2x5WlNJc0ltbHpUblZzYkU5eVZXNWtaV1pwYm1Wa0lpd2lhWE5UZVcxaWIyd2lMQ0pwYzA1aGRHbDJaVVZ5Y205eUlpd2lhWE5RY21sdGFYUnBkbVVpTENKcGMwSjFabVpsY2lJc0ltMXZiblJvY3lJc0luQnliM0FpTENKc2IyY2lMQ0owYVcxbElpd2laMlYwU0c5MWNuTWlMQ0puWlhSTmFXNTFkR1Z6SWl3aVoyVjBVMlZqYjI1a2N5SXNJbWRsZEVSaGRHVWlMQ0puWlhSTmIyNTBhQ0lzSW1sdWFHVnlhWFJ6SWl3aWIzSnBaMmx1SWl3aVlXUmtJaXdpYTBOMWMzUnZiVkJ5YjIxcGMybG1hV1ZrVTNsdFltOXNJaXdpVTNsdFltOXNJaXdpY0hKdmJXbHphV1o1SWl3aWIzSnBaMmx1WVd3aUxDSlVlWEJsUlhKeWIzSWlMQ0prWldacGJtVlFjbTl3WlhKMGVTSXNJbVZ1ZFcxbGNtRmliR1VpTENKM2NtbDBZV0pzWlNJc0ltTnZibVpwWjNWeVlXSnNaU0lzSW5CeWIyMXBjMlZTWlhOdmJIWmxJaXdpY0hKdmJXbHpaVkpsYW1WamRDSXNJbkJ5YjIxcGMyVWlMQ0pRY205dGFYTmxJaXdpY21WemIyeDJaU0lzSW5KbGFtVmpkQ0lzSW1WeWNpSXNJbk5sZEZCeWIzUnZkSGx3WlU5bUlpd2laMlYwVUhKdmRHOTBlWEJsVDJZaUxDSmtaV1pwYm1WUWNtOXdaWEowYVdWeklpd2lZM1Z6ZEc5dElpd2lZMkZzYkdKaFkydHBabmtpTENKallXeHNZbUZqYTJsbWFXVmtJaXdpYldGNVltVkRZaUlzSW5ObGJHWWlMQ0pqWWlJc0luUm9aVzRpTENKdVpYaDBWR2xqYXlJc0ltSnBibVFpTENKeVpXb2lMQ0p5WldGemIyNGlMQ0p1WlhkU1pXRnpiMjRpWFN3aWJXRndjR2x1WjNNaU9pSkJRWEZDUVN4SlFVRkpRU3d3UWtGQk5FSkRMRTlCUVU5RUxESkNRVU55UXl4VFFVRnRRMFVzUzBGSGFrTXNTVUZHUVN4SlFVRkpReXhMUVVGUFJpeFBRVUZQUlN4TFFVRkxSQ3hMUVVOdVFrVXNXVUZCWXl4SFFVTlVReXhGUVVGSkxFVkJRVWRCTEVWQlFVbEdMRXRCUVV0SExFOUJRVkZFTEVsQlF5OUNSQ3haUVVGWlJDeExRVUZMUlN4SlFVRk5TaXhQUVVGUFRTeDVRa0ZCZVVKTUxFbEJRVXRETEV0QlFVdEZMRWxCUlc1RkxFOUJRVTlFTEdGQlIxQkpMR0ZCUVdVc1YwRkRia0pETEZGQlFWRkRMRTlCUVZNc1UwRkJVME1zUjBGRGVFSXNTVUZCUzBNc1UwRkJVMFFzUjBGQlNTeERRVVZvUWl4SlFVUkJMRWxCUVVsRkxGRkJRVlVzUjBGRFRGSXNSVUZCU1N4RlFVRkhRU3hGUVVGSlV5eFZRVUZWVWl4UFFVRlJSQ3hKUVVOd1ExRXNVVUZCVVVVc1MwRkJTME1zVVVGQlVVWXNWVUZCVlZRc1MwRkZha01zVDBGQlQxRXNVVUZCVVVrc1MwRkJTeXhMUVVkc1Fsb3NSVUZCU1N4RlFXMUNVaXhKUVc1Q1FTeEpRVU5KWVN4TFFVRlBTaXhWUVVOUVN5eEpRVUZOUkN4TFFVRkxXaXhQUVVOWVl5eEpRVUZOUXl4UFFVRlBWaXhIUVVGSFZ5eFJRVUZSWkN4aFFVRmpMRk5CUVZObExFZEJRMnBFTEVkQlFWVXNUMEZCVGtFc1JVRkJXU3hOUVVGUExFbEJRM1pDTEVkQlFVbHNRaXhIUVVGTFl5eEpRVUZMTEU5QlFVOUpMRVZCUTNKQ0xFOUJRVkZCTEVkQlEwNHNTVUZCU3l4TFFVRk5MRTlCUVU5R0xFOUJRVTlJTEV0QlFVdGlMRTFCUXpsQ0xFbEJRVXNzUzBGQlRTeFBRVUZQYlVJc1QwRkJUMDRzUzBGQlMySXNUVUZET1VJc1NVRkJTeXhMUVVOSUxFbEJRMFVzVDBGQlQyOUNMRXRCUVV0RExGVkJRVlZTTEV0QlFVdGlMRTFCUXpOQ0xFMUJRVTl6UWl4SFFVTlFMRTFCUVU4c1lVRkZXQ3hSUVVORkxFOUJRVTlLTEV0QlIwcEJMRVZCUVVsTUxFdEJRVXRpTEVkQlFVbEJMRVZCUVVsakxFbEJRVXRKTEVWQlFVbE1MRTlCUVU5aUxFZEJRM0JEZFVJc1QwRkJUMHdzUzBGQlQwMHNVMEZCVTA0c1IwRkRla0pJTEV0QlFVOHNTVUZCVFVjc1JVRkZZa2dzUzBGQlR5eEpRVUZOU2l4UlFVRlJUeXhIUVVkNlFpeFBRVUZQU0N4TFFVOVVXQ3hSUVVGUmNVSXNWVUZCV1N4VFFVRlRReXhIUVVGSlF5eExRVU12UWl4SFFVRjFRaXh2UWtGQldrTXNWVUZCY1VRc1NVRkJNVUpCTEZGQlFWRkRMR05CUXpWRExFOUJRVTlJTEVkQlNWUXNSMEZCZFVJc2IwSkJRVnBGTEZGQlExUXNUMEZCVHl4WFFVTk1MRTlCUVU5NFFpeFJRVUZSY1VJc1ZVRkJWVU1zUjBGQlNVTXNTMEZCUzBjc1RVRkJUVU1zUzBGQlRYUkNMRmxCU1d4RUxFbEJRVWwxUWl4UlFVRlRMRVZCWldJc1QwRmtRU3hYUVVORkxFbEJRVXRCTEU5QlFWRXNRMEZEV0N4SFFVRkpTaXhSUVVGUlN5eHBRa0ZEVml4TlFVRk5MRWxCUVVsRExFMUJRVTFRTEV0QlExQkRMRkZCUVZGUExHbENRVU5xUWtNc1VVRkJVVU1zVFVGQlRWWXNTMEZGWkZNc1VVRkJVVVVzVFVGQlRWZ3NTMEZGYUVKTExGRkJRVk1zUlVGRldDeFBRVUZQVGl4SFFVRkhTU3hOUVVGTlF5eExRVUZOZEVJc1lVRlBNVUlzU1VGQlNUaENMRTlCUVZNc1IwRkRWRU1zWTBGQlowSXNTMEZGY0VJc1IwRkJTVm9zVVVGQlVXRXNTVUZCU1VNc1YwRkJXU3hEUVVNeFFpeEpRVUZKUXl4VFFVRlhaaXhSUVVGUllTeEpRVUZKUXl4WFFVTXpRa01zVTBGQlYwRXNVMEZCVXpGQ0xGRkJRVkVzY1VKQlFYTkNMRkZCUXk5RFFTeFJRVUZSTEUxQlFVOHNUVUZEWmtFc1VVRkJVU3hMUVVGTkxFOUJRMlF5UWl4alFVTklTaXhqUVVGblFpeEpRVUZKU3l4UFFVRlBMRWxCUVUxR0xGTkJRVmNzU1VGQlN5eExRVEpDYmtRc1UwRkJVMmhETEZGQlFWRmtMRWxCUVV0cFJDeE5RVVZ3UWl4SlFVRkpReXhKUVVGTkxFTkJRMUpETEV0QlFVMHNSMEZEVGtNc1VVRkJVME1zWjBKQmEwSllMRTlCWmtsNlF5eFZRVUZWVWl4UlFVRlZMRWxCUVVjNFF5eEpRVUZKU1N4TlFVRlJNVU1zVlVGQlZTeEpRVU0zUTBFc1ZVRkJWVklzVVVGQlZTeEpRVUZIT0VNc1NVRkJTVXNzVDBGQlV6TkRMRlZCUVZVc1NVRkRPVU0wUXl4VlFVRlZVQ3hOUVVWYVF5eEpRVUZKVHl4WFFVRmhVaXhMUVVOU1FTeE5RVVZVTVVNc1VVRkJVVzFFTEZGQlFWRlNMRWxCUVV0RUxFMUJSMjVDVlN4WlFVRlpWQ3hKUVVGSlR5eGpRVUZoVUN4SlFVRkpUeXhaUVVGaExFZEJRemxEUlN4WlFVRlpWQ3hKUVVGSlNTeFRRVUZSU2l4SlFVRkpTU3hOUVVGUkxFZEJRM0JEU3l4WlFVRlpWQ3hKUVVGSlN5eFZRVUZUVEN4SlFVRkpTeXhSUVVGVExFZEJRM1JEU1N4WlFVRlpWQ3hKUVVGSlZTeHBRa0ZCWjBKV0xFbEJRVWxWTEdWQlFXZENMRWRCUTNCRVZpeEpRVUZKU3l4VFFVRlJUQ3hKUVVGSlJTeFJRVUZWVXl4clFrRkRka0pETEZsQlFWbGFMRWxCUVV0c1JDeEpRVUZMYTBRc1NVRkJTVWtzVDBGdlEyNURMRk5CUVZOUExHbENRVUZwUWpORExFbEJRVXMyUXl4WFFVTTNRaXhKUVVGSlF5eE5RVUZSYkVRc1VVRkJVVzFFTEU5QlFVOUdMRmRCUlROQ0xFOUJRVWxETEUxQlEwc3NVVUZCV1d4RUxGRkJRVkY1UXl4UFFVRlBVeXhQUVVGUExFZEJRVXNzU1VGQlRUbERMRWxCUXpkRExGRkJRVmxLTEZGQlFWRjVReXhQUVVGUFV5eFBRVUZQTEVkQlFVc3NTVUZGZGtNNVF5eEpRVXRZTEZOQlFWTnRReXhsUVVGbGJrTXNTVUZCU3paRExGZEJRek5DTEU5QlFVODNReXhKUVdWVUxGTkJRVk0wUXl4WlFVRlpXaXhKUVVGTFowSXNUVUZCVDBNc1kwRkhMMElzUjBGQlNXcENMRWxCUVVsVkxHVkJRMHBOTEU5QlEwRkZMRmRCUVZkR0xFMUJRVTF3UkN4VlFVVnFRbTlFTEUxQlFVMXdSQ3hWUVVGWlVDeFJRVUZSVHl4WFFVVjRRbTlFTEUxQlFVMUhMR0ZCUVdWSUxFMUJRVTFITEZsQlFWbERMRmxCUVdOS0xFOUJRVkVzUTBGRGFrVXNTVUZCU1Vzc1NVRkJUVXdzVFVGQlRYQkVMRkZCUVZGeFJDeGhRVUZqYWtJc1MwRkpkRU1zVDBGSVMzaERMRk5CUVZNMlJDeFBRVU5hUVN4SlFVRk5WQ3haUVVGWldpeEpRVUZMY1VJc1NVRkJTMG9zWlVGRmRrSkpMRWxCU1ZRc1NVRkJTVU1zVlVFclJrNHNVMEZCZVVKMFFpeEpRVUZMWjBJc1QwRkROVUlzUjBGQlNWQXNXVUZCV1U4c1QwRkRaQ3hQUVVGUGFFSXNTVUZCU1VVc1VVRkJVU3haUVVGaExHRkJRMnhETEVkQlFVa3hReXhUUVVGVGQwUXNUMEZCVVN4RFFVTnVRaXhKUVVGSlR5eFBRVUZUTEVsQlFVOXNSQ3hMUVVGTFF5eFZRVUZWTUVNc1QwRkJUemxETEZGQlFWRXNVMEZCVlN4SlFVTnNRa0VzVVVGQlVTeExRVUZOTEU5QlEyUkJMRkZCUVZFc1QwRkJVU3hMUVVGUExFbEJRMnBGTEU5QlFVODRRaXhKUVVGSlJTeFJRVUZSY1VJc1QwRkJVU3hWUVVVM1FpeEhRVUZKUXl4VFFVRlRVaXhQUVVOWUxFOUJRVTlvUWl4SlFVRkpSU3hSUVVGUkxFZEJRVXRqTEUxQlFVOHNWVUZEYWtNc1IwRkJTVllzVlVGQlZWVXNUMEZEV2l4UFFVRlBhRUlzU1VGQlNVVXNVVUZCVVN4SFFVRkxZeXhOUVVGUExGZEJSV3BETEVkQlFVbDRReXhQUVVGUGQwTXNUMEZEVkN4UFFVRlBhRUlzU1VGQlNVVXNVVUZCVVN4UFFVRlJMRkZCT1VkaWRVSXNRMEZCWjBKNlFpeEpRVUZMWjBJc1QwRkRja01zUjBGQlNVMHNWVUZEUml4UFFVRlBRU3hWUVVsVUxFbEJRVWwyUlN4TFFVRlBSaXhQUVVGUFJTeExRVUZMYVVVc1QwRkRia0pWTEZsQmNFTk9MRk5CUVhGQ1F5eFBRVU51UWl4SlFVRkpReXhMUVVGUExFZEJUVmdzVDBGS1FVUXNUVUZCVFVVc1VVRkJVU3hUUVVGVFF5eEpRVUZMUXl4TFFVTXhRa2dzUzBGQlMwVXNUVUZCVHl4SlFVZFFSaXhMUVRaQ1Ywa3NRMEZCV1dwR0xFMUJVVGxDTEVkQlRrbHBSQ3hKUVVGSlR5eGhRVU5PZUVRc1MwRkJUMFlzVDBGQlQyOUdMRzlDUVVGdlFtcENMRkZCUzJoRGEwSXNVVUZCVVd4Q0xGTkJRMHBxUlN4TFFVRkxiMFlzVVVGQlVTeFpRVUZqTEVkQlFVdHdSaXhMUVVGTGIwWXNVVUZCVVN4blFrRkJhMElzUjBGRGNrVXNUMEZCVDBNc1dVRkJXWEJDTEU5QlNYSkNMRWRCUVc5Q0xFbEJRV2hDYWtVc1MwRkJTMGNzVDBGQll5eERRVU55UWl4SFFVRkpaMFVzVjBGQlYwWXNUMEZCVVN4RFFVTnlRaXhKUVVGSmNVSXNTMEZCVDNKQ0xFMUJRVTF4UWl4TFFVRlBMRXRCUVU5eVFpeE5RVUZOY1VJc1MwRkJUeXhIUVVNMVF5eFBRVUZQY2tNc1NVRkJTVVVzVVVGQlVTeFpRVUZqYlVNc1MwRkJUeXhKUVVGTExGZEJSUzlETEVkQlFVbERMRk5CUVZOMFFpeFBRVU5ZTEU5QlFVOW9RaXhKUVVGSlJTeFJRVUZSU2l4UFFVRlBjMElzVlVGQlZXMUNMRk5CUVZORExFdEJRVXQ0UWl4UFFVRlJMRlZCUlRWRUxFZEJRVWw1UWl4UFFVRlBla0lzVDBGRFZDeFBRVUZQYUVJc1NVRkJTVVVzVVVGQlVYZERMRXRCUVV0MFFpeFZRVUZWYlVJc1UwRkJVME1zUzBGQlMzaENMRTlCUVZFc1VVRkZNVVFzUjBGQlNXdENMRkZCUVZGc1FpeFBRVU5XTEU5QlFVOXZRaXhaUVVGWmNFSXNUMEZKZGtJc1NVRXlRMGt5UWl4UFFUTkRRVU1zUzBGQlR5eEhRVUZKYWtJc1QwRkJVU3hGUVVGUGEwSXNUMEZCVXl4RFFVRkRMRWxCUVVzc1RVRkhla05ETEZGQlFWRTVRaXhUUVVOV1Z5eFBRVUZSTEVWQlExSnJRaXhQUVVGVExFTkJRVU1zU1VGQlN5eE5RVWxpTTBJc1YwRkJWMFlzVlVGRllqUkNMRXRCUVU4c1kwRkVRelZDTEUxQlFVMXhRaXhMUVVGUExFdEJRVTl5UWl4TlFVRk5jVUlzUzBGQlR5eEpRVU5tTEV0QmEwSTFRaXhQUVdSSlF5eFRRVUZUZEVJc1UwRkRXRFJDTEV0QlFVOHNTVUZCVFRsRExFOUJRVTl6UWl4VlFVRlZiVUlzVTBGQlUwTXNTMEZCUzNoQ0xGRkJTVEZEZVVJc1QwRkJUM3BDTEZOQlExUTBRaXhMUVVGUExFbEJRVTFHTEV0QlFVdDBRaXhWUVVGVk1rSXNXVUZCV1ZBc1MwRkJTM2hDTEZGQlNUTkRhMElzVVVGQlVXeENMRk5CUTFZMFFpeExRVUZQTEVsQlFVMVNMRmxCUVZsd1FpeFJRVWRRTEVsQlFXaENha1VzUzBGQlMwY3NVVUZCYTBKNVJTeFBRVUY1UWl4SFFVRm9RbGdzVFVGQlRUbEVMRTlCU1hSREswUXNZVUZCWlN4RlFVTmljVUlzVTBGQlUzUkNMRTlCUTBwb1FpeEpRVUZKUlN4UlFVRlJTaXhQUVVGUGMwSXNWVUZCVlcxQ0xGTkJRVk5ETEV0QlFVdDRRaXhQUVVGUkxGVkJSVzVFYUVJc1NVRkJTVVVzVVVGQlVTeFhRVUZaTEZsQlNXNURSaXhKUVVGSlF5eExRVUZMZEVNc1MwRkJTM0ZFTEU5QlNWb3lRaXhQUVVSRmFFSXNUVUZ6UTA0c1UwRkJjVUl6UWl4SlFVRkxaMElzVFVGQlQwTXNZVUZCWTFNc1dVRkJZVE5GTEUxQlJURkVMRWxCUkVFc1NVRkJTVFJHTEU5QlFWTXNSMEZEU2pGR0xFVkJRVWtzUlVGQlJ5dEdMRVZCUVVsb1F5eE5RVUZOT1VRc1QwRkJVVVFzUlVGQlNTdEdMRWxCUVVzdlJpeEZRVU55UTJkSExHVkJRV1ZxUXl4TlFVRlBMME1zVDBGQlQyaENMRWxCUXk5Q01FWXNUMEZCVDJoR0xFdEJRVXQxUml4bFFVRmxiRVFzU1VGQlMyZENMRTFCUVU5RExHRkJRV05UTEZsQlEycEVla1FzVDBGQlQyaENMRWxCUVVrc1NVRkZaakJHTEU5QlFVOW9SaXhMUVVGTExFbEJVMmhDTEU5QlRrRmFMRXRCUVVzNFJTeFJRVUZSTEZOQlFWTnpRaXhMUVVObVFTeEpRVUZKUXl4TlFVRk5MRlZCUTJKVUxFOUJRVTlvUml4TFFVRkxkVVlzWlVGQlpXeEVMRWxCUVV0blFpeE5RVUZQUXl4aFFVRmpVeXhaUVVOcVJIbENMRXRCUVVzc1RVRkhUbElzVDBGeVJFbFZMRU5CUVZseVJDeEpRVUZMWjBJc1RVRkJUME1zWVVGQlkxTXNXVUZCWVRORkxFMUJSVzVFUVN4TFFVRkxkVWNzU1VGQlNTeFRRVUZUU0N4TFFVTjZRaXhQUVVGUFJDeGxRVUZsYkVRc1NVRkJTMmRDTEUxQlFVOURMR0ZCUVdOVExGbEJRV0Y1UWl4SlFVRkxlRUlzVTBGSmRFVXpRaXhKUVVGSlF5eExRVUZMYzBRc1RVRTJSMWdzVTBGQk9FSmFMRTlCUVZGRExFdEJRVTFETEZGQlVURkRMRWRCVG1GR0xFOUJRVTloTEU5QlFVOHNVMEZCVTBNc1MwRkJUVU1zUzBGSGVFTXNUMEZHUVVNc1JVRkRTVVFzU1VGQlNYWkNMRkZCUVZFc1QwRkJVeXhIUVVGSGQwSXNSVUZEY2tKR0xFdEJRVTlETEVsQlFVbDRSaXhSUVVGUkxHdENRVUZ0UWl4SlFVRkphRUlzVDBGQlV5eEhRVU42UkN4SFFVVlZMRWRCUTFnc1QwRkJUekpHTEU5QlFVOHNTVUZEUnl4TFFVRlVSQ3hMUVVGakxFZEJRVXRCTEV0QlFVOHNUMEZETTBJc1NVRkRRVVFzVDBGQlR6bEZMRXRCUVVzc1UwRkRXaXhKUVVOQlowWXNUMEZCVHl4SFFVZG9RaXhQUVVGUFFTeFBRVUZQTEVkQlFVdEVMRXRCUVU4c1NVRkJUVVFzVDBGQlR6bEZMRXRCUVVzc1RVRkJVU3hKUVVGTlowWXNUMEZCVHl4SFFUVklNVVJsTEVOQlFYRkNha0lzVDBGQlVVTXNTMEZCVFVNc1UwRjRRbXBEUVN4UFFVRlBMRWRCUVV0RUxFdEJRVTlETEU5QlFVOHNSMEVyUTNKRExGTkJRVk5VTEZsQlFWbHdRaXhQUVVOdVFpeE5RVUZQTEVsQlFVMDNRaXhOUVVGTmFVTXNWVUZCVlcxQ0xGTkJRVk5ETEV0QlFVdDRRaXhQUVVGVExFbEJkMEowUkN4VFFVRlRhME1zWlVGQlpXeEVMRWxCUVV0blFpeE5RVUZQUXl4aFFVRmpVeXhaUVVGaGVVSXNTVUZCUzNoQ0xFOUJRMnhGTEVsQlFVbFZMRXRCUVUxeVJTeEpRVUZMTmtZc1MwRnpRMllzU1VGeVEwRkJMRXRCUVU5b1NDeFBRVUZQVFN4NVFrRkJlVUkyUkN4TlFVRlBiVU1zVFVGQlVTeERRVUZGYmtNc1RVRkJUMEVzVFVGQlRXMURMRTlCUXpWRVZ5eEpRVVZNT1VZc1NVRkVSVFpHTEV0QlFVdEZMRWxCUTBRdlJDeEpRVUZKUlN4UlFVRlJMR3RDUVVGdFFpeFhRVVV2UWtZc1NVRkJTVVVzVVVGQlVTeFhRVUZaTEZkQlJ6VkNNa1FzUzBGQlMwVXNUVUZEVUM5R0xFbEJRVTFuUXl4SlFVRkpSU3hSUVVGUkxGZEJRVmtzV1VGSE4wSXJReXhsUVVGbGRrSXNXVUZCWVhsQ0xFOUJReTlDWkN4TFFVRlBMRWxCUVUxakxFbEJRVTBzUzBGRmFFSnVSaXhOUVVORFowTXNTVUZCU1VNc1MwRkJTMnRETEZGQlFWRXdRaXhMUVVGTE4wTXNUMEZCVXl4SFFVVXZRbWhFTEVsQlJFVlJMRTlCUVU5NVF5eGpRVU5JVEN4WlFVRlpXaXhKUVVGTE5rUXNTMEZCU3pkRExFMUJRVThzVFVGRk4wSktMRmxCUVZsYUxFbEJRVXMyUkN4TFFVRkxOME1zVFVGQlQwTXNZVUZCWlN4SlFVVTFRMnRDTEZGQlFWRXNUMEZCVXl4SlFVVnlRbTVGTEVsQlJFVXlSQ3hOUVVOSk0wUXNTVUZCU1dkSExFMUJRVTBzVFVGQlRWWXNTVUZCU1N4VFFVRlRWeXhOUVVOcVF5eE5RVUZQTEV0QlFVOUJMRTlCUTJKd1J5eExRVUZMTEUxQlFVMXhSeXhQUVVGUExFZEJSV1lzUzBGQlQyeEhMRWxCUVVsblJ5eE5RVUZOTEUxQlFVMVdMRWxCUVVrc1UwRkJVMWNzVFVGRGVFTXNUVUZCVHl4TlFVRlJRU3hQUVVOa2NFY3NTMEZCU3l4UFFVbGFSeXhKUVVGTlowTXNTVUZCU1VVc1VVRkJVU3hoUVVGakxGbEJSMmhEVHl4WlFVRlpORUlzVFVGQlR5eERRVU55UWl4SFFVRkpWaXhQUVVGVGQwSXNTVUZCU1VNc1RVRkJUU3hUUVVOeVFpeFBRVUZQY0VZc1MwRkZWSEZGTEV0QlFVOW9SU3hMUVVGTFF5eFZRVUZWTEVkQlFVczJSU3hOUVVOc1FrTXNUVUZCVFN4cFEwRkRZbVlzUzBGQlQwRXNTMEZCU3paQ0xFOUJRVThzUlVGQlJ6ZENMRXRCUVV0dVJpeFBRVUZUTEVkQlEzQkRiVVlzUzBGQlQzSkRMRWxCUVVsRkxGRkJRVkZ0UXl4TFFVRk5MRlZCUlhwQ1FTeExRVUZQUVN4TFFVRkxia1VzVVVGQlVTeExRVUZOTEU5QlEyUkJMRkZCUVZFc1QwRkJVU3hMUVVOb1FrRXNVVUZCVVN4WFFVRlpMRXRCUTJoRGJVVXNTMEZCVDNKRExFbEJRVWxGTEZGQlFWRnRReXhMUVVGTkxGZEJTVGRDTEU5QlFVOUJMRXRCUVU4c1MwRkJUM0pGTEVsQk5rSjJRaXhUUVVGVE9FVXNVVUZCVVhGQ0xFbEJRMllzVDBGQlQwTXNUVUZCVFhSQ0xGRkJRVkZ4UWl4SlFVbDJRaXhUUVVGVE4wUXNWVUZCVlN0RUxFdEJRMnBDTEUxQlFYTkNMR3RDUVVGU1FTeEpRVWxvUWl4VFFVRlROMFlzVDBGQlR6WkdMRXRCUTJRc1QwRkJaU3hQUVVGU1FTeEpRVk5VTEZOQlFWTTNReXhUUVVGVE5rTXNTMEZEYUVJc1RVRkJjMElzYVVKQlFWSkJMRWxCU1doQ0xGTkJRVk0zUnl4VFFVRlROa2NzUzBGRGFFSXNUVUZCYzBJc2FVSkJRVkpCTEVsQlUyaENMRk5CUVZNMVJDeFpRVUZaTkVRc1MwRkRia0lzV1VGQlpTeEpRVUZTUVN4SlFVbFVMRk5CUVZNdlFpeFRRVUZUWjBNc1NVRkRhRUlzVDBGQlR6ZEdMRk5CUVZNMlJpeExRVUU0UWl4dlFrRkJka0pETEdWQlFXVkVMRWxCUzNoRExGTkJRVk0zUml4VFFVRlRORVlzUzBGRGFFSXNUVUZCYzBJc2FVSkJRVkpCTEV0QlFUUkNMRTlCUVZKQkxFbEJTWEJETEZOQlFWTTFRaXhQUVVGUEswSXNSMEZEWkN4UFFVRlBMMFlzVTBGQlV5dEdMRWxCUVRSQ0xHdENRVUYwUWtRc1pVRkJaVU1zUjBGTGRrTXNVMEZCVTNSRExGRkJRVkYxUXl4SFFVTm1MRTlCUVU5b1J5eFRRVUZUWjBjc1MwRkRWeXh0UWtGQmRFSkdMR1ZCUVdWRkxFbEJRVEpDUVN4aFFVRmhkRVlzVDBGTE9VUXNVMEZCVXl0Q0xGZEJRVmR0UkN4TFFVTnNRaXhOUVVGelFpeHRRa0ZCVWtFc1NVRm5RbWhDTEZOQlFWTkZMR1ZCUVdWSExFZEJRM1JDTEU5QlFVODNTQ3hQUVVGUGRVVXNWVUZCVlcxQ0xGTkJRVk5ETEV0QlFVdHJReXhIUVVsNFF5eFRRVUZUUXl4SlFVRkpReXhIUVVOWUxFOUJRVTlCTEVWQlFVa3NSMEZCU3l4SlFVRk5RU3hGUVVGRmNrTXNVMEZCVXl4SlFVRk5jVU1zUlVGQlJYSkRMRk5CUVZNc1NVRjJZbkJFYkVZc1VVRkJVWGRJTEZOQlFWY3NVMEZCVTJRc1MwRkZNVUlzUjBGRVFVRXNTVUZCVFVFc1NVRkJTV3hGTEdWQlEweE1MRTlCUVU5MVJTeExRVU5XTEVkQlFVbDBSU3hqUVVGamNVWXNTMEZCUzJZc1MwRkJUU3hEUVVNelFpeEpRVUZKWjBJc1NVRkJUV3hITEZGQlFWRnJSeXhKUVVOc1FuWkdMRTlCUVU5MVJTeExRVUZQTEZkQlExb3NTVUZCU1c1R0xFbEJRVTEyUWl4UlFVRlJReXhQUVVGUGVVSXNUVUZCVFRGQ0xGRkJRVk5MTEZkQlEzaERNa0lzVVVGQlVVVXNUVUZCVFN4WlFVRmhkMFVzU1VGQlMyZENMRWxCUVV0dVJ5eFhRVWQyUTFrc1QwRkJUM1ZGTEV0QlFVOHNZVUZIYkVJc1QwRkJUM1pGTEU5QlFVOTFSU3hOUVc5RGFFSXhSeXhSUVVGUlR5eFJRVUZWUVN4UlFVbHNRa0VzVVVGQlVYbERMRTlCUVZNc1EwRkRaakpGTEV0QlFWTXNRMEZCUXl4RlFVRkhMRWxCUTJKRExFOUJRVmNzUTBGQlF5eEZRVUZITEVsQlEyWkRMRlZCUVdNc1EwRkJReXhGUVVGSExFbEJRMnhDUXl4UlFVRlpMRU5CUVVNc1JVRkJSeXhKUVVOb1FrTXNUVUZCVlN4RFFVRkRMRWRCUVVrc1NVRkRaa01zUzBGQlV5eERRVUZETEVkQlFVa3NTVUZEWkVNc1RVRkJWU3hEUVVGRExFZEJRVWtzU1VGRFprTXNTMEZCVXl4RFFVRkRMRWRCUVVrc1NVRkRaRU1zUzBGQlV5eERRVUZETEVkQlFVa3NTVUZEWkVNc1RVRkJWU3hEUVVGRExFZEJRVWtzU1VGRFprTXNVVUZCV1N4RFFVRkRMRWRCUVVrc1NVRkRha0pETEVsQlFWRXNRMEZCUXl4SFFVRkpMRWxCUTJKRExFOUJRVmNzUTBGQlF5eEhRVUZKTEV0QlNXeENhRWtzVVVGQlVXMUVMRTlCUVZNc1EwRkRaamhGTEZGQlFWY3NUMEZEV0VNc1QwRkJWU3hUUVVOV1F5eFJRVUZYTEZOQlExaERMRlZCUVdFc1QwRkRZa01zUzBGQlVTeFBRVU5TUXl4UFFVRlZMRkZCUTFaRExFdEJRVkVzVlVGRlVrTXNUMEZCVlN4UFFTdFJXaTlKTEZGQlFWRm5TaXhOUVVGUlF5eFJRVUZSTEcxQ1FVdDRRbXBLTEZGQlFWRjVSaXhSUVVGVlFTeFJRVXRzUW5wR0xGRkJRVkZwUkN4VlFVRlpRU3hWUVV0d1FtcEVMRkZCUVZGdFFpeFBRVUZUUVN4UFFVdHFRbTVDTEZGQlFWRnJTaXhyUWtGSVVpeFRRVUV5UW14RExFdEJRM3BDTEU5QlFXTXNUVUZCVUVFc1MwRlBWR2hJTEZGQlFWRnRSU3hUUVVGWFFTeFRRVXR1UW01RkxGRkJRVkZITEZOQlFWZEJMRk5CUzI1Q1NDeFJRVUZSYlVvc1UwRklVaXhUUVVGclFtNURMRXRCUTJoQ0xFMUJRWE5DTEdsQ1FVRlNRU3hMUVU5b1FtaElMRkZCUVZGdlJDeFpRVUZqUVN4WlFVdDBRbkJFTEZGQlFWRnBSaXhUUVVGWFFTeFRRVU51UW1wR0xGRkJRVkZuU2l4TlFVRk5MMFFzVTBGQlYwRXNVMEZMZWtKcVJpeFJRVUZSYjBJc1UwRkJWMEVzVTBGTGJrSndRaXhSUVVGUmIwWXNUMEZCVTBFc1QwRkRha0p3Uml4UlFVRlJaMG9zVFVGQlRUVkVMRTlCUVZOQkxFOUJUWFpDY0VZc1VVRkJVVFpGTEZGQlFWVkJMRkZCUTJ4Q04wVXNVVUZCVVdkS0xFMUJRVTFKTEdOQlFXZENka1VzVVVGTE9VSTNSU3hSUVVGUk5rUXNWMEZCWVVFc1YwRlZja0kzUkN4UlFVRlJjVW9zV1VGU1VpeFRRVUZ4UW5KRExFdEJRMjVDTEU5QlFXVXNUMEZCVWtFc1MwRkRaU3hyUWtGQlVrRXNTMEZEVVN4cFFrRkJVa0VzUzBGRFVTeHBRa0ZCVWtFc1MwRkRVU3hwUWtGQlVrRXNWVUZEVVN4SlFVRlNRU3hMUVVsb1FtaElMRkZCUVZGelNpeFRRVUZYVEN4UlFVRlJMSE5DUVZrelFpeEpRVUZKVFN4UFFVRlRMRU5CUVVNc1RVRkJUeXhOUVVGUExFMUJRVThzVFVGQlR5eE5RVUZQTEUxQlFVOHNUVUZCVHl4TlFVRlBMRTFCUTNoRUxFMUJRVThzVFVGQlR5eFBRVFpETlVJc1UwRkJVek5FTEdWQlFXVnVSeXhKUVVGTEswb3NUVUZETTBJc1QwRkJUMmhMTEU5QlFVOTFSU3hWUVVGVk5rSXNaVUZCWlZRc1MwRkJTekZHTEVsQlFVc3JTaXhOUVdwRGJrUjRTaXhSUVVGUmVVb3NTVUZCVFN4WFFWWmtMRWxCUTAxMFF5eEZRVU5CZFVNc1MwRlRTakZJTEZGQlFWRjVTQ3hKUVVGSkxGZEJWbEowUXl4RlFVRkpMRWxCUVVrNVFpeExRVU5TY1VVc1MwRkJUeXhEUVVGRGNFTXNTVUZCU1Vnc1JVRkJSWGRETEZsQlEwNXlReXhKUVVGSlNDeEZRVUZGZVVNc1kwRkRUblJETEVsQlFVbElMRVZCUVVVd1F5eGxRVUZsY2tvc1MwRkJTeXhMUVVNdlFpeERRVUZETWtjc1JVRkJSVEpETEZWQlFWZFFMRTlCUVU5d1F5eEZRVUZGTkVNc1dVRkJZVXdzVFVGQlRXeEtMRXRCUVVzc1RVRk5iRUpTTEZGQlFWRkRMRTlCUVU5NVFpeE5RVUZOTVVJc1VVRkJVMHNzWVVGcFFuQkZUQ3hSUVVGUlowc3NVMEZCVjJZc1VVRkJVU3haUVVVelFtcEtMRkZCUVZGdFJDeFJRVUZWTEZOQlFWTTRSeXhQUVVGUlF5eExRVVZxUXl4SlFVRkxRU3hOUVVGUk9Va3NVMEZCVXpoSkxFdEJRVTBzVDBGQlQwUXNUMEZKYmtNc1NVRkdRU3hKUVVGSmRrc3NTMEZCVDBZc1QwRkJUMFVzUzBGQlMzZExMRXRCUTI1Q2RFc3NSVUZCU1VZc1MwRkJTMGNzVDBGRFRrUXNTMEZEVEhGTExFOUJRVTkyU3l4TFFVRkxSU3hKUVVGTmMwc3NTVUZCU1hoTExFdEJRVXRGTEVsQlJUZENMRTlCUVU5eFN5eFJRVTlVTEVsQlFVbEZMSGxDUVVFMlF5eHZRa0ZCV0VNc1QwRkJlVUpCTEU5QlFVOHNPRUpCUVRKQ2VrSXNSVUZGYWtjelNTeFJRVUZSY1Vzc1ZVRkJXU3hUUVVGdFFrTXNWVUZEY2tNc1IwRkJkMElzYlVKQlFXSkJMRk5CUTFRc1RVRkJUU3hKUVVGSlF5eFZRVUZWTEc5RVFVVjBRaXhIUVVGSlNpd3dRa0ZCTkVKSExGTkJRVk5JTERCQ1FVRXlRaXhEUVVOc1JTeEpRVUZKTjBrc1IwRkRTaXhIUVVGclFpeHRRa0ZFWkVFc1IwRkJTMmRLTEZOQlFWTklMREpDUVVWb1FpeE5RVUZOTEVsQlFVbEpMRlZCUVZVc2FVVkJTM1JDTEU5QlNFRXZTeXhQUVVGUFowd3NaVUZCWld4S0xFZEJRVWsyU1N4NVFrRkJNRUlzUTBGRGJFUjRSeXhOUVVGUGNrTXNSMEZCU1cxS0xGbEJRVmtzUlVGQlQwTXNWVUZCVlN4RlFVRlBReXhqUVVGakxFbEJSWGhFY2tvc1IwRkhWQ3hUUVVGVFFTeExRVkZRTEVsQlVFRXNTVUZCU1hOS0xHVkJRV2RDUXl4alFVTm9Ra01zVVVGQlZTeEpRVUZKUXl4UlFVRlJMRk5CUVZWRExGRkJRVk5ETEZGQlF6TkRUQ3hsUVVGcFFra3NVVUZEYWtKSUxHTkJRV2RDU1N4VFFVZGtlRXNzUzBGQlR5eEhRVU5HWWl4RlFVRkpMRVZCUVVkQkxFVkJRVWxUTEZWQlFWVlNMRTlCUVZGRUxFbEJRM0JEWVN4TFFVRkxTQ3hMUVVGTFJDeFZRVUZWVkN4SlFVVjBRbUVzUzBGQlMwZ3NTMEZCU3l4VFFVRlZORXNzU1VGQlMzWklMRTlCUTI1Q2RVZ3NTVUZEUmt3c1kwRkJZMHNzUzBGRlpFNHNaVUZCWldwSUxGTkJTVzVDTEVsQlEwVXlSeXhUUVVGVE5Va3NUVUZCVFVNc1MwRkJUV3hDTEUxQlEzSkNMRTFCUVU5NVN5eExRVU5RVEN4alFVRmpTeXhMUVVkb1FpeFBRVUZQU2l4UlFWRlVMRTlCVEVGMFRDeFBRVUZQTWt3c1pVRkJaVGRLTEVkQlFVazVRaXhQUVVGUE5Fd3NaVUZCWldRc1YwRkZOVU5JTERCQ1FVRXdRak5MTEU5QlFVOW5UQ3hsUVVGbGJFb3NSMEZCU1RaSkxIbENRVUV3UWl4RFFVTm9SbmhITEUxQlFVOXlReXhIUVVGSmJVb3NXVUZCV1N4RlFVRlBReXhWUVVGVkxFVkJRVTlETEdOQlFXTXNTVUZGZUVSdVRDeFBRVUZQTmt3c2FVSkJRMW92U2l4SFFVTkJMMElzTUVKQlFUQkNLMHNzV1VGSk9VSjBTeXhSUVVGUmNVc3NWVUZCVldsQ0xFOUJRVk51UWl4NVFrRnBSRE5DYmtzc1VVRkJVWFZNTEZsQmJFTlNMRk5CUVhGQ2FrSXNWVUZEYmtJc1IwRkJkMElzYlVKQlFXSkJMRk5CUTFRc1RVRkJUU3hKUVVGSlF5eFZRVUZWTEc5RVFVMTBRaXhUUVVGVGFVSXNaMEpCUlZBc1NVRkVRU3hKUVVGSkwwc3NTMEZCVHl4SFFVTkdZaXhGUVVGSkxFVkJRVWRCTEVWQlFVbFRMRlZCUVZWU0xFOUJRVkZFTEVsQlEzQkRZU3hMUVVGTFNDeExRVUZMUkN4VlFVRlZWQ3hKUVVkMFFpeEpRVUZKTmt3c1VVRkJWV2hNTEV0QlFVdDVSaXhOUVVOdVFpeEhRVUYxUWl4dFFrRkJXblZHTEZGQlExUXNUVUZCVFN4SlFVRkpiRUlzVlVGQlZTdzRRMEZGZEVJc1NVRkJTVzFDTEV0QlFVOHZTaXhMUVVOUVowc3NSMEZCU3l4WFFVTlFMRTlCUVU5R0xGRkJRVkV2U2l4TlFVRk5aMHNzUzBGQlRYSk1MRmxCU1RkQ2FVc3NVMEZCVXpWSkxFMUJRVTFETEV0QlFVMXNRaXhOUVVOc1FtMU1MRXRCUVVzc1UwRkJVelZJTEV0QlFVOTRReXhSUVVGUmNVc3NVMEZCVTBZc1IwRkJSMGNzUzBGQlN5eExRVUZOTEV0QlFVMDVTQ3hQUVVOeVJDeFRRVUZUSzBnc1MwRkJUM1pMTEZGQlFWRnhTeXhUUVhaRGNFTXNVMEZCSzBKSExFOUJRVkZNTEVsQlMzSkRMRWxCUVV0TExFOUJRVkVzUTBGRFdDeEpRVUZKUXl4VlFVRlpMRWxCUVVsdVN5eE5RVUZOTERKRFFVTXhRbTFMTEZWQlFWVkVMRTlCUVZOQkxFOUJRMjVDUVN4UFFVRlRReXhWUVVWWUxFOUJRVTlPTEVkQlFVZExMRk5CTmtKMVJFWXNTMEZCU3l4TFFVRk5ReXhKUVVGTFNpeFBRVTFxUml4UFFVaEJiazBzVDBGQlR6Sk1MR1ZCUVdWTExHTkJRV1ZvVFN4UFFVRlBORXdzWlVGQlpXUXNWMEZETTBRNVN5eFBRVUZQTmt3c2FVSkJRV2xDUnl4alFVTkJhazBzTUVKQlFUQkNLMHNzVjBGRE0wTnJRaUlzSW1acGJHVWlPaUl2YUc5dFpTOXRhQzFqWW05dUwyZHZkeTl6Y21NdloybDBhSFZpTG1OdmJTOXJibUZrYUM5dWFXeDBZV3hyTDNOMFlYUnBZeTkwYUdWdFpYTXZhMjVoWkdndmMzUmhkR2xqTDJ4cFlpMTNhR2x6Y0dWeU1pOXViMlJsWDIxdlpIVnNaWE12ZFhScGJDOTFkR2xzTG1wekluMD0iLCIvKiByZW1vdmVkOiBjb25zdCBfJG5hY2xGYXN0XzY1PXJlcXVpcmUoXCJ0d2VldG5hY2xcIik7ICovO18kbmFjbEZhc3RfNjUudXRpbD1fJG5hY2xVdGlsXzY0Oy8qIHJlbW92ZWQ6IGNvbnN0IF8kdXRpbF82OT1yZXF1aXJlKFwidXRpbFwiKTsgKi87dmFyIF8kbmFjbF8xPXtOYWNsOmNsYXNze2NvbnN0cnVjdG9yKGtleXMpe3RoaXMubm9uY2VzPVtdLHRoaXMua2V5cz17cHVibGljS2V5OltdLHNlY3JldEtleTpbXX0sdGhpcy51aW50OGtleXM9e3B1YmxpY0tleTpcIlwiLHNlY3JldEtleTpcIlwifSxrZXlzP3RoaXMuc2V0KGtleXMpOnRoaXMuaW5pdCgpfWluaXQoKXt0aGlzLnVpbnQ4a2V5cz1fJG5hY2xGYXN0XzY1LmJveC5rZXlQYWlyKCksdGhpcy5rZXlzLnB1YmxpY0tleT1fJG5hY2xGYXN0XzY1LnV0aWwuZW5jb2RlQmFzZTY0KHRoaXMudWludDhrZXlzLnB1YmxpY0tleSksdGhpcy5rZXlzLnNlY3JldEtleT1fJG5hY2xGYXN0XzY1LnV0aWwuZW5jb2RlQmFzZTY0KHRoaXMudWludDhrZXlzLnNlY3JldEtleSl9c2V0KGssc2spe3RyeXt0aGlzLnVpbnQ4a2V5cy5wdWJsaWNLZXk9XyRuYWNsRmFzdF82NS51dGlsLmRlY29kZUJhc2U2NChrLnB1YmxpY0tleSksdGhpcy51aW50OGtleXMuc2VjcmV0S2V5PV8kbmFjbEZhc3RfNjUudXRpbC5kZWNvZGVCYXNlNjQoay5zZWNyZXRLZXkpLHRoaXMua2V5cz1rfWNhdGNoKGUpe3RoaXMua2V5cy5wdWJsaWNLZXk9XyRuYWNsRmFzdF82NS51dGlsLmVuY29kZUJhc2U2NChrLnB1YmxpY0tleSksdGhpcy5rZXlzLnNlY3JldEtleT1fJG5hY2xGYXN0XzY1LnV0aWwuZW5jb2RlQmFzZTY0KGsuc2VjcmV0S2V5KSx0aGlzLnVpbnQ4a2V5cz1rfX1nZXQoKXtyZXR1cm57cHVibGljS2V5OnRoaXMua2V5cy5wdWJsaWNLZXksc2VjcmV0S2V5OnRoaXMua2V5cy5zZWNyZXRLZXl9fW5ld05vbmNlKCl7Zm9yKHRoaXMubm9uY2VzLmxlbmd0aD41MDAmJnRoaXMubm9uY2VzLnNsaWNlKDUwMCx0aGlzLm5vbmNlcy5sZW5ndGgtNTAwKTs7KXtjb25zdCBub25jZT1fJG5hY2xGYXN0XzY1LnJhbmRvbUJ5dGVzKF8kbmFjbEZhc3RfNjUuc2VjcmV0Ym94Lm5vbmNlTGVuZ3RoKSxibm9uY2U9XyRuYWNsRmFzdF82NS51dGlsLmVuY29kZUJhc2U2NChub25jZSk7aWYoIXRoaXMubm9uY2VzLmluY2x1ZGVzKGJub25jZSkpcmV0dXJuIHRoaXMubm9uY2VzLnB1c2goYm5vbmNlKSxibm9uY2V9fWhhc2gocm9vbUlELHJvb21Qd2QsZCxtZVB1YktleUI2NCl7dmFyIGFyZ3M9QXJyYXkuZnJvbShhcmd1bWVudHMpO25ldyBfJHV0aWxfNjkuVGV4dEVuY29kZXI7Y29uc3Qgc2hhT2JqPW5ldyBfJHNoYV8yNihcIlNIQS01MTJcIixcIlRFWFRcIix7ZW5jb2Rpbmc6XCJVVEY4XCJ9KTthcmdzLm1hcChhPT57c2hhT2JqLnVwZGF0ZShhKX0pO2NvbnN0IGhhc2g9c2hhT2JqLmdldEhhc2goXCJVSU5UOEFSUkFZXCIpO3JldHVybiBfJG5hY2xGYXN0XzY1LnV0aWwuZW5jb2RlQmFzZTY0KGhhc2gpfWVuY3J5cHQoZGF0YSxub25jZWI2NCxyZW1vdGVQdWJLZXlCNjQpe2NvbnN0IGJkYXRhPV8kbmFjbEZhc3RfNjUudXRpbC5kZWNvZGVVVEY4KGRhdGEpLG5vbmNlPV8kbmFjbEZhc3RfNjUudXRpbC5kZWNvZGVCYXNlNjQobm9uY2ViNjQpLHJlbW90ZVB1YktleT1fJG5hY2xGYXN0XzY1LnV0aWwuZGVjb2RlQmFzZTY0KHJlbW90ZVB1YktleUI2NCksY3J5cHRlZD1fJG5hY2xGYXN0XzY1LmJveChiZGF0YSxub25jZSxyZW1vdGVQdWJLZXksdGhpcy51aW50OGtleXMuc2VjcmV0S2V5KTtyZXR1cm4gXyRuYWNsRmFzdF82NS51dGlsLmVuY29kZUJhc2U2NChjcnlwdGVkKX1kZWNyeXB0KGRhdGFiNjQsbm9uY2ViNjQscmVtb3RlUHViS2V5QjY0KXtjb25zdCBkYXRhPV8kbmFjbEZhc3RfNjUudXRpbC5kZWNvZGVCYXNlNjQoZGF0YWI2NCksbm9uY2U9XyRuYWNsRmFzdF82NS51dGlsLmRlY29kZUJhc2U2NChub25jZWI2NCkscmVtb3RlUHViS2V5PV8kbmFjbEZhc3RfNjUudXRpbC5kZWNvZGVCYXNlNjQocmVtb3RlUHViS2V5QjY0KSxtc2c9XyRuYWNsRmFzdF82NS5ib3gub3BlbihkYXRhLG5vbmNlLHJlbW90ZVB1YktleSx0aGlzLnVpbnQ4a2V5cy5zZWNyZXRLZXkpO3JldHVybiBfJG5hY2xGYXN0XzY1LnV0aWwuZW5jb2RlVVRGOChtc2cpfXB1YmxpY0tleSgpe3JldHVybiB0aGlzLmtleXMucHVibGljS2V5fX19O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTVoWTJ3dWFuTWlYU3dpYm1GdFpYTWlPbHNpYm1GamJDSXNJblYwYVd3aUxDSnlaWEYxYVhKbElpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SXNJazVoWTJ3aUxDSmJiMkpxWldOMElFOWlhbVZqZEYwaUxDSnJaWGx6SWl3aWRHaHBjeUlzSW01dmJtTmxjeUlzSW5CMVlteHBZMHRsZVNJc0luTmxZM0psZEV0bGVTSXNJblZwYm5RNGEyVjVjeUlzSW5ObGRDSXNJbWx1YVhRaUxDSmliM2dpTENKclpYbFFZV2x5SWl3aVpXNWpiMlJsUW1GelpUWTBJaXdpYXlJc0luTnJJaXdpWkdWamIyUmxRbUZ6WlRZMElpd2laU0lzSW14bGJtZDBhQ0lzSW5Oc2FXTmxJaXdpYm05dVkyVWlMQ0p5WVc1a2IyMUNlWFJsY3lJc0luTmxZM0psZEdKdmVDSXNJbTV2Ym1ObFRHVnVaM1JvSWl3aVltNXZibU5sSWl3aWFXNWpiSFZrWlhNaUxDSndkWE5vSWl3aWNtOXZiVWxFSWl3aWNtOXZiVkIzWkNJc0ltUWlMQ0p0WlZCMVlrdGxlVUkyTkNJc0ltRnlaM01pTENKQmNuSmhlU0lzSW1aeWIyMGlMQ0poY21kMWJXVnVkSE1pTENKVVpYaDBSVzVqYjJSbGNpSXNJbk5vWVU5aWFpSXNJbXB6VTBoQklpd2laVzVqYjJScGJtY2lMQ0p0WVhBaUxDSmhJaXdpZFhCa1lYUmxJaXdpYUdGemFDSXNJbWRsZEVoaGMyZ2lMQ0prWVhSaElpd2libTl1WTJWaU5qUWlMQ0p5WlcxdmRHVlFkV0pMWlhsQ05qUWlMQ0ppWkdGMFlTSXNJbVJsWTI5a1pWVlVSamdpTENKeVpXMXZkR1ZRZFdKTFpYa2lMQ0pqY25sd2RHVmtJaXdpWkdGMFlXSTJOQ0lzSW0xelp5SXNJbTl3Wlc0aUxDSmxibU52WkdWVlZFWTRJbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3g1UkVGRlFVRXNZVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCVDBNc1lVRkJVU3hEUVVOd1FpeG5SRUUwUmtGRExGbEJRVTlETEVOQlFWVXNRMEZCUlVNc1NVRkJRVUVzUTBFeFJtNUNMRXRCUVVFc1EwRkRSVU1zVjBGQlFVRXNRMEZCV1VNc1NVRkJRVUVzUTBGQlFVRXNRMEZEVmtNc1NVRkJRVUVzUTBGQlMwTXNUVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJRMlJFTEVsQlFVRkJMRU5CUVV0RUxFbEJRVUZCTEVOQlFVOHNRMEZEVmtjc1UwRkJRVUVzUTBGQlZ5eEZRVUZCTEVOQlExaERMRk5CUVVGQkxFTkJRVmNzUlVGQlFTeERRVUZCTEVOQlJXSklMRWxCUVVGQkxFTkJRVXRKTEZOQlFVRkJMRU5CUVZrc1EwRkRaa1lzVTBGQlFVRXNRMEZCVnl4RlFVRkJMRU5CUTFoRExGTkJRVUZCTEVOQlFWY3NSVUZCUVN4RFFVRkJMRU5CUlZSS0xFbEJRVUZCTEVOQlEwWkRMRWxCUVVGQkxFTkJRVXRMTEVkQlFVRkJMRU5CUVVsT0xFbEJRVUZCTEVOQlFVRkJMRU5CUlZSRExFbEJRVUZCTEVOQlFVdE5MRWxCUVVGQkxFVkJRVUZCTEVOQlNWUlNMRWxCUVVGQkxFVkJRVUZCTEVOQlEwVkZMRWxCUVVGQkxFTkJRVXRKTEZOQlFVRkJMRU5CUVZsYUxHRkJRVUZCTEVOQlFVdGxMRWRCUVVGQkxFTkJRVWxETEU5QlFVRkJMRVZCUVVGQkxFTkJRekZDVWl4SlFVRkJRU3hEUVVGTFJDeEpRVUZCUVN4RFFVRkxSeXhUUVVGQlFTeERRVUZaVml4aFFVRkJRU3hEUVVGTFF5eEpRVUZCUVN4RFFVRkxaMElzV1VGQlFVRXNRMEZCWVZRc1NVRkJRVUVzUTBGQlMwa3NVMEZCUVVFc1EwRkJWVVlzVTBGQlFVRXNRMEZCUVVFc1EwRkROVVJHTEVsQlFVRkJMRU5CUVV0RUxFbEJRVUZCTEVOQlFVdEpMRk5CUVVGQkxFTkJRVmxZTEdGQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVdG5RaXhaUVVGQlFTeERRVUZoVkN4SlFVRkJRU3hEUVVGTFNTeFRRVUZCUVN4RFFVRlZSQ3hUUVVGQlFTeERRVUZCUVN4RFFVYzVSRXdzUjBGQlFVRXNRMEZCU1Zrc1EwRkJRVUVzUTBGQlIwTXNSVUZCUVVFc1EwRkJRVUVzUTBGRFRDeEhRVUZCTEVOQlEwVllMRWxCUVVGQkxFTkJRVXRKTEZOQlFVRkJMRU5CUVZWR0xGTkJRVUZCTEVOQlFWbFdMR0ZCUVVGQkxFTkJRVXRETEVsQlFVRkJMRU5CUVV0dFFpeFpRVUZCUVN4RFFVRmhSaXhEUVVGQlFTeERRVUZGVWl4VFFVRkJRU3hEUVVGQlFTeERRVU53UkVZc1NVRkJRVUVzUTBGQlMwa3NVMEZCUVVFc1EwRkJWVVFzVTBGQlFVRXNRMEZCV1Znc1lVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkJTMjFDTEZsQlFVRkJMRU5CUVdGR0xFTkJRVUZCTEVOQlFVVlFMRk5CUVVGQkxFTkJRVUZCTEVOQlEzQkVTQ3hKUVVGQlFTeERRVUZMUkN4SlFVRkJRU3hEUVVGUFZ5eERRVUZCUVN4RFFVTmlMRTFCUVUxSExFTkJRVUZCTEVOQlFVRkJMRU5CUTB4aUxFbEJRVUZCTEVOQlFVdEVMRWxCUVVGQkxFTkJRVXRITEZOQlFVRkJMRU5CUVZsV0xHRkJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXRuUWl4WlFVRkJRU3hEUVVGaFF5eERRVUZCUVN4RFFVRkZVaXhUUVVGQlFTeERRVUZCUVN4RFFVTXZRMFlzU1VGQlFVRXNRMEZCUzBRc1NVRkJRVUVzUTBGQlMwa3NVMEZCUVVFc1EwRkJXVmdzWVVGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlMyZENMRmxCUVVGQkxFTkJRV0ZETEVOQlFVRkJMRU5CUVVWUUxGTkJRVUZCTEVOQlFVRkJMRU5CUXk5RFNDeEpRVUZCUVN4RFFVRkxTU3hUUVVGQlFTeERRVUZaVFN4RFFVRkJRU3hEUVVGQlFTeERRVWx5UWxvc1IwRkJRVUVzUlVGQlFVRXNRMEZEUlN4TlFVRlBMRU5CUTB4SkxGTkJRVUZCTEVOQlFWZEdMRWxCUVVGQkxFTkJRVXRFTEVsQlFVRkJMRU5CUVV0SExGTkJRVUZCTEVOQlEzSkNReXhUUVVGQlFTeERRVUZYU0N4SlFVRkJRU3hEUVVGTFJDeEpRVUZCUVN4RFFVRkxTU3hUUVVGQlFTeERRVUZCUVN4RFFVbDZRa3dzVVVGQlFVRXNSVUZCUVVFc1EwRkpSU3hKUVVoSlJTeEpRVUZCUVN4RFFVRkxReXhOUVVGQlFTeERRVUZQWVN4TlFVRkJRU3hEUVVGVExFZEJRVUVzUlVGRGRrSmtMRWxCUVVGQkxFTkJRVXRETEUxQlFVRkJMRU5CUVU5akxFdEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkxaaXhKUVVGQlFTeERRVUZMUXl4TlFVRkJRU3hEUVVGUFlTeE5RVUZCUVN4RFFVRlBMRWRCUVVFc1EwRkJRU3hIUVVWb1F5eERRVU5XTEUxQlFVMUZMRXRCUVVGQkxFTkJRVkY0UWl4aFFVRkJRU3hEUVVGTGVVSXNWMEZCUVVFc1EwRkJXWHBDTEdGQlFVRkJMRU5CUVVzd1FpeFRRVUZCUVN4RFFVRlZReXhYUVVGQlFTeERRVUZCUVN4RFFVTjRRME1zVFVGQlFVRXNRMEZCVXpWQ0xHRkJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXRuUWl4WlFVRkJRU3hEUVVGaFR5eExRVUZCUVN4RFFVRkJRU3hEUVVOMFF5eEhRVUZCTEVOQlFVdG9RaXhKUVVGQlFTeERRVUZMUXl4TlFVRkJRU3hEUVVGUGIwSXNVVUZCUVVFc1EwRkJVMFFzVFVGQlFVRXNRMEZCUVVFc1EwRkZlRUlzVDBGRVFYQkNMRWxCUVVGQkxFTkJRVXRETEUxQlFVRkJMRU5CUVU5eFFpeEpRVUZCUVN4RFFVRkxSaXhOUVVGQlFTeERRVUZCUVN4RFFVTldRU3hOUVVGQlFTeERRVUZCUVN4RFFVMWlkRUlzU1VGQlFVRXNRMEZCUzNsQ0xFMUJRVUZCTEVOQlFWRkRMRTlCUVVGQkxFTkJRVk5ETEVOQlFVRkJMRU5CUVVkRExGZEJRVUZCTEVOQlFVRkJMRU5CUTNaQ0xFbEJRVWxETEVsQlFVRkJMRU5CUVU5RExFdEJRVUZCTEVOQlFVMURMRWxCUVVGQkxFTkJRVXRETEZOQlFVRkJMRU5CUVVGQkxFTkJRMDRzU1VGQlNYSkRMRk5CUVVGQkxFTkJRVXR6UXl4WFFVRkJRU3hEUVVGNlFpeE5RVU5OUXl4TlFVRkJRU3hEUVVGVExFbEJRVWxETEZGQlFVRkJMRU5CUVUwc1UwRkJRU3hEUVVGWExFMUJRVUVzUTBGQlVTeERRVUZGUXl4UlFVRkJRU3hEUVVGVkxFMUJRVUVzUTBGQlFTeERRVUZCTEVOQlEzaEVVQ3hKUVVGQlFTeERRVUZMVVN4SFFVRkJRU3hEUVVGTFF5eERRVUZCUVN4RlFVRkJRU3hEUVVOU1NpeE5RVUZCUVN4RFFVRlBTeXhOUVVGQlFTeERRVUZQUkN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVWb1FpeE5RVUZOUlN4SlFVRkJRU3hEUVVGUFRpeE5RVUZCUVN4RFFVRlBUeXhQUVVGQlFTeERRVUZSTEZsQlFVRXNRMEZCUVN4RFFVTTFRaXhQUVVGUEwwTXNZVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCUzJkQ0xGbEJRVUZCTEVOQlFXRTJRaXhKUVVGQlFTeERRVUZCUVN4RFFVZG9RM2hETEU5QlFVRkJMRU5CUVZFd1F5eEpRVUZCUVN4RFFVRk5ReXhSUVVGQlFTeERRVUZWUXl4bFFVRkJRU3hEUVVGQlFTeERRVU4wUWl4TlFVRk5ReXhMUVVGQlFTeERRVUZSYmtRc1lVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkJTMjFFTEZWQlFVRkJMRU5CUVZkS0xFbEJRVUZCTEVOQlFVRkJMRU5CUXpkQ2VFSXNTMEZCUVVFc1EwRkJVWGhDTEdGQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVdHRRaXhaUVVGQlFTeERRVUZoTmtJc1VVRkJRVUVzUTBGQlFVRXNRMEZETDBKSkxGbEJRVUZCTEVOQlFXVnlSQ3hoUVVGQlFTeERRVUZMUXl4SlFVRkJRU3hEUVVGTGJVSXNXVUZCUVVFc1EwRkJZVGhDTEdWQlFVRkJMRU5CUVVGQkxFTkJRM1JEU1N4UFFVRkJRU3hEUVVGVmRFUXNZVUZCUVVFc1EwRkJTMlVzUjBGQlFVRXNRMEZCU1c5RExFdEJRVUZCTEVOQlFVOHpRaXhMUVVGQlFTeERRVUZQTmtJc1dVRkJRVUVzUTBGQll6ZERMRWxCUVVGQkxFTkJRVXRKTEZOQlFVRkJMRU5CUVZWRUxGTkJRVUZCTEVOQlFVRkJMRU5CUTNCRkxFOUJRVTlZTEdGQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVdG5RaXhaUVVGQlFTeERRVUZoY1VNc1QwRkJRVUVzUTBGQlFVRXNRMEZIYUVOb1JDeFBRVUZCUVN4RFFVRlJhVVFzVDBGQlFVRXNRMEZCVTA0c1VVRkJRVUVzUTBGQlZVTXNaVUZCUVVFc1EwRkJRVUVzUTBGRGVrSXNUVUZCVFVZc1NVRkJRVUVzUTBGQlQyaEVMR0ZCUVVGQkxFTkJRVXRETEVsQlFVRkJMRU5CUVV0dFFpeFpRVUZCUVN4RFFVRmhiVU1zVDBGQlFVRXNRMEZCUVVFc1EwRkRPVUl2UWl4TFFVRkJRU3hEUVVGUmVFSXNZVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCUzIxQ0xGbEJRVUZCTEVOQlFXRTJRaXhSUVVGQlFTeERRVUZCUVN4RFFVTXZRa2tzV1VGQlFVRXNRMEZCWlhKRUxHRkJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXR0UWl4WlFVRkJRU3hEUVVGaE9FSXNaVUZCUVVFc1EwRkJRVUVzUTBGRGRFTk5MRWRCUVVGQkxFTkJRVTE0UkN4aFFVRkJRU3hEUVVGTFpTeEhRVUZCUVN4RFFVRkpNRU1zU1VGQlFVRXNRMEZCUzFRc1NVRkJRVUVzUTBGQlRYaENMRXRCUVVGQkxFTkJRVTgyUWl4WlFVRkJRU3hEUVVGak4wTXNTVUZCUVVFc1EwRkJTMGtzVTBGQlFVRXNRMEZCVlVRc1UwRkJRVUVzUTBGQlFVRXNRMEZEY0VVc1QwRkJUMWdzWVVGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlMzbEVMRlZCUVVGQkxFTkJRVmRHTEVkQlFVRkJMRU5CUVVGQkxFTkJSemxDYkVRc1UwRkJRVUVzUlVGQlFVRXNRMEZEUlN4UFFVRlBSU3hKUVVGQlFTeERRVUZMUkN4SlFVRkJRU3hEUVVGTFJ5eFRRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiYm5Wc2JGMTkiLCJ2YXIgXyRiYXNlNjRKc181ID0ge307XG5cInVzZSBzdHJpY3RcIjsvKiBjb21tb24tc2hha2UgcmVtb3ZlZDogZXhwb3J0cy5ieXRlTGVuZ3RoID0gKi8gdm9pZCAwLCBmdW5jdGlvbihiNjQpe3ZhciBsZW5zPWdldExlbnMoYjY0KSx2YWxpZExlbj1sZW5zWzBdLHBsYWNlSG9sZGVyc0xlbj1sZW5zWzFdO3JldHVybiAzKih2YWxpZExlbitwbGFjZUhvbGRlcnNMZW4pLzQtcGxhY2VIb2xkZXJzTGVufSxfJGJhc2U2NEpzXzUudG9CeXRlQXJyYXk9ZnVuY3Rpb24oYjY0KXt2YXIgdG1wLGksbGVucz1nZXRMZW5zKGI2NCksdmFsaWRMZW49bGVuc1swXSxwbGFjZUhvbGRlcnNMZW49bGVuc1sxXSxhcnI9bmV3IEFycihmdW5jdGlvbihiNjQsdmFsaWRMZW4scGxhY2VIb2xkZXJzTGVuKXtyZXR1cm4gMyoodmFsaWRMZW4rcGxhY2VIb2xkZXJzTGVuKS80LXBsYWNlSG9sZGVyc0xlbn0oMCx2YWxpZExlbixwbGFjZUhvbGRlcnNMZW4pKSxjdXJCeXRlPTAsbGVuPXBsYWNlSG9sZGVyc0xlbj4wP3ZhbGlkTGVuLTQ6dmFsaWRMZW47Zm9yKGk9MDtpPGxlbjtpKz00KXRtcD1yZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldPDwxOHxyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSsxKV08PDEyfHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKzIpXTw8NnxyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSszKV0sYXJyW2N1ckJ5dGUrK109dG1wPj4xNiYyNTUsYXJyW2N1ckJ5dGUrK109dG1wPj44JjI1NSxhcnJbY3VyQnl0ZSsrXT0yNTUmdG1wOzI9PT1wbGFjZUhvbGRlcnNMZW4mJih0bXA9cmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXTw8MnxyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSsxKV0+PjQsYXJyW2N1ckJ5dGUrK109MjU1JnRtcCk7MT09PXBsYWNlSG9sZGVyc0xlbiYmKHRtcD1yZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldPDwxMHxyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSsxKV08PDR8cmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkrMildPj4yLGFycltjdXJCeXRlKytdPXRtcD4+OCYyNTUsYXJyW2N1ckJ5dGUrK109MjU1JnRtcCk7cmV0dXJuIGFycn0sXyRiYXNlNjRKc181LmZyb21CeXRlQXJyYXk9ZnVuY3Rpb24odWludDgpe2Zvcih2YXIgdG1wLGxlbj11aW50OC5sZW5ndGgsZXh0cmFCeXRlcz1sZW4lMyxwYXJ0cz1bXSxpPTAsbGVuMj1sZW4tZXh0cmFCeXRlcztpPGxlbjI7aSs9MTYzODMpcGFydHMucHVzaChlbmNvZGVDaHVuayh1aW50OCxpLGkrMTYzODM+bGVuMj9sZW4yOmkrMTYzODMpKTsxPT09ZXh0cmFCeXRlcz8odG1wPXVpbnQ4W2xlbi0xXSxwYXJ0cy5wdXNoKGxvb2t1cFt0bXA+PjJdK2xvb2t1cFt0bXA8PDQmNjNdK1wiPT1cIikpOjI9PT1leHRyYUJ5dGVzJiYodG1wPSh1aW50OFtsZW4tMl08PDgpK3VpbnQ4W2xlbi0xXSxwYXJ0cy5wdXNoKGxvb2t1cFt0bXA+PjEwXStsb29rdXBbdG1wPj40JjYzXStsb29rdXBbdG1wPDwyJjYzXStcIj1cIikpO3JldHVybiBwYXJ0cy5qb2luKFwiXCIpfTtmb3IodmFyIGxvb2t1cD1bXSxyZXZMb29rdXA9W10sQXJyPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBVaW50OEFycmF5P1VpbnQ4QXJyYXk6QXJyYXksY29kZT1cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIixpPTAsbGVuPWNvZGUubGVuZ3RoO2k8bGVuOysraSlsb29rdXBbaV09Y29kZVtpXSxyZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXT1pO2Z1bmN0aW9uIGdldExlbnMoYjY0KXt2YXIgbGVuPWI2NC5sZW5ndGg7aWYobGVuJTQ+MCl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHN0cmluZy4gTGVuZ3RoIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA0XCIpO3ZhciB2YWxpZExlbj1iNjQuaW5kZXhPZihcIj1cIik7cmV0dXJuLTE9PT12YWxpZExlbiYmKHZhbGlkTGVuPWxlbiksW3ZhbGlkTGVuLHZhbGlkTGVuPT09bGVuPzA6NC12YWxpZExlbiU0XX1mdW5jdGlvbiBlbmNvZGVDaHVuayh1aW50OCxzdGFydCxlbmQpe2Zvcih2YXIgdG1wLG51bSxvdXRwdXQ9W10saT1zdGFydDtpPGVuZDtpKz0zKXRtcD0odWludDhbaV08PDE2JjE2NzExNjgwKSsodWludDhbaSsxXTw8OCY2NTI4MCkrKDI1NSZ1aW50OFtpKzJdKSxvdXRwdXQucHVzaChsb29rdXBbKG51bT10bXApPj4xOCY2M10rbG9va3VwW251bT4+MTImNjNdK2xvb2t1cFtudW0+PjYmNjNdK2xvb2t1cFs2MyZudW1dKTtyZXR1cm4gb3V0cHV0LmpvaW4oXCJcIil9cmV2TG9va3VwW1wiLVwiLmNoYXJDb2RlQXQoMCldPTYyLHJldkxvb2t1cFtcIl9cIi5jaGFyQ29kZUF0KDApXT02MztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1sdVpHVjRMbXB6SWwwc0ltNWhiV1Z6SWpwYkltVjRjRzl5ZEhNaUxDSmlOalFpTENKc1pXNXpJaXdpWjJWMFRHVnVjeUlzSW5aaGJHbGtUR1Z1SWl3aWNHeGhZMlZJYjJ4a1pYSnpUR1Z1SWl3aWRHOUNlWFJsUVhKeVlYa2lMQ0owYlhBaUxDSnBJaXdpWVhKeUlpd2lRWEp5SWl3aVgySjVkR1ZNWlc1bmRHZ2lMQ0pqZFhKQ2VYUmxJaXdpYkdWdUlpd2ljbVYyVEc5dmEzVndJaXdpWTJoaGNrTnZaR1ZCZENJc0ltWnliMjFDZVhSbFFYSnlZWGtpTENKMWFXNTBPQ0lzSW14bGJtZDBhQ0lzSW1WNGRISmhRbmwwWlhNaUxDSndZWEowY3lJc0lteGxiaklpTENKd2RYTm9JaXdpWlc1amIyUmxRMmgxYm1zaUxDSnNiMjlyZFhBaUxDSnFiMmx1SWl3aVZXbHVkRGhCY25KaGVTSXNJa0Z5Y21GNUlpd2lZMjlrWlNJc0lrVnljbTl5SWl3aWFXNWtaWGhQWmlJc0luTjBZWEowSWl3aVpXNWtJaXdpYm5WdElpd2liM1YwY0hWMElsMHNJbTFoY0hCcGJtZHpJam9pTzBGQlFVRXNXVUZCUVN4RFFVVkJRU3hwUkVGQlFVRXNTMEZCUVVFc1EwRkJRVUVzUlVGMVEwRXNVMEZCY1VKRExFZEJRVUZCTEVOQlFVRkJMRU5CUTI1Q0xFbEJRVWxETEVsQlFVRkJMRU5CUVU5RExFOUJRVUZCTEVOQlFWRkdMRWRCUVVGQkxFTkJRVUZCTEVOQlEyWkhMRkZCUVVGQkxFTkJRVmRHTEVsQlFVRkJMRU5CUVVzc1EwRkJRU3hEUVVGQkxFTkJRMmhDUnl4bFFVRkJRU3hEUVVGclFrZ3NTVUZCUVVFc1EwRkJTeXhEUVVGQkxFTkJRVUVzUTBGRE0wSXNUMEZCZFVNc1EwRkJRU3hGUVVFNVFrVXNVVUZCUVVFc1EwRkJWME1zWlVGQlFVRXNRMEZCUVVFc1EwRkJkVUlzUTBGQlFTeERRVUZMUVN4bFFVRkJRU3hEUVVGQlFTeERRVEZEYkVSTUxGbEJRVUZCTEVOQlFWRk5MRmRCUVVGQkxFTkJhVVJTTEZOQlFYTkNUQ3hIUVVGQlFTeERRVUZCUVN4RFFVTndRaXhKUVVGSlRTeEhRVUZCUVN4RFFXTkJReXhEUVVGQlFTeERRV0pCVGl4SlFVRkJRU3hEUVVGUFF5eFBRVUZCUVN4RFFVRlJSaXhIUVVGQlFTeERRVUZCUVN4RFFVTm1SeXhSUVVGQlFTeERRVUZYUml4SlFVRkJRU3hEUVVGTExFTkJRVUVzUTBGQlFTeERRVU5vUWtjc1pVRkJRVUVzUTBGQmEwSklMRWxCUVVGQkxFTkJRVXNzUTBGQlFTeERRVUZCTEVOQlJYWkNUeXhIUVVGQlFTeERRVUZOTEVsQlFVbERMRWRCUVVGQkxFTkJWbWhDTEZOQlFYTkNWQ3hIUVVGQlFTeERRVUZMUnl4UlFVRkJRU3hEUVVGVlF5eGxRVUZCUVN4RFFVRkJRU3hEUVVOdVF5eFBRVUYxUXl4RFFVRkJMRVZCUVRsQ1JDeFJRVUZCUVN4RFFVRlhReXhsUVVGQlFTeERRVUZCUVN4RFFVRjFRaXhEUVVGQkxFTkJRVXRCTEdWQlFVRkJMRU5CVXpsQ1RTeERRVUZaVml4RFFVRkJRU3hEUVVGTFJ5eFJRVUZCUVN4RFFVRlZReXhsUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVWNlEwOHNUMEZCUVVFc1EwRkJWU3hEUVVGQkxFTkJSMVpETEVkQlFVRkJMRU5CUVUxU0xHVkJRVUZCTEVOQlFXdENMRU5CUVVFc1EwRkRlRUpFTEZGQlFVRkJMRU5CUVZjc1EwRkJRU3hEUVVOWVFTeFJRVUZCUVN4RFFVZEtMRWxCUVV0SkxFTkJRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkhRU3hEUVVGQlFTeERRVUZKU3l4SFFVRkJRU3hEUVVGTFRDeERRVUZCUVN4RlFVRkxMRU5CUVVFc1EwRkRlRUpFTEVkQlFVRkJMRU5CUTBkUExGTkJRVUZCTEVOQlFWVmlMRWRCUVVGQkxFTkJRVWxqTEZWQlFVRkJMRU5CUVZkUUxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVThzUlVGQlFTeERRVU5vUTAwc1UwRkJRVUVzUTBGQlZXSXNSMEZCUVVFc1EwRkJTV01zVlVGQlFVRXNRMEZCVjFBc1EwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVRXNRMEZCUVN4RlFVRlBMRVZCUVVFc1EwRkRjRU5OTEZOQlFVRkJMRU5CUVZWaUxFZEJRVUZCTEVOQlFVbGpMRlZCUVVGQkxFTkJRVmRRTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGQkxFTkJRVUVzUlVGQlR5eERRVUZCTEVOQlEzSkRUU3hUUVVGQlFTeERRVUZWWWl4SFFVRkJRU3hEUVVGSll5eFZRVUZCUVN4RFFVRlhVQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUXk5Q1F5eEhRVUZCUVN4RFFVRkpSeXhQUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGalRDeEhRVUZCUVN4RlFVRlBMRVZCUVVFc1EwRkJUU3hIUVVGQkxFTkJReTlDUlN4SFFVRkJRU3hEUVVGSlJ5eFBRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZqVEN4SFFVRkJRU3hGUVVGUExFTkJRVUVzUTBGQlN5eEhRVUZCTEVOQlF6bENSU3hIUVVGQlFTeERRVUZKUnl4UFFVRkJRU3hGUVVGQlFTeERRVUZCUVN4RFFVRnRRaXhIUVVGQkxFTkJRVTVNTEVkQlFVRkJMRU5CUjBzc1EwRkJRU3hIUVVGd1FrWXNaVUZCUVVFc1IwRkRSa1VzUjBGQlFVRXNRMEZEUjA4c1UwRkJRVUVzUTBGQlZXSXNSMEZCUVVFc1EwRkJTV01zVlVGQlFVRXNRMEZCVjFBc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkJUeXhEUVVGQkxFTkJRMmhEVFN4VFFVRkJRU3hEUVVGVllpeEhRVUZCUVN4RFFVRkpZeXhWUVVGQlFTeERRVUZYVUN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlFTeERRVUZCTEVWQlFVOHNRMEZCUVN4RFFVTjJRME1zUjBGQlFVRXNRMEZCU1Vjc1QwRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJiVUlzUjBGQlFTeERRVUZPVEN4SFFVRkJRU3hEUVVGQlFTeERRVWRMTEVOQlFVRXNSMEZCY0VKR0xHVkJRVUZCTEVkQlEwWkZMRWRCUVVGQkxFTkJRMGRQTEZOQlFVRkJMRU5CUVZWaUxFZEJRVUZCTEVOQlFVbGpMRlZCUVVGQkxFTkJRVmRRTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVWQlFVOHNSVUZCUVN4RFFVTm9RMDBzVTBGQlFVRXNRMEZCVldJc1IwRkJRVUVzUTBGQlNXTXNWVUZCUVVFc1EwRkJWMUFzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJRU3hGUVVGUExFTkJRVUVzUTBGRGNFTk5MRk5CUVVGQkxFTkJRVlZpTEVkQlFVRkJMRU5CUVVsakxGVkJRVUZCTEVOQlFWZFFMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVRXNSVUZCVHl4RFFVRkJMRU5CUTNaRFF5eEhRVUZCUVN4RFFVRkpSeXhQUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGalRDeEhRVUZCUVN4RlFVRlBMRU5CUVVFc1EwRkJTeXhIUVVGQkxFTkJRemxDUlN4SFFVRkJRU3hEUVVGSlJ5eFBRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRVUZ0UWl4SFFVRkJMRU5CUVU1TUxFZEJRVUZCTEVOQlFVRkJMRU5CUjI1Q0xFOUJRVTlGTEVkQlFVRkJMRU5CUVVGQkxFTkJNMFpVVkN4WlFVRkJRU3hEUVVGUlowSXNZVUZCUVVFc1EwRnJTRklzVTBGQmQwSkRMRXRCUVVGQkxFTkJRVUZCTEVOQlVYUkNMRWxCVUVFc1NVRkJTVllzUjBGQlFVRXNRMEZEUVUwc1IwRkJRVUVzUTBGQlRVa3NTMEZCUVVFc1EwRkJUVU1zVFVGQlFVRXNRMEZEV2tNc1ZVRkJRVUVzUTBGQllVNHNSMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRMjVDVHl4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGSlNGb3NRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRoTEVsQlFVRkJMRU5CUVU5U0xFZEJRVUZCTEVOQlFVMU5MRlZCUVVGQkxFTkJRVmxZTEVOQlFVRkJMRU5CUVVsaExFbEJRVUZCTEVOQlFVMWlMRU5CUVVGQkxFVkJTRGxDTEV0QlFVRXNRMEZKYmtKWkxFdEJRVUZCTEVOQlFVMUZMRWxCUVVGQkxFTkJRVXRETEZkQlFVRkJMRU5CUTFST0xFdEJRVUZCTEVOQlFVOVVMRU5CUVVGQkxFTkJRVWxCTEVOQlFVRkJMRU5CVEUwc1MwRkJRU3hEUVV0blFtRXNTVUZCUVVFc1EwRkJUMEVzU1VGQlFVRXNRMEZCVVdJc1EwRkJRVUVzUTBGTUwwSXNTMEZCUVN4RFFVRkJMRU5CUVVFc1EwRlZSaXhEUVVGQkxFZEJRV1pYTEZWQlFVRkJMRVZCUTBaYUxFZEJRVUZCTEVOQlFVMVZMRXRCUVVGQkxFTkJRVTFLTEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJRMnhDVHl4TFFVRkJRU3hEUVVGTlJTeEpRVUZCUVN4RFFVTktSU3hOUVVGQlFTeERRVUZQYWtJc1IwRkJRVUVzUlVGQlR5eERRVUZCTEVOQlFVRXNRMEZEWkdsQ0xFMUJRVUZCTEVOQlFWRnFRaXhIUVVGQlFTeEZRVUZQTEVOQlFVRXNRMEZCU3l4RlFVRkJMRU5CUVVFc1EwRkRjRUlzU1VGQlFTeERRVUZCTEVWQlJYTkNMRU5CUVVFc1IwRkJabGtzVlVGQlFVRXNSMEZEVkZvc1IwRkJRVUVzUTBGQlFVRXNRMEZCVDFVc1MwRkJRVUVzUTBGQlRVb3NSMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVUVzUlVGQlRTeERRVUZCTEVWQlFVdEpMRXRCUVVGQkxFTkJRVTFLTEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJRekZEVHl4TFFVRkJRU3hEUVVGTlJTeEpRVUZCUVN4RFFVTktSU3hOUVVGQlFTeERRVUZQYWtJc1IwRkJRVUVzUlVGQlR5eEZRVUZCTEVOQlFVRXNRMEZEWkdsQ0xFMUJRVUZCTEVOQlFWRnFRaXhIUVVGQlFTeEZRVUZQTEVOQlFVRXNRMEZCU3l4RlFVRkJMRU5CUVVFc1EwRkRjRUpwUWl4TlFVRkJRU3hEUVVGUmFrSXNSMEZCUVVFc1JVRkJUeXhEUVVGQkxFTkJRVXNzUlVGQlFTeERRVUZCTEVOQlEzQkNMRWRCUVVFc1EwRkJRU3hEUVVGQkxFTkJTVW9zVDBGQlQyRXNTMEZCUVVFc1EwRkJUVXNzU1VGQlFVRXNRMEZCU3l4RlFVRkJMRU5CUVVFc1EwRkJRU3hEUVROSmNFSXNTVUZNUVN4SlFVRkpSQ3hOUVVGQlFTeERRVUZUTEVWQlFVRXNRMEZEVkZZc1UwRkJRVUVzUTBGQldTeEZRVUZCTEVOQlExcEtMRWRCUVVGQkxFTkJRVFJDTEZkQlFVRXNSVUZCUVN4UFFVRm1aMElzVlVGQlFVRXNRMEZCTmtKQkxGVkJRVUZCTEVOQlFXRkRMRXRCUVVGQkxFTkJSWFpFUXl4SlFVRkJRU3hEUVVGUExHdEZRVUZCTEVOQlEwWndRaXhEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjBzc1IwRkJRVUVzUTBGQlRXVXNTVUZCUVVFc1EwRkJTMVlzVFVGQlFVRXNRMEZCVVZZc1EwRkJRVUVzUTBGQlNVc3NSMEZCUVVFc1EwRkJRVUVzUlVGQlQwd3NRMEZCUVVFc1EwRkROVU5uUWl4TlFVRkJRU3hEUVVGUGFFSXNRMEZCUVVFc1EwRkJRVUVzUTBGQlMyOUNMRWxCUVVGQkxFTkJRVXR3UWl4RFFVRkJRU3hEUVVGQlFTeERRVU5xUWswc1UwRkJRVUVzUTBGQlZXTXNTVUZCUVVFc1EwRkJTMklzVlVGQlFVRXNRMEZCVjFBc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJUVUVzUTBGQlFVRXNRMEZSYkVNc1UwRkJVMHdzVDBGQlFVRXNRMEZCVTBZc1IwRkJRVUVzUTBGQlFVRXNRMEZEYUVJc1NVRkJTVmtzUjBGQlFVRXNRMEZCVFZvc1IwRkJRVUVzUTBGQlNXbENMRTFCUVVGQkxFTkJSV1FzUjBGQlNVd3NSMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWtzUTBGQlFTeERRVU5hTEUxQlFVMHNTVUZCU1dkQ0xFdEJRVUZCTEVOQlFVMHNaMFJCUVVFc1EwRkJRU3hEUVV0c1FpeEpRVUZKZWtJc1VVRkJRVUVzUTBGQlYwZ3NSMEZCUVVFc1EwRkJTVFpDTEU5QlFVRkJMRU5CUVZFc1IwRkJRU3hEUVVGQkxFTkJUek5DTEUxQlFVRXNRMEZPYTBJc1EwRkJRU3hIUVVGa01VSXNVVUZCUVVFc1IwRkJhVUpCTEZGQlFVRkJMRU5CUVZkVExFZEJRVUZCTEVOQlFVRkJMRU5CVFhwQ0xFTkJRVU5VTEZGQlFVRkJMRU5CU21OQkxGRkJRVUZCTEVkQlFXRlRMRWRCUVVGQkxFTkJReTlDTEVOQlFVRXNRMEZEUVN4RFFVRkJMRU5CUVV0VUxGRkJRVUZCTEVOQlFWY3NRMEZCUVN4RFFVRkJMRU5CYzBWMFFpeFRRVUZUYlVJc1YwRkJRVUVzUTBGQllVNHNTMEZCUVVFc1EwRkJUMk1zUzBGQlFVRXNRMEZCVDBNc1IwRkJRVUVzUTBGQlFVRXNRMEZIYkVNc1NVRkdRU3hKUVVGSmVrSXNSMEZCUVVFc1EwRlNiMEl3UWl4SFFVRkJRU3hEUVZOd1FrTXNUVUZCUVVFc1EwRkJVeXhGUVVGQkxFTkJRMG94UWl4RFFVRkJRU3hEUVVGSmRVSXNTMEZCUVVFc1EwRkJUM1pDTEVOQlFVRkJMRU5CUVVsM1FpeEhRVUZCUVN4RFFVRkxlRUlzUTBGQlFVRXNSVUZCU3l4RFFVRkJMRU5CUTJoRFJDeEhRVUZCUVN4RFFVRkJRU3hEUVVOSlZTeExRVUZCUVN4RFFVRk5WQ3hEUVVGQlFTeERRVUZCUVN4RlFVRk5MRVZCUVVFc1EwRkJUU3hSUVVGQkxFZEJRMnhDVXl4TFFVRkJRU3hEUVVGTlZDeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkJRU3hGUVVGTkxFTkJRVUVzUTBGQlN5eExRVUZCTEVOQlFVRXNSVUZEVUN4SFFVRkJMRU5CUVdaVExFdEJRVUZCTEVOQlFVMVVMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZEWWpCQ0xFMUJRVUZCTEVOQlFVOWFMRWxCUVVGQkxFTkJaRVpGTEUxQlFVRkJMRU5CUVVGQkxFTkJSR2xDVXl4SFFVRkJRU3hEUVdWTk1VSXNSMEZCUVVFc1IwRmtWQ3hGUVVGQkxFTkJRVXNzUlVGQlFTeERRVUZCTEVOQlEzaENhVUlzVFVGQlFVRXNRMEZCVDFNc1IwRkJRVUVzUlVGQlR5eEZRVUZCTEVOQlFVc3NSVUZCUVN4RFFVRkJMRU5CUTI1Q1ZDeE5RVUZCUVN4RFFVRlBVeXhIUVVGQlFTeEZRVUZQTEVOQlFVRXNRMEZCU1N4RlFVRkJMRU5CUVVFc1EwRkRiRUpVTEUxQlFVRkJMRU5CUVdFc1JVRkJRU3hEUVVGT1V5eEhRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRV0ZVTEU5QlFVOURMRTFCUVVGQkxFTkJRVTlVTEVsQlFVRkJMRU5CUVVzc1JVRkJRU3hEUVVGQkxFTkJha2R5UWxnc1UwRkJRVUVzUTBGQlZTeEhRVUZCTEVOQlFVbERMRlZCUVVGQkxFTkJRVmNzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCVFN4RlFVRkJMRU5CUXk5Q1JDeFRRVUZCUVN4RFFVRlZMRWRCUVVFc1EwRkJTVU1zVlVGQlFVRXNRMEZCVnl4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGTkxFVkJRVUVzUTBGQlFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJiblZzYkYxOSIsInZhciBfJF9lbXB0eV83ID0ge307XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYlhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWlJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYlhYMD0iLCJ2YXIgXyRzdHJlYW1Ccm93c2VyXzQxPV8kZXZlbnRzXzEzLkV2ZW50RW1pdHRlcjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OMGNtVmhiUzFpY205M2MyVnlMbXB6SWwwc0ltNWhiV1Z6SWpwYkltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaUxDSnlaWEYxYVhKbElpd2lSWFpsYm5SRmJXbDBkR1Z5SWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVVFc2MwSkJRVTlETEVOQlFWVkRMRmRCUVZFc1EwRkJWVU1zV1VGQlFVRXNRMEZCUVVFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNlcyNTFiR3hkZlE9PSIsInZhciBfJGllZWU3NTRfMTkgPSB7fTtcbl8kaWVlZTc1NF8xOS5yZWFkPWZ1bmN0aW9uKGJ1ZmZlcixvZmZzZXQsaXNMRSxtTGVuLG5CeXRlcyl7dmFyIGUsbSxlTGVuPTgqbkJ5dGVzLW1MZW4tMSxlTWF4PSgxPDxlTGVuKS0xLGVCaWFzPWVNYXg+PjEsbkJpdHM9LTcsaT1pc0xFP25CeXRlcy0xOjAsZD1pc0xFPy0xOjEscz1idWZmZXJbb2Zmc2V0K2ldO2ZvcihpKz1kLGU9cyYoMTw8LW5CaXRzKS0xLHM+Pj0tbkJpdHMsbkJpdHMrPWVMZW47bkJpdHM+MDtlPTI1NiplK2J1ZmZlcltvZmZzZXQraV0saSs9ZCxuQml0cy09OCk7Zm9yKG09ZSYoMTw8LW5CaXRzKS0xLGU+Pj0tbkJpdHMsbkJpdHMrPW1MZW47bkJpdHM+MDttPTI1NiptK2J1ZmZlcltvZmZzZXQraV0saSs9ZCxuQml0cy09OCk7aWYoMD09PWUpZT0xLWVCaWFzO2Vsc2V7aWYoZT09PWVNYXgpcmV0dXJuIG0/TmFOOjEvMCoocz8tMToxKTttKz1NYXRoLnBvdygyLG1MZW4pLGUtPWVCaWFzfXJldHVybihzPy0xOjEpKm0qTWF0aC5wb3coMixlLW1MZW4pfSxfJGllZWU3NTRfMTkud3JpdGU9ZnVuY3Rpb24oYnVmZmVyLHZhbHVlLG9mZnNldCxpc0xFLG1MZW4sbkJ5dGVzKXt2YXIgZSxtLGMsZUxlbj04Km5CeXRlcy1tTGVuLTEsZU1heD0oMTw8ZUxlbiktMSxlQmlhcz1lTWF4Pj4xLHJ0PTIzPT09bUxlbj9NYXRoLnBvdygyLC0yNCktTWF0aC5wb3coMiwtNzcpOjAsaT1pc0xFPzA6bkJ5dGVzLTEsZD1pc0xFPzE6LTEscz12YWx1ZTwwfHwwPT09dmFsdWUmJjEvdmFsdWU8MD8xOjA7Zm9yKHZhbHVlPU1hdGguYWJzKHZhbHVlKSxpc05hTih2YWx1ZSl8fHZhbHVlPT09MS8wPyhtPWlzTmFOKHZhbHVlKT8xOjAsZT1lTWF4KTooZT1NYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKS9NYXRoLkxOMiksdmFsdWUqKGM9TWF0aC5wb3coMiwtZSkpPDEmJihlLS0sYyo9MiksKHZhbHVlKz1lK2VCaWFzPj0xP3J0L2M6cnQqTWF0aC5wb3coMiwxLWVCaWFzKSkqYz49MiYmKGUrKyxjLz0yKSxlK2VCaWFzPj1lTWF4PyhtPTAsZT1lTWF4KTplK2VCaWFzPj0xPyhtPSh2YWx1ZSpjLTEpKk1hdGgucG93KDIsbUxlbiksZSs9ZUJpYXMpOihtPXZhbHVlKk1hdGgucG93KDIsZUJpYXMtMSkqTWF0aC5wb3coMixtTGVuKSxlPTApKTttTGVuPj04O2J1ZmZlcltvZmZzZXQraV09MjU1Jm0saSs9ZCxtLz0yNTYsbUxlbi09OCk7Zm9yKGU9ZTw8bUxlbnxtLGVMZW4rPW1MZW47ZUxlbj4wO2J1ZmZlcltvZmZzZXQraV09MjU1JmUsaSs9ZCxlLz0yNTYsZUxlbi09OCk7YnVmZmVyW29mZnNldCtpLWRdfD0xMjgqc307XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltbHVaR1Y0TG1weklsMHNJbTVoYldWeklqcGJJbVY0Y0c5eWRITWlMQ0p5WldGa0lpd2lZblZtWm1WeUlpd2liMlptYzJWMElpd2lhWE5NUlNJc0ltMU1aVzRpTENKdVFubDBaWE1pTENKbElpd2liU0lzSW1WTVpXNGlMQ0psVFdGNElpd2laVUpwWVhNaUxDSnVRbWwwY3lJc0lta2lMQ0prSWl3aWN5SXNJazVoVGlJc0lrbHVabWx1YVhSNUlpd2lUV0YwYUNJc0luQnZkeUlzSW5keWFYUmxJaXdpZG1Gc2RXVWlMQ0pqSWl3aWNuUWlMQ0poWW5NaUxDSnBjMDVoVGlJc0ltWnNiMjl5SWl3aWJHOW5JaXdpVEU0eUlsMHNJbTFoY0hCcGJtZHpJam9pTzBGQlFVRkJMRmxCUVVGQkxFTkJRVkZETEVsQlFVRkJMRU5CUVU4c1UwRkJWVU1zVFVGQlFVRXNRMEZCVVVNc1RVRkJRVUVzUTBGQlVVTXNTVUZCUVVFc1EwRkJUVU1zU1VGQlFVRXNRMEZCVFVNc1RVRkJRVUVzUTBGQlFVRXNRMEZEYmtRc1NVRkJTVU1zUTBGQlFVRXNRMEZCUjBNc1EwRkJRVUVzUTBGRFNFTXNTVUZCUVVFc1EwRkJhVUlzUTBGQlFTeERRVUZVU0N4TlFVRkJRU3hEUVVGalJDeEpRVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkROMEpMTEVsQlFVRkJMRU5CUVVGQkxFTkJRVkVzUTBGQlFTeEZRVUZMUkN4SlFVRkJRU3hGUVVGUkxFTkJRVUVzUTBGRGNrSkZMRXRCUVVGQkxFTkJRVkZFTEVsQlFVRkJMRVZCUVZFc1EwRkJRU3hEUVVOb1FrVXNTMEZCUVVFc1EwRkJRVUVzUTBGQlV5eERRVUZCTEVOQlExUkRMRU5CUVVGQkxFTkJRVWxVTEVsQlFVRkJMRU5CUVZGRkxFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkxMRU5CUVVFc1EwRkRNVUpSTEVOQlFVRkJMRU5CUVVsV0xFbEJRVUZCTEVOQlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVGSkxFTkJRVUVzUTBGRGFFSlhMRU5CUVVGQkxFTkJRVWxpTEUxQlFVRkJMRU5CUVU5RExFMUJRVUZCTEVOQlFWTlZMRU5CUVVGQkxFTkJRVUZCTEVOQlQzaENMRWxCVEVGQkxFTkJRVUZCTEVWQlFVdERMRU5CUVVGQkxFTkJSVXhRTEVOQlFVRkJMRU5CUVVsUkxFTkJRVUZCTEVOQlFVRkJMRU5CUVUwc1EwRkJRU3hGUVVGQkxFTkJRVTlJTEV0QlFVRkJMRVZCUVZVc1EwRkJRU3hEUVVNelFrY3NRMEZCUVVFc1IwRkJRVUVzUTBGQlVVZ3NTMEZCUVVFc1EwRkRVa0VzUzBGQlFVRXNSVUZCVTBnc1NVRkJRVUVzUTBGRFJrY3NTMEZCUVVFc1EwRkJVU3hEUVVGQkxFTkJRVWRNTEVOQlFVRkJMRU5CUVZNc1IwRkJRU3hEUVVGS1FTeERRVUZCUVN4RFFVRlhUQ3hOUVVGQlFTeERRVUZQUXl4TlFVRkJRU3hEUVVGVFZTeERRVUZCUVN4RFFVRkJRU3hEUVVGSlFTeERRVUZCUVN4RlFVRkxReXhEUVVGQlFTeERRVUZIUml4TFFVRkJRU3hGUVVGVExFTkJRVUVzUTBGQlFTeERRVXQyUlN4SlFVaEJTaXhEUVVGQlFTeERRVUZKUkN4RFFVRkJRU3hEUVVGQlFTeERRVUZOTEVOQlFVRXNSVUZCUVN4RFFVRlBTeXhMUVVGQlFTeEZRVUZWTEVOQlFVRXNRMEZETTBKTUxFTkJRVUZCTEVkQlFVRkJMRU5CUVZGTExFdEJRVUZCTEVOQlExSkJMRXRCUVVGQkxFVkJRVk5RTEVsQlFVRkJMRU5CUTBaUExFdEJRVUZCTEVOQlFWRXNRMEZCUVN4RFFVRkhTaXhEUVVGQlFTeERRVUZUTEVkQlFVRXNRMEZCU2tFc1EwRkJRVUVzUTBGQlYwNHNUVUZCUVVFc1EwRkJUME1zVFVGQlFVRXNRMEZCVTFVc1EwRkJRVUVzUTBGQlFVRXNRMEZCU1VFc1EwRkJRVUVzUlVGQlMwTXNRMEZCUVVFc1EwRkJSMFlzUzBGQlFVRXNSVUZCVXl4RFFVRkJMRU5CUVVFc1EwRkZka1VzUjBGQlZTeERRVUZCTEVkQlFVNU1MRU5CUVVGQkxFTkJRMFpCTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSlNTeExRVUZCUVN4RFFVRkJRU3hKUVVOSUxFTkJRVUVzUjBGQlNVb3NRMEZCUVVFc1IwRkJUVWNzU1VGQlFVRXNRMEZEWml4UFFVRlBSaXhEUVVGQlFTeERRVUZKVVN4SFFVRkJRU3hEUVVGelFrTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNSVUZCWkVZc1EwRkJRVUVzUTBGQlFVRXNRMEZCU3l4RFFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGQkxFTkJSVFZDVUN4RFFVRkJRU3hGUVVGUlZTeEpRVUZCUVN4RFFVRkxReXhIUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUjJRc1NVRkJRVUVzUTBGQlFVRXNRMEZEY0VKRkxFTkJRVUZCTEVWQlFWRkpMRXRCUVVGQkxFTkJSVllzVFVGQlFTeERRVUZSU1N4RFFVRkJRU3hEUVVGQlFTeERRVUZMTEVOQlFVRXNRMEZCU1N4RFFVRkJMRVZCUVV0UUxFTkJRVUZCTEVOQlFVbFZMRWxCUVVGQkxFTkJRVXRETEVkQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFdpeERRVUZCUVN4RFFVRkpSaXhKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVjMVEwd3NXVUZCUVVFc1EwRkJVVzlDTEV0QlFVRkJMRU5CUVZFc1UwRkJWV3hDTEUxQlFVRkJMRU5CUVZGdFFpeExRVUZCUVN4RFFVRlBiRUlzVFVGQlFVRXNRMEZCVVVNc1NVRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJUVU1zVFVGQlFVRXNRMEZCUVVFc1EwRkRNMFFzU1VGQlNVTXNRMEZCUVVFc1EwRkJSME1zUTBGQlFVRXNRMEZCUjJNc1EwRkJRVUVzUTBGRFRtSXNTVUZCUVVFc1EwRkJhVUlzUTBGQlFTeERRVUZVU0N4TlFVRkJRU3hEUVVGalJDeEpRVUZCUVN4RFFVRlBMRU5CUVVFc1EwRkROMEpMTEVsQlFVRkJMRU5CUVVGQkxFTkJRVkVzUTBGQlFTeEZRVUZMUkN4SlFVRkJRU3hGUVVGUkxFTkJRVUVzUTBGRGNrSkZMRXRCUVVGQkxFTkJRVkZFTEVsQlFVRkJMRVZCUVZFc1EwRkJRU3hEUVVOb1FtRXNSVUZCUVVFc1EwRkJaU3hGUVVGQkxFZEJRVlJzUWl4SlFVRkJRU3hEUVVGallTeEpRVUZCUVN4RFFVRkxReXhIUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUVN4RFFVRkpMRVZCUVVFc1EwRkJRU3hEUVVGTlJDeEpRVUZCUVN4RFFVRkxReXhIUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUVN4RFFVRkpMRVZCUVVFc1EwRkJRU3hEUVVGTkxFTkJRVUVzUTBGRE1VUk9MRU5CUVVGQkxFTkJRVWxVTEVsQlFVRkJMRU5CUVU4c1EwRkJRU3hEUVVGTFJTeE5RVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkRla0pSTEVOQlFVRkJMRU5CUVVsV0xFbEJRVUZCTEVOQlFVOHNRMEZCUVN4RFFVRkJMRU5CUVVzc1EwRkJRU3hEUVVOb1FsY3NRMEZCUVVFc1EwRkJTVTBzUzBGQlFVRXNRMEZCVVN4RFFVRkJMRVZCUVdkQ0xFTkJRVUVzUjBGQlZrRXNTMEZCUVVFc1JVRkJaU3hEUVVGQkxFTkJRVWxCTEV0QlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVGTExFTkJRVUVzUTBGQlNTeERRVUZCTEVOQmJVTXhSQ3hKUVdwRFFVRXNTMEZCUVVFc1EwRkJVVWdzU1VGQlFVRXNRMEZCUzAwc1IwRkJRVUVzUTBGQlNVZ3NTMEZCUVVFc1EwRkJRVUVzUTBGRllra3NTMEZCUVVFc1EwRkJUVW9zUzBGQlFVRXNRMEZCUVVFc1JVRkJWVUVzUzBGQlFVRXNSMEZCVlVvc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1JVRkROVUpVTEVOQlFVRkJMRU5CUVVscFFpeExRVUZCUVN4RFFVRk5TaXhMUVVGQlFTeERRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJTU3hEUVVGQkxFTkJRM1pDWkN4RFFVRkJRU3hEUVVGSlJ5eEpRVUZCUVN4SFFVVktTQ3hEUVVGQlFTeERRVUZKVnl4SlFVRkJRU3hEUVVGTFVTeExRVUZCUVN4RFFVRk5VaXhKUVVGQlFTeERRVUZMVXl4SFFVRkJRU3hEUVVGSlRpeExRVUZCUVN4RFFVRkJRU3hEUVVGVFNDeEpRVUZCUVN4RFFVRkxWU3hIUVVGQlFTeERRVUZCUVN4RFFVTnNRMUFzUzBGQlFVRXNSVUZCVTBNc1EwRkJRVUVzUTBGQlNVb3NTVUZCUVVFc1EwRkJTME1zUjBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVFc1EwRkJTVm9zUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlRTeERRVUZCTEVkQlEyeERRU3hEUVVGQlFTeEZRVUZCUVN4RFFVTkJaU3hEUVVGQlFTeEZRVUZMTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUjB4RUxFdEJRVUZCTEVWQlJFVmtMRU5CUVVGQkxFTkJRVWxKTEV0QlFVRkJMRVZCUVZNc1EwRkJRU3hEUVVOT1dTeEZRVUZCUVN4RFFVRkxSQ3hEUVVGQlFTeERRVVZNUXl4RlFVRkJRU3hEUVVGTFRDeEpRVUZCUVN4RFFVRkxReXhIUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUnl4RFFVRkJMRU5CUVVsU0xFdEJRVUZCTEVOQlFVRkJMRVZCUlhCQ1Z5eERRVUZCUVN4RlFVRkxMRU5CUVVFc1IwRkRabVlzUTBGQlFVRXNSVUZCUVVFc1EwRkRRV1VzUTBGQlFVRXNSVUZCU3l4RFFVRkJMRU5CUVVFc1EwRkhTR1lzUTBGQlFVRXNRMEZCU1Vrc1MwRkJRVUVzUlVGQlUwUXNTVUZCUVVFc1JVRkRaa1lzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUTBwRUxFTkJRVUZCTEVOQlFVbEhMRWxCUVVGQkxFVkJRMHRJTEVOQlFVRkJMRU5CUVVsSkxFdEJRVUZCTEVWQlFWTXNRMEZCUVN4RlFVTjBRa2dzUTBGQlFVRXNRMEZCUVVFc1EwRkJUV0VzUzBGQlFVRXNRMEZCVVVNc1EwRkJRVUVzUTBGQlN5eERRVUZCTEVWQlFVdEtMRWxCUVVGQkxFTkJRVXRETEVkQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFpDeEpRVUZCUVN4RFFVRkJRU3hEUVVOd1EwVXNRMEZCUVVFc1JVRkJVVWtzUzBGQlFVRXNSMEZGVWtnc1EwRkJRVUVzUTBGQlNXRXNTMEZCUVVFc1EwRkJVVWdzU1VGQlFVRXNRMEZCUzBNc1IwRkJRVUVzUTBGQlNTeERRVUZCTEVOQlFVZFNMRXRCUVVGQkxFTkJRVkVzUTBGQlFTeERRVUZCTEVOQlFVdFBMRWxCUVVGQkxFTkJRVXRETEVkQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFpDeEpRVUZCUVN4RFFVRkJRU3hEUVVOcVJFVXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVWxFUml4SlFVRkJRU3hGUVVGUkxFTkJRVUVzUTBGQlIwZ3NUVUZCUVVFc1EwRkJUME1zVFVGQlFVRXNRMEZCVTFVc1EwRkJRVUVzUTBGQlFVRXNRMEZCVXl4SFFVRkJMRU5CUVVwTUxFTkJRVUZCTEVOQlFWVkxMRU5CUVVGQkxFVkJRVXRETEVOQlFVRkJMRU5CUVVkT0xFTkJRVUZCTEVWQlFVc3NSMEZCUVN4RFFVRkxTQ3hKUVVGQlFTeEZRVUZSTEVOQlFVRXNRMEZCUVN4RFFVa3pSU3hKUVVaQlJTeERRVUZCUVN4RFFVRkxRU3hEUVVGQlFTeEZRVUZMUml4SlFVRkJRU3hEUVVGUlJ5eERRVUZCUVN4RFFVTnNRa01zU1VGQlFVRXNSVUZCVVVvc1NVRkJRVUVzUTBGRFJFa3NTVUZCUVVFc1EwRkJUeXhEUVVGQkxFTkJRVWRRTEUxQlFVRkJMRU5CUVU5RExFMUJRVUZCTEVOQlFWTlZMRU5CUVVGQkxFTkJRVUZCTEVOQlFWTXNSMEZCUVN4RFFVRktUaXhEUVVGQlFTeERRVUZWVFN4RFFVRkJRU3hGUVVGTFF5eERRVUZCUVN4RFFVRkhVQ3hEUVVGQlFTeEZRVUZMTEVkQlFVRXNRMEZCUzBVc1NVRkJRVUVzUlVGQlVTeERRVUZCTEVOQlFVRXNRMEZGTVVWUUxFMUJRVUZCTEVOQlFVOURMRTFCUVVGQkxFTkJRVk5WTEVOQlFVRkJMRU5CUVVsRExFTkJRVUZCTEVOQlFVRkJMRVZCUVZVc1IwRkJRU3hEUVVGS1F5eERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJiblZzYkYxOSIsIlwidXNlIHN0cmljdFwiO2Z1bmN0aW9uIG93bktleXMob2JqZWN0LGVudW1lcmFibGVPbmx5KXt2YXIga2V5cz1PYmplY3Qua2V5cyhvYmplY3QpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBzeW1ib2xzPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTtlbnVtZXJhYmxlT25seSYmKHN5bWJvbHM9c3ltYm9scy5maWx0ZXIoZnVuY3Rpb24oc3ltKXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3Qsc3ltKS5lbnVtZXJhYmxlfSkpLGtleXMucHVzaC5hcHBseShrZXlzLHN5bWJvbHMpfXJldHVybiBrZXlzfWZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosa2V5LHZhbHVlKXtyZXR1cm4ga2V5IGluIG9iaj9PYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLGtleSx7dmFsdWU6dmFsdWUsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTpvYmpba2V5XT12YWx1ZSxvYmp9ZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LHByb3BzKXtmb3IodmFyIGk9MDtpPHByb3BzLmxlbmd0aDtpKyspe3ZhciBkZXNjcmlwdG9yPXByb3BzW2ldO2Rlc2NyaXB0b3IuZW51bWVyYWJsZT1kZXNjcmlwdG9yLmVudW1lcmFibGV8fCExLGRlc2NyaXB0b3IuY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIGRlc2NyaXB0b3ImJihkZXNjcmlwdG9yLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGRlc2NyaXB0b3Iua2V5LGRlc2NyaXB0b3IpfX12YXIgQnVmZmVyPV8kYnVmZmVyXzgoe30pLkJ1ZmZlcixpbnNwZWN0PV8kZW1wdHlfNih7fSkuaW5zcGVjdCxjdXN0b209aW5zcGVjdCYmaW5zcGVjdC5jdXN0b218fFwiaW5zcGVjdFwiO3ZhciBfJGJ1ZmZlcl9saXN0XzM1PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gQnVmZmVyTGlzdCgpeyFmdW5jdGlvbihpbnN0YW5jZSxDb25zdHJ1Y3Rvcil7aWYoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLEJ1ZmZlckxpc3QpLHRoaXMuaGVhZD1udWxsLHRoaXMudGFpbD1udWxsLHRoaXMubGVuZ3RoPTB9dmFyIENvbnN0cnVjdG9yLHByb3RvUHJvcHMsc3RhdGljUHJvcHM7cmV0dXJuIENvbnN0cnVjdG9yPUJ1ZmZlckxpc3QsKHByb3RvUHJvcHM9W3trZXk6XCJwdXNoXCIsdmFsdWU6ZnVuY3Rpb24odil7dmFyIGVudHJ5PXtkYXRhOnYsbmV4dDpudWxsfTt0aGlzLmxlbmd0aD4wP3RoaXMudGFpbC5uZXh0PWVudHJ5OnRoaXMuaGVhZD1lbnRyeSx0aGlzLnRhaWw9ZW50cnksKyt0aGlzLmxlbmd0aH19LHtrZXk6XCJ1bnNoaWZ0XCIsdmFsdWU6ZnVuY3Rpb24odil7dmFyIGVudHJ5PXtkYXRhOnYsbmV4dDp0aGlzLmhlYWR9OzA9PT10aGlzLmxlbmd0aCYmKHRoaXMudGFpbD1lbnRyeSksdGhpcy5oZWFkPWVudHJ5LCsrdGhpcy5sZW5ndGh9fSx7a2V5Olwic2hpZnRcIix2YWx1ZTpmdW5jdGlvbigpe2lmKDAhPT10aGlzLmxlbmd0aCl7dmFyIHJldD10aGlzLmhlYWQuZGF0YTtyZXR1cm4gMT09PXRoaXMubGVuZ3RoP3RoaXMuaGVhZD10aGlzLnRhaWw9bnVsbDp0aGlzLmhlYWQ9dGhpcy5oZWFkLm5leHQsLS10aGlzLmxlbmd0aCxyZXR9fX0se2tleTpcImNsZWFyXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmhlYWQ9dGhpcy50YWlsPW51bGwsdGhpcy5sZW5ndGg9MH19LHtrZXk6XCJqb2luXCIsdmFsdWU6ZnVuY3Rpb24ocyl7aWYoMD09PXRoaXMubGVuZ3RoKXJldHVyblwiXCI7Zm9yKHZhciBwPXRoaXMuaGVhZCxyZXQ9XCJcIitwLmRhdGE7cD1wLm5leHQ7KXJldCs9cytwLmRhdGE7cmV0dXJuIHJldH19LHtrZXk6XCJjb25jYXRcIix2YWx1ZTpmdW5jdGlvbihuKXtpZigwPT09dGhpcy5sZW5ndGgpcmV0dXJuIEJ1ZmZlci5hbGxvYygwKTtmb3IodmFyIHNyYyx0YXJnZXQsb2Zmc2V0LHJldD1CdWZmZXIuYWxsb2NVbnNhZmUobj4+PjApLHA9dGhpcy5oZWFkLGk9MDtwOylzcmM9cC5kYXRhLHRhcmdldD1yZXQsb2Zmc2V0PWksQnVmZmVyLnByb3RvdHlwZS5jb3B5LmNhbGwoc3JjLHRhcmdldCxvZmZzZXQpLGkrPXAuZGF0YS5sZW5ndGgscD1wLm5leHQ7cmV0dXJuIHJldH19LHtrZXk6XCJjb25zdW1lXCIsdmFsdWU6ZnVuY3Rpb24obixoYXNTdHJpbmdzKXt2YXIgcmV0O3JldHVybiBuPHRoaXMuaGVhZC5kYXRhLmxlbmd0aD8ocmV0PXRoaXMuaGVhZC5kYXRhLnNsaWNlKDAsbiksdGhpcy5oZWFkLmRhdGE9dGhpcy5oZWFkLmRhdGEuc2xpY2UobikpOnJldD1uPT09dGhpcy5oZWFkLmRhdGEubGVuZ3RoP3RoaXMuc2hpZnQoKTpoYXNTdHJpbmdzP3RoaXMuX2dldFN0cmluZyhuKTp0aGlzLl9nZXRCdWZmZXIobikscmV0fX0se2tleTpcImZpcnN0XCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oZWFkLmRhdGF9fSx7a2V5OlwiX2dldFN0cmluZ1wiLHZhbHVlOmZ1bmN0aW9uKG4pe3ZhciBwPXRoaXMuaGVhZCxjPTEscmV0PXAuZGF0YTtmb3Iobi09cmV0Lmxlbmd0aDtwPXAubmV4dDspe3ZhciBzdHI9cC5kYXRhLG5iPW4+c3RyLmxlbmd0aD9zdHIubGVuZ3RoOm47aWYobmI9PT1zdHIubGVuZ3RoP3JldCs9c3RyOnJldCs9c3RyLnNsaWNlKDAsbiksMD09PShuLT1uYikpe25iPT09c3RyLmxlbmd0aD8oKytjLHAubmV4dD90aGlzLmhlYWQ9cC5uZXh0OnRoaXMuaGVhZD10aGlzLnRhaWw9bnVsbCk6KHRoaXMuaGVhZD1wLHAuZGF0YT1zdHIuc2xpY2UobmIpKTticmVha30rK2N9cmV0dXJuIHRoaXMubGVuZ3RoLT1jLHJldH19LHtrZXk6XCJfZ2V0QnVmZmVyXCIsdmFsdWU6ZnVuY3Rpb24obil7dmFyIHJldD1CdWZmZXIuYWxsb2NVbnNhZmUobikscD10aGlzLmhlYWQsYz0xO2ZvcihwLmRhdGEuY29weShyZXQpLG4tPXAuZGF0YS5sZW5ndGg7cD1wLm5leHQ7KXt2YXIgYnVmPXAuZGF0YSxuYj1uPmJ1Zi5sZW5ndGg/YnVmLmxlbmd0aDpuO2lmKGJ1Zi5jb3B5KHJldCxyZXQubGVuZ3RoLW4sMCxuYiksMD09PShuLT1uYikpe25iPT09YnVmLmxlbmd0aD8oKytjLHAubmV4dD90aGlzLmhlYWQ9cC5uZXh0OnRoaXMuaGVhZD10aGlzLnRhaWw9bnVsbCk6KHRoaXMuaGVhZD1wLHAuZGF0YT1idWYuc2xpY2UobmIpKTticmVha30rK2N9cmV0dXJuIHRoaXMubGVuZ3RoLT1jLHJldH19LHtrZXk6Y3VzdG9tLHZhbHVlOmZ1bmN0aW9uKF8sb3B0aW9ucyl7cmV0dXJuIGluc3BlY3QodGhpcyxmdW5jdGlvbih0YXJnZXQpe2Zvcih2YXIgaT0xO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspe3ZhciBzb3VyY2U9bnVsbCE9YXJndW1lbnRzW2ldP2FyZ3VtZW50c1tpXTp7fTtpJTI/b3duS2V5cyhPYmplY3Qoc291cmNlKSwhMCkuZm9yRWFjaChmdW5jdGlvbihrZXkpe19kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsa2V5LHNvdXJjZVtrZXldKX0pOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTpvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxrZXksT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2Usa2V5KSl9KX1yZXR1cm4gdGFyZ2V0fSh7fSxvcHRpb25zLHtkZXB0aDowLGN1c3RvbUluc3BlY3Q6ITF9KSl9fV0pJiZfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUscHJvdG9Qcm9wcyksc3RhdGljUHJvcHMmJl9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxCdWZmZXJMaXN0fSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUoxWm1abGNsOXNhWE4wTG1weklsMHNJbTVoYldWeklqcGJJbTkzYmt0bGVYTWlMQ0p2WW1wbFkzUWlMQ0psYm5WdFpYSmhZbXhsVDI1c2VTSXNJbXRsZVhNaUxDSlBZbXBsWTNRaUxDSm5aWFJQZDI1UWNtOXdaWEowZVZONWJXSnZiSE1pTENKemVXMWliMnh6SWl3aVptbHNkR1Z5SWl3aWMzbHRJaXdpWjJWMFQzZHVVSEp2Y0dWeWRIbEVaWE5qY21sd2RHOXlJaXdpWlc1MWJXVnlZV0pzWlNJc0luQjFjMmdpTENKaGNIQnNlU0lzSWw5a1pXWnBibVZRY205d1pYSjBlU0lzSW05aWFpSXNJbXRsZVNJc0luWmhiSFZsSWl3aVpHVm1hVzVsVUhKdmNHVnlkSGtpTENKamIyNW1hV2QxY21GaWJHVWlMQ0ozY21sMFlXSnNaU0lzSWw5a1pXWnBibVZRY205d1pYSjBhV1Z6SWl3aWRHRnlaMlYwSWl3aWNISnZjSE1pTENKcElpd2liR1Z1WjNSb0lpd2laR1Z6WTNKcGNIUnZjaUlzSWtKMVptWmxjaUlzSW5KbGNYVnBjbVVpTENKcGJuTndaV04wSWl3aVkzVnpkRzl0SWl3aWJXOWtkV3hsSWl3aVpYaHdiM0owY3lJc0lrSjFabVpsY2t4cGMzUWlMQ0pwYm5OMFlXNWpaU0lzSWtOdmJuTjBjblZqZEc5eUlpd2lWSGx3WlVWeWNtOXlJaXdpWDJOc1lYTnpRMkZzYkVOb1pXTnJJaXdpZEdocGN5SXNJbWhsWVdRaUxDSjBZV2xzSWl3aWNISnZkRzlRY205d2N5SXNJbk4wWVhScFkxQnliM0J6SWl3aWRpSXNJbVZ1ZEhKNUlpd2laR0YwWVNJc0ltNWxlSFFpTENKeVpYUWlMQ0p6SWl3aWNDSXNJbTRpTENKaGJHeHZZeUlzSW5OeVl5SXNJbTltWm5ObGRDSXNJbUZzYkc5alZXNXpZV1psSWl3aWNISnZkRzkwZVhCbElpd2lZMjl3ZVNJc0ltTmhiR3dpTENKb1lYTlRkSEpwYm1keklpd2ljMnhwWTJVaUxDSnphR2xtZENJc0lsOW5aWFJUZEhKcGJtY2lMQ0pmWjJWMFFuVm1abVZ5SWl3aVl5SXNJbk4wY2lJc0ltNWlJaXdpWW5WbUlpd2lYeUlzSW05d2RHbHZibk1pTENKaGNtZDFiV1Z1ZEhNaUxDSnpiM1Z5WTJVaUxDSm1iM0pGWVdOb0lpd2laMlYwVDNkdVVISnZjR1Z5ZEhsRVpYTmpjbWx3ZEc5eWN5SXNJbVJsWm1sdVpWQnliM0JsY25ScFpYTWlMQ0pmYjJKcVpXTjBVM0J5WldGa0lpd2laR1Z3ZEdnaUxDSmpkWE4wYjIxSmJuTndaV04wSWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4WlFVRkJMRU5CUlVFc1UwRkJVMEVzVDBGQlFVRXNRMEZCVVVNc1RVRkJRVUVzUTBGQlVVTXNZMEZCUVVFc1EwRkJRVUVzUTBGQmEwSXNTVUZCU1VNc1NVRkJRVUVzUTBGQlQwTXNUVUZCUVVFc1EwRkJUMFFzU1VGQlFVRXNRMEZCUzBZc1RVRkJRVUVzUTBGQlFVRXNRMEZCVXl4SFFVRkpSeXhOUVVGQlFTeERRVUZQUXl4eFFrRkJRVUVzUTBGQmRVSXNRMEZCUlN4SlFVRkpReXhQUVVGQlFTeERRVUZWUml4TlFVRkJRU3hEUVVGUFF5eHhRa0ZCUVVFc1EwRkJjMEpLTEUxQlFVRkJMRU5CUVVGQkxFTkJRV0ZETEdOQlFVRkJMRWRCUVdkQ1NTeFBRVUZCUVN4RFFVRlZRU3hQUVVGQlFTeERRVUZSUXl4TlFVRkJRU3hEUVVGUExGTkJRVlZETEVkQlFVRkJMRU5CUVVGQkxFTkJRVThzVDBGQlQwb3NUVUZCUVVFc1EwRkJUMHNzZDBKQlFVRkJMRU5CUVhsQ1VpeE5RVUZCUVN4RFFVRlJUeXhIUVVGQlFTeERRVUZCUVN4RFFVRkxSU3hWUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZuUWxBc1NVRkJRVUVzUTBGQlMxRXNTVUZCUVVFc1EwRkJTME1zUzBGQlFVRXNRMEZCVFZRc1NVRkJRVUVzUTBGQlRVY3NUMEZCUVVFc1EwRkJRVUVzUTBGQldTeFBRVUZQU0N4SlFVRkJRU3hEUVVrNVZTeFRRVUZUVlN4bFFVRkJRU3hEUVVGblFrTXNSMEZCUVVFc1EwRkJTME1zUjBGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlFVRXNRMEZCYVVzc1QwRkJjRXBFTEVkQlFVRkJMRWxCUVU5RUxFZEJRVUZCTEVOQlFVOVdMRTFCUVVGQkxFTkJRVTloTEdOQlFVRkJMRU5CUVdWSUxFZEJRVUZCTEVOQlFVdERMRWRCUVVGQkxFTkJRVXNzUTBGQlJVTXNTMEZCUVVFc1EwRkJUMEVzUzBGQlFVRXNRMEZCVDA0c1ZVRkJRVUVzUTBGQlFVRXNRMEZCV1N4RFFVRkJMRU5CUVUxUkxGbEJRVUZCTEVOQlFVRkJMRU5CUVdNc1EwRkJRU3hEUVVGTlF5eFJRVUZCUVN4RFFVRkJRU3hEUVVGVkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFXdENUQ3hIUVVGQlFTeERRVUZKUXl4SFFVRkJRU3hEUVVGQlFTeERRVUZQUXl4TFFVRkJRU3hEUVVGblFrWXNSMEZCUVVFc1EwRkpNMDBzVTBGQlUwMHNhVUpCUVVGQkxFTkJRV3RDUXl4TlFVRkJRU3hEUVVGUlF5eExRVUZCUVN4RFFVRkJRU3hEUVVGVExFbEJRVXNzU1VGQlNVTXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRVWRCTEVOQlFVRkJMRU5CUVVsRUxFdEJRVUZCTEVOQlFVMUZMRTFCUVVGQkxFTkJRVkZFTEVOQlFVRkJMRVZCUVVGQkxFTkJRVXNzUTBGQlJTeEpRVUZKUlN4VlFVRkJRU3hEUVVGaFNDeExRVUZCUVN4RFFVRk5ReXhEUVVGQlFTeERRVUZCUVN4RFFVRkpSU3hWUVVGQlFTeERRVUZYWml4VlFVRkJRU3hEUVVGaFpTeFZRVUZCUVN4RFFVRlhaaXhWUVVGQlFTeEZRVUZCUVN4RFFVRmpMRU5CUVVFc1EwRkJUMlVzVlVGQlFVRXNRMEZCVjFBc1dVRkJRVUVzUTBGQlFVRXNRMEZCWlN4RFFVRkJMRU5CUVZVc1QwRkJRU3hIUVVGWFR5eFZRVUZCUVN4SFFVRlpRU3hWUVVGQlFTeERRVUZYVGl4UlFVRkJRU3hEUVVGQlFTeERRVUZYTEVOQlFVRXNRMEZCUVN4RFFVRk5aaXhOUVVGQlFTeERRVUZQWVN4alFVRkJRU3hEUVVGbFNTeE5RVUZCUVN4RFFVRlJTU3hWUVVGQlFTeERRVUZYVml4SFFVRkJRU3hEUVVGTFZTeFZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWszVXl4SlFVTkpReXhOUVVGQlFTeERRVVJYUXl4alFVRlJMRU5CUTBSRUxFMUJRVUZCTEVOQlIyeENSU3hQUVVGQlFTeERRVVJaUkN4aFFVRlJMRU5CUTBGRExFOUJRVUZCTEVOQlJYQkNReXhOUVVGQlFTeERRVUZUUkN4UFFVRkJRU3hGUVVGWFFTeFBRVUZCUVN4RFFVRlJReXhOUVVGQlFTeEZRVUZWTEZOQlFVRXNRMEZOTVVORExHOUNRVUZQUXl4RFFVVlFMRlZCUVVFc1EwRkRSU3hUUVVGVFF5eFZRVUZCUVN4RlFVRkJRU3hEUVVGQlFTeERRWEpDV0N4VFFVRjVRa01zVVVGQlFVRXNRMEZCVlVNc1YwRkJRVUVzUTBGQlFVRXNRMEZCWlN4SFFVRkJMRVZCUVUxRUxGRkJRVUZCTEZsQlFXOUNReXhYUVVGQlFTeERRVUZCUVN4RFFVRm5RaXhOUVVGTkxFbEJRVWxETEZOQlFVRkJMRU5CUVZVc2JVTkJRVUVzUTBGQlFTeERRWE5DTlVkRExFTkJRV2RDUXl4SlFVRkJRU3hEUVVGTlRDeFZRVUZCUVN4RFFVRkJRU3hEUVVWMFFrc3NTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCVHl4SlFVRkJMRU5CUTFwRUxFbEJRVUZCTEVOQlFVdEZMRWxCUVVGQkxFTkJRVThzU1VGQlFTeERRVU5hUml4SlFVRkJRU3hEUVVGTFlpeE5RVUZCUVN4RFFVRlRMRU5CUVVFc1EwRjBRbXhDTEVsQlFYTkNWU3hYUVVGQlFTeERRVUZoVFN4VlFVRkJRU3hEUVVGWlF5eFhRVUZCUVN4RFFXOU5OME1zVDBGd1RXOUNVQ3hYUVVGQlFTeERRWGxDVUVZc1ZVRkJRVUVzUTBGQlFVRXNRMEY2UW05Q1VTeFZRVUZCUVN4RFFYbENVaXhEUVVGRExFTkJRM2hDZWtJc1IwRkJRVUVzUTBGQlN5eE5RVUZCTEVOQlEweERMRXRCUVVGQkxFTkJRVThzVTBGQll6QkNMRU5CUVVGQkxFTkJRVUZCTEVOQlEyNUNMRWxCUVVsRExFdEJRVUZCTEVOQlFWRXNRMEZEVmtNc1NVRkJRVUVzUTBGQlRVWXNRMEZCUVVFc1EwRkRUa2NzU1VGQlFVRXNRMEZCVFN4SlFVRkJMRU5CUVVFc1EwRkZTbElzU1VGQlFVRXNRMEZCUzJJc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVZGhMRWxCUVVGQkxFTkJRVXRGTEVsQlFVRkJMRU5CUVV0TkxFbEJRVUZCTEVOQlFVOUdMRXRCUVVGQkxFTkJRVmRPTEVsQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVOUxMRXRCUVVGQkxFTkJRemRFVGl4SlFVRkJRU3hEUVVGTFJTeEpRVUZCUVN4RFFVRlBTU3hMUVVGQlFTeERRVUZCUVN4RlFVTldUaXhKUVVGQlFTeERRVUZMWWl4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVlNMRU5CUTBSVUxFZEJRVUZCTEVOQlFVc3NVMEZCUVN4RFFVTk1ReXhMUVVGQlFTeERRVUZQTEZOQlFXbENNRUlzUTBGQlFVRXNRMEZCUVVFc1EwRkRkRUlzU1VGQlNVTXNTMEZCUVVFc1EwRkJVU3hEUVVOV1F5eEpRVUZCUVN4RFFVRk5SaXhEUVVGQlFTeERRVU5PUnl4SlFVRkJRU3hEUVVGTlVpeEpRVUZCUVN4RFFVRkxReXhKUVVGQlFTeERRVUZCUVN4RFFVVlBMRU5CUVVFc1IwRkJhRUpFTEVsQlFVRkJMRU5CUVV0aUxFMUJRVUZCTEVkQlFXTmhMRWxCUVVGQkxFTkJRVXRGTEVsQlFVRkJMRU5CUVU5SkxFdEJRVUZCTEVOQlFVRkJMRU5CUTI1RFRpeEpRVUZCUVN4RFFVRkxReXhKUVVGQlFTeERRVUZQU3l4TFFVRkJRU3hEUVVGQlFTeEZRVU5XVGl4SlFVRkJRU3hEUVVGTFlpeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVVZTTEVOQlEwUlVMRWRCUVVGQkxFTkJRVXNzVDBGQlFTeERRVU5NUXl4TFFVRkJRU3hEUVVGUExGVkJRVUVzUTBGRFRDeEhRVUZ2UWl4RFFVRkJMRWRCUVdoQ2NVSXNTVUZCUVVFc1EwRkJTMklzVFVGQlFVRXNRMEZCVkN4RFFVTkJMRWxCUVVselFpeEhRVUZCUVN4RFFVRk5WQ3hKUVVGQlFTeERRVUZMUXl4SlFVRkJRU3hEUVVGTFRTeEpRVUZCUVN4RFFVZHdRaXhQUVVadlFpeERRVUZCTEVkQlFXaENVQ3hKUVVGQlFTeERRVUZMWWl4TlFVRkJRU3hEUVVGallTeEpRVUZCUVN4RFFVRkxReXhKUVVGQlFTeERRVUZQUkN4SlFVRkJRU3hEUVVGTFJTeEpRVUZCUVN4RFFVRlBMRWxCUVVFc1EwRkJWVVlzU1VGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlQwUXNTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCUzA4c1NVRkJRVUVzUTBGQlFVRXNSVUZETjBWU0xFbEJRVUZCTEVOQlFVdGlMRTFCUVVGQkxFTkJRMEZ6UWl4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVWU0xFTkJRMFF2UWl4SFFVRkJRU3hEUVVGTExFOUJRVUVzUTBGRFRFTXNTMEZCUVVFc1EwRkJUeXhWUVVGQkxFTkJRMHh4UWl4SlFVRkJRU3hEUVVGTFF5eEpRVUZCUVN4RFFVRlBSQ3hKUVVGQlFTeERRVUZMUlN4SlFVRkJRU3hEUVVGUExFbEJRVUVzUTBGRGVFSkdMRWxCUVVGQkxFTkJRVXRpTEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRlppeERRVU5FVkN4SFFVRkJRU3hEUVVGTExFMUJRVUVzUTBGRFRFTXNTMEZCUVVFc1EwRkJUeXhUUVVGakswSXNRMEZCUVVFc1EwRkJRVUVzUTBGRGJrSXNSMEZCYjBJc1EwRkJRU3hIUVVGb1FsWXNTVUZCUVVFc1EwRkJTMklzVFVGQlFVRXNRMEZCWXl4TlFVRlBMRVZCUVVFc1EwRkpPVUlzU1VGSVFTeEpRVUZKZDBJc1EwRkJRVUVzUTBGQlNWZ3NTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZEVkZFc1IwRkJRVUVzUTBGQlRTeEZRVUZCTEVOQlFVdEZMRU5CUVVGQkxFTkJRVVZLTEVsQlFVRkJMRU5CUlZaSkxFTkJRVUZCTEVOQlFVbEJMRU5CUVVGQkxFTkJRVVZJTEVsQlFVRkJMRVZCUTFoRExFZEJRVUZCTEVWQlFVOURMRU5CUVVGQkxFTkJRVWxETEVOQlFVRkJMRU5CUVVWS0xFbEJRVUZCTEVOQlIyWXNUMEZCVDBVc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZVaXhEUVVORUwwSXNSMEZCUVVFc1EwRkJTeXhSUVVGQkxFTkJRMHhETEV0QlFVRkJMRU5CUVU4c1UwRkJaMEpwUXl4RFFVRkJRU3hEUVVGQlFTeERRVU55UWl4SFFVRnZRaXhEUVVGQkxFZEJRV2hDV2l4SlFVRkJRU3hEUVVGTFlpeE5RVUZCUVN4RFFVRmpMRTlCUVU5RkxFMUJRVUZCTEVOQlFVOTNRaXhMUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUVN4RFFVc3pReXhKUVVwQkxFbEJja1ZqUXl4SFFVRkJRU3hEUVVGTE9VSXNUVUZCUVVFc1EwRkJVU3RDTEUxQlFVRkJMRU5CY1VWMlFrNHNSMEZCUVVFc1EwRkJUWEJDTEUxQlFVRkJMRU5CUVU4eVFpeFhRVUZCUVN4RFFVRlpTaXhEUVVGQlFTeEhRVUZOTEVOQlFVRXNRMEZCUVN4RFFVTXZRa1FzUTBGQlFVRXNRMEZCU1Znc1NVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkRWR1lzUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUlVSNVFpeERRVUZCUVN4RlFYcEZUMGNzUjBGQlFVRXNRMEV3UlVSSUxFTkJRVUZCTEVOQlFVVktMRWxCUVVGQkxFTkJNVVZKZGtJc1RVRkJRVUVzUTBFd1JVVjVRaXhIUVVGQlFTeERRVEZGVFUwc1RVRkJRVUVzUTBFd1JVUTNRaXhEUVVGQlFTeERRWHBGT1VKSExFMUJRVUZCTEVOQlFVODBRaXhUUVVGQlFTeERRVUZWUXl4SlFVRkJRU3hEUVVGTFF5eEpRVUZCUVN4RFFVRkxUQ3hIUVVGQlFTeERRVUZMT1VJc1RVRkJRVUVzUTBGQlVTdENMRTFCUVVGQkxFTkJRVUZCTEVOQk1FVnNRemRDTEVOQlFVRkJMRVZCUVV0NVFpeERRVUZCUVN4RFFVRkZTaXhKUVVGQlFTeERRVUZMY0VJc1RVRkJRVUVzUTBGRFduZENMRU5CUVVGQkxFTkJRVWxCTEVOQlFVRkJMRU5CUVVWSUxFbEJRVUZCTEVOQlIxSXNUMEZCVDBNc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhVaXhEUVVORUwwSXNSMEZCUVVFc1EwRkJTeXhUUVVGQkxFTkJRMHhETEV0QlFVRkJMRU5CUVU4c1UwRkJhVUpwUXl4RFFVRkJRU3hEUVVGSFVTeFZRVUZCUVN4RFFVRkJRU3hEUVVONlFpeEpRVUZKV0N4SFFVRkJRU3hEUVdOS0xFOUJXa2xITEVOQlFVRkJMRU5CUVVsYUxFbEJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXROTEVsQlFVRkJMRU5CUVV0d1FpeE5RVUZCUVN4RlFVVnlRbk5DTEVkQlFVRkJMRU5CUVUxVUxFbEJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXROTEVsQlFVRkJMRU5CUVV0akxFdEJRVUZCTEVOQlFVMHNRMEZCUVN4RFFVRkhWQ3hEUVVGQlFTeERRVUZCUVN4RFFVTTVRbG9zU1VGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlMwMHNTVUZCUVVFc1EwRkJUMUFzU1VGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlMwMHNTVUZCUVVFc1EwRkJTMk1zUzBGQlFVRXNRMEZCVFZRc1EwRkJRVUVzUTBGQlFVRXNSVUZIZEVOSUxFZEJRVUZCTEVOQlJsTkhMRU5CUVVGQkxFZEJRVTFhTEVsQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVdE5MRWxCUVVGQkxFTkJRVXR3UWl4TlFVRkJRU3hEUVVWNFFtRXNTVUZCUVVFc1EwRkJTM05DTEV0QlFVRkJMRVZCUVVGQkxFTkJSMHhHTEZWQlFVRkJMRU5CUVdGd1FpeEpRVUZCUVN4RFFVRkxkVUlzVlVGQlFVRXNRMEZCVjFnc1EwRkJRVUVzUTBGQlFVRXNRMEZCUzFvc1NVRkJRVUVzUTBGQlMzZENMRlZCUVVGQkxFTkJRVmRhTEVOQlFVRkJMRU5CUVVGQkxFTkJSMjVFU0N4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVVlNMRU5CUTBRdlFpeEhRVUZCUVN4RFFVRkxMRTlCUVVFc1EwRkRURU1zUzBGQlFVRXNRMEZCVHl4VlFVRkJMRU5CUTB3c1QwRkJUM0ZDTEVsQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVdE5MRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjJ4Q0xFTkJRMFEzUWl4SFFVRkJRU3hEUVVGTExGbEJRVUVzUTBGRFRFTXNTMEZCUVVFc1EwRkJUeXhUUVVGdlFtbERMRU5CUVVGQkxFTkJRVUZCTEVOQlEzcENMRWxCUVVsRUxFTkJRVUZCTEVOQlFVbFlMRWxCUVVGQkxFTkJRVXRETEVsQlFVRkJMRU5CUTFSM1FpeERRVUZCUVN4RFFVRkpMRU5CUVVFc1EwRkRTbWhDTEVkQlFVRkJMRU5CUVUxRkxFTkJRVUZCTEVOQlFVVktMRWxCUVVGQkxFTkJSMW9zU1VGR1FVc3NRMEZCUVVFc1JVRkJTMGdzUjBGQlFVRXNRMEZCU1hSQ0xFMUJRVUZCTEVOQlJVWjNRaXhEUVVGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGRlNDeEpRVUZCUVN4RlFVRk5MRU5CUTJwQ0xFbEJRVWxyUWl4SFFVRkJRU3hEUVVGTlppeERRVUZCUVN4RFFVRkZTaXhKUVVGQlFTeERRVU5TYjBJc1JVRkJRVUVzUTBGQlMyWXNRMEZCUVVFc1EwRkJTV01zUjBGQlFVRXNRMEZCU1haRExFMUJRVUZCTEVOQlFWTjFReXhIUVVGQlFTeERRVUZKZGtNc1RVRkJRVUVzUTBGQlUzbENMRU5CUVVGQkxFTkJTWFpETEVkQlNFbGxMRVZCUVVGQkxFZEJRVTlFTEVkQlFVRkJMRU5CUVVsMlF5eE5RVUZCUVN4RFFVRlJjMElzUjBGQlFVRXNSVUZCVDJsQ0xFZEJRVUZCTEVOQlFWTnFRaXhIUVVGQlFTeEZRVUZQYVVJc1IwRkJRVUVzUTBGQlNVd3NTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWRVTEVOQlFVRkJMRU5CUVVGQkxFTkJSMnBFTEVOQlFVRXNTVUZHVmtFc1EwRkJRVUVzUlVGQlMyVXNSVUZCUVVFc1EwRkJRVUVzUTBGRlVTeERRVU5RUVN4RlFVRkJRU3hIUVVGUFJDeEhRVUZCUVN4RFFVRkpka01zVFVGQlFVRXNSVUZCUVVFc1JVRkRXSE5ETEVOQlFVRkJMRU5CUTBWa0xFTkJRVUZCTEVOQlFVVklMRWxCUVVGQkxFTkJRVTFTTEVsQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVOVZMRU5CUVVGQkxFTkJRVVZJTEVsQlFVRkJMRU5CUVZWU0xFbEJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVTlFTEVsQlFVRkJMRU5CUVV0RkxFbEJRVUZCTEVOQlFVOHNTVUZCUVN4SFFVVTFSRVlzU1VGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlQxVXNRMEZCUVVFc1EwRkRXa0VzUTBGQlFVRXNRMEZCUlVvc1NVRkJRVUVzUTBGQlQyMUNMRWRCUVVGQkxFTkJRVWxNTEV0QlFVRkJMRU5CUVUxTkxFVkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSM0pDTEV0QlFVRXNRMEZCUVN4RlFVZEJSaXhEUVVGQlFTeERRVWxLTEU5QlJFRjZRaXhKUVVGQlFTeERRVUZMWWl4TlFVRkJRU3hGUVVGVmMwTXNRMEZCUVVFc1EwRkRVbWhDTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIxSXNRMEZEUkM5Q0xFZEJRVUZCTEVOQlFVc3NXVUZCUVN4RFFVTk1ReXhMUVVGQlFTeERRVUZQTEZOQlFXOUNhVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkRla0lzU1VGQlNVZ3NSMEZCUVVFc1EwRkJUWEJDTEUxQlFVRkJMRU5CUVU4eVFpeFhRVUZCUVN4RFFVRlpTaXhEUVVGQlFTeERRVUZCUVN4RFFVTjZRa1FzUTBGQlFVRXNRMEZCU1Znc1NVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkRWSGRDTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVsU0xFbEJTRUZrTEVOQlFVRkJMRU5CUVVWS0xFbEJRVUZCTEVOQlFVdFhMRWxCUVVGQkxFTkJRVXRVTEVkQlFVRkJMRU5CUVVGQkxFTkJRMXBITEVOQlFVRkJMRVZCUVV0RUxFTkJRVUZCTEVOQlFVVktMRWxCUVVGQkxFTkJRVXR3UWl4TlFVRkJRU3hEUVVWTWQwSXNRMEZCUVVFc1EwRkJTVUVzUTBGQlFVRXNRMEZCUlVnc1NVRkJRVUVzUlVGQlRTeERRVU5xUWl4SlFVRkpiMElzUjBGQlFVRXNRMEZCVFdwQ0xFTkJRVUZCTEVOQlFVVktMRWxCUVVGQkxFTkJRMUp2UWl4RlFVRkJRU3hEUVVGTFppeERRVUZCUVN4RFFVRkpaMElzUjBGQlFVRXNRMEZCU1hwRExFMUJRVUZCTEVOQlFWTjVReXhIUVVGQlFTeERRVUZKZWtNc1RVRkJRVUVzUTBGQlUzbENMRU5CUVVGQkxFTkJTWFpETEVkQlNFRm5RaXhIUVVGQlFTeERRVUZKVml4SlFVRkJRU3hEUVVGTFZDeEhRVUZCUVN4RFFVRkxRU3hIUVVGQlFTeERRVUZKZEVJc1RVRkJRVUVzUTBGQlUzbENMRU5CUVVGQkxFTkJRVWNzUTBGQlFTeERRVUZIWlN4RlFVRkJRU3hEUVVGQlFTeERRVWQyUWl4RFFVRkJMRWxCUmxabUxFTkJRVUZCTEVWQlFVdGxMRVZCUVVGQkxFTkJRVUZCTEVOQlJWRXNRMEZEVUVFc1JVRkJRVUVzUjBGQlQwTXNSMEZCUVVFc1EwRkJTWHBETEUxQlFVRkJMRVZCUVVGQkxFVkJRMWh6UXl4RFFVRkJRU3hEUVVORlpDeERRVUZCUVN4RFFVRkZTQ3hKUVVGQlFTeERRVUZOVWl4SlFVRkJRU3hEUVVGTFF5eEpRVUZCUVN4RFFVRlBWU3hEUVVGQlFTeERRVUZGU0N4SlFVRkJRU3hEUVVGVlVpeEpRVUZCUVN4RFFVRkxReXhKUVVGQlFTeERRVUZQUkN4SlFVRkJRU3hEUVVGTFJTeEpRVUZCUVN4RFFVRlBMRWxCUVVFc1IwRkZOVVJHTEVsQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVOVZMRU5CUVVGQkxFTkJRMXBCTEVOQlFVRkJMRU5CUVVWS0xFbEJRVUZCTEVOQlFVOXhRaXhIUVVGQlFTeERRVUZKVUN4TFFVRkJRU3hEUVVGTlRTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWR5UWl4TFFVRkJMRU5CUVVFc1JVRkhRVVlzUTBGQlFVRXNRMEZKU2l4UFFVUkJla0lzU1VGQlFVRXNRMEZCUzJJc1RVRkJRVUVzUlVGQlZYTkRMRU5CUVVGQkxFTkJRMUpvUWl4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZFNMRU5CUTBRdlFpeEhRVUZCUVN4RFFVRkxZeXhOUVVGQlFTeERRVU5NWWl4TFFVRkJRU3hEUVVGUExGTkJRV1ZyUkN4RFFVRkJRU3hEUVVGSFF5eFBRVUZCUVN4RFFVRkJRU3hEUVVOMlFpeFBRVUZQZGtNc1QwRkJRVUVzUTBGQlVWTXNTVUZCUVVFc1EwRnVUWEpDTEZOQlFYVkNhRUlzVFVGQlFVRXNRMEZCUVVFc1EwRkJWU3hKUVVGTExFbEJRVWxGTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVGSFFTeERRVUZCUVN4RFFVRkpOa01zVTBGQlFVRXNRMEZCVlRWRExFMUJRVUZCTEVOQlFWRkVMRU5CUVVGQkxFVkJRVUZCTEVOQlFVc3NRMEZCUlN4SlFVRkpPRU1zVFVGQlFVRXNRMEZCZVVJc1NVRkJRU3hGUVVGb1FrUXNVMEZCUVVFc1EwRkJWVGRETEVOQlFVRkJMRU5CUVVGQkxFTkJRV0UyUXl4VFFVRkJRU3hEUVVGVk4wTXNRMEZCUVVFc1EwRkJRVUVzUTBGQlN5eEZRVUZCTEVOQlFWRkJMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZMZGtJc1QwRkJRVUVzUTBGQlVVa3NUVUZCUVVFc1EwRkJUMmxGTEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkJMRU5CUVUxRExFOUJRVUZCTEVOQlFWRXNVMEZCVlhaRUxFZEJRVUZCTEVOQlFVRkJMRU5CUVU5R0xHVkJRVUZCTEVOQlFXZENVU3hOUVVGQlFTeERRVUZSVGl4SFFVRkJRU3hEUVVGTGMwUXNUVUZCUVVFc1EwRkJUM1JFTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRWE5DV0N4TlFVRkJRU3hEUVVGUGJVVXNlVUpCUVVGQkxFTkJRVFpDYmtVc1RVRkJRVUVzUTBGQlQyOUZMR2RDUVVGQlFTeERRVUZwUW01RUxFMUJRVUZCTEVOQlFWRnFRaXhOUVVGQlFTeERRVUZQYlVVc2VVSkJRVUZCTEVOQlFUQkNSaXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGdFFuSkZMRTlCUVVGQkxFTkJRVkZKTEUxQlFVRkJMRU5CUVU5cFJTeE5RVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZUUXl4UFFVRkJRU3hEUVVGUkxGTkJRVlYyUkN4SFFVRkJRU3hEUVVGQlFTeERRVUZQV0N4TlFVRkJRU3hEUVVGUFlTeGpRVUZCUVN4RFFVRmxTU3hOUVVGQlFTeERRVUZSVGl4SFFVRkJRU3hEUVVGTFdDeE5RVUZCUVN4RFFVRlBTeXgzUWtGQlFVRXNRMEZCZVVJMFJDeE5RVUZCUVN4RFFVRlJkRVFzUjBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJaU3hQUVVGUFRTeE5RVUZCUVN4RFFXMU5iR1p2UkN4RFFVRmpMRVZCUVVFc1EwRkJTVTRzVDBGQlFVRXNRMEZCVXl4RFFVVTVRMDhzUzBGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUlZCRExHRkJRVUZCTEVOQlFVRkJMRU5CUVdVc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4SFFTOU1kVVIyUkN4cFFrRkJRVUVzUTBGQmEwSmpMRmRCUVVGQkxFTkJRVmx2UWl4VFFVRkJRU3hEUVVGWFpDeFZRVUZCUVN4RFFVRkJRU3hEUVVGcFFrTXNWMEZCUVVFc1JVRkJZWEpDTEdsQ1FVRkJRU3hEUVVGclFtTXNWMEZCUVVFc1EwRkJZVThzVjBGQlFVRXNRMEZCUVVFc1EwRnZUVE5MVkN4VlFVRkJRU3hEUVhCTVZDeEZRVUZCTEVOQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBlbWl0RXJyb3JBbmRDbG9zZU5UKHNlbGYsZXJyKXtlbWl0RXJyb3JOVChzZWxmLGVyciksZW1pdENsb3NlTlQoc2VsZil9ZnVuY3Rpb24gZW1pdENsb3NlTlQoc2VsZil7c2VsZi5fd3JpdGFibGVTdGF0ZSYmIXNlbGYuX3dyaXRhYmxlU3RhdGUuZW1pdENsb3NlfHxzZWxmLl9yZWFkYWJsZVN0YXRlJiYhc2VsZi5fcmVhZGFibGVTdGF0ZS5lbWl0Q2xvc2V8fHNlbGYuZW1pdChcImNsb3NlXCIpfWZ1bmN0aW9uIGVtaXRFcnJvck5UKHNlbGYsZXJyKXtzZWxmLmVtaXQoXCJlcnJvclwiLGVycil9bW9kdWxlLmV4cG9ydHM9e2Rlc3Ryb3k6ZnVuY3Rpb24oZXJyLGNiKXt2YXIgX3RoaXM9dGhpcyxyZWFkYWJsZURlc3Ryb3llZD10aGlzLl9yZWFkYWJsZVN0YXRlJiZ0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCx3cml0YWJsZURlc3Ryb3llZD10aGlzLl93cml0YWJsZVN0YXRlJiZ0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtyZXR1cm4gcmVhZGFibGVEZXN0cm95ZWR8fHdyaXRhYmxlRGVzdHJveWVkPyhjYj9jYihlcnIpOmVyciYmKHRoaXMuX3dyaXRhYmxlU3RhdGU/dGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWR8fCh0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCxwcm9jZXNzLm5leHRUaWNrKGVtaXRFcnJvck5ULHRoaXMsZXJyKSk6cHJvY2Vzcy5uZXh0VGljayhlbWl0RXJyb3JOVCx0aGlzLGVycikpLHRoaXMpOih0aGlzLl9yZWFkYWJsZVN0YXRlJiYodGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ9ITApLHRoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD0hMCksdGhpcy5fZGVzdHJveShlcnJ8fG51bGwsZnVuY3Rpb24oZXJyKXshY2ImJmVycj9fdGhpcy5fd3JpdGFibGVTdGF0ZT9fdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ/cHJvY2Vzcy5uZXh0VGljayhlbWl0Q2xvc2VOVCxfdGhpcyk6KF90aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCxwcm9jZXNzLm5leHRUaWNrKGVtaXRFcnJvckFuZENsb3NlTlQsX3RoaXMsZXJyKSk6cHJvY2Vzcy5uZXh0VGljayhlbWl0RXJyb3JBbmRDbG9zZU5ULF90aGlzLGVycik6Y2I/KHByb2Nlc3MubmV4dFRpY2soZW1pdENsb3NlTlQsX3RoaXMpLGNiKGVycikpOnByb2Nlc3MubmV4dFRpY2soZW1pdENsb3NlTlQsX3RoaXMpfSksdGhpcyl9LHVuZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuX3JlYWRhYmxlU3RhdGUmJih0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD0hMSx0aGlzLl9yZWFkYWJsZVN0YXRlLnJlYWRpbmc9ITEsdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRlZD0hMSx0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZEVtaXR0ZWQ9ITEpLHRoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD0hMSx0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kaW5nPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZmluYWxDYWxsZWQ9ITEsdGhpcy5fd3JpdGFibGVTdGF0ZS5wcmVmaW5pc2hlZD0hMSx0aGlzLl93cml0YWJsZVN0YXRlLmZpbmlzaGVkPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPSExKX0sZXJyb3JPckRlc3Ryb3k6ZnVuY3Rpb24oc3RyZWFtLGVycil7dmFyIHJTdGF0ZT1zdHJlYW0uX3JlYWRhYmxlU3RhdGUsd1N0YXRlPXN0cmVhbS5fd3JpdGFibGVTdGF0ZTtyU3RhdGUmJnJTdGF0ZS5hdXRvRGVzdHJveXx8d1N0YXRlJiZ3U3RhdGUuYXV0b0Rlc3Ryb3k/c3RyZWFtLmRlc3Ryb3koZXJyKTpzdHJlYW0uZW1pdChcImVycm9yXCIsZXJyKX19O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1SbGMzUnliM2t1YW5NaVhTd2libUZ0WlhNaU9sc2laVzFwZEVWeWNtOXlRVzVrUTJ4dmMyVk9WQ0lzSW5ObGJHWWlMQ0psY25JaUxDSmxiV2wwUlhKeWIzSk9WQ0lzSW1WdGFYUkRiRzl6WlU1VUlpd2lYM2R5YVhSaFlteGxVM1JoZEdVaUxDSmxiV2wwUTJ4dmMyVWlMQ0pmY21WaFpHRmliR1ZUZEdGMFpTSXNJbVZ0YVhRaUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2laR1Z6ZEhKdmVTSXNJbU5pSWl3aVgzUm9hWE1pTENKMGFHbHpJaXdpY21WaFpHRmliR1ZFWlhOMGNtOTVaV1FpTENKa1pYTjBjbTk1WldRaUxDSjNjbWwwWVdKc1pVUmxjM1J5YjNsbFpDSXNJbVZ5Y205eVJXMXBkSFJsWkNJc0luQnliMk5sYzNNaUxDSnVaWGgwVkdsamF5SXNJbDlrWlhOMGNtOTVJaXdpZFc1a1pYTjBjbTk1SWl3aWNtVmhaR2x1WnlJc0ltVnVaR1ZrSWl3aVpXNWtSVzFwZEhSbFpDSXNJbVZ1WkdsdVp5SXNJbVpwYm1Gc1EyRnNiR1ZrSWl3aWNISmxabWx1YVhOb1pXUWlMQ0ptYVc1cGMyaGxaQ0lzSW1WeWNtOXlUM0pFWlhOMGNtOTVJaXdpYzNSeVpXRnRJaXdpY2xOMFlYUmxJaXdpZDFOMFlYUmxJaXdpWVhWMGIwUmxjM1J5YjNraVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxHRkJkVVJCTEZOQlFWTkJMRzlDUVVGdlFrTXNTMEZCVFVNc1MwRkRha05ETEZsQlFWbEdMRXRCUVUxRExFdEJRMnhDUlN4WlFVRlpTQ3hOUVVka0xGTkJRVk5ITEZsQlFWbElMRTFCUTJaQkxFdEJRVXRKTEdsQ1FVRnRRa29zUzBGQlMwa3NaVUZCWlVNc1YwRkROVU5NTEV0QlFVdE5MR2xDUVVGdFFrNHNTMEZCUzAwc1pVRkJaVVFzVjBGRGFFUk1MRXRCUVV0UExFdEJRVXNzVTBGelFsb3NVMEZCVTB3c1dVRkJXVVlzUzBGQlRVTXNTMEZEZWtKRUxFdEJRVXRQTEV0QlFVc3NVVUZCVTA0c1MwRmpja0pQTEU5QlFVOURMRkZCUVZVc1EwRkRaa01zVVVGdVIwWXNVMEZCYVVKVUxFbEJRVXRWTEVsQlEzQkNMRWxCUVVsRExFMUJRVkZETEV0QlJWSkRMR3RDUVVGdlFrUXNTMEZCUzFBc1owSkJRV3RDVHl4TFFVRkxVQ3hsUVVGbFV5eFZRVU12UkVNc2EwSkJRVzlDU0N4TFFVRkxWQ3huUWtGQmEwSlRMRXRCUVV0VUxHVkJRV1ZYTEZWQlJXNUZMRTlCUVVsRUxHMUNRVUZ4UWtVc2JVSkJRMjVDVEN4SFFVTkdRU3hIUVVGSFZpeExRVU5OUVN4TlFVTktXU3hMUVVGTFZDeGxRVVZGVXl4TFFVRkxWQ3hsUVVGbFlTeGxRVU01UWtvc1MwRkJTMVFzWlVGQlpXRXNZMEZCWlN4RlFVTnVRME1zVVVGQlVVTXNVMEZCVTJwQ0xGbEJRV0ZYTEV0QlFVMWFMRTFCU0hCRGFVSXNVVUZCVVVNc1UwRkJVMnBDTEZsQlFXRlhMRXRCUVUxYUxFMUJUMnBEV1N4UFFVdE1RU3hMUVVGTFVDeHBRa0ZEVUU4c1MwRkJTMUFzWlVGQlpWTXNWMEZCV1N4SFFVazVRa1lzUzBGQlMxUXNhVUpCUTFCVExFdEJRVXRVTEdWQlFXVlhMRmRCUVZrc1IwRkhiRU5HTEV0QlFVdFBMRk5CUVZOdVFpeExRVUZQTEV0QlFVMHNVMEZCVlVFc1RVRkRPVUpWTEVsQlFVMVdMRWxCUTBwWExFMUJRVTFTTEdWQlJVTlJMRTFCUVUxU0xHVkJRV1ZoTEdGQlNTOUNReXhSUVVGUlF5eFRRVUZUYUVJc1dVRkJZVk1zVVVGSU9VSkJMRTFCUVUxU0xHVkJRV1ZoTEdOQlFXVXNSVUZEY0VORExGRkJRVkZETEZOQlFWTndRaXh2UWtGQmNVSmhMRTFCUVU5WUxFMUJTRGREYVVJc1VVRkJVVU1zVTBGQlUzQkNMRzlDUVVGeFFtRXNUVUZCVDFnc1MwRlBkRU5WTEVsQlExUlBMRkZCUVZGRExGTkJRVk5vUWl4WlFVRmhVeXhQUVVNNVFrUXNSMEZCUjFZc1RVRkZTR2xDTEZGQlFWRkRMRk5CUVZOb1FpeFpRVUZoVXl4VFFVa3pRa01zVDBGclJGQlJMRlZCY0VOR0xGZEJRMDFTTEV0QlFVdFFMR2xDUVVOUVR5eExRVUZMVUN4bFFVRmxVeXhYUVVGWkxFVkJRMmhEUml4TFFVRkxVQ3hsUVVGbFowSXNVMEZCVlN4RlFVTTVRbFFzUzBGQlMxQXNaVUZCWldsQ0xFOUJRVkVzUlVGRE5VSldMRXRCUVV0UUxHVkJRV1ZyUWl4WlFVRmhMRWRCUnk5Q1dDeExRVUZMVkN4cFFrRkRVRk1zUzBGQlMxUXNaVUZCWlZjc1YwRkJXU3hGUVVOb1EwWXNTMEZCUzFRc1pVRkJaVzFDTEU5QlFWRXNSVUZETlVKV0xFdEJRVXRVTEdWQlFXVnhRaXhSUVVGVExFVkJRemRDV2l4TFFVRkxWQ3hsUVVGbGMwSXNZVUZCWXl4RlFVTnNRMklzUzBGQlMxUXNaVUZCWlhWQ0xHRkJRV01zUlVGRGJFTmtMRXRCUVV0VUxHVkJRV1YzUWl4VlFVRlhMRVZCUXk5Q1ppeExRVUZMVkN4bFFVRmxZU3hqUVVGbExFbEJjMEp5UTFrc1pVRmtSaXhUUVVGM1FrTXNUMEZCVVRkQ0xFdEJUVGxDTEVsQlFVazRRaXhQUVVGVFJDeFBRVUZQZUVJc1pVRkRhRUl3UWl4UFFVRlRSaXhQUVVGUE1VSXNaVUZEYUVJeVFpeFJRVUZWUVN4UFFVRlBSU3hoUVVGbFJDeFJRVUZWUVN4UFFVRlBReXhaUVVGaFNDeFBRVUZQY0VJc1VVRkJVVlFzUzBGQlZUWkNMRTlCUVU5MlFpeExRVUZMTEZGQlFWTk9JaXdpWm1sc1pTSTZJaTlvYjIxbEwyMW9MV05pYjI0dloyOTNMM055WXk5bmFYUm9kV0l1WTI5dEwydHVZV1JvTDI1cGJIUmhiR3N2YzNSaGRHbGpMM1JvWlcxbGN5OXJibUZrYUM5emRHRjBhV012YkdsaUxYZG9hWE53WlhJeUwyNXZaR1ZmYlc5a2RXeGxjeTl1WkdwemIyNHZibTlrWlY5dGIyUjFiR1Z6TDNKbFlXUmhZbXhsTFhOMGNtVmhiUzlzYVdJdmFXNTBaWEp1WVd3dmMzUnlaV0Z0Y3k5a1pYTjBjbTk1TG1wekluMD0iLCJ2YXIgXyRlcnJvcnNCcm93c2VyXzI4ID0ge307XG5cInVzZSBzdHJpY3RcIjt2YXIgY29kZXM9e307ZnVuY3Rpb24gY3JlYXRlRXJyb3JUeXBlKGNvZGUsbWVzc2FnZSxCYXNlKXtCYXNlfHwoQmFzZT1FcnJvcik7dmFyIE5vZGVFcnJvcj1mdW5jdGlvbihfQmFzZSl7dmFyIHN1YkNsYXNzLHN1cGVyQ2xhc3M7ZnVuY3Rpb24gTm9kZUVycm9yKGFyZzEsYXJnMixhcmczKXtyZXR1cm4gX0Jhc2UuY2FsbCh0aGlzLGZ1bmN0aW9uKGFyZzEsYXJnMixhcmczKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgbWVzc2FnZT9tZXNzYWdlOm1lc3NhZ2UoYXJnMSxhcmcyLGFyZzMpfShhcmcxLGFyZzIsYXJnMykpfHx0aGlzfXJldHVybiBzdXBlckNsYXNzPV9CYXNlLChzdWJDbGFzcz1Ob2RlRXJyb3IpLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MucHJvdG90eXBlKSxzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3I9c3ViQ2xhc3Msc3ViQ2xhc3MuX19wcm90b19fPXN1cGVyQ2xhc3MsTm9kZUVycm9yfShCYXNlKTtOb2RlRXJyb3IucHJvdG90eXBlLm5hbWU9QmFzZS5uYW1lLE5vZGVFcnJvci5wcm90b3R5cGUuY29kZT1jb2RlLGNvZGVzW2NvZGVdPU5vZGVFcnJvcn1mdW5jdGlvbiBvbmVPZihleHBlY3RlZCx0aGluZyl7aWYoQXJyYXkuaXNBcnJheShleHBlY3RlZCkpe3ZhciBsZW49ZXhwZWN0ZWQubGVuZ3RoO3JldHVybiBleHBlY3RlZD1leHBlY3RlZC5tYXAoZnVuY3Rpb24oaSl7cmV0dXJuIFN0cmluZyhpKX0pLGxlbj4yP1wib25lIG9mIFwiLmNvbmNhdCh0aGluZyxcIiBcIikuY29uY2F0KGV4cGVjdGVkLnNsaWNlKDAsbGVuLTEpLmpvaW4oXCIsIFwiKSxcIiwgb3IgXCIpK2V4cGVjdGVkW2xlbi0xXToyPT09bGVuP1wib25lIG9mIFwiLmNvbmNhdCh0aGluZyxcIiBcIikuY29uY2F0KGV4cGVjdGVkWzBdLFwiIG9yIFwiKS5jb25jYXQoZXhwZWN0ZWRbMV0pOlwib2YgXCIuY29uY2F0KHRoaW5nLFwiIFwiKS5jb25jYXQoZXhwZWN0ZWRbMF0pfXJldHVyblwib2YgXCIuY29uY2F0KHRoaW5nLFwiIFwiKS5jb25jYXQoU3RyaW5nKGV4cGVjdGVkKSl9Y3JlYXRlRXJyb3JUeXBlKFwiRVJSX0lOVkFMSURfT1BUX1ZBTFVFXCIsZnVuY3Rpb24obmFtZSx2YWx1ZSl7cmV0dXJuJ1RoZSB2YWx1ZSBcIicrdmFsdWUrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcIicrbmFtZSsnXCInfSxUeXBlRXJyb3IpLGNyZWF0ZUVycm9yVHlwZShcIkVSUl9JTlZBTElEX0FSR19UWVBFXCIsZnVuY3Rpb24obmFtZSxleHBlY3RlZCxhY3R1YWwpe3ZhciBkZXRlcm1pbmVyLHNlYXJjaCxwb3MsbXNnO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBleHBlY3RlZCYmKHNlYXJjaD1cIm5vdCBcIixleHBlY3RlZC5zdWJzdHIoIXBvc3x8cG9zPDA/MDorcG9zLHNlYXJjaC5sZW5ndGgpPT09c2VhcmNoKT8oZGV0ZXJtaW5lcj1cIm11c3Qgbm90IGJlXCIsZXhwZWN0ZWQ9ZXhwZWN0ZWQucmVwbGFjZSgvXm5vdCAvLFwiXCIpKTpkZXRlcm1pbmVyPVwibXVzdCBiZVwiLGZ1bmN0aW9uKHN0cixzZWFyY2gsdGhpc19sZW4pe3JldHVybih2b2lkIDA9PT10aGlzX2xlbnx8dGhpc19sZW4+c3RyLmxlbmd0aCkmJih0aGlzX2xlbj1zdHIubGVuZ3RoKSxzdHIuc3Vic3RyaW5nKHRoaXNfbGVuLXNlYXJjaC5sZW5ndGgsdGhpc19sZW4pPT09c2VhcmNofShuYW1lLFwiIGFyZ3VtZW50XCIpKW1zZz1cIlRoZSBcIi5jb25jYXQobmFtZSxcIiBcIikuY29uY2F0KGRldGVybWluZXIsXCIgXCIpLmNvbmNhdChvbmVPZihleHBlY3RlZCxcInR5cGVcIikpO2Vsc2V7dmFyIHR5cGU9ZnVuY3Rpb24oc3RyLHNlYXJjaCxzdGFydCl7cmV0dXJuXCJudW1iZXJcIiE9dHlwZW9mIHN0YXJ0JiYoc3RhcnQ9MCksIShzdGFydCtzZWFyY2gubGVuZ3RoPnN0ci5sZW5ndGgpJiYtMSE9PXN0ci5pbmRleE9mKHNlYXJjaCxzdGFydCl9KG5hbWUsXCIuXCIpP1wicHJvcGVydHlcIjpcImFyZ3VtZW50XCI7bXNnPSdUaGUgXCInLmNvbmNhdChuYW1lLCdcIiAnKS5jb25jYXQodHlwZSxcIiBcIikuY29uY2F0KGRldGVybWluZXIsXCIgXCIpLmNvbmNhdChvbmVPZihleHBlY3RlZCxcInR5cGVcIikpfXJldHVybiBtc2crPVwiLiBSZWNlaXZlZCB0eXBlIFwiLmNvbmNhdCh0eXBlb2YgYWN0dWFsKX0sVHlwZUVycm9yKSxjcmVhdGVFcnJvclR5cGUoXCJFUlJfU1RSRUFNX1BVU0hfQUZURVJfRU9GXCIsXCJzdHJlYW0ucHVzaCgpIGFmdGVyIEVPRlwiKSxjcmVhdGVFcnJvclR5cGUoXCJFUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRFwiLGZ1bmN0aW9uKG5hbWUpe3JldHVyblwiVGhlIFwiK25hbWUrXCIgbWV0aG9kIGlzIG5vdCBpbXBsZW1lbnRlZFwifSksY3JlYXRlRXJyb3JUeXBlKFwiRVJSX1NUUkVBTV9QUkVNQVRVUkVfQ0xPU0VcIixcIlByZW1hdHVyZSBjbG9zZVwiKSxjcmVhdGVFcnJvclR5cGUoXCJFUlJfU1RSRUFNX0RFU1RST1lFRFwiLGZ1bmN0aW9uKG5hbWUpe3JldHVyblwiQ2Fubm90IGNhbGwgXCIrbmFtZStcIiBhZnRlciBhIHN0cmVhbSB3YXMgZGVzdHJveWVkXCJ9KSxjcmVhdGVFcnJvclR5cGUoXCJFUlJfTVVMVElQTEVfQ0FMTEJBQ0tcIixcIkNhbGxiYWNrIGNhbGxlZCBtdWx0aXBsZSB0aW1lc1wiKSxjcmVhdGVFcnJvclR5cGUoXCJFUlJfU1RSRUFNX0NBTk5PVF9QSVBFXCIsXCJDYW5ub3QgcGlwZSwgbm90IHJlYWRhYmxlXCIpLGNyZWF0ZUVycm9yVHlwZShcIkVSUl9TVFJFQU1fV1JJVEVfQUZURVJfRU5EXCIsXCJ3cml0ZSBhZnRlciBlbmRcIiksY3JlYXRlRXJyb3JUeXBlKFwiRVJSX1NUUkVBTV9OVUxMX1ZBTFVFU1wiLFwiTWF5IG5vdCB3cml0ZSBudWxsIHZhbHVlcyB0byBzdHJlYW1cIixUeXBlRXJyb3IpLGNyZWF0ZUVycm9yVHlwZShcIkVSUl9VTktOT1dOX0VOQ09ESU5HXCIsZnVuY3Rpb24oYXJnKXtyZXR1cm5cIlVua25vd24gZW5jb2Rpbmc6IFwiK2FyZ30sVHlwZUVycm9yKSxjcmVhdGVFcnJvclR5cGUoXCJFUlJfU1RSRUFNX1VOU0hJRlRfQUZURVJfRU5EX0VWRU5UXCIsXCJzdHJlYW0udW5zaGlmdCgpIGFmdGVyIGVuZCBldmVudFwiKSxfJGVycm9yc0Jyb3dzZXJfMjguY29kZXM9Y29kZXM7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltVnljbTl5Y3kxaWNtOTNjMlZ5TG1weklsMHNJbTVoYldWeklqcGJJbU52WkdWeklpd2lZM0psWVhSbFJYSnliM0pVZVhCbElpd2lZMjlrWlNJc0ltMWxjM05oWjJVaUxDSkNZWE5sSWl3aVJYSnliM0lpTENKT2IyUmxSWEp5YjNJaUxDSmZRbUZ6WlNJc0luTjFZa05zWVhOeklpd2ljM1Z3WlhKRGJHRnpjeUlzSW1GeVp6RWlMQ0poY21jeUlpd2lZWEpuTXlJc0ltTmhiR3dpTENKMGFHbHpJaXdpWjJWMFRXVnpjMkZuWlNJc0luQnliM1J2ZEhsd1pTSXNJazlpYW1WamRDSXNJbU55WldGMFpTSXNJbU52Ym5OMGNuVmpkRzl5SWl3aVgxOXdjbTkwYjE5Zklpd2libUZ0WlNJc0ltOXVaVTltSWl3aVpYaHdaV04wWldRaUxDSjBhR2x1WnlJc0lrRnljbUY1SWl3aWFYTkJjbkpoZVNJc0lteGxiaUlzSW14bGJtZDBhQ0lzSW0xaGNDSXNJbWtpTENKVGRISnBibWNpTENKamIyNWpZWFFpTENKemJHbGpaU0lzSW1wdmFXNGlMQ0oyWVd4MVpTSXNJbFI1Y0dWRmNuSnZjaUlzSW1GamRIVmhiQ0lzSW1SbGRHVnliV2x1WlhJaUxDSnpaV0Z5WTJnaUxDSndiM01pTENKdGMyY2lMQ0p6ZFdKemRISWlMQ0p5WlhCc1lXTmxJaXdpYzNSeUlpd2lkR2hwYzE5c1pXNGlMQ0oxYm1SbFptbHVaV1FpTENKemRXSnpkSEpwYm1jaUxDSmxibVJ6VjJsMGFDSXNJblI1Y0dVaUxDSnpkR0Z5ZENJc0ltbHVaR1Y0VDJZaUxDSnBibU5zZFdSbGN5SXNJbUZ5WnlJc0ltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaVhTd2liV0Z3Y0dsdVozTWlPaUk3UVVGQlFTeFpRVUZCTEVOQlNVRXNTVUZCU1VFc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlJWb3NVMEZCVTBNc1pVRkJRVUVzUTBGQlowSkRMRWxCUVVGQkxFTkJRVTFETEU5QlFVRkJMRU5CUVZORExFbEJRVUZCTEVOQlFVRkJMRU5CUTJwRFFTeEpRVUZCUVN4SFFVTklRU3hKUVVGQlFTeERRVUZQUXl4TFFVRkJRU3hEUVVGQlFTeERRVmRVTEVsQlFVbERMRk5CUVVGQkxFTkJSVW9zVTBGQlZVTXNTMEZCUVVFc1EwRkJRVUVzUTBGdVFsb3NTVUZCZDBKRExGRkJRVUZCTEVOQlFWVkRMRlZCUVVGQkxFTkJjMEk1UWl4VFFVRlRTQ3hUUVVGQlFTeERRVUZWU1N4SlFVRkJRU3hEUVVGTlF5eEpRVUZCUVN4RFFVRk5ReXhKUVVGQlFTeERRVUZCUVN4RFFVTTNRaXhQUVVGUFRDeExRVUZCUVN4RFFVRk5UU3hKUVVGQlFTeERRVUZMUXl4SlFVRkJRU3hEUVdSMFFpeFRRVUZ2UWtvc1NVRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJUVU1zU1VGQlFVRXNRMEZCUVVFc1EwRkRPVUlzVFVGQmRVSXNVVUZCUVN4RlFVRkJMRTlCUVZwVUxFOUJRVUZCTEVOQlEwWkJMRTlCUVVGQkxFTkJSVUZCTEU5QlFVRkJMRU5CUVZGUExFbEJRVUZCTEVOQlFVMURMRWxCUVVGQkxFTkJRVTFETEVsQlFVRkJMRU5CUVVGQkxFTkJWVWhITEVOQlFWZE1MRWxCUVVGQkxFTkJRVTFETEVsQlFVRkJMRU5CUVUxRExFbEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJRVlZGTEVsQlFVRkJMRU5CUnpORUxFOUJNVUk0UWt3c1ZVRkJRVUVzUTBGdlFrcEdMRXRCUVVGQkxFTkJRVUZCTEVOQmNFSk9ReXhSUVVGQlFTeERRVzlDVEVZc1UwRkJRVUVzUlVGd1FuTkRWU3hUUVVGQlFTeERRVUZaUXl4TlFVRkJRU3hEUVVGUFF5eE5RVUZCUVN4RFFVRlBWQ3hWUVVGQlFTeERRVUZYVHl4VFFVRkJRU3hEUVVGQlFTeERRVUZaVWl4UlFVRkJRU3hEUVVGVFVTeFRRVUZCUVN4RFFVRlZSeXhYUVVGQlFTeERRVUZqV0N4UlFVRkJRU3hEUVVGVlFTeFJRVUZCUVN4RFFVRlRXU3hUUVVGQlFTeERRVUZaV0N4VlFVRkJRU3hEUVRCQ0wwcElMRk5CUVVGQkxFTkJVRlFzUTBGUlJVWXNTVUZCUVVFc1EwRkJRVUVzUTBGRlJrVXNVMEZCUVVFc1EwRkJWVlVzVTBGQlFVRXNRMEZCVlVzc1NVRkJRVUVzUTBGQlQycENMRWxCUVVGQkxFTkJRVXRwUWl4SlFVRkJRU3hEUVVOb1EyWXNVMEZCUVVFc1EwRkJWVlVzVTBGQlFVRXNRMEZCVldRc1NVRkJRVUVzUTBGQlQwRXNTVUZCUVVFc1EwRkRNMEpHTEV0QlFVRkJMRU5CUVUxRkxFbEJRVUZCTEVOQlFVRkJMRU5CUVZGSkxGTkJRVUZCTEVOQlNXaENMRk5CUVZOblFpeExRVUZCUVN4RFFVRk5ReXhSUVVGQlFTeERRVUZWUXl4TFFVRkJRU3hEUVVGQlFTeERRVU4yUWl4SFFVRkpReXhMUVVGQlFTeERRVUZOUXl4UFFVRkJRU3hEUVVGUlNDeFJRVUZCUVN4RFFVRkJRU3hEUVVGWExFTkJRek5DTEVsQlFVbEpMRWRCUVVGQkxFTkJRVTFLTEZGQlFVRkJMRU5CUVZOTExFMUJRVUZCTEVOQlMyNUNMRTlCU2tGTUxGRkJRVUZCTEVOQlFWZEJMRkZCUVVGQkxFTkJRVk5OTEVkQlFVRkJMRU5CUVVrc1UwRkJWVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkRhRU1zVDBGQlQwTXNUVUZCUVVFc1EwRkJUMFFzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIV2tnc1IwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlEwUXNVMEZCUVN4RFFVRlZTeXhOUVVGQlFTeERRVUZQVWl4TFFVRkJRU3hEUVVGUExFZEJRVUVzUTBGQlFTeERRVUZMVVN4TlFVRkJRU3hEUVVGUFZDeFJRVUZCUVN4RFFVRlRWU3hMUVVGQlFTeERRVUZOTEVOQlFVRXNRMEZCUjA0c1IwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRXNRMEZCUjA4c1NVRkJRVUVzUTBGQlN5eEpRVUZCTEVOQlFVRXNRMEZCVHl4UFFVRkJMRU5CUVVFc1EwRkJWMWdzVVVGQlFVRXNRMEZCVTBrc1IwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVRXNRMEZETTBZc1EwRkJRU3hIUVVGU1FTeEhRVUZCUVN4RFFVTkdMRk5CUVVFc1EwRkJWVXNzVFVGQlFVRXNRMEZCVDFJc1MwRkJRVUVzUTBGQlR5eEhRVUZCTEVOQlFVRXNRMEZCUzFFc1RVRkJRVUVzUTBGQlQxUXNVVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRVUVzUTBGQlNTeE5RVUZCTEVOQlFVRXNRMEZCVVZNc1RVRkJRVUVzUTBGQlQxUXNVVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVVY2UlN4TFFVRkJMRU5CUVUxVExFMUJRVUZCTEVOQlFVOVNMRXRCUVVGQkxFTkJRVThzUjBGQlFTeERRVUZCTEVOQlFVdFJMRTFCUVVGQkxFTkJRVTlVTEZGQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGSGJFUXNUVUZCVHl4TFFVRkJMRU5CUVUxVExFMUJRVUZCTEVOQlFVOVNMRXRCUVVGQkxFTkJRVThzUjBGQlFTeERRVUZCTEVOQlFVdFJMRTFCUVVGQkxFTkJRVTlFTEUxQlFVRkJMRU5CUVU5U0xGRkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJLMEpzUkhSQ0xHVkJRVUZCTEVOQlFXZENMSFZDUVVGQkxFTkJRWGxDTEZOQlFWVnZRaXhKUVVGQlFTeERRVUZOWXl4TFFVRkJRU3hEUVVGQlFTeERRVU4yUkN4TlFVRlBMR0ZCUVVFc1EwRkJaMEpCTEV0QlFVRkJMRU5CUVZFc01rSkJRVUVzUTBGQk9FSmtMRWxCUVVGQkxFTkJRVThzUjBGQlFTeERRVUZCTEVOQlEyNUZaU3hUUVVGQlFTeERRVUZCUVN4RFFVTklia01zWlVGQlFVRXNRMEZCWjBJc2MwSkJRVUVzUTBGQmQwSXNVMEZCVlc5Q0xFbEJRVUZCTEVOQlFVMUZMRkZCUVVGQkxFTkJRVlZqTEUxQlFVRkJMRU5CUVVGQkxFTkJSV2hGTEVsQlFVbERMRlZCUVVGQkxFTkJMMEp0UWtNc1RVRkJRVUVzUTBGQlVVTXNSMEZCUVVFc1EwRjNRek5DUXl4SFFVRkJRU3hEUVVWS0xFZEJWSGRDTEZGQlFVRXNSVUZCUVN4UFFVRmliRUlzVVVGQlFVRXNSMEZxUTFsblFpeE5RVUZCUVN4RFFXbERhME1zVFVGQlFTeERRVUZXYUVJc1VVRkJRVUVzUTBGb1EzQkRiVUlzVFVGQlFVRXNRMEZCUVVFc1EwRkJVVVlzUjBGQlFVRXNSVUZCVDBFc1IwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUVV0QkxFZEJRVUZCTEVOQlFVdEVMRTFCUVVGQkxFTkJRVTlZTEUxQlFVRkJMRU5CUVVGQkxFZEJRVmxYTEUxQlFVRkJMRU5CUVVGQkxFVkJhVU12UkVRc1ZVRkJRVUVzUTBGQllTeGhRVUZCTEVOQlEySm1MRkZCUVVGQkxFTkJRVmRCTEZGQlFVRkJMRU5CUVZOdlFpeFBRVUZCUVN4RFFVRlJMRTlCUVVFc1EwRkJVeXhGUVVGQkxFTkJRVUVzUlVGRmNrTk1MRlZCUVVGQkxFTkJRV0VzVTBGQlFTeERRV2hEYWtJc1UwRkJhMEpOTEVkQlFVRkJMRU5CUVV0TUxFMUJRVUZCTEVOQlFWRk5MRkZCUVVGQkxFTkJRVUZCTEVOQlN6ZENMRTFCUVVFc1EwRkJRU3hMUVVwcFFrTXNRMEZCUVVFc1IwRkJZa1FzVVVGQlFVRXNSVUZCTUVKQkxGRkJRVUZCTEVOQlFWZEVMRWRCUVVGQkxFTkJRVWxvUWl4TlFVRkJRU3hKUVVNelEybENMRkZCUVVGQkxFTkJRVmRFTEVkQlFVRkJMRU5CUVVsb1FpeE5RVUZCUVN4RFFVRkJRU3hEUVVkV1owSXNSMEZCUVVFc1EwRkJTVWNzVTBGQlFVRXNRMEZCVlVZc1VVRkJRVUVzUTBGQlYwNHNUVUZCUVVFc1EwRkJUMWdzVFVGQlFVRXNRMEZCVVdsQ0xGRkJRVUZCTEVOQlFVRkJMRWRCUVdOT0xFMUJRVUZCTEVOQlowTjZSRk1zUTBGQlV6TkNMRWxCUVVGQkxFTkJRVTBzVjBGQlFTeERRVUZCTEVOQlJXcENiMElzUjBGQlFVRXNRMEZCVFN4TlFVRkJMRU5CUVU5VUxFMUJRVUZCTEVOQlFVOVlMRWxCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZCTEVOQlFVdFhMRTFCUVVGQkxFTkJRVTlOTEZWQlFVRkJMRU5CUVZrc1IwRkJRU3hEUVVGQkxFTkJRVXRPTEUxQlFVRkJMRU5CUVU5V0xFdEJRVUZCTEVOQlFVMURMRkZCUVVGQkxFTkJRVlVzVFVGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4SlFVTjZSU3hEUVVOTUxFbEJRVWt3UWl4SlFVRkJRU3hEUVdoRFVpeFRRVUZyUWt3c1IwRkJRVUVzUTBGQlMwd3NUVUZCUVVFc1EwRkJVVmNzUzBGQlFVRXNRMEZCUVVFc1EwRkxOMElzVFVGS2NVSXNVVUZCUVN4RlFVRkJMRTlCUVZaQkxFdEJRVUZCTEVkQlExUkJMRXRCUVVGQkxFTkJRVkVzUTBGQlFTeERRVUZCTEVOQlFVRXNSVUZIVGtFc1MwRkJRVUVzUTBGQlVWZ3NUVUZCUVVFc1EwRkJUMWdzVFVGQlFVRXNRMEZCVTJkQ0xFZEJRVUZCTEVOQlFVbG9RaXhOUVVGQlFTeERRVUZCUVN4RlFVRkJRU3hEUVVkVExFTkJRVUVzUjBGQmFFTm5RaXhIUVVGQlFTeERRVUZKVHl4UFFVRkJRU3hEUVVGUldpeE5RVUZCUVN4RFFVRlJWeXhMUVVGQlFTeERRVUZCUVN4RFFYZENhRUpGTEVOQlFWTXZRaXhKUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRlBMRlZCUVVFc1EwRkJZU3hWUVVGQkxFTkJRemxEYjBJc1IwRkJRVUVzUTBGQlRTeFBRVUZCTEVOQlFWTlVMRTFCUVVGQkxFTkJRVTlZTEVsQlFVRkJMRU5CUVUwc1NVRkJRU3hEUVVGQkxFTkJRVTlYTEUxQlFVRkJMRU5CUVU5cFFpeEpRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGTGFrSXNUVUZCUVVFc1EwRkJUMDBzVlVGQlFVRXNRMEZCV1N4SFFVRkJMRU5CUVVFc1EwRkJTMDRzVFVGQlFVRXNRMEZCVDFZc1MwRkJRVUVzUTBGQlRVTXNVVUZCUVVFc1EwRkJWU3hOUVVGQkxFTkJRVUVzUTBGQlFTeERRVWwwUnl4UFFVUkJhMElzUjBGQlFVRXNSVUZCVHl4clFrRkJRU3hEUVVGdFFsUXNUVUZCUVVFc1EwRkJRVUVzVDBGQlkwc3NUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGZGtORUxGTkJRVUZCTEVOQlFVRkJMRU5CUTBodVF5eGxRVUZCUVN4RFFVRm5RaXd5UWtGQlFTeERRVUUyUWl4NVFrRkJRU3hEUVVGQkxFTkJRemREUVN4bFFVRkJRU3hEUVVGblFpdzBRa0ZCUVN4RFFVRTRRaXhUUVVGVmIwSXNTVUZCUVVFc1EwRkJRVUVzUTBGRGRFUXNUVUZCVHl4TlFVRkJMRU5CUVZOQkxFbEJRVUZCTEVOQlFVOHNORUpCUVVFc1EwRkJRU3hEUVVGQkxFTkJSWHBDY0VJc1pVRkJRVUVzUTBGQlowSXNORUpCUVVFc1EwRkJPRUlzYVVKQlFVRXNRMEZCUVN4RFFVTTVRMEVzWlVGQlFVRXNRMEZCWjBJc2MwSkJRVUVzUTBGQmQwSXNVMEZCVlc5Q0xFbEJRVUZCTEVOQlFVRkJMRU5CUTJoRUxFMUJRVThzWTBGQlFTeERRVUZwUWtFc1NVRkJRVUVzUTBGQlR5d3JRa0ZCUVN4RFFVRkJMRU5CUVVFc1EwRkZha053UWl4bFFVRkJRU3hEUVVGblFpeDFRa0ZCUVN4RFFVRjVRaXhuUTBGQlFTeERRVUZCTEVOQlEzcERRU3hsUVVGQlFTeERRVUZuUWl4M1FrRkJRU3hEUVVFd1Fpd3lRa0ZCUVN4RFFVRkJMRU5CUXpGRFFTeGxRVUZCUVN4RFFVRm5RaXcwUWtGQlFTeERRVUU0UWl4cFFrRkJRU3hEUVVGQkxFTkJRemxEUVN4bFFVRkJRU3hEUVVGblFpeDNRa0ZCUVN4RFFVRXdRaXh4UTBGQlFTeERRVUYxUTIxRExGTkJRVUZCTEVOQlFVRkJMRU5CUTJwR2JrTXNaVUZCUVVFc1EwRkJaMElzYzBKQlFVRXNRMEZCZDBJc1UwRkJWVzlFTEVkQlFVRkJMRU5CUVVGQkxFTkJRMmhFTEUxQlFVOHNiMEpCUVVFc1EwRkJkVUpCTEVkQlFVRkJMRU5CUVVGQkxFTkJRemRDYWtJc1UwRkJRVUVzUTBGQlFVRXNRMEZEU0c1RExHVkJRVUZCTEVOQlFXZENMRzlEUVVGQkxFTkJRWE5ETEd0RFFVRkJMRU5CUVVFc1EwRkRkRVJ4UkN4clFrRkJUME1zUTBGQlVYWkVMRXRCUVVGQkxFTkJRVkZCTEV0QlFVRkJMRU5CUVVGQklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sdHVkV3hzWFgwPSIsIlwidXNlIHN0cmljdFwiO3ZhciBFUlJfSU5WQUxJRF9PUFRfVkFMVUU9XyRlcnJvcnNCcm93c2VyXzI4LmNvZGVzLkVSUl9JTlZBTElEX09QVF9WQUxVRTt2YXIgXyRzdGF0ZV80MD17Z2V0SGlnaFdhdGVyTWFyazpmdW5jdGlvbihzdGF0ZSxvcHRpb25zLGR1cGxleEtleSxpc0R1cGxleCl7dmFyIGh3bT1mdW5jdGlvbihvcHRpb25zLGlzRHVwbGV4LGR1cGxleEtleSl7cmV0dXJuIG51bGwhPW9wdGlvbnMuaGlnaFdhdGVyTWFyaz9vcHRpb25zLmhpZ2hXYXRlck1hcms6aXNEdXBsZXg/b3B0aW9uc1tkdXBsZXhLZXldOm51bGx9KG9wdGlvbnMsaXNEdXBsZXgsZHVwbGV4S2V5KTtpZihudWxsIT1od20pe2lmKCFpc0Zpbml0ZShod20pfHxNYXRoLmZsb29yKGh3bSkhPT1od218fGh3bTwwKXRocm93IG5ldyBFUlJfSU5WQUxJRF9PUFRfVkFMVUUoaXNEdXBsZXg/ZHVwbGV4S2V5OlwiaGlnaFdhdGVyTWFya1wiLGh3bSk7cmV0dXJuIE1hdGguZmxvb3IoaHdtKX1yZXR1cm4gc3RhdGUub2JqZWN0TW9kZT8xNjoxNjM4NH19O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbk4wWVhSbExtcHpJbDBzSW01aGJXVnpJanBiSWtWU1VsOUpUbFpCVEVsRVgwOVFWRjlXUVV4VlJTSXNJbkpsY1hWcGNtVWlMQ0pqYjJSbGN5SXNJbTF2WkhWc1pTSXNJbVY0Y0c5eWRITWlMQ0puWlhSSWFXZG9WMkYwWlhKTllYSnJJaXdpYzNSaGRHVWlMQ0p2Y0hScGIyNXpJaXdpWkhWd2JHVjRTMlY1SWl3aWFYTkVkWEJzWlhnaUxDSm9kMjBpTENKb2FXZG9WMkYwWlhKTllYSnJJaXdpYUdsbmFGZGhkR1Z5VFdGeWEwWnliMjBpTENKcGMwWnBibWwwWlNJc0lrMWhkR2dpTENKbWJHOXZjaUlzSW05aWFtVmpkRTF2WkdVaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxGbEJRVUVzUTBGRlFTeEpRVUZKUVN4eFFrRkJRVUVzUTBGQmQwSkRMR3RDUVVGUkxFTkJRVzFDUXl4TFFVRkJRU3hEUVVGTlJpeHhRa0ZCUVVFc1EwRnpRamRFUnl4alFVRlBReXhEUVVGVkxFTkJRMlpETEdkQ1FVRkJRU3hEUVdwQ1JpeFRRVUV3UWtNc1MwRkJRVUVzUTBGQlQwTXNUMEZCUVVFc1EwRkJVME1zVTBGQlFVRXNRMEZCVjBNc1VVRkJRVUVzUTBGQlFVRXNRMEZEYmtRc1NVRkJTVU1zUjBGQlFVRXNRMEZNVGl4VFFVRXlRa2dzVDBGQlFVRXNRMEZCVTBVc1VVRkJRVUVzUTBGQlZVUXNVMEZCUVVFc1EwRkJRVUVzUTBGRE5VTXNUMEZCWjBNc1NVRkJRU3hGUVVGNlFrUXNUMEZCUVVFc1EwRkJVVWtzWVVGQlFVRXNRMEZCZDBKS0xFOUJRVUZCTEVOQlFWRkpMR0ZCUVVGQkxFTkJRV2RDUml4UlFVRkJRU3hEUVVGWFJpeFBRVUZCUVN4RFFVRlJReXhUUVVGQlFTeERRVUZCUVN4RFFVRmhMRWxCUVVFc1EwRkpja1pKTEVOQlFXdENUQ3hQUVVGQlFTeERRVUZUUlN4UlFVRkJRU3hEUVVGVlJDeFRRVUZCUVN4RFFVRkJRU3hEUVVVdlF5eEhRVUZYTEVsQlFVRXNSVUZCVUVVc1IwRkJRVUVzUTBGQllTeERRVU5tTEVkQlFVRXNRMEZCVFVjc1VVRkJRVUVzUTBGQlUwZ3NSMEZCUVVFc1EwRkJRVUVzUlVGQlVVa3NTVUZCUVVFc1EwRkJTME1zUzBGQlFVRXNRMEZCVFV3c1IwRkJRVUVzUTBGQlFVRXNSMEZCVTBFc1IwRkJRVUVzUlVGQlVVRXNSMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJSWFpFTEUxQlFVMHNTVUZCU1ZZc2NVSkJRVUZCTEVOQlJFTlRMRkZCUVVGQkxFTkJRVmRFTEZOQlFVRkJMRU5CUVZrc1pVRkJRU3hEUVVOSlJTeEhRVUZCUVN4RFFVRkJRU3hEUVVkNFF5eFBRVUZQU1N4SlFVRkJRU3hEUVVGTFF5eExRVUZCUVN4RFFVRk5UQ3hIUVVGQlFTeERRVUZCUVN4RFFVbHdRaXhQUVVGUFNpeExRVUZCUVN4RFFVRk5WU3hWUVVGQlFTeERRVUZoTEVWQlFVRXNRMEZCU3l4TFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sdHVkV3hzWFgwPSIsImZ1bmN0aW9uIGNvbmZpZyhuYW1lKXt0cnl7aWYoIWdsb2JhbC5sb2NhbFN0b3JhZ2UpcmV0dXJuITF9Y2F0Y2goXyl7cmV0dXJuITF9dmFyIHZhbD1nbG9iYWwubG9jYWxTdG9yYWdlW25hbWVdO3JldHVybiBudWxsIT12YWwmJlwidHJ1ZVwiPT09U3RyaW5nKHZhbCkudG9Mb3dlckNhc2UoKX1tb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihmbixtc2cpe2lmKGNvbmZpZyhcIm5vRGVwcmVjYXRpb25cIikpcmV0dXJuIGZuO3ZhciB3YXJuZWQ9ITE7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoIXdhcm5lZCl7aWYoY29uZmlnKFwidGhyb3dEZXByZWNhdGlvblwiKSl0aHJvdyBuZXcgRXJyb3IobXNnKTtjb25maWcoXCJ0cmFjZURlcHJlY2F0aW9uXCIpP2NvbnNvbGUudHJhY2UobXNnKTpjb25zb2xlLndhcm4obXNnKSx3YXJuZWQ9ITB9cmV0dXJuIGZuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1KeWIzZHpaWEl1YW5NaVhTd2libUZ0WlhNaU9sc2lZMjl1Wm1sbklpd2libUZ0WlNJc0ltZHNiMkpoYkNJc0lteHZZMkZzVTNSdmNtRm5aU0lzSWw4aUxDSjJZV3dpTENKVGRISnBibWNpTENKMGIweHZkMlZ5UTJGelpTSXNJbTF2WkhWc1pTSXNJbVY0Y0c5eWRITWlMQ0ptYmlJc0ltMXpaeUlzSW5kaGNtNWxaQ0lzSWtWeWNtOXlJaXdpWTI5dWMyOXNaU0lzSW5SeVlXTmxJaXdpZDJGeWJpSXNJbUZ3Y0d4NUlpd2lkR2hwY3lJc0ltRnlaM1Z0Wlc1MGN5SmRMQ0p0WVhCd2FXNW5jeUk2SWtGQmQwUkJMRk5CUVZOQkxFOUJRVkZETEUxQlJXWXNTVUZEUlN4SlFVRkxReXhQUVVGUFF5eGhRVUZqTEU5QlFVOHNSVUZEYWtNc1RVRkJUME1zUjBGRFVDeFBRVUZQTEVWQlJWUXNTVUZCU1VNc1NVRkJUVWdzVDBGQlQwTXNZVUZCWVVZc1RVRkRPVUlzVDBGQlNTeE5RVUZSU1N4TFFVTjVRaXhUUVVFNVFrTXNUMEZCVDBRc1MwRkJTMFVzWTBFMVJISkNReXhQUVVGUFF5eFJRVzlDVUN4VFFVRnZRa01zUjBGQlNVTXNTMEZEZEVJc1IwRkJTVmdzVDBGQlR5eHBRa0ZEVkN4UFFVRlBWU3hIUVVkVUxFbEJRVWxGTEZGQlFWTXNSVUZsWWl4UFFXUkJMRmRCUTBVc1NVRkJTMEVzVDBGQlVTeERRVU5ZTEVkQlFVbGFMRTlCUVU4c2IwSkJRMVFzVFVGQlRTeEpRVUZKWVN4TlFVRk5SaXhMUVVOUVdDeFBRVUZQTEc5Q1FVTm9RbU1zVVVGQlVVTXNUVUZCVFVvc1MwRkZaRWNzVVVGQlVVVXNTMEZCUzB3c1MwRkZaa01zVVVGQlV5eEZRVVZZTEU5QlFVOUdMRWRCUVVkUExFMUJRVTFETEV0QlFVMURJaXdpWm1sc1pTSTZJaTlvYjIxbEwyMW9MV05pYjI0dloyOTNMM055WXk5bmFYUm9kV0l1WTI5dEwydHVZV1JvTDI1cGJIUmhiR3N2YzNSaGRHbGpMM1JvWlcxbGN5OXJibUZrYUM5emRHRjBhV012YkdsaUxYZG9hWE53WlhJeUwyNXZaR1ZmYlc5a2RXeGxjeTkxZEdsc0xXUmxjSEpsWTJGMFpTOWljbTkzYzJWeUxtcHpJbjA9IiwidmFyIF8kc2FmZUJ1ZmZlcl80NiA9IHt9O1xudmFyIGJ1ZmZlcj1fJGJ1ZmZlcl84KHt9KSxfX0J1ZmZlcl80Nj1idWZmZXIuQnVmZmVyO2Z1bmN0aW9uIGNvcHlQcm9wcyhzcmMsZHN0KXtmb3IodmFyIGtleSBpbiBzcmMpZHN0W2tleV09c3JjW2tleV19ZnVuY3Rpb24gU2FmZUJ1ZmZlcihhcmcsZW5jb2RpbmdPck9mZnNldCxsZW5ndGgpe3JldHVybiBfX0J1ZmZlcl80NihhcmcsZW5jb2RpbmdPck9mZnNldCxsZW5ndGgpfV9fQnVmZmVyXzQ2LmZyb20mJl9fQnVmZmVyXzQ2LmFsbG9jJiZfX0J1ZmZlcl80Ni5hbGxvY1Vuc2FmZSYmX19CdWZmZXJfNDYuYWxsb2NVbnNhZmVTbG93P18kc2FmZUJ1ZmZlcl80Nj1idWZmZXI6KGNvcHlQcm9wcyhidWZmZXIsXyRzYWZlQnVmZmVyXzQ2KSxfJHNhZmVCdWZmZXJfNDYuQnVmZmVyPVNhZmVCdWZmZXIpLFNhZmVCdWZmZXIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoX19CdWZmZXJfNDYucHJvdG90eXBlKSxjb3B5UHJvcHMoX19CdWZmZXJfNDYsU2FmZUJ1ZmZlciksU2FmZUJ1ZmZlci5mcm9tPWZ1bmN0aW9uKGFyZyxlbmNvZGluZ09yT2Zmc2V0LGxlbmd0aCl7aWYoXCJudW1iZXJcIj09dHlwZW9mIGFyZyl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXJcIik7cmV0dXJuIF9fQnVmZmVyXzQ2KGFyZyxlbmNvZGluZ09yT2Zmc2V0LGxlbmd0aCl9LFNhZmVCdWZmZXIuYWxsb2M9ZnVuY3Rpb24oc2l6ZSxmaWxsLGVuY29kaW5nKXtpZihcIm51bWJlclwiIT10eXBlb2Ygc2l6ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlclwiKTt2YXIgYnVmPV9fQnVmZmVyXzQ2KHNpemUpO3JldHVybiB2b2lkIDAhPT1maWxsP1wic3RyaW5nXCI9PXR5cGVvZiBlbmNvZGluZz9idWYuZmlsbChmaWxsLGVuY29kaW5nKTpidWYuZmlsbChmaWxsKTpidWYuZmlsbCgwKSxidWZ9LFNhZmVCdWZmZXIuYWxsb2NVbnNhZmU9ZnVuY3Rpb24oc2l6ZSl7aWYoXCJudW1iZXJcIiE9dHlwZW9mIHNpemUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIik7cmV0dXJuIF9fQnVmZmVyXzQ2KHNpemUpfSxTYWZlQnVmZmVyLmFsbG9jVW5zYWZlU2xvdz1mdW5jdGlvbihzaXplKXtpZihcIm51bWJlclwiIT10eXBlb2Ygc2l6ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlclwiKTtyZXR1cm4gYnVmZmVyLlNsb3dCdWZmZXIoc2l6ZSl9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbWx1WkdWNExtcHpJbDBzSW01aGJXVnpJanBiSW1KMVptWmxjaUlzSW5KbGNYVnBjbVVpTENKQ2RXWm1aWElpTENKamIzQjVVSEp2Y0hNaUxDSnpjbU1pTENKa2MzUWlMQ0pyWlhraUxDSlRZV1psUW5WbVptVnlJaXdpWVhKbklpd2laVzVqYjJScGJtZFBjazltWm5ObGRDSXNJbXhsYm1kMGFDSXNJbVp5YjIwaUxDSmhiR3h2WXlJc0ltRnNiRzlqVlc1ellXWmxJaXdpWVd4c2IyTlZibk5oWm1WVGJHOTNJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSW5CeWIzUnZkSGx3WlNJc0lrOWlhbVZqZENJc0ltTnlaV0YwWlNJc0lsUjVjR1ZGY25KdmNpSXNJbk5wZW1VaUxDSm1hV3hzSWl3aVpXNWpiMlJwYm1jaUxDSmlkV1lpTENKMWJtUmxabWx1WldRaUxDSlRiRzkzUW5WbVptVnlJbDBzSW0xaGNIQnBibWR6SWpvaU8wRkJSVUVzU1VGQlNVRXNUVUZCUVVFc1EwRkJVME1zWTBGQlVTeERRVU5xUWtNc1YwRkJRVUVzUTBGQlUwWXNUVUZCUVVFc1EwRkJUMFVzVFVGQlFVRXNRMEZIY0VJc1UwRkJVME1zVTBGQlFVRXNRMEZCVjBNc1IwRkJRVUVzUTBGQlMwTXNSMEZCUVVFc1EwRkJRVUVzUTBGRGRrSXNTVUZCU3l4SlFVRkpReXhIUVVGQlFTeEpRVUZQUml4SFFVRkJRU3hEUVVOa1F5eEhRVUZCUVN4RFFVRkpReXhIUVVGQlFTeERRVUZCUVN4RFFVRlBSaXhIUVVGQlFTeERRVUZKUlN4SFFVRkJRU3hEUVVGQlFTeERRVmR1UWl4VFFVRlRReXhWUVVGQlFTeERRVUZaUXl4SFFVRkJRU3hEUVVGTFF5eG5Ra0ZCUVVFc1EwRkJhMEpETEUxQlFVRkJMRU5CUVVGQkxFTkJRekZETEU5QlFVOVNMRmRCUVVGQkxFTkJRVTlOTEVkQlFVRkJMRU5CUVV0RExHZENRVUZCUVN4RFFVRnJRa01zVFVGQlFVRXNRMEZCUVVFc1EwRlVia05TTEZkQlFVRkJMRU5CUVU5VExFbEJRVUZCTEVWQlFWRlVMRmRCUVVGQkxFTkJRVTlWTEV0QlFVRkJMRVZCUVZOV0xGZEJRVUZCTEVOQlFVOVhMRmRCUVVGQkxFVkJRV1ZZTEZkQlFVRkJMRU5CUVU5WkxHVkJRVUZCTEVOQlF6bEVReXhsUVVGUFF5eERRVUZWYUVJc1RVRkJRVUVzUlVGSGFrSkhMRk5CUVVGQkxFTkJRVlZJTEUxQlFVRkJMRU5CUVZGblFpeGxRVUZCUVN4RFFVRkJRU3hEUVVOc1FrRXNaVUZCUVVFc1EwRkJVV1FzVFVGQlFVRXNRMEZCVTBzc1ZVRkJRVUVzUTBGQlFVRXNRMEZQYmtKQkxGVkJRVUZCTEVOQlFWZFZMRk5CUVVGQkxFTkJRVmxETEUxQlFVRkJMRU5CUVU5RExFMUJRVUZCTEVOQlFVOXFRaXhYUVVGQlFTeERRVUZQWlN4VFFVRkJRU3hEUVVGQlFTeERRVWMxUTJRc1UwRkJRVUVzUTBGQlZVUXNWMEZCUVVFc1EwRkJVVXNzVlVGQlFVRXNRMEZCUVVFc1EwRkZiRUpCTEZWQlFVRkJMRU5CUVZkSkxFbEJRVUZCTEVOQlFVOHNVMEZCVlVnc1IwRkJRVUVzUTBGQlMwTXNaMEpCUVVGQkxFTkJRV3RDUXl4TlFVRkJRU3hEUVVGQlFTeERRVU5xUkN4SFFVRnRRaXhSUVVGQkxFVkJRVUVzVDBGQlVrWXNSMEZCUVVFc1EwRkRWQ3hOUVVGTkxFbEJRVWxaTEZOQlFVRkJMRU5CUVZVc0swSkJRVUVzUTBGQlFTeERRVVYwUWl4UFFVRlBiRUlzVjBGQlFVRXNRMEZCVDAwc1IwRkJRVUVzUTBGQlMwTXNaMEpCUVVGQkxFTkJRV3RDUXl4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZDJRMGdzVlVGQlFVRXNRMEZCVjBzc1MwRkJRVUVzUTBGQlVTeFRRVUZWVXl4SlFVRkJRU3hEUVVGTlF5eEpRVUZCUVN4RFFVRk5ReXhSUVVGQlFTeERRVUZCUVN4RFFVTjJReXhIUVVGdlFpeFJRVUZCTEVWQlFVRXNUMEZCVkVZc1NVRkJRVUVzUTBGRFZDeE5RVUZOTEVsQlFVbEVMRk5CUVVGQkxFTkJRVlVzTWtKQlFVRXNRMEZCUVN4RFFVVjBRaXhKUVVGSlNTeEhRVUZCUVN4RFFVRk5kRUlzVjBGQlFVRXNRMEZCVDIxQ0xFbEJRVUZCTEVOQlFVRkJMRU5CVldwQ0xFOUJRVUVzUzBGVVlVa3NRMEZCUVVFc1IwRkJWRWdzU1VGQlFVRXNRMEZEYzBJc1VVRkJRU3hGUVVGQkxFOUJRV0pETEZGQlFVRkJMRU5CUTFSRExFZEJRVUZCTEVOQlFVbEdMRWxCUVVGQkxFTkJRVXRCTEVsQlFVRkJMRU5CUVUxRExGRkJRVUZCTEVOQlFVRkJMRU5CUldaRExFZEJRVUZCTEVOQlFVbEdMRWxCUVVGQkxFTkJRVXRCTEVsQlFVRkJMRU5CUVVGQkxFTkJSMWhGTEVkQlFVRkJMRU5CUVVsR0xFbEJRVUZCTEVOQlFVc3NRMEZCUVN4RFFVRkJMRU5CUlVwRkxFZEJRVUZCTEVOQlFVRkJMRU5CUjFScVFpeFZRVUZCUVN4RFFVRlhUU3hYUVVGQlFTeERRVUZqTEZOQlFWVlJMRWxCUVVGQkxFTkJRVUZCTEVOQlEycERMRWRCUVc5Q0xGRkJRVUVzUlVGQlFTeFBRVUZVUVN4SlFVRkJRU3hEUVVOVUxFMUJRVTBzU1VGQlNVUXNVMEZCUVVFc1EwRkJWU3d5UWtGQlFTeERRVUZCTEVOQlJYUkNMRTlCUVU5c1FpeFhRVUZCUVN4RFFVRlBiVUlzU1VGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSGFFSmtMRlZCUVVGQkxFTkJRVmRQTEdWQlFVRkJMRU5CUVd0Q0xGTkJRVlZQTEVsQlFVRkJMRU5CUVVGQkxFTkJRM0pETEVkQlFXOUNMRkZCUVVFc1JVRkJRU3hQUVVGVVFTeEpRVUZCUVN4RFFVTlVMRTFCUVUwc1NVRkJTVVFzVTBGQlFVRXNRMEZCVlN3eVFrRkJRU3hEUVVGQkxFTkJSWFJDTEU5QlFVOXdRaXhOUVVGQlFTeERRVUZQTUVJc1ZVRkJRVUVzUTBGQlYwd3NTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNlcyNTFiR3hkZlE9PSIsIlwidXNlIHN0cmljdFwiO3ZhciBfJFRyYW5zZm9ybV8zMj1UcmFuc2Zvcm07dmFyIF9yZXF1aXJlJGNvZGVzPV8kZXJyb3JzQnJvd3Nlcl8yOC5jb2RlcyxFUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRD1fcmVxdWlyZSRjb2Rlcy5FUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRCxFUlJfTVVMVElQTEVfQ0FMTEJBQ0s9X3JlcXVpcmUkY29kZXMuRVJSX01VTFRJUExFX0NBTExCQUNLLEVSUl9UUkFOU0ZPUk1fQUxSRUFEWV9UUkFOU0ZPUk1JTkc9X3JlcXVpcmUkY29kZXMuRVJSX1RSQU5TRk9STV9BTFJFQURZX1RSQU5TRk9STUlORyxFUlJfVFJBTlNGT1JNX1dJVEhfTEVOR1RIXzA9X3JlcXVpcmUkY29kZXMuRVJSX1RSQU5TRk9STV9XSVRIX0xFTkdUSF8wLER1cGxleD1fJER1cGxleF8yOSh7fSk7ZnVuY3Rpb24gYWZ0ZXJUcmFuc2Zvcm0oZXIsZGF0YSl7dmFyIHRzPXRoaXMuX3RyYW5zZm9ybVN0YXRlO3RzLnRyYW5zZm9ybWluZz0hMTt2YXIgY2I9dHMud3JpdGVjYjtpZihudWxsPT09Y2IpcmV0dXJuIHRoaXMuZW1pdChcImVycm9yXCIsbmV3IEVSUl9NVUxUSVBMRV9DQUxMQkFDSyk7dHMud3JpdGVjaHVuaz1udWxsLHRzLndyaXRlY2I9bnVsbCxudWxsIT1kYXRhJiZ0aGlzLnB1c2goZGF0YSksY2IoZXIpO3ZhciBycz10aGlzLl9yZWFkYWJsZVN0YXRlO3JzLnJlYWRpbmc9ITEsKHJzLm5lZWRSZWFkYWJsZXx8cnMubGVuZ3RoPHJzLmhpZ2hXYXRlck1hcmspJiZ0aGlzLl9yZWFkKHJzLmhpZ2hXYXRlck1hcmspfWZ1bmN0aW9uIFRyYW5zZm9ybShvcHRpb25zKXtpZighKHRoaXMgaW5zdGFuY2VvZiBUcmFuc2Zvcm0pKXJldHVybiBuZXcgVHJhbnNmb3JtKG9wdGlvbnMpO0R1cGxleC5jYWxsKHRoaXMsb3B0aW9ucyksdGhpcy5fdHJhbnNmb3JtU3RhdGU9e2FmdGVyVHJhbnNmb3JtOmFmdGVyVHJhbnNmb3JtLmJpbmQodGhpcyksbmVlZFRyYW5zZm9ybTohMSx0cmFuc2Zvcm1pbmc6ITEsd3JpdGVjYjpudWxsLHdyaXRlY2h1bms6bnVsbCx3cml0ZWVuY29kaW5nOm51bGx9LHRoaXMuX3JlYWRhYmxlU3RhdGUubmVlZFJlYWRhYmxlPSEwLHRoaXMuX3JlYWRhYmxlU3RhdGUuc3luYz0hMSxvcHRpb25zJiYoXCJmdW5jdGlvblwiPT10eXBlb2Ygb3B0aW9ucy50cmFuc2Zvcm0mJih0aGlzLl90cmFuc2Zvcm09b3B0aW9ucy50cmFuc2Zvcm0pLFwiZnVuY3Rpb25cIj09dHlwZW9mIG9wdGlvbnMuZmx1c2gmJih0aGlzLl9mbHVzaD1vcHRpb25zLmZsdXNoKSksdGhpcy5vbihcInByZWZpbmlzaFwiLHByZWZpbmlzaCl9ZnVuY3Rpb24gcHJlZmluaXNoKCl7dmFyIF90aGlzPXRoaXM7XCJmdW5jdGlvblwiIT10eXBlb2YgdGhpcy5fZmx1c2h8fHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkP2RvbmUodGhpcyxudWxsLG51bGwpOnRoaXMuX2ZsdXNoKGZ1bmN0aW9uKGVyLGRhdGEpe2RvbmUoX3RoaXMsZXIsZGF0YSl9KX1mdW5jdGlvbiBkb25lKHN0cmVhbSxlcixkYXRhKXtpZihlcilyZXR1cm4gc3RyZWFtLmVtaXQoXCJlcnJvclwiLGVyKTtpZihudWxsIT1kYXRhJiZzdHJlYW0ucHVzaChkYXRhKSxzdHJlYW0uX3dyaXRhYmxlU3RhdGUubGVuZ3RoKXRocm93IG5ldyBFUlJfVFJBTlNGT1JNX1dJVEhfTEVOR1RIXzA7aWYoc3RyZWFtLl90cmFuc2Zvcm1TdGF0ZS50cmFuc2Zvcm1pbmcpdGhyb3cgbmV3IEVSUl9UUkFOU0ZPUk1fQUxSRUFEWV9UUkFOU0ZPUk1JTkc7cmV0dXJuIHN0cmVhbS5wdXNoKG51bGwpfV8kaW5oZXJpdHNfYnJvd3Nlcl8yMChUcmFuc2Zvcm0sRHVwbGV4KSxUcmFuc2Zvcm0ucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24oY2h1bmssZW5jb2Rpbmcpe3JldHVybiB0aGlzLl90cmFuc2Zvcm1TdGF0ZS5uZWVkVHJhbnNmb3JtPSExLER1cGxleC5wcm90b3R5cGUucHVzaC5jYWxsKHRoaXMsY2h1bmssZW5jb2RpbmcpfSxUcmFuc2Zvcm0ucHJvdG90eXBlLl90cmFuc2Zvcm09ZnVuY3Rpb24oY2h1bmssZW5jb2RpbmcsY2Ipe2NiKG5ldyBFUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRChcIl90cmFuc2Zvcm0oKVwiKSl9LFRyYW5zZm9ybS5wcm90b3R5cGUuX3dyaXRlPWZ1bmN0aW9uKGNodW5rLGVuY29kaW5nLGNiKXt2YXIgdHM9dGhpcy5fdHJhbnNmb3JtU3RhdGU7aWYodHMud3JpdGVjYj1jYix0cy53cml0ZWNodW5rPWNodW5rLHRzLndyaXRlZW5jb2Rpbmc9ZW5jb2RpbmcsIXRzLnRyYW5zZm9ybWluZyl7dmFyIHJzPXRoaXMuX3JlYWRhYmxlU3RhdGU7KHRzLm5lZWRUcmFuc2Zvcm18fHJzLm5lZWRSZWFkYWJsZXx8cnMubGVuZ3RoPHJzLmhpZ2hXYXRlck1hcmspJiZ0aGlzLl9yZWFkKHJzLmhpZ2hXYXRlck1hcmspfX0sVHJhbnNmb3JtLnByb3RvdHlwZS5fcmVhZD1mdW5jdGlvbihuKXt2YXIgdHM9dGhpcy5fdHJhbnNmb3JtU3RhdGU7bnVsbD09PXRzLndyaXRlY2h1bmt8fHRzLnRyYW5zZm9ybWluZz90cy5uZWVkVHJhbnNmb3JtPSEwOih0cy50cmFuc2Zvcm1pbmc9ITAsdGhpcy5fdHJhbnNmb3JtKHRzLndyaXRlY2h1bmssdHMud3JpdGVlbmNvZGluZyx0cy5hZnRlclRyYW5zZm9ybSkpfSxUcmFuc2Zvcm0ucHJvdG90eXBlLl9kZXN0cm95PWZ1bmN0aW9uKGVycixjYil7RHVwbGV4LnByb3RvdHlwZS5fZGVzdHJveS5jYWxsKHRoaXMsZXJyLGZ1bmN0aW9uKGVycjIpe2NiKGVycjIpfSl9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbDl6ZEhKbFlXMWZkSEpoYm5ObWIzSnRMbXB6SWwwc0ltNWhiV1Z6SWpwYkltMXZaSFZzWlNJc0ltVjRjRzl5ZEhNaUxDSlVjbUZ1YzJadmNtMGlMQ0pmY21WeGRXbHlaU1JqYjJSbGN5SXNJbkpsY1hWcGNtVWlMQ0pqYjJSbGN5SXNJa1ZTVWw5TlJWUklUMFJmVGs5VVgwbE5VRXhGVFVWT1ZFVkVJaXdpUlZKU1gwMVZURlJKVUV4RlgwTkJURXhDUVVOTElpd2lSVkpTWDFSU1FVNVRSazlTVFY5QlRGSkZRVVJaWDFSU1FVNVRSazlTVFVsT1J5SXNJa1ZTVWw5VVVrRk9VMFpQVWsxZlYwbFVTRjlNUlU1SFZFaGZNQ0lzSWtSMWNHeGxlQ0lzSW1GbWRHVnlWSEpoYm5ObWIzSnRJaXdpWlhJaUxDSmtZWFJoSWl3aWRITWlMQ0owYUdseklpd2lYM1J5WVc1elptOXliVk4wWVhSbElpd2lkSEpoYm5ObWIzSnRhVzVuSWl3aVkySWlMQ0ozY21sMFpXTmlJaXdpWlcxcGRDSXNJbmR5YVhSbFkyaDFibXNpTENKd2RYTm9JaXdpY25NaUxDSmZjbVZoWkdGaWJHVlRkR0YwWlNJc0luSmxZV1JwYm1jaUxDSnVaV1ZrVW1WaFpHRmliR1VpTENKc1pXNW5kR2dpTENKb2FXZG9WMkYwWlhKTllYSnJJaXdpWDNKbFlXUWlMQ0p2Y0hScGIyNXpJaXdpWTJGc2JDSXNJbUpwYm1RaUxDSnVaV1ZrVkhKaGJuTm1iM0p0SWl3aWQzSnBkR1ZsYm1OdlpHbHVaeUlzSW5ONWJtTWlMQ0owY21GdWMyWnZjbTBpTENKZmRISmhibk5tYjNKdElpd2labXgxYzJnaUxDSmZabXgxYzJnaUxDSnZiaUlzSW5CeVpXWnBibWx6YUNJc0lsOTBhR2x6SWl3aVpHVnpkSEp2ZVdWa0lpd2laRzl1WlNJc0luTjBjbVZoYlNJc0lsOTNjbWwwWVdKc1pWTjBZWFJsSWl3aWNISnZkRzkwZVhCbElpd2lZMmgxYm1zaUxDSmxibU52WkdsdVp5SXNJbDkzY21sMFpTSXNJbTRpTENKZlpHVnpkSEp2ZVNJc0ltVnljaUlzSW1WeWNqSWlYU3dpYldGd2NHbHVaM01pT2lKQlFUWkVRU3haUVVGQkxFTkJSVUZCTEd0Q1FVRlBReXhEUVVGVlF5eFRRVUZCUVN4RFFVVnFRaXhKUVVGSlF5eGpRVUZCUVN4RFFVRnBRa01zYTBKQlFWRXNRMEZCWVVNc1MwRkJRVUVzUTBGRGRFTkRMREJDUVVGQlFTeERRVUUyUWtnc1kwRkJRVUVzUTBGQlpVY3NNRUpCUVVGQkxFTkJRelZEUXl4eFFrRkJRVUVzUTBGQmQwSktMR05CUVVGQkxFTkJRV1ZKTEhGQ1FVRkJRU3hEUVVOMlEwTXNhME5CUVVGQkxFTkJRWEZEVEN4alFVRkJRU3hEUVVGbFN5eHJRMEZCUVVFc1EwRkRjRVJETERKQ1FVRkJRU3hEUVVFNFFrNHNZMEZCUVVFc1EwRkJaVTBzTWtKQlFVRkJMRU5CUlRkRFF5eE5RVUZCUVN4RFFVRlRUaXhsUVVGUkxFTkJTWEpDTEZOQlFWTlBMR05CUVVGQkxFTkJRV1ZETEVWQlFVRkJMRU5CUVVsRExFbEJRVUZCTEVOQlFVRkJMRU5CUXpGQ0xFbEJRVWxETEVWQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVdERMR1ZCUVVGQkxFTkJRMlJHTEVWQlFVRkJMRU5CUVVkSExGbEJRVUZCTEVOQlFVRkJMRU5CUVdVc1EwRkJRU3hEUVVOc1FpeEpRVUZKUXl4RlFVRkJRU3hEUVVGTFNpeEZRVUZCUVN4RFFVRkhTeXhQUVVGQlFTeERRVVZhTEVkQlFWY3NTVUZCUVN4SFFVRlFSQ3hGUVVGQlFTeERRVU5HTEU5QlFVOUlMRWxCUVVGQkxFTkJRVXRMTEVsQlFVRkJMRU5CUVVzc1QwRkJRU3hEUVVGVExFbEJRVWxpTEhGQ1FVRkJRU3hEUVVGQlFTeERRVWRvUTA4c1JVRkJRVUVzUTBGQlIwOHNWVUZCUVVFc1EwRkJZU3hKUVVGQkxFTkJRMmhDVUN4RlFVRkJRU3hEUVVGSFN5eFBRVUZCUVN4RFFVRlZMRWxCUVVFc1EwRkRSQ3hKUVVGQkxFVkJRVkpPTEVsQlFVRkJMRVZCUTBaRkxFbEJRVUZCTEVOQlFVdFBMRWxCUVVGQkxFTkJRVXRVTEVsQlFVRkJMRU5CUVVGQkxFTkJRMXBMTEVWQlFVRkJMRU5CUVVkT0xFVkJRVUZCTEVOQlFVRkJMRU5CUTBnc1NVRkJTVmNzUlVGQlFVRXNRMEZCUzFJc1NVRkJRVUVzUTBGQlMxTXNZMEZCUVVFc1EwRkRaRVFzUlVGQlFVRXNRMEZCUjBVc1QwRkJRVUVzUTBGQlFVRXNRMEZCVlN4RFFVRkJMRU5CUVVFc1EwRkZWRVlzUlVGQlFVRXNRMEZCUjBjc1dVRkJRVUVzUlVGQlowSklMRVZCUVVGQkxFTkJRVWRKTEUxQlFVRkJMRU5CUVZOS0xFVkJRVUZCTEVOQlFVZExMR0ZCUVVGQkxFZEJRM0JEWWl4SlFVRkJRU3hEUVVGTFl5eExRVUZCUVN4RFFVRk5UaXhGUVVGQlFTeERRVUZIU3l4aFFVRkJRU3hEUVVGQlFTeERRVWxzUWl4VFFVRlRNVUlzVTBGQlFVRXNRMEZCVlRSQ0xFOUJRVUZCTEVOQlFVRkJMRU5CUTJwQ0xFZEJRVUVzUlVGQlRXWXNTVUZCUVVFc1dVRkJaMEppTEZOQlFVRkJMRU5CUVVGQkxFTkJRVmtzVDBGQlR5eEpRVUZKUVN4VFFVRkJRU3hEUVVGVk5FSXNUMEZCUVVFc1EwRkJRVUVzUTBGRGRrUndRaXhOUVVGQlFTeERRVUZQY1VJc1NVRkJRVUVzUTBGQlMyaENMRWxCUVVGQkxFTkJRVTFsTEU5QlFVRkJMRU5CUVVGQkxFTkJRMnhDWml4SlFVRkJRU3hEUVVGTFF5eGxRVUZCUVN4RFFVRnJRaXhEUVVOeVFrd3NZMEZCUVVFc1EwRkJaMEpCTEdOQlFVRkJMRU5CUVdWeFFpeEpRVUZCUVN4RFFVRkxha0lzU1VGQlFVRXNRMEZCUVVFc1EwRkRjRU5yUWl4aFFVRkJRU3hEUVVGQlFTeERRVUZsTEVOQlFVRXNRMEZEWm1oQ0xGbEJRVUZCTEVOQlFVRkJMRU5CUVdNc1EwRkJRU3hEUVVOa1JTeFBRVUZCUVN4RFFVRlRMRWxCUVVFc1EwRkRWRVVzVlVGQlFVRXNRMEZCV1N4SlFVRkJMRU5CUTFwaExHRkJRVUZCTEVOQlFXVXNTVUZCUVN4RFFVRkJMRU5CUjJwQ2JrSXNTVUZCUVVFc1EwRkJTMU1zWTBGQlFVRXNRMEZCWlVVc1dVRkJRVUVzUTBGQlFVRXNRMEZCWlN4RFFVRkJMRU5CU1c1RFdDeEpRVUZCUVN4RFFVRkxVeXhqUVVGQlFTeERRVUZsVnl4SlFVRkJRU3hEUVVGQlFTeERRVUZQTEVOQlFVRXNRMEZGZGtKTUxFOUJRVUZCTEVkQlF5dENMRlZCUVVFc1JVRkJRU3hQUVVGMFFrRXNUMEZCUVVFc1EwRkJVVTBzVTBGQlFVRXNSMEZCTUVKeVFpeEpRVUZCUVN4RFFVRkxjMElzVlVGQlFVRXNRMEZCWVZBc1QwRkJRVUVzUTBGQlVVMHNVMEZCUVVFc1EwRkJRVUVzUTBGRE1VTXNWVUZCUVN4RlFVRkJMRTlCUVd4Q1RpeFBRVUZCUVN4RFFVRlJVU3hMUVVGQlFTeEhRVUZ6UW5aQ0xFbEJRVUZCTEVOQlFVdDNRaXhOUVVGQlFTeERRVUZUVkN4UFFVRkJRU3hEUVVGUlVTeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWxxUlhaQ0xFbEJRVUZCTEVOQlFVdDVRaXhGUVVGQlFTeERRVUZITEZkQlFVRXNRMEZCWVVNc1UwRkJRVUVzUTBGQlFVRXNRMEZIZGtJc1UwRkJVMEVzVTBGQlFVRXNSVUZCUVVFc1EwRkRVQ3hKUVVGSlF5eExRVUZCUVN4RFFVRlJNMElzU1VGQlFVRXNRMEZGWlN4VlFVRkJMRVZCUVVFc1QwRkJhRUpCTEVsQlFVRkJMRU5CUVV0M1FpeE5RVUZCUVN4RlFVRXdRbmhDTEVsQlFVRkJMRU5CUVV0VExHTkJRVUZCTEVOQlFXVnRRaXhUUVVGQlFTeERRVXMxUkVNc1NVRkJRVUVzUTBGQlN6ZENMRWxCUVVGQkxFTkJRVTBzU1VGQlFTeERRVUZOTEVsQlFVRXNRMEZCUVN4RFFVcHFRa0VzU1VGQlFVRXNRMEZCUzNkQ0xFMUJRVUZCTEVOQlFVOHNVMEZCVlROQ0xFVkJRVUZCTEVOQlFVbERMRWxCUVVGQkxFTkJRVUZCTEVOQlEzaENLMElzU1VGQlFVRXNRMEZCUzBZc1MwRkJRVUVzUTBGQlR6bENMRVZCUVVGQkxFTkJRVWxETEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CTmtSMFFpeFRRVUZUSzBJc1NVRkJRVUVzUTBGQlMwTXNUVUZCUVVFc1EwRkJVV3BETEVWQlFVRkJMRU5CUVVsRExFbEJRVUZCTEVOQlFVRkJMRU5CUTNoQ0xFZEJRVWxFTEVWQlFVRkJMRU5CUVVrc1QwRkJUMmxETEUxQlFVRkJMRU5CUVU5NlFpeEpRVUZCUVN4RFFVRkxMRTlCUVVFc1EwRkJVMUlzUlVGQlFVRXNRMEZCUVVFc1EwRk5jRU1zUjBGTVdTeEpRVUZCTEVWQlFWSkRMRWxCUVVGQkxFVkJRMFpuUXl4TlFVRkJRU3hEUVVGUGRrSXNTVUZCUVVFc1EwRkJTMVFzU1VGQlFVRXNRMEZCUVVFc1EwRkpWbWRETEUxQlFVRkJMRU5CUVU5RExHTkJRVUZCTEVOQlFXVnVRaXhOUVVGQlFTeERRVUZSTEUxQlFVMHNTVUZCU1d4Q0xESkNRVUZCUVN4RFFVTTFReXhIUVVGSmIwTXNUVUZCUVVFc1EwRkJUemRDTEdWQlFVRkJMRU5CUVdkQ1F5eFpRVUZCUVN4RFFVRmpMRTFCUVUwc1NVRkJTVlFzYTBOQlFVRkJMRU5CUTI1RUxFOUJRVTl4UXl4TlFVRkJRU3hEUVVGUGRrSXNTVUZCUVVFc1EwRkJTeXhKUVVGQkxFTkJRVUVzUTBFNVNISkNiRUlzY1VKQlFVRkJMRU5CUVc5Q1JpeFRRVUZCUVN4RFFVRlhVU3hOUVVGQlFTeERRVUZCUVN4RFFTdEVMMEpTTEZOQlFVRkJMRU5CUVZVMlF5eFRRVUZCUVN4RFFVRlZla0lzU1VGQlFVRXNRMEZCVHl4VFFVRlZNRUlzUzBGQlFVRXNRMEZCVDBNc1VVRkJRVUVzUTBGQlFVRXNRMEZGTVVNc1QwRkVRV3hETEVsQlFVRkJMRU5CUVV0RExHVkJRVUZCTEVOQlFXZENhVUlzWVVGQlFVRXNRMEZCUVVFc1EwRkJaMElzUTBGQlFTeERRVU01UW5aQ0xFMUJRVUZCTEVOQlFVOXhReXhUUVVGQlFTeERRVUZWZWtJc1NVRkJRVUVzUTBGQlMxTXNTVUZCUVVFc1EwRkJTMmhDTEVsQlFVRkJMRU5CUVUxcFF5eExRVUZCUVN4RFFVRlBReXhSUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVdGcVJDOURMRk5CUVVGQkxFTkJRVlUyUXl4VFFVRkJRU3hEUVVGVlZpeFZRVUZCUVN4RFFVRmhMRk5CUVZWWExFdEJRVUZCTEVOQlFVOURMRkZCUVVGQkxFTkJRVlV2UWl4RlFVRkJRU3hEUVVGQlFTeERRVU14UkVFc1JVRkJRVUVzUTBGQlJ5eEpRVUZKV2l3d1FrRkJRVUVzUTBGQk1rSXNZMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVkd1Ewb3NVMEZCUVVFc1EwRkJWVFpETEZOQlFVRkJMRU5CUVZWSExFMUJRVUZCTEVOQlFWTXNVMEZCVlVZc1MwRkJRVUVzUTBGQlQwTXNVVUZCUVVFc1EwRkJWUzlDTEVWQlFVRkJMRU5CUVVGQkxFTkJRM1JFTEVsQlFVbEtMRVZCUVVGQkxFTkJRVXRETEVsQlFVRkJMRU5CUVV0RExHVkJRVUZCTEVOQlMyUXNSMEZLUVVZc1JVRkJRVUVzUTBGQlIwc3NUMEZCUVVFc1EwRkJWVVFzUlVGQlFVRXNRMEZEWWtvc1JVRkJRVUVzUTBGQlIwOHNWVUZCUVVFc1EwRkJZVEpDTEV0QlFVRkJMRU5CUTJoQ2JFTXNSVUZCUVVFc1EwRkJSMjlDTEdGQlFVRkJMRU5CUVdkQ1pTeFJRVUZCUVN4RFFVRkJRU3hEUVVWa2JrTXNSVUZCUVVFc1EwRkJSMGNzV1VGQlFVRXNRMEZCWXl4RFFVTndRaXhKUVVGSlRTeEZRVUZCUVN4RFFVRkxVaXhKUVVGQlFTeERRVUZMVXl4alFVRkJRU3hEUVVGQlFTeERRVU5XVml4RlFVRkJRU3hEUVVGSGJVSXNZVUZCUVVFc1JVRkJhVUpXTEVWQlFVRkJMRU5CUVVkSExGbEJRVUZCTEVWQlFXZENTQ3hGUVVGQlFTeERRVUZIU1N4TlFVRkJRU3hEUVVGVFNpeEZRVUZCUVN4RFFVRkhTeXhoUVVGQlFTeEhRVUZsWWl4SlFVRkJRU3hEUVVGTFl5eExRVUZCUVN4RFFVRk5UaXhGUVVGQlFTeERRVUZIU3l4aFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVU4elJqRkNMRk5CUVVGQkxFTkJRVlUyUXl4VFFVRkJRU3hEUVVGVmJFSXNTMEZCUVVFc1EwRkJVU3hUUVVGVmMwSXNRMEZCUVVFc1EwRkJRVUVzUTBGRGNFTXNTVUZCU1hKRExFVkJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXRETEdWQlFVRkJMRU5CUlZFc1NVRkJRU3hIUVVGc1FrWXNSVUZCUVVFc1EwRkJSMDhzVlVGQlFVRXNSVUZCZDBKUUxFVkJRVUZCTEVOQlFVZEhMRmxCUVVGQkxFTkJUMmhEU0N4RlFVRkJRU3hEUVVGSGJVSXNZVUZCUVVFc1EwRkJRVUVzUTBGQlowSXNRMEZCUVN4RlFVNXVRbTVDTEVWQlFVRkJMRU5CUVVkSExGbEJRVUZCTEVOQlFVRkJMRU5CUVdVc1EwRkJRU3hEUVVWc1FrWXNTVUZCUVVFc1EwRkJTM05DTEZWQlFVRkJMRU5CUVZkMlFpeEZRVUZCUVN4RFFVRkhUeXhWUVVGQlFTeERRVUZaVUN4RlFVRkJRU3hEUVVGSGIwSXNZVUZCUVVFc1EwRkJaWEJDTEVWQlFVRkJMRU5CUVVkSUxHTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlVYaEVWQ3hUUVVGQlFTeERRVUZWTmtNc1UwRkJRVUVzUTBGQlZVc3NVVUZCUVVFc1EwRkJWeXhUUVVGVlF5eEhRVUZCUVN4RFFVRkxia01zUlVGQlFVRXNRMEZCUVVFc1EwRkROVU5TTEUxQlFVRkJMRU5CUVU5eFF5eFRRVUZCUVN4RFFVRlZTeXhSUVVGQlFTeERRVUZUY2tJc1NVRkJRVUVzUTBGQlMyaENMRWxCUVVGQkxFTkJRVTF6UXl4SFFVRkJRU3hEUVVGTExGTkJRVlZETEVsQlFVRkJMRU5CUVVGQkxFTkJRMnhFY0VNc1JVRkJRVUVzUTBGQlIyOURMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCJcInVzZSBzdHJpY3RcIjt2YXIgXyRQYXNzVGhyb3VnaF8zMD1QYXNzVGhyb3VnaDsvKiByZW1vdmVkOiB2YXIgXyRUcmFuc2Zvcm1fMzI9cmVxdWlyZShcIi4vX3N0cmVhbV90cmFuc2Zvcm1cIik7ICovO2Z1bmN0aW9uIFBhc3NUaHJvdWdoKG9wdGlvbnMpe2lmKCEodGhpcyBpbnN0YW5jZW9mIFBhc3NUaHJvdWdoKSlyZXR1cm4gbmV3IFBhc3NUaHJvdWdoKG9wdGlvbnMpO18kVHJhbnNmb3JtXzMyLmNhbGwodGhpcyxvcHRpb25zKX1fJGluaGVyaXRzX2Jyb3dzZXJfMjAoUGFzc1Rocm91Z2gsXyRUcmFuc2Zvcm1fMzIpLFBhc3NUaHJvdWdoLnByb3RvdHlwZS5fdHJhbnNmb3JtPWZ1bmN0aW9uKGNodW5rLGVuY29kaW5nLGNiKXtjYihudWxsLGNodW5rKX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklsOXpkSEpsWVcxZmNHRnpjM1JvY205MVoyZ3Vhbk1pWFN3aWJtRnRaWE1pT2xzaWJXOWtkV3hsSWl3aVpYaHdiM0owY3lJc0lsQmhjM05VYUhKdmRXZG9JaXdpYjNCMGFXOXVjeUlzSW5Sb2FYTWlMQ0pVY21GdWMyWnZjbTBpTENKallXeHNJaXdpY21WeGRXbHlaU0lzSW5CeWIzUnZkSGx3WlNJc0lsOTBjbUZ1YzJadmNtMGlMQ0pqYUhWdWF5SXNJbVZ1WTI5a2FXNW5JaXdpWTJJaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVhWQ1FTeFpRVUZCTEVOQlJVRkJMRzlDUVVGUFF5eERRVUZWUXl4WFFVRkJRU3hEUVVWcVFpeHJSVUZKUVN4VFFVRlRRU3hYUVVGQlFTeERRVUZaUXl4UFFVRkJRU3hEUVVGQlFTeERRVU51UWl4SFFVRkJMRVZCUVUxRExFbEJRVUZCTEZsQlFXZENSaXhYUVVGQlFTeERRVUZCUVN4RFFVRmpMRTlCUVU4c1NVRkJTVUVzVjBGQlFVRXNRMEZCV1VNc1QwRkJRVUVzUTBGQlFVRXNRMEZETTBSRkxHTkJRVUZCTEVOQlFWVkRMRWxCUVVGQkxFTkJRVXRHTEVsQlFVRkJMRU5CUVUxRUxFOUJRVUZCTEVOQlFVRkJMRU5CU25aQ1NTeHhRa0ZCUVVFc1EwRkJiMEpNTEZkQlFVRkJMRU5CUVdGSExHTkJRVUZCTEVOQlFVRkJMRU5CVDJwRFNDeFhRVUZCUVN4RFFVRlpUU3hUUVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGaExGTkJRVlZETEV0QlFVRkJMRU5CUVU5RExGRkJRVUZCTEVOQlFWVkRMRVZCUVVGQkxFTkJRVUZCTEVOQlF6VkVRU3hGUVVGQlFTeERRVUZITEVsQlFVRXNRMEZCVFVZc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIGVvczt2YXIgX19fcmVxdWlyZSRjb2Rlc18zOT1fJGVycm9yc0Jyb3dzZXJfMjguY29kZXMsRVJSX01JU1NJTkdfQVJHUz1fX19yZXF1aXJlJGNvZGVzXzM5LkVSUl9NSVNTSU5HX0FSR1MsRVJSX1NUUkVBTV9ERVNUUk9ZRUQ9X19fcmVxdWlyZSRjb2Rlc18zOS5FUlJfU1RSRUFNX0RFU1RST1lFRDtmdW5jdGlvbiBfX25vb3BfMzkoZXJyKXtpZihlcnIpdGhyb3cgZXJyfWZ1bmN0aW9uIGNhbGwoZm4pe2ZuKCl9ZnVuY3Rpb24gcGlwZShmcm9tLHRvKXtyZXR1cm4gZnJvbS5waXBlKHRvKX12YXIgXyRwaXBlbGluZV8zOT1mdW5jdGlvbigpe2Zvcih2YXIgX2xlbj1hcmd1bWVudHMubGVuZ3RoLHN0cmVhbXM9bmV3IEFycmF5KF9sZW4pLF9rZXk9MDtfa2V5PF9sZW47X2tleSsrKXN0cmVhbXNbX2tleV09YXJndW1lbnRzW19rZXldO3ZhciBlcnJvcixjYWxsYmFjaz1mdW5jdGlvbihzdHJlYW1zKXtyZXR1cm4gc3RyZWFtcy5sZW5ndGg/XCJmdW5jdGlvblwiIT10eXBlb2Ygc3RyZWFtc1tzdHJlYW1zLmxlbmd0aC0xXT9fX25vb3BfMzk6c3RyZWFtcy5wb3AoKTpfX25vb3BfMzl9KHN0cmVhbXMpO2lmKEFycmF5LmlzQXJyYXkoc3RyZWFtc1swXSkmJihzdHJlYW1zPXN0cmVhbXNbMF0pLHN0cmVhbXMubGVuZ3RoPDIpdGhyb3cgbmV3IEVSUl9NSVNTSU5HX0FSR1MoXCJzdHJlYW1zXCIpO3ZhciBkZXN0cm95cz1zdHJlYW1zLm1hcChmdW5jdGlvbihzdHJlYW0saSl7dmFyIHJlYWRpbmc9aTxzdHJlYW1zLmxlbmd0aC0xO3JldHVybiBmdW5jdGlvbihzdHJlYW0scmVhZGluZyx3cml0aW5nLGNhbGxiYWNrKXtjYWxsYmFjaz1mdW5jdGlvbihjYWxsYmFjayl7dmFyIGNhbGxlZD0hMTtyZXR1cm4gZnVuY3Rpb24oKXtjYWxsZWR8fChjYWxsZWQ9ITAsY2FsbGJhY2suYXBwbHkodm9pZCAwLGFyZ3VtZW50cykpfX0oY2FsbGJhY2spO3ZhciBjbG9zZWQ9ITE7c3RyZWFtLm9uKFwiY2xvc2VcIixmdW5jdGlvbigpe2Nsb3NlZD0hMH0pLHZvaWQgMD09PWVvcyYmKGVvcz1fJGVvc18zNyh7fSkpLGVvcyhzdHJlYW0se3JlYWRhYmxlOnJlYWRpbmcsd3JpdGFibGU6d3JpdGluZ30sZnVuY3Rpb24oZXJyKXtpZihlcnIpcmV0dXJuIGNhbGxiYWNrKGVycik7Y2xvc2VkPSEwLGNhbGxiYWNrKCl9KTt2YXIgZGVzdHJveWVkPSExO3JldHVybiBmdW5jdGlvbihlcnIpe2lmKCFjbG9zZWQmJiFkZXN0cm95ZWQpcmV0dXJuIGRlc3Ryb3llZD0hMCxmdW5jdGlvbihzdHJlYW0pe3JldHVybiBzdHJlYW0uc2V0SGVhZGVyJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBzdHJlYW0uYWJvcnR9KHN0cmVhbSk/c3RyZWFtLmFib3J0KCk6XCJmdW5jdGlvblwiPT10eXBlb2Ygc3RyZWFtLmRlc3Ryb3k/c3RyZWFtLmRlc3Ryb3koKTp2b2lkIGNhbGxiYWNrKGVycnx8bmV3IEVSUl9TVFJFQU1fREVTVFJPWUVEKFwicGlwZVwiKSl9fShzdHJlYW0scmVhZGluZyxpPjAsZnVuY3Rpb24oZXJyKXtlcnJvcnx8KGVycm9yPWVyciksZXJyJiZkZXN0cm95cy5mb3JFYWNoKGNhbGwpLHJlYWRpbmd8fChkZXN0cm95cy5mb3JFYWNoKGNhbGwpLGNhbGxiYWNrKGVycm9yKSl9KX0pO3JldHVybiBzdHJlYW1zLnJlZHVjZShwaXBlKX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluQnBjR1ZzYVc1bExtcHpJbDBzSW01aGJXVnpJanBiSW1WdmN5SXNJbDl5WlhGMWFYSmxKR052WkdWeklpd2ljbVZ4ZFdseVpTSXNJbU52WkdWeklpd2lSVkpTWDAxSlUxTkpUa2RmUVZKSFV5SXNJa1ZTVWw5VFZGSkZRVTFmUkVWVFZGSlBXVVZFSWl3aWJtOXZjQ0lzSW1WeWNpSXNJbU5oYkd3aUxDSm1iaUlzSW5CcGNHVWlMQ0ptY205dElpd2lkRzhpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWl3aVgyeGxiaUlzSW1GeVozVnRaVzUwY3lJc0lteGxibWQwYUNJc0luTjBjbVZoYlhNaUxDSkJjbkpoZVNJc0lsOXJaWGtpTENKbGNuSnZjaUlzSW1OaGJHeGlZV05ySWl3aWNHOXdJaXdpY0c5d1EyRnNiR0poWTJzaUxDSnBjMEZ5Y21GNUlpd2laR1Z6ZEhKdmVYTWlMQ0p0WVhBaUxDSnpkSEpsWVcwaUxDSnBJaXdpY21WaFpHbHVaeUlzSW5keWFYUnBibWNpTENKallXeHNaV1FpTENKaGNIQnNlU0lzSW05dVkyVWlMQ0pqYkc5elpXUWlMQ0p2YmlJc0luVnVaR1ZtYVc1bFpDSXNJbkpsWVdSaFlteGxJaXdpZDNKcGRHRmliR1VpTENKa1pYTjBjbTk1WldRaUxDSnpaWFJJWldGa1pYSWlMQ0poWW05eWRDSXNJbWx6VW1WeGRXVnpkQ0lzSW1SbGMzUnliM2tpTENKa1pYTjBjbTk1WlhJaUxDSm1iM0pGWVdOb0lpd2ljbVZrZFdObElsMHNJbTFoY0hCcGJtZHpJam9pUVVGRlFTeFpRVUZCTEVOQlJVRXNTVUZCU1VFc1IwRkJRVUVzUTBGWFNpeEpRVUZKUXl4dFFrRkJRVUVzUTBGQmFVSkRMR3RDUVVGUkxFTkJRVzFDUXl4TFFVRkJRU3hEUVVNMVEwTXNaMEpCUVVGQkxFTkJRVzFDU0N4dFFrRkJRVUVzUTBGQlpVY3NaMEpCUVVGQkxFTkJRMnhEUXl4dlFrRkJRVUVzUTBGQmRVSktMRzFDUVVGQlFTeERRVUZsU1N4dlFrRkJRVUVzUTBGRk1VTXNVMEZCVTBNc1UwRkJRVUVzUTBGQlMwTXNSMEZCUVVFc1EwRkJRVUVzUTBGRldpeEhRVUZKUVN4SFFVRkJRU3hEUVVGTExFMUJRVTFCTEVkQlFVRkJMRU5CYTBOcVFpeFRRVUZUUXl4SlFVRkJRU3hEUVVGTFF5eEZRVUZCUVN4RFFVRkJRU3hEUVVOYVFTeEZRVUZCUVN4RlFVRkJRU3hEUVVkR0xGTkJRVk5ETEVsQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVMURMRVZCUVVGQkxFTkJRVUZCTEVOQlEyeENMRTlCUVU5RUxFbEJRVUZCTEVOQlFVdEVMRWxCUVVGQkxFTkJRVXRGTEVWQlFVRkJMRU5CUVVGQkxFTkJiME51UWtNc2FVSkJRVTlETEVOQk0wSlFMRlZCUVVFc1EwRkRSU3hKUVVGTExFbEJRVWxETEVsQlFVRkJMRU5CUVU5RExGTkJRVUZCTEVOQlFWVkRMRTFCUVVGQkxFTkJRVkZETEU5QlFVRkJMRU5CUVZVc1NVRkJTVU1zUzBGQlFVRXNRMEZCVFVvc1NVRkJRVUVzUTBGQlFVRXNRMEZCVDBzc1NVRkJRVUVzUTBGQlR5eERRVUZCTEVOQlFVZEJMRWxCUVVGQkxFTkJRVTlNTEVsQlFVRkJMRU5CUVUxTExFbEJRVUZCTEVWQlFVRkJMRU5CUTJ4R1JpeFBRVUZCUVN4RFFVRlJSU3hKUVVGQlFTeERRVUZCUVN4RFFVRlJTaXhUUVVGQlFTeERRVUZWU1N4SlFVRkJRU3hEUVVGQlFTeERRVWMxUWl4SlFVOUpReXhMUVVGQlFTeERRVkJCUXl4UlFVRkJRU3hEUVZoT0xGTkJRWEZDU2l4UFFVRkJRU3hEUVVGQlFTeERRVU51UWl4UFFVRkxRU3hQUVVGQlFTeERRVUZSUkN4TlFVRkJRU3hEUVVNNFFpeFZRVUZCTEVWQlFVRXNUMEZCYUVORExFOUJRVUZCTEVOQlFWRkJMRTlCUVVGQkxFTkJRVkZFTEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVGQkxFTkJRVEJDV0N4VFFVRkJRU3hEUVVOMlJGa3NUMEZCUVVFc1EwRkJVVXNzUjBGQlFVRXNSVUZCUVVFc1EwRkdZV3BDTEZOQlFVRkJMRU5CVldKclFpeERRVUZaVGl4UFFVRkJRU3hEUVVGQlFTeERRVWN6UWl4SFFVWkpReXhMUVVGQlFTeERRVUZOVFN4UFFVRkJRU3hEUVVGUlVDeFBRVUZCUVN4RFFVRlJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFZEJRVXRCTEU5QlFVRkJMRU5CUVZWQkxFOUJRVUZCTEVOQlFWRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkZOME5CTEU5QlFVRkJMRU5CUVZGRUxFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVTnVRaXhOUVVGTkxFbEJRVWxpTEdkQ1FVRkJRU3hEUVVGcFFpeFRRVUZCTEVOQlFVRXNRMEZKTjBJc1NVRkJTWE5DTEZGQlFVRkJMRU5CUVZkU0xFOUJRVUZCTEVOQlFWRlRMRWRCUVVGQkxFTkJRVWtzVTBGQlZVTXNUVUZCUVVFc1EwRkJVVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkRNME1zU1VGQlNVTXNUMEZCUVVFc1EwRkJWVVFzUTBGQlFVRXNRMEZCU1Znc1QwRkJRVUVzUTBGQlVVUXNUVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJSVzVETEU5QmVrUktMRk5CUVcxQ1Z5eE5RVUZCUVN4RFFVRlJSU3hQUVVGQlFTeERRVUZUUXl4UFFVRkJRU3hEUVVGVFZDeFJRVUZCUVN4RFFVRkJRU3hEUVVNelEwRXNVVUZCUVVFc1EwRjJRa1lzVTBGQlkwRXNVVUZCUVVFc1EwRkJRVUVzUTBGRFdpeEpRVUZKVlN4TlFVRkJRU3hEUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZEWWl4UFFVRlBMRlZCUVVFc1EwRkRSRUVzVFVGQlFVRXNSMEZEU2tFc1RVRkJRVUVzUTBGQlFVRXNRMEZCVXl4RFFVRkJMRU5CUTFSV0xGRkJRVUZCTEVOQlFWTlhMRXRCUVVGQkxFTkJRVUZCTEV0QlFVMHNRMEZCUVN4RFFVRlJha0lzVTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZyUW1SclFpeERRVUZMV2l4UlFVRkJRU3hEUVVGQlFTeERRVU5vUWl4SlFVRkpZU3hOUVVGQlFTeERRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkRZbEFzVFVGQlFVRXNRMEZCVDFFc1JVRkJRVUVzUTBGQlJ5eFBRVUZCTEVOQlFWTXNWVUZCUVN4RFFVTnFRa1FzVFVGQlFVRXNRMEZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRVUVzUTBGQlFTeERRVUZCTEV0QlJVTkZMRU5CUVVGQkxFZEJRVkp5UXl4SFFVRkJRU3hIUVVGdFFrRXNSMEZCUVVFc1EwRkJUVVVzV1VGQlVTeERRVUZCTEVOQlEzSkRSaXhIUVVGQlFTeERRVUZKTkVJc1RVRkJRVUVzUTBGQlVTeERRVU5XVlN4UlFVRkJRU3hEUVVGVlVpeFBRVUZCUVN4RFFVTldVeXhSUVVGQlFTeERRVUZWVWl4UFFVRkJRU3hEUVVGQlFTeERRVU5VTEZOQlFWVjRRaXhIUVVGQlFTeERRVUZCUVN4RFFVTllMRWRCUVVsQkxFZEJRVUZCTEVOQlFVc3NUMEZCVDJVc1VVRkJRVUVzUTBGQlUyWXNSMEZCUVVFc1EwRkJRVUVzUTBGRGVrSTBRaXhOUVVGQlFTeERRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkRWR0lzVVVGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGUml4SlFVRkphMElzVTBGQlFVRXNRMEZCUVVFc1EwRkJXU3hEUVVGQkxFTkJRMmhDTEU5QlFVOHNVMEZCVldwRExFZEJRVUZCTEVOQlFVRkJMRU5CUTJZc1IwRkJRU3hEUVVGSk5FSXNUVUZCUVVFc1JVRkJRVUVzUTBGRFFVc3NVMEZCUVVFc1EwRkhTaXhQUVVaQlFTeFRRVUZCUVN4RFFVRkJRU3hEUVVGWkxFTkJRVUVzUTBGMlFtaENMRk5CUVcxQ1dpeE5RVUZCUVN4RFFVRkJRU3hEUVVOcVFpeFBRVUZQUVN4TlFVRkJRU3hEUVVGUFlTeFRRVUZCUVN4RlFVRnhReXhWUVVGQkxFVkJRVUVzVDBGQmFrSmlMRTFCUVVGQkxFTkJRVTlqTEV0QlFVRkJMRU5CZDBKdVEwTXNRMEZCVldZc1RVRkJRVUVzUTBGQlFVRXNRMEZCWjBKQkxFMUJRVUZCTEVOQlFVOWpMRXRCUVVGQkxFVkJRVUZCTEVOQlExQXNWVUZCUVN4RlFVRkJMRTlCUVc1Q1pDeE5RVUZCUVN4RFFVRlBaMElzVDBGQlFVRXNRMEZCSzBKb1FpeE5RVUZCUVN4RFFVRlBaMElzVDBGQlFVRXNSVUZCUVVFc1EwRkJRVUVzUzBGRGVFUjBRaXhSUVVGQlFTeERRVUZUWml4SFFVRkJRU3hGUVVGUExFbEJRVWxHTEc5Q1FVRkJRU3hEUVVGeFFpeE5RVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CYTBOc1EzZERMRU5CUVZWcVFpeE5RVUZCUVN4RFFVRlJSU3hQUVVGQlFTeERRVVJZUkN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGRGVVSXNVMEZCVlhSQ0xFZEJRVUZCTEVOQlFVRkJMRU5CUXpsRFl5eExRVUZCUVN4SFFVRlBRU3hMUVVGQlFTeERRVUZSWkN4SFFVRkJRU3hEUVVGQlFTeERRVU5vUWtFc1IwRkJRVUVzUlVGQlMyMUNMRkZCUVVGQkxFTkJRVk52UWl4UFFVRkJRU3hEUVVGUmRFTXNTVUZCUVVFc1EwRkJRVUVzUTBGRGRFSnpRaXhQUVVGQlFTeEhRVU5LU2l4UlFVRkJRU3hEUVVGVGIwSXNUMEZCUVVFc1EwRkJVWFJETEVsQlFVRkJMRU5CUVVGQkxFTkJRMnBDWXl4UlFVRkJRU3hEUVVGVFJDeExRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZGlMRTlCUVU5SUxFOUJRVUZCTEVOQlFWRTJRaXhOUVVGQlFTeERRVUZQY2tNc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwidmFyIF8kcmVhZGFibGVCcm93c2VyXzQyID0ge307XG5fJHJlYWRhYmxlQnJvd3Nlcl80Mj1fJHJlYWRhYmxlQnJvd3Nlcl80Mj1fJF9zdHJlYW1fcmVhZGFibGVfMzEoe30pLF8kcmVhZGFibGVCcm93c2VyXzQyLlN0cmVhbT1fJHJlYWRhYmxlQnJvd3Nlcl80MixfJHJlYWRhYmxlQnJvd3Nlcl80Mi5SZWFkYWJsZT1fJHJlYWRhYmxlQnJvd3Nlcl80MixfJHJlYWRhYmxlQnJvd3Nlcl80Mi5Xcml0YWJsZT1fJF9zdHJlYW1fd3JpdGFibGVfMzMoe30pLF8kcmVhZGFibGVCcm93c2VyXzQyLkR1cGxleD1fJER1cGxleF8yOSh7fSksXyRyZWFkYWJsZUJyb3dzZXJfNDIuVHJhbnNmb3JtPV8kVHJhbnNmb3JtXzMyLF8kcmVhZGFibGVCcm93c2VyXzQyLlBhc3NUaHJvdWdoPV8kUGFzc1Rocm91Z2hfMzAsXyRyZWFkYWJsZUJyb3dzZXJfNDIuZmluaXNoZWQ9XyRlb3NfMzcoe30pLF8kcmVhZGFibGVCcm93c2VyXzQyLnBpcGVsaW5lPV8kcGlwZWxpbmVfMzk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluSmxZV1JoWW14bExXSnliM2R6WlhJdWFuTWlYU3dpYm1GdFpYTWlPbHNpWlhod2IzSjBjeUlzSW0xdlpIVnNaU0lzSW5KbGNYVnBjbVVpTENKVGRISmxZVzBpTENKU1pXRmtZV0pzWlNJc0lsZHlhWFJoWW14bElpd2lSSFZ3YkdWNElpd2lWSEpoYm5ObWIzSnRJaXdpVUdGemMxUm9jbTkxWjJnaUxDSm1hVzVwYzJobFpDSXNJbkJwY0dWc2FXNWxJbDBzSW0xaGNIQnBibWR6SWpvaU8wRkJRVUZCTEc5Q1FVRkJRU3hEUVVGVlF5eHZRa0ZCVDBRc1EwRkJWVVVzZVVKQlFWRXNRMEZEYmtOR0xHOUNRVUZCUVN4RFFVRlJSeXhOUVVGQlFTeERRVUZUU0N4dlFrRkJRVUVzUTBGRGFrSkJMRzlDUVVGQlFTeERRVUZSU1N4UlFVRkJRU3hEUVVGWFNpeHZRa0ZCUVVFc1EwRkRia0pCTEc5Q1FVRkJRU3hEUVVGUlN5eFJRVUZCUVN4RFFVRlhTQ3g1UWtGQlVTeERRVU16UWtZc2IwSkJRVUZCTEVOQlFWRk5MRTFCUVVGQkxFTkJRVk5LTEdWQlFWRXNRMEZEZWtKR0xHOUNRVUZCUVN4RFFVRlJUeXhUUVVGQlFTeERRVUZaVEN4alFVRlJMRU5CUXpWQ1JpeHZRa0ZCUVVFc1EwRkJVVkVzVjBGQlFVRXNRMEZCWTA0c1owSkJRVkVzUTBGRE9VSkdMRzlDUVVGQlFTeERRVUZSVXl4UlFVRkJRU3hEUVVGWFVDeFpRVUZSTEVOQlF6TkNSaXh2UWtGQlFVRXNRMEZCVVZVc1VVRkJRVUVzUTBGQlYxSXNZVUZCVVN4RFFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCJ2YXIgXyR0aHJvdWdoMl80MyA9IHt9O1xuY29uc3R7VHJhbnNmb3JtOl9fVHJhbnNmb3JtXzQzfT1fJHJlYWRhYmxlQnJvd3Nlcl80MjtmdW5jdGlvbiB0aHJvdWdoMihjb25zdHJ1Y3Qpe3JldHVybihvcHRpb25zLHRyYW5zZm9ybSxmbHVzaCk9PihcImZ1bmN0aW9uXCI9PXR5cGVvZiBvcHRpb25zJiYoZmx1c2g9dHJhbnNmb3JtLHRyYW5zZm9ybT1vcHRpb25zLG9wdGlvbnM9e30pLFwiZnVuY3Rpb25cIiE9dHlwZW9mIHRyYW5zZm9ybSYmKHRyYW5zZm9ybT0oKGNodW5rLGVuYyxjYik9PmNiKG51bGwsY2h1bmspKSksXCJmdW5jdGlvblwiIT10eXBlb2YgZmx1c2gmJihmbHVzaD1udWxsKSxjb25zdHJ1Y3Qob3B0aW9ucyx0cmFuc2Zvcm0sZmx1c2gpKX1jb25zdCBtYWtlPXRocm91Z2gyKChvcHRpb25zLHRyYW5zZm9ybSxmbHVzaCk9Pntjb25zdCB0Mj1uZXcgX19UcmFuc2Zvcm1fNDMob3B0aW9ucyk7cmV0dXJuIHQyLl90cmFuc2Zvcm09dHJhbnNmb3JtLGZsdXNoJiYodDIuX2ZsdXNoPWZsdXNoKSx0Mn0pLGN0b3I9dGhyb3VnaDIoKG9wdGlvbnMsdHJhbnNmb3JtLGZsdXNoKT0+e2Z1bmN0aW9uIFRocm91Z2gyKG92ZXJyaWRlKXtpZighKHRoaXMgaW5zdGFuY2VvZiBUaHJvdWdoMikpcmV0dXJuIG5ldyBUaHJvdWdoMihvdmVycmlkZSk7dGhpcy5vcHRpb25zPU9iamVjdC5hc3NpZ24oe30sb3B0aW9ucyxvdmVycmlkZSksX19UcmFuc2Zvcm1fNDMuY2FsbCh0aGlzLHRoaXMub3B0aW9ucyksdGhpcy5fdHJhbnNmb3JtPXRyYW5zZm9ybSxmbHVzaCYmKHRoaXMuX2ZsdXNoPWZsdXNoKX1yZXR1cm4gZnVuY3Rpb24oZm4sc3VwKXtmbi5zdXBlcl89c3VwLGZuLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHN1cC5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTpmbixlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KX0oVGhyb3VnaDIsX19UcmFuc2Zvcm1fNDMpLFRocm91Z2gyfSksb2JqPXRocm91Z2gyKGZ1bmN0aW9uKG9wdGlvbnMsdHJhbnNmb3JtLGZsdXNoKXtjb25zdCB0Mj1uZXcgX19UcmFuc2Zvcm1fNDMoT2JqZWN0LmFzc2lnbih7b2JqZWN0TW9kZTohMCxoaWdoV2F0ZXJNYXJrOjE2fSxvcHRpb25zKSk7cmV0dXJuIHQyLl90cmFuc2Zvcm09dHJhbnNmb3JtLGZsdXNoJiYodDIuX2ZsdXNoPWZsdXNoKSx0Mn0pO18kdGhyb3VnaDJfNDM9bWFrZSxfJHRocm91Z2gyXzQzLmN0b3I9Y3RvcixfJHRocm91Z2gyXzQzLm9iaj1vYmo7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluUm9jbTkxWjJneUxtcHpJbDBzSW01aGJXVnpJanBiSWxSeVlXNXpabTl5YlNJc0luSmxjWFZwY21VaUxDSjBhSEp2ZFdkb01pSXNJbU52Ym5OMGNuVmpkQ0lzSW05d2RHbHZibk1pTENKMGNtRnVjMlp2Y20waUxDSm1iSFZ6YUNJc0ltTm9kVzVySWl3aVpXNWpJaXdpWTJJaUxDSnRZV3RsSWl3aWRESWlMQ0pmZEhKaGJuTm1iM0p0SWl3aVgyWnNkWE5vSWl3aVkzUnZjaUlzSWxSb2NtOTFaMmd5SWl3aWIzWmxjbkpwWkdVaUxDSjBhR2x6SWl3aVQySnFaV04wSWl3aVlYTnphV2R1SWl3aVkyRnNiQ0lzSW1adUlpd2ljM1Z3SWl3aWMzVndaWEpmSWl3aWNISnZkRzkwZVhCbElpd2lZM0psWVhSbElpd2lZMjl1YzNSeWRXTjBiM0lpTENKMllXeDFaU0lzSW1WdWRXMWxjbUZpYkdVaUxDSjNjbWwwWVdKc1pTSXNJbU52Ym1acFozVnlZV0pzWlNJc0ltbHVhR1Z5YVhSeklpd2liMkpxSWl3aWIySnFaV04wVFc5a1pTSXNJbWhwWjJoWFlYUmxjazFoY21zaUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25SeklsMHNJbTFoY0hCcGJtZHpJam9pTzBGQlFVRXNTMEZCUVN4RFFVRk5RU3hUUVVGQlFTeERRVUZGUVN4alFVRkJRU3hEUVVGQlFTeERRVUZqUXl4dlFrRkJVU3hEUVZjNVFpeFRRVUZUUXl4UlFVRkJRU3hEUVVGVlF5eFRRVUZCUVN4RFFVRkJRU3hEUVVOcVFpeE5RVUZQTEVOQlFVTkRMRTlCUVVGQkxFTkJRVk5ETEZOQlFVRkJMRU5CUVZkRExFdEJRVUZCTEVsQlEwZ3NWVUZCUVN4RlFVRkJMRTlCUVZwR0xFOUJRVUZCTEVkQlExUkZMRXRCUVVGQkxFTkJRVkZFTEZOQlFVRkJMRU5CUTFKQkxGTkJRVUZCTEVOQlFWbEVMRTlCUVVGQkxFTkJRMXBCTEU5QlFVRkJMRU5CUVZVc1JVRkJRU3hEUVVGQkxFTkJSMkVzVlVGQlFTeEZRVUZCTEU5QlFXUkRMRk5CUVVGQkxFZEJSVlJCTEZOQlFVRkJMRVZCUVZrc1EwRkJRMFVzUzBGQlFVRXNRMEZCVDBNc1IwRkJRVUVzUTBGQlMwTXNSVUZCUVVFc1IwRkJUMEVzUlVGQlFVRXNRMEZCUnl4SlFVRkJMRU5CUVUxR0xFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIzUkNMRlZCUVVFc1JVRkJRU3hQUVVGV1JDeExRVUZCUVN4SFFVTlVRU3hMUVVGQlFTeERRVUZSTEVsQlFVRXNRMEZCUVN4RFFVZElTQ3hUUVVGQlFTeERRVUZWUXl4UFFVRkJRU3hEUVVGVFF5eFRRVUZCUVN4RFFVRlhReXhMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVV0NlF5eE5RVUZOU1N4SlFVRkJRU3hEUVVGUFVpeFJRVUZCUVN4RFFVRlRMRU5CUVVORkxFOUJRVUZCTEVOQlFWTkRMRk5CUVVGQkxFTkJRVmRETEV0QlFVRkJMRWRCUVVGQkxFTkJRM3BETEUxQlFVMUxMRVZCUVVGQkxFTkJRVXNzU1VGQlNWZ3NZMEZCUVVFc1EwRkJWVWtzVDBGQlFVRXNRMEZCUVVFc1EwRlJla0lzVDBGT1FVOHNSVUZCUVVFc1EwRkJSME1zVlVGQlFVRXNRMEZCWVZBc1UwRkJRVUVzUTBGRldrTXNTMEZCUVVFc1IwRkRSa3NzUlVGQlFVRXNRMEZCUjBVc1RVRkJRVUVzUTBGQlUxQXNTMEZCUVVFc1EwRkJRVUVzUTBGSFVFc3NSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZMU0Vjc1NVRkJRVUVzUTBGQlQxb3NVVUZCUVVFc1EwRkJVeXhEUVVGRFJTeFBRVUZCUVN4RFFVRlRReXhUUVVGQlFTeERRVUZYUXl4TFFVRkJRU3hIUVVGQlFTeERRVU42UXl4VFFVRlRVeXhSUVVGQlFTeERRVUZWUXl4UlFVRkJRU3hEUVVGQlFTeERRVU5xUWl4SFFVRkJMRVZCUVUxRExFbEJRVUZCTEZsQlFXZENSaXhSUVVGQlFTeERRVUZCUVN4RFFVTndRaXhQUVVGUExFbEJRVWxCTEZGQlFVRkJMRU5CUVZORExGRkJRVUZCTEVOQlFVRkJMRU5CUjNSQ1F5eEpRVUZCUVN4RFFVRkxZaXhQUVVGQlFTeERRVUZWWXl4TlFVRkJRU3hEUVVGUFF5eE5RVUZCUVN4RFFVRlBMRVZCUVVFc1EwRkJTV1lzVDBGQlFVRXNRMEZCVTFrc1VVRkJRVUVzUTBGQlFVRXNRMEZGTVVOb1FpeGpRVUZCUVN4RFFVRlZiMElzU1VGQlFVRXNRMEZCUzBnc1NVRkJRVUVzUTBGQlRVRXNTVUZCUVVFc1EwRkJTMklzVDBGQlFVRXNRMEZCUVVFc1EwRkZNVUpoTEVsQlFVRkJMRU5CUVV0TUxGVkJRVUZCTEVOQlFXRlFMRk5CUVVGQkxFTkJRMlJETEV0QlFVRkJMRWRCUTBaWExFbEJRVUZCTEVOQlFVdEtMRTFCUVVGQkxFTkJRVk5RTEV0QlFVRkJMRU5CUVVGQkxFTkJUV3hDTEU5QkwwUkdMRk5CUVcxQ1pTeEZRVUZCUVN4RFFVRkpReXhIUVVGQlFTeERRVUZCUVN4RFFVTnlRa1FzUlVGQlFVRXNRMEZCUjBVc1RVRkJRVUVzUTBGQlUwUXNSMEZCUVVFc1EwRkRXa1FzUlVGQlFVRXNRMEZCUjBjc1UwRkJRVUVzUTBGQldVNHNUVUZCUVVFc1EwRkJUMDhzVFVGQlFVRXNRMEZCVDBnc1IwRkJRVUVzUTBGQlNVVXNVMEZCUVVFc1EwRkJWeXhEUVVNeFEwVXNWMEZCUVVFc1EwRkJZU3hEUVVGRlF5eExRVUZCUVN4RFFVRlBUaXhGUVVGQlFTeERRVUZKVHl4VlFVRkJRU3hEUVVGQlFTeERRVUZaTEVOQlFVRXNRMEZCVDBNc1VVRkJRVUVzUTBGQlFVRXNRMEZCVlN4RFFVRkJMRU5CUVUxRExGbEJRVUZCTEVOQlFVRkJMRU5CUVdNc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVEJFTjBWRExFTkJRVk5vUWl4UlFVRkJRU3hEUVVGVlppeGpRVUZCUVN4RFFVRkJRU3hEUVVWYVpTeFJRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWRJYVVJc1IwRkJRVUVzUTBGQlRUbENMRkZCUVVGQkxFTkJRVk1zVTBGQlZVVXNUMEZCUVVFc1EwRkJVME1zVTBGQlFVRXNRMEZCVjBNc1MwRkJRVUVzUTBGQlFVRXNRMEZEYWtRc1RVRkJUVXNzUlVGQlFVRXNRMEZCU3l4SlFVRkpXQ3hqUVVGQlFTeERRVUZWYTBJc1RVRkJRVUVzUTBGQlQwTXNUVUZCUVVFc1EwRkJUeXhEUVVGRll5eFZRVUZCUVN4RFFVRkJRU3hEUVVGWkxFTkJRVUVzUTBGQlRVTXNZVUZCUVVFc1EwRkJaU3hGUVVGQkxFTkJRVUVzUTBGQlRUbENMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CVVdoR0xFOUJUa0ZQTEVWQlFVRkJMRU5CUVVkRExGVkJRVUZCTEVOQlFXRlFMRk5CUVVGQkxFTkJSVnBETEV0QlFVRkJMRWRCUTBaTExFVkJRVUZCTEVOQlFVZEZMRTFCUVVGQkxFTkJRVk5RTEV0QlFVRkJMRU5CUVVGQkxFTkJSMUJMTEVWQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlIxUjNRaXhoUVVGUFF5eERRVUZWTVVJc1NVRkJRVUVzUTBGRGFrSjVRaXhoUVVGUFF5eERRVUZSZEVJc1NVRkJRVUVzUTBGQlQwRXNTVUZCUVVFc1EwRkRkRUp4UWl4aFFVRlBReXhEUVVGUlNpeEhRVUZCUVN4RFFVRk5RU3hIUVVGQlFTeERRVUZCUVNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYmJuVnNiRjE5IiwidmFyIF8kc3RyZWFtQnJvd3Nlcl82MT1fJGV2ZW50c18xMy5FdmVudEVtaXR0ZXI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluTjBjbVZoYlMxaWNtOTNjMlZ5TG1weklsMHNJbTVoYldWeklqcGJJbTF2WkhWc1pTSXNJbVY0Y0c5eWRITWlMQ0p5WlhGMWFYSmxJaXdpUlhabGJuUkZiV2wwZEdWeUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFVRXNjMEpCUVU5RExFTkJRVlZETEZkQlFWRXNRMEZCVlVNc1dVRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfX293bktleXNfNTUob2JqZWN0LGVudW1lcmFibGVPbmx5KXt2YXIga2V5cz1PYmplY3Qua2V5cyhvYmplY3QpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBzeW1ib2xzPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTtlbnVtZXJhYmxlT25seSYmKHN5bWJvbHM9c3ltYm9scy5maWx0ZXIoZnVuY3Rpb24oc3ltKXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3Qsc3ltKS5lbnVtZXJhYmxlfSkpLGtleXMucHVzaC5hcHBseShrZXlzLHN5bWJvbHMpfXJldHVybiBrZXlzfWZ1bmN0aW9uIF9fX2RlZmluZVByb3BlcnR5XzU1KG9iaixrZXksdmFsdWUpe3JldHVybiBrZXkgaW4gb2JqP09iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosa2V5LHt2YWx1ZTp2YWx1ZSxlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMH0pOm9ialtrZXldPXZhbHVlLG9ian1mdW5jdGlvbiBfX19kZWZpbmVQcm9wZXJ0aWVzXzU1KHRhcmdldCxwcm9wcyl7Zm9yKHZhciBpPTA7aTxwcm9wcy5sZW5ndGg7aSsrKXt2YXIgZGVzY3JpcHRvcj1wcm9wc1tpXTtkZXNjcmlwdG9yLmVudW1lcmFibGU9ZGVzY3JpcHRvci5lbnVtZXJhYmxlfHwhMSxkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBkZXNjcmlwdG9yJiYoZGVzY3JpcHRvci53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCxkZXNjcmlwdG9yLmtleSxkZXNjcmlwdG9yKX19dmFyIF9fQnVmZmVyXzU1PV8kYnVmZmVyXzgoe30pLkJ1ZmZlcixfX2luc3BlY3RfNTU9XyRlbXB0eV82KHt9KS5pbnNwZWN0LF9fY3VzdG9tXzU1PV9faW5zcGVjdF81NSYmX19pbnNwZWN0XzU1LmN1c3RvbXx8XCJpbnNwZWN0XCI7dmFyIF8kYnVmZmVyX2xpc3RfNTU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBCdWZmZXJMaXN0KCl7IWZ1bmN0aW9uKGluc3RhbmNlLENvbnN0cnVjdG9yKXtpZighKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsQnVmZmVyTGlzdCksdGhpcy5oZWFkPW51bGwsdGhpcy50YWlsPW51bGwsdGhpcy5sZW5ndGg9MH12YXIgQ29uc3RydWN0b3IscHJvdG9Qcm9wcyxzdGF0aWNQcm9wcztyZXR1cm4gQ29uc3RydWN0b3I9QnVmZmVyTGlzdCwocHJvdG9Qcm9wcz1be2tleTpcInB1c2hcIix2YWx1ZTpmdW5jdGlvbih2KXt2YXIgZW50cnk9e2RhdGE6dixuZXh0Om51bGx9O3RoaXMubGVuZ3RoPjA/dGhpcy50YWlsLm5leHQ9ZW50cnk6dGhpcy5oZWFkPWVudHJ5LHRoaXMudGFpbD1lbnRyeSwrK3RoaXMubGVuZ3RofX0se2tleTpcInVuc2hpZnRcIix2YWx1ZTpmdW5jdGlvbih2KXt2YXIgZW50cnk9e2RhdGE6dixuZXh0OnRoaXMuaGVhZH07MD09PXRoaXMubGVuZ3RoJiYodGhpcy50YWlsPWVudHJ5KSx0aGlzLmhlYWQ9ZW50cnksKyt0aGlzLmxlbmd0aH19LHtrZXk6XCJzaGlmdFwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYoMCE9PXRoaXMubGVuZ3RoKXt2YXIgcmV0PXRoaXMuaGVhZC5kYXRhO3JldHVybiAxPT09dGhpcy5sZW5ndGg/dGhpcy5oZWFkPXRoaXMudGFpbD1udWxsOnRoaXMuaGVhZD10aGlzLmhlYWQubmV4dCwtLXRoaXMubGVuZ3RoLHJldH19fSx7a2V5OlwiY2xlYXJcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuaGVhZD10aGlzLnRhaWw9bnVsbCx0aGlzLmxlbmd0aD0wfX0se2tleTpcImpvaW5cIix2YWx1ZTpmdW5jdGlvbihzKXtpZigwPT09dGhpcy5sZW5ndGgpcmV0dXJuXCJcIjtmb3IodmFyIHA9dGhpcy5oZWFkLHJldD1cIlwiK3AuZGF0YTtwPXAubmV4dDspcmV0Kz1zK3AuZGF0YTtyZXR1cm4gcmV0fX0se2tleTpcImNvbmNhdFwiLHZhbHVlOmZ1bmN0aW9uKG4pe2lmKDA9PT10aGlzLmxlbmd0aClyZXR1cm4gX19CdWZmZXJfNTUuYWxsb2MoMCk7Zm9yKHZhciBzcmMsdGFyZ2V0LG9mZnNldCxyZXQ9X19CdWZmZXJfNTUuYWxsb2NVbnNhZmUobj4+PjApLHA9dGhpcy5oZWFkLGk9MDtwOylzcmM9cC5kYXRhLHRhcmdldD1yZXQsb2Zmc2V0PWksX19CdWZmZXJfNTUucHJvdG90eXBlLmNvcHkuY2FsbChzcmMsdGFyZ2V0LG9mZnNldCksaSs9cC5kYXRhLmxlbmd0aCxwPXAubmV4dDtyZXR1cm4gcmV0fX0se2tleTpcImNvbnN1bWVcIix2YWx1ZTpmdW5jdGlvbihuLGhhc1N0cmluZ3Mpe3ZhciByZXQ7cmV0dXJuIG48dGhpcy5oZWFkLmRhdGEubGVuZ3RoPyhyZXQ9dGhpcy5oZWFkLmRhdGEuc2xpY2UoMCxuKSx0aGlzLmhlYWQuZGF0YT10aGlzLmhlYWQuZGF0YS5zbGljZShuKSk6cmV0PW49PT10aGlzLmhlYWQuZGF0YS5sZW5ndGg/dGhpcy5zaGlmdCgpOmhhc1N0cmluZ3M/dGhpcy5fZ2V0U3RyaW5nKG4pOnRoaXMuX2dldEJ1ZmZlcihuKSxyZXR9fSx7a2V5OlwiZmlyc3RcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmhlYWQuZGF0YX19LHtrZXk6XCJfZ2V0U3RyaW5nXCIsdmFsdWU6ZnVuY3Rpb24obil7dmFyIHA9dGhpcy5oZWFkLGM9MSxyZXQ9cC5kYXRhO2ZvcihuLT1yZXQubGVuZ3RoO3A9cC5uZXh0Oyl7dmFyIHN0cj1wLmRhdGEsbmI9bj5zdHIubGVuZ3RoP3N0ci5sZW5ndGg6bjtpZihuYj09PXN0ci5sZW5ndGg/cmV0Kz1zdHI6cmV0Kz1zdHIuc2xpY2UoMCxuKSwwPT09KG4tPW5iKSl7bmI9PT1zdHIubGVuZ3RoPygrK2MscC5uZXh0P3RoaXMuaGVhZD1wLm5leHQ6dGhpcy5oZWFkPXRoaXMudGFpbD1udWxsKToodGhpcy5oZWFkPXAscC5kYXRhPXN0ci5zbGljZShuYikpO2JyZWFrfSsrY31yZXR1cm4gdGhpcy5sZW5ndGgtPWMscmV0fX0se2tleTpcIl9nZXRCdWZmZXJcIix2YWx1ZTpmdW5jdGlvbihuKXt2YXIgcmV0PV9fQnVmZmVyXzU1LmFsbG9jVW5zYWZlKG4pLHA9dGhpcy5oZWFkLGM9MTtmb3IocC5kYXRhLmNvcHkocmV0KSxuLT1wLmRhdGEubGVuZ3RoO3A9cC5uZXh0Oyl7dmFyIGJ1Zj1wLmRhdGEsbmI9bj5idWYubGVuZ3RoP2J1Zi5sZW5ndGg6bjtpZihidWYuY29weShyZXQscmV0Lmxlbmd0aC1uLDAsbmIpLDA9PT0obi09bmIpKXtuYj09PWJ1Zi5sZW5ndGg/KCsrYyxwLm5leHQ/dGhpcy5oZWFkPXAubmV4dDp0aGlzLmhlYWQ9dGhpcy50YWlsPW51bGwpOih0aGlzLmhlYWQ9cCxwLmRhdGE9YnVmLnNsaWNlKG5iKSk7YnJlYWt9KytjfXJldHVybiB0aGlzLmxlbmd0aC09YyxyZXR9fSx7a2V5Ol9fY3VzdG9tXzU1LHZhbHVlOmZ1bmN0aW9uKF8sb3B0aW9ucyl7cmV0dXJuIF9faW5zcGVjdF81NSh0aGlzLGZ1bmN0aW9uKHRhcmdldCl7Zm9yKHZhciBpPTE7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7dmFyIHNvdXJjZT1udWxsIT1hcmd1bWVudHNbaV0/YXJndW1lbnRzW2ldOnt9O2klMj9fX293bktleXNfNTUoT2JqZWN0KHNvdXJjZSksITApLmZvckVhY2goZnVuY3Rpb24oa2V5KXtfX19kZWZpbmVQcm9wZXJ0eV81NSh0YXJnZXQsa2V5LHNvdXJjZVtrZXldKX0pOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTpfX293bktleXNfNTUoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24oa2V5KXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LGtleSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSxrZXkpKX0pfXJldHVybiB0YXJnZXR9KHt9LG9wdGlvbnMse2RlcHRoOjAsY3VzdG9tSW5zcGVjdDohMX0pKX19XSkmJl9fX2RlZmluZVByb3BlcnRpZXNfNTUoQ29uc3RydWN0b3IucHJvdG90eXBlLHByb3RvUHJvcHMpLHN0YXRpY1Byb3BzJiZfX19kZWZpbmVQcm9wZXJ0aWVzXzU1KENvbnN0cnVjdG9yLHN0YXRpY1Byb3BzKSxCdWZmZXJMaXN0fSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUoxWm1abGNsOXNhWE4wTG1weklsMHNJbTVoYldWeklqcGJJbTkzYmt0bGVYTWlMQ0p2WW1wbFkzUWlMQ0psYm5WdFpYSmhZbXhsVDI1c2VTSXNJbXRsZVhNaUxDSlBZbXBsWTNRaUxDSm5aWFJQZDI1UWNtOXdaWEowZVZONWJXSnZiSE1pTENKemVXMWliMnh6SWl3aVptbHNkR1Z5SWl3aWMzbHRJaXdpWjJWMFQzZHVVSEp2Y0dWeWRIbEVaWE5qY21sd2RHOXlJaXdpWlc1MWJXVnlZV0pzWlNJc0luQjFjMmdpTENKaGNIQnNlU0lzSWw5a1pXWnBibVZRY205d1pYSjBlU0lzSW05aWFpSXNJbXRsZVNJc0luWmhiSFZsSWl3aVpHVm1hVzVsVUhKdmNHVnlkSGtpTENKamIyNW1hV2QxY21GaWJHVWlMQ0ozY21sMFlXSnNaU0lzSWw5a1pXWnBibVZRY205d1pYSjBhV1Z6SWl3aWRHRnlaMlYwSWl3aWNISnZjSE1pTENKcElpd2liR1Z1WjNSb0lpd2laR1Z6WTNKcGNIUnZjaUlzSWtKMVptWmxjaUlzSW5KbGNYVnBjbVVpTENKcGJuTndaV04wSWl3aVkzVnpkRzl0SWl3aWJXOWtkV3hsSWl3aVpYaHdiM0owY3lJc0lrSjFabVpsY2t4cGMzUWlMQ0pwYm5OMFlXNWpaU0lzSWtOdmJuTjBjblZqZEc5eUlpd2lWSGx3WlVWeWNtOXlJaXdpWDJOc1lYTnpRMkZzYkVOb1pXTnJJaXdpZEdocGN5SXNJbWhsWVdRaUxDSjBZV2xzSWl3aWNISnZkRzlRY205d2N5SXNJbk4wWVhScFkxQnliM0J6SWl3aWRpSXNJbVZ1ZEhKNUlpd2laR0YwWVNJc0ltNWxlSFFpTENKeVpYUWlMQ0p6SWl3aWNDSXNJbTRpTENKaGJHeHZZeUlzSW5OeVl5SXNJbTltWm5ObGRDSXNJbUZzYkc5alZXNXpZV1psSWl3aWNISnZkRzkwZVhCbElpd2lZMjl3ZVNJc0ltTmhiR3dpTENKb1lYTlRkSEpwYm1keklpd2ljMnhwWTJVaUxDSnphR2xtZENJc0lsOW5aWFJUZEhKcGJtY2lMQ0pmWjJWMFFuVm1abVZ5SWl3aVl5SXNJbk4wY2lJc0ltNWlJaXdpWW5WbUlpd2lYeUlzSW05d2RHbHZibk1pTENKaGNtZDFiV1Z1ZEhNaUxDSnpiM1Z5WTJVaUxDSm1iM0pGWVdOb0lpd2laMlYwVDNkdVVISnZjR1Z5ZEhsRVpYTmpjbWx3ZEc5eWN5SXNJbVJsWm1sdVpWQnliM0JsY25ScFpYTWlMQ0pmYjJKcVpXTjBVM0J5WldGa0lpd2laR1Z3ZEdnaUxDSmpkWE4wYjIxSmJuTndaV04wSWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVN4WlFVRkJMRU5CUlVFc1UwRkJVMEVzV1VGQlFVRXNRMEZCVVVNc1RVRkJRVUVzUTBGQlVVTXNZMEZCUVVFc1EwRkJRVUVzUTBGQmEwSXNTVUZCU1VNc1NVRkJRVUVzUTBGQlQwTXNUVUZCUVVFc1EwRkJUMFFzU1VGQlFVRXNRMEZCUzBZc1RVRkJRVUVzUTBGQlFVRXNRMEZCVXl4SFFVRkpSeXhOUVVGQlFTeERRVUZQUXl4eFFrRkJRVUVzUTBGQmRVSXNRMEZCUlN4SlFVRkpReXhQUVVGQlFTeERRVUZWUml4TlFVRkJRU3hEUVVGUFF5eHhRa0ZCUVVFc1EwRkJjMEpLTEUxQlFVRkJMRU5CUVVGQkxFTkJRV0ZETEdOQlFVRkJMRWRCUVdkQ1NTeFBRVUZCUVN4RFFVRlZRU3hQUVVGQlFTeERRVUZSUXl4TlFVRkJRU3hEUVVGUExGTkJRVlZETEVkQlFVRkJMRU5CUVVGQkxFTkJRVThzVDBGQlQwb3NUVUZCUVVFc1EwRkJUMHNzZDBKQlFVRkJMRU5CUVhsQ1VpeE5RVUZCUVN4RFFVRlJUeXhIUVVGQlFTeERRVUZCUVN4RFFVRkxSU3hWUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZuUWxBc1NVRkJRVUVzUTBGQlMxRXNTVUZCUVVFc1EwRkJTME1zUzBGQlFVRXNRMEZCVFZRc1NVRkJRVUVzUTBGQlRVY3NUMEZCUVVFc1EwRkJRVUVzUTBGQldTeFBRVUZQU0N4SlFVRkJRU3hEUVVrNVZTeFRRVUZUVlN4dlFrRkJRVUVzUTBGQlowSkRMRWRCUVVGQkxFTkJRVXRETEVkQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVRkJMRU5CUVdsTExFOUJRWEJLUkN4SFFVRkJRU3hKUVVGUFJDeEhRVUZCUVN4RFFVRlBWaXhOUVVGQlFTeERRVUZQWVN4alFVRkJRU3hEUVVGbFNDeEhRVUZCUVN4RFFVRkxReXhIUVVGQlFTeERRVUZMTEVOQlFVVkRMRXRCUVVGQkxFTkJRVTlCTEV0QlFVRkJMRU5CUVU5T0xGVkJRVUZCTEVOQlFVRkJMRU5CUVZrc1EwRkJRU3hEUVVGTlVTeFpRVUZCUVN4RFFVRkJRU3hEUVVGakxFTkJRVUVzUTBGQlRVTXNVVUZCUVVFc1EwRkJRVUVzUTBGQlZTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRnJRa3dzUjBGQlFVRXNRMEZCU1VNc1IwRkJRVUVzUTBGQlFVRXNRMEZCVDBNc1MwRkJRVUVzUTBGQlowSkdMRWRCUVVGQkxFTkJTVE5OTEZOQlFWTk5MSE5DUVVGQlFTeERRVUZyUWtNc1RVRkJRVUVzUTBGQlVVTXNTMEZCUVVFc1EwRkJRVUVzUTBGQlV5eEpRVUZMTEVsQlFVbERMRU5CUVVGQkxFTkJRVWtzUTBGQlFTeERRVUZIUVN4RFFVRkJRU3hEUVVGSlJDeExRVUZCUVN4RFFVRk5SU3hOUVVGQlFTeERRVUZSUkN4RFFVRkJRU3hGUVVGQlFTeERRVUZMTEVOQlFVVXNTVUZCU1VVc1ZVRkJRVUVzUTBGQllVZ3NTMEZCUVVFc1EwRkJUVU1zUTBGQlFVRXNRMEZCUVVFc1EwRkJTVVVzVlVGQlFVRXNRMEZCVjJZc1ZVRkJRVUVzUTBGQllXVXNWVUZCUVVFc1EwRkJWMllzVlVGQlFVRXNSVUZCUVVFc1EwRkJZeXhEUVVGQkxFTkJRVTlsTEZWQlFVRkJMRU5CUVZkUUxGbEJRVUZCTEVOQlFVRkJMRU5CUVdVc1EwRkJRU3hEUVVGVkxFOUJRVUVzUjBGQlYwOHNWVUZCUVVFc1IwRkJXVUVzVlVGQlFVRXNRMEZCVjA0c1VVRkJRVUVzUTBGQlFVRXNRMEZCVnl4RFFVRkJMRU5CUVVFc1EwRkJUV1lzVFVGQlFVRXNRMEZCVDJFc1kwRkJRVUVzUTBGQlpVa3NUVUZCUVVFc1EwRkJVVWtzVlVGQlFVRXNRMEZCVjFZc1IwRkJRVUVzUTBGQlMxVXNWVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZKTjFNc1NVRkRTVU1zVjBGQlFVRXNRMEZFVjBNc1kwRkJVU3hEUVVORVJDeE5RVUZCUVN4RFFVZHNRa1VzV1VGQlFVRXNRMEZFV1VRc1lVRkJVU3hEUVVOQlF5eFBRVUZCUVN4RFFVVndRa01zVjBGQlFVRXNRMEZCVTBRc1dVRkJRVUVzUlVGQlYwRXNXVUZCUVVFc1EwRkJVVU1zVFVGQlFVRXNSVUZCVlN4VFFVRkJMRU5CVFRGRFF5eHZRa0ZCVDBNc1EwRkZVQ3hWUVVGQkxFTkJRMFVzVTBGQlUwTXNWVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZ5UWxnc1UwRkJlVUpETEZGQlFVRkJMRU5CUVZWRExGZEJRVUZCTEVOQlFVRkJMRU5CUVdVc1IwRkJRU3hGUVVGTlJDeFJRVUZCUVN4WlFVRnZRa01zVjBGQlFVRXNRMEZCUVVFc1EwRkJaMElzVFVGQlRTeEpRVUZKUXl4VFFVRkJRU3hEUVVGVkxHMURRVUZCTEVOQlFVRXNRMEZ6UWpWSFF5eERRVUZuUWtNc1NVRkJRVUVzUTBGQlRVd3NWVUZCUVVFc1EwRkJRVUVzUTBGRmRFSkxMRWxCUVVGQkxFTkJRVXRETEVsQlFVRkJMRU5CUVU4c1NVRkJRU3hEUVVOYVJDeEpRVUZCUVN4RFFVRkxSU3hKUVVGQlFTeERRVUZQTEVsQlFVRXNRMEZEV2tZc1NVRkJRVUVzUTBGQlMySXNUVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJkRUpzUWl4SlFVRnpRbFVzVjBGQlFVRXNRMEZCWVUwc1ZVRkJRVUVzUTBGQldVTXNWMEZCUVVFc1EwRnZUVGRETEU5QmNFMXZRbEFzVjBGQlFVRXNRMEY1UWxCR0xGVkJRVUZCTEVOQlFVRkJMRU5CZWtKdlFsRXNWVUZCUVVFc1EwRjVRbElzUTBGQlF5eERRVU40UW5wQ0xFZEJRVUZCTEVOQlFVc3NUVUZCUVN4RFFVTk1ReXhMUVVGQlFTeERRVUZQTEZOQlFXTXdRaXhEUVVGQlFTeERRVUZCUVN4RFFVTnVRaXhKUVVGSlF5eExRVUZCUVN4RFFVRlJMRU5CUTFaRExFbEJRVUZCTEVOQlFVMUdMRU5CUVVGQkxFTkJRMDVITEVsQlFVRkJMRU5CUVUwc1NVRkJRU3hEUVVGQkxFTkJSVXBTTEVsQlFVRkJMRU5CUVV0aUxFMUJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkhZU3hKUVVGQlFTeERRVUZMUlN4SlFVRkJRU3hEUVVGTFRTeEpRVUZCUVN4RFFVRlBSaXhMUVVGQlFTeERRVUZYVGl4SlFVRkJRU3hEUVVGTFF5eEpRVUZCUVN4RFFVRlBTeXhMUVVGQlFTeERRVU0zUkU0c1NVRkJRVUVzUTBGQlMwVXNTVUZCUVVFc1EwRkJUMGtzUzBGQlFVRXNRMEZCUVVFc1JVRkRWazRzU1VGQlFVRXNRMEZCUzJJc1RVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZVaXhEUVVORVZDeEhRVUZCUVN4RFFVRkxMRk5CUVVFc1EwRkRURU1zUzBGQlFVRXNRMEZCVHl4VFFVRnBRakJDTEVOQlFVRkJMRU5CUVVGQkxFTkJRM1JDTEVsQlFVbERMRXRCUVVGQkxFTkJRVkVzUTBGRFZrTXNTVUZCUVVFc1EwRkJUVVlzUTBGQlFVRXNRMEZEVGtjc1NVRkJRVUVzUTBGQlRWSXNTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCUVVFc1EwRkZUeXhEUVVGQkxFZEJRV2hDUkN4SlFVRkJRU3hEUVVGTFlpeE5RVUZCUVN4SFFVRmpZU3hKUVVGQlFTeERRVUZMUlN4SlFVRkJRU3hEUVVGUFNTeExRVUZCUVN4RFFVRkJRU3hEUVVOdVEwNHNTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCVDBzc1MwRkJRVUVzUTBGQlFVRXNSVUZEVms0c1NVRkJRVUVzUTBGQlMySXNUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGVWl4RFFVTkVWQ3hIUVVGQlFTeERRVUZMTEU5QlFVRXNRMEZEVEVNc1MwRkJRVUVzUTBGQlR5eFZRVUZCTEVOQlEwd3NSMEZCYjBJc1EwRkJRU3hIUVVGb1FuRkNMRWxCUVVGQkxFTkJRVXRpTEUxQlFVRkJMRU5CUVZRc1EwRkRRU3hKUVVGSmMwSXNSMEZCUVVFc1EwRkJUVlFzU1VGQlFVRXNRMEZCUzBNc1NVRkJRVUVzUTBGQlMwMHNTVUZCUVVFc1EwRkhjRUlzVDBGR2IwSXNRMEZCUVN4SFFVRm9RbEFzU1VGQlFVRXNRMEZCUzJJc1RVRkJRVUVzUTBGQlkyRXNTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCVDBRc1NVRkJRVUVzUTBGQlMwVXNTVUZCUVVFc1EwRkJUeXhKUVVGQkxFTkJRVlZHTEVsQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVOUVMRWxCUVVGQkxFTkJRVXRETEVsQlFVRkJMRU5CUVV0UExFbEJRVUZCTEVOQlFVRkJMRVZCUXpkRlVpeEpRVUZCUVN4RFFVRkxZaXhOUVVGQlFTeERRVU5CYzBJc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRlVpeERRVU5FTDBJc1IwRkJRVUVzUTBGQlN5eFBRVUZCTEVOQlEweERMRXRCUVVGQkxFTkJRVThzVlVGQlFTeERRVU5NY1VJc1NVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkJUMFFzU1VGQlFVRXNRMEZCUzBVc1NVRkJRVUVzUTBGQlR5eEpRVUZCTEVOQlEzaENSaXhKUVVGQlFTeERRVUZMWWl4TlFVRkJRU3hEUVVGVExFTkJRVUVzUTBGQlFTeERRVUZCTEVOQlJXWXNRMEZEUkZRc1IwRkJRVUVzUTBGQlN5eE5RVUZCTEVOQlEweERMRXRCUVVGQkxFTkJRVThzVTBGQll5dENMRU5CUVVGQkxFTkJRVUZCTEVOQlEyNUNMRWRCUVc5Q0xFTkJRVUVzUjBGQmFFSldMRWxCUVVGQkxFTkJRVXRpTEUxQlFVRkJMRU5CUVdNc1RVRkJUeXhGUVVGQkxFTkJTVGxDTEVsQlNFRXNTVUZCU1hkQ0xFTkJRVUZCTEVOQlFVbFlMRWxCUVVGQkxFTkJRVXRETEVsQlFVRkJMRU5CUTFSUkxFZEJRVUZCTEVOQlFVMHNSVUZCUVN4RFFVRkxSU3hEUVVGQlFTeERRVUZGU2l4SlFVRkJRU3hEUVVWV1NTeERRVUZCUVN4RFFVRkpRU3hEUVVGQlFTeERRVUZGU0N4SlFVRkJRU3hGUVVOWVF5eEhRVUZCUVN4RlFVRlBReXhEUVVGQlFTeERRVUZKUXl4RFFVRkJRU3hEUVVGRlNpeEpRVUZCUVN4RFFVZG1MRTlCUVU5RkxFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSVklzUTBGRFJDOUNMRWRCUVVGQkxFTkJRVXNzVVVGQlFTeERRVU5NUXl4TFFVRkJRU3hEUVVGUExGTkJRV2RDYVVNc1EwRkJRVUVzUTBGQlFVRXNRMEZEY2tJc1IwRkJiMElzUTBGQlFTeEhRVUZvUWxvc1NVRkJRVUVzUTBGQlMySXNUVUZCUVVFc1EwRkJZeXhQUVVGUFJTeFhRVUZCUVN4RFFVRlBkMElzUzBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUVVFc1EwRkxNME1zU1VGS1FTeEpRWEpGWTBNc1IwRkJRVUVzUTBGQlN6bENMRTFCUVVGQkxFTkJRVkVyUWl4TlFVRkJRU3hEUVhGRmRrSk9MRWRCUVVGQkxFTkJRVTF3UWl4WFFVRkJRU3hEUVVGUE1rSXNWMEZCUVVFc1EwRkJXVW9zUTBGQlFVRXNSMEZCVFN4RFFVRkJMRU5CUVVFc1EwRkRMMEpFTEVOQlFVRkJMRU5CUVVsWUxFbEJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRMVJtTEVOQlFVRkJMRU5CUVVrc1EwRkJRU3hEUVVWRWVVSXNRMEZCUVVFc1JVRjZSVTlITEVkQlFVRkJMRU5CTUVWRVNDeERRVUZCUVN4RFFVRkZTaXhKUVVGQlFTeERRVEZGU1haQ0xFMUJRVUZCTEVOQk1FVkZlVUlzUjBGQlFVRXNRMEV4UlUxTkxFMUJRVUZCTEVOQk1FVkVOMElzUTBGQlFVRXNRMEY2UlRsQ1J5eFhRVUZCUVN4RFFVRlBORUlzVTBGQlFVRXNRMEZCVlVNc1NVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkJTMHdzUjBGQlFVRXNRMEZCU3psQ0xFMUJRVUZCTEVOQlFWRXJRaXhOUVVGQlFTeERRVUZCUVN4RFFUQkZiRU0zUWl4RFFVRkJRU3hGUVVGTGVVSXNRMEZCUVVFc1EwRkJSVW9zU1VGQlFVRXNRMEZCUzNCQ0xFMUJRVUZCTEVOQlExcDNRaXhEUVVGQlFTeERRVUZKUVN4RFFVRkJRU3hEUVVGRlNDeEpRVUZCUVN4RFFVZFNMRTlCUVU5RExFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMUlzUTBGRFJDOUNMRWRCUVVGQkxFTkJRVXNzVTBGQlFTeERRVU5NUXl4TFFVRkJRU3hEUVVGUExGTkJRV2xDYVVNc1EwRkJRVUVzUTBGQlIxRXNWVUZCUVVFc1EwRkJRVUVzUTBGRGVrSXNTVUZCU1Znc1IwRkJRVUVzUTBGalNpeFBRVnBKUnl4RFFVRkJRU3hEUVVGSldpeEpRVUZCUVN4RFFVRkxReXhKUVVGQlFTeERRVUZMVFN4SlFVRkJRU3hEUVVGTGNFSXNUVUZCUVVFc1JVRkZja0p6UWl4SFFVRkJRU3hEUVVGTlZDeEpRVUZCUVN4RFFVRkxReXhKUVVGQlFTeERRVUZMVFN4SlFVRkJRU3hEUVVGTFl5eExRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJSMVFzUTBGQlFVRXNRMEZCUVVFc1EwRkRPVUphTEVsQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVdE5MRWxCUVVGQkxFTkJRVTlRTEVsQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVdE5MRWxCUVVGQkxFTkJRVXRqTEV0QlFVRkJMRU5CUVUxVUxFTkJRVUZCTEVOQlFVRkJMRVZCUjNSRFNDeEhRVUZCUVN4RFFVWlRSeXhEUVVGQlFTeEhRVUZOV2l4SlFVRkJRU3hEUVVGTFF5eEpRVUZCUVN4RFFVRkxUU3hKUVVGQlFTeERRVUZMY0VJc1RVRkJRVUVzUTBGRmVFSmhMRWxCUVVGQkxFTkJRVXR6UWl4TFFVRkJRU3hGUVVGQlFTeERRVWRNUml4VlFVRkJRU3hEUVVGaGNFSXNTVUZCUVVFc1EwRkJTM1ZDTEZWQlFVRkJMRU5CUVZkWUxFTkJRVUZCTEVOQlFVRkJMRU5CUVV0YUxFbEJRVUZCTEVOQlFVdDNRaXhWUVVGQlFTeERRVUZYV2l4RFFVRkJRU3hEUVVGQlFTeERRVWR1UkVnc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZVaXhEUVVORUwwSXNSMEZCUVVFc1EwRkJTeXhQUVVGQkxFTkJRMHhETEV0QlFVRkJMRU5CUVU4c1ZVRkJRU3hEUVVOTUxFOUJRVTl4UWl4SlFVRkJRU3hEUVVGTFF5eEpRVUZCUVN4RFFVRkxUU3hKUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkc1FpeERRVU5FTjBJc1IwRkJRVUVzUTBGQlN5eFpRVUZCTEVOQlEweERMRXRCUVVGQkxFTkJRVThzVTBGQmIwSnBReXhEUVVGQlFTeERRVUZCUVN4RFFVTjZRaXhKUVVGSlJDeERRVUZCUVN4RFFVRkpXQ3hKUVVGQlFTeERRVUZMUXl4SlFVRkJRU3hEUVVOVWQwSXNRMEZCUVVFc1EwRkJTU3hEUVVGQkxFTkJRMHBvUWl4SFFVRkJRU3hEUVVGTlJTeERRVUZCUVN4RFFVRkZTaXhKUVVGQlFTeERRVWRhTEVsQlJrRkxMRU5CUVVGQkxFVkJRVXRJTEVkQlFVRkJMRU5CUVVsMFFpeE5RVUZCUVN4RFFVVkdkMElzUTBGQlFVRXNRMEZCU1VFc1EwRkJRVUVzUTBGQlJVZ3NTVUZCUVVFc1JVRkJUU3hEUVVOcVFpeEpRVUZKYTBJc1IwRkJRVUVzUTBGQlRXWXNRMEZCUVVFc1EwRkJSVW9zU1VGQlFVRXNRMEZEVW05Q0xFVkJRVUZCTEVOQlFVdG1MRU5CUVVGQkxFTkJRVWxqTEVkQlFVRkJMRU5CUVVsMlF5eE5RVUZCUVN4RFFVRlRkVU1zUjBGQlFVRXNRMEZCU1haRExFMUJRVUZCTEVOQlFWTjVRaXhEUVVGQlFTeERRVWwyUXl4SFFVaEpaU3hGUVVGQlFTeEhRVUZQUkN4SFFVRkJRU3hEUVVGSmRrTXNUVUZCUVVFc1EwRkJVWE5DTEVkQlFVRkJMRVZCUVU5cFFpeEhRVUZCUVN4RFFVRlRha0lzUjBGQlFVRXNSVUZCVDJsQ0xFZEJRVUZCTEVOQlFVbE1MRXRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZIVkN4RFFVRkJRU3hEUVVGQlFTeERRVWRxUkN4RFFVRkJMRWxCUmxaQkxFTkJRVUZCTEVWQlFVdGxMRVZCUVVGQkxFTkJRVUZCTEVOQlJWRXNRMEZEVUVFc1JVRkJRVUVzUjBGQlQwUXNSMEZCUVVFc1EwRkJTWFpETEUxQlFVRkJMRVZCUVVGQkxFVkJRMWh6UXl4RFFVRkJRU3hEUVVORlpDeERRVUZCUVN4RFFVRkZTQ3hKUVVGQlFTeERRVUZOVWl4SlFVRkJRU3hEUVVGTFF5eEpRVUZCUVN4RFFVRlBWU3hEUVVGQlFTeERRVUZGU0N4SlFVRkJRU3hEUVVGVlVpeEpRVUZCUVN4RFFVRkxReXhKUVVGQlFTeERRVUZQUkN4SlFVRkJRU3hEUVVGTFJTeEpRVUZCUVN4RFFVRlBMRWxCUVVFc1IwRkZOVVJHTEVsQlFVRkJMRU5CUVV0RExFbEJRVUZCTEVOQlFVOVZMRU5CUVVGQkxFTkJRMXBCTEVOQlFVRkJMRU5CUVVWS0xFbEJRVUZCTEVOQlFVOXRRaXhIUVVGQlFTeERRVUZKVEN4TFFVRkJRU3hEUVVGTlRTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVWR5UWl4TFFVRkJMRU5CUVVFc1JVRkhRVVlzUTBGQlFVRXNRMEZKU2l4UFFVUkJla0lzU1VGQlFVRXNRMEZCUzJJc1RVRkJRVUVzUlVGQlZYTkRMRU5CUVVGQkxFTkJRMUpvUWl4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVZFNMRU5CUTBRdlFpeEhRVUZCUVN4RFFVRkxMRmxCUVVFc1EwRkRURU1zUzBGQlFVRXNRMEZCVHl4VFFVRnZRbWxETEVOQlFVRkJMRU5CUVVGQkxFTkJRM3BDTEVsQlFVbElMRWRCUVVGQkxFTkJRVTF3UWl4WFFVRkJRU3hEUVVGUE1rSXNWMEZCUVVFc1EwRkJXVW9zUTBGQlFVRXNRMEZCUVVFc1EwRkRla0pFTEVOQlFVRkJMRU5CUVVsWUxFbEJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRMVIzUWl4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGSlVpeEpRVWhCWkN4RFFVRkJRU3hEUVVGRlNpeEpRVUZCUVN4RFFVRkxWeXhKUVVGQlFTeERRVUZMVkN4SFFVRkJRU3hEUVVGQlFTeERRVU5hUnl4RFFVRkJRU3hGUVVGTFJDeERRVUZCUVN4RFFVRkZTaXhKUVVGQlFTeERRVUZMY0VJc1RVRkJRVUVzUTBGRlRIZENMRU5CUVVGQkxFTkJRVWxCTEVOQlFVRkJMRU5CUVVWSUxFbEJRVUZCTEVWQlFVMHNRMEZEYWtJc1NVRkJTVzlDTEVkQlFVRkJMRU5CUVUxcVFpeERRVUZCUVN4RFFVRkZTaXhKUVVGQlFTeERRVU5TYjBJc1JVRkJRVUVzUTBGQlMyWXNRMEZCUVVFc1EwRkJTV2RDTEVkQlFVRkJMRU5CUVVsNlF5eE5RVUZCUVN4RFFVRlRlVU1zUjBGQlFVRXNRMEZCU1hwRExFMUJRVUZCTEVOQlFWTjVRaXhEUVVGQlFTeERRVWwyUXl4SFFVaEJaMElzUjBGQlFVRXNRMEZCU1ZZc1NVRkJRVUVzUTBGQlMxUXNSMEZCUVVFc1EwRkJTMEVzUjBGQlFVRXNRMEZCU1hSQ0xFMUJRVUZCTEVOQlFWTjVRaXhEUVVGQlFTeERRVUZITEVOQlFVRXNRMEZCUjJVc1JVRkJRVUVzUTBGQlFVRXNRMEZIZGtJc1EwRkJRU3hKUVVaV1ppeERRVUZCUVN4RlFVRkxaU3hGUVVGQlFTeERRVUZCUVN4RFFVVlJMRU5CUTFCQkxFVkJRVUZCTEVkQlFVOURMRWRCUVVGQkxFTkJRVWw2UXl4TlFVRkJRU3hGUVVGQlFTeEZRVU5ZYzBNc1EwRkJRVUVzUTBGRFJXUXNRMEZCUVVFc1EwRkJSVWdzU1VGQlFVRXNRMEZCVFZJc1NVRkJRVUVzUTBGQlMwTXNTVUZCUVVFc1EwRkJUMVVzUTBGQlFVRXNRMEZCUlVnc1NVRkJRVUVzUTBGQlZWSXNTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZCVDBRc1NVRkJRVUVzUTBGQlMwVXNTVUZCUVVFc1EwRkJUeXhKUVVGQkxFZEJSVFZFUml4SlFVRkJRU3hEUVVGTFF5eEpRVUZCUVN4RFFVRlBWU3hEUVVGQlFTeERRVU5hUVN4RFFVRkJRU3hEUVVGRlNpeEpRVUZCUVN4RFFVRlBjVUlzUjBGQlFVRXNRMEZCU1ZBc1MwRkJRVUVzUTBGQlRVMHNSVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZIY2tJc1MwRkJRU3hEUVVGQkxFVkJSMEZHTEVOQlFVRkJMRU5CU1Vvc1QwRkVRWHBDTEVsQlFVRkJMRU5CUVV0aUxFMUJRVUZCTEVWQlFWVnpReXhEUVVGQlFTeERRVU5TYUVJc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkhVaXhEUVVORUwwSXNSMEZCUVVFc1EwRkJTMk1zVjBGQlFVRXNRMEZEVEdJc1MwRkJRVUVzUTBGQlR5eFRRVUZsYTBRc1EwRkJRVUVzUTBGQlIwTXNUMEZCUVVFc1EwRkJRVUVzUTBGRGRrSXNUMEZCVDNaRExGbEJRVUZCTEVOQlFWRlRMRWxCUVVGQkxFTkJiazF5UWl4VFFVRjFRbWhDTEUxQlFVRkJMRU5CUVVGQkxFTkJRVlVzU1VGQlN5eEpRVUZKUlN4RFFVRkJRU3hEUVVGSkxFTkJRVUVzUTBGQlIwRXNRMEZCUVVFc1EwRkJTVFpETEZOQlFVRkJMRU5CUVZVMVF5eE5RVUZCUVN4RFFVRlJSQ3hEUVVGQlFTeEZRVUZCUVN4RFFVRkxMRU5CUVVVc1NVRkJTVGhETEUxQlFVRkJMRU5CUVhsQ0xFbEJRVUVzUlVGQmFFSkVMRk5CUVVGQkxFTkJRVlUzUXl4RFFVRkJRU3hEUVVGQlFTeERRVUZoTmtNc1UwRkJRVUVzUTBGQlZUZERMRU5CUVVGQkxFTkJRVUZCTEVOQlFVc3NSVUZCUVN4RFFVRlJRU3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZCUzNaQ0xGbEJRVUZCTEVOQlFWRkpMRTFCUVVGQkxFTkJRVTlwUlN4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkJRU3hEUVVGTlF5eFBRVUZCUVN4RFFVRlJMRk5CUVZWMlJDeEhRVUZCUVN4RFFVRkJRU3hEUVVGUFJpeHZRa0ZCUVVFc1EwRkJaMEpSTEUxQlFVRkJMRU5CUVZGT0xFZEJRVUZCTEVOQlFVdHpSQ3hOUVVGQlFTeERRVUZQZEVRc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCYzBKWUxFMUJRVUZCTEVOQlFVOXRSU3g1UWtGQlFVRXNRMEZCTmtKdVJTeE5RVUZCUVN4RFFVRlBiMFVzWjBKQlFVRkJMRU5CUVdsQ2JrUXNUVUZCUVVFc1EwRkJVV3BDTEUxQlFVRkJMRU5CUVU5dFJTeDVRa0ZCUVVFc1EwRkJNRUpHTEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFXMUNja1VzV1VGQlFVRXNRMEZCVVVrc1RVRkJRVUVzUTBGQlQybEZMRTFCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVZORExFOUJRVUZCTEVOQlFWRXNVMEZCVlhaRUxFZEJRVUZCTEVOQlFVRkJMRU5CUVU5WUxFMUJRVUZCTEVOQlFVOWhMR05CUVVGQkxFTkJRV1ZKTEUxQlFVRkJMRU5CUVZGT0xFZEJRVUZCTEVOQlFVdFlMRTFCUVVGQkxFTkJRVTlMTEhkQ1FVRkJRU3hEUVVGNVFqUkVMRTFCUVVGQkxFTkJRVkYwUkN4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZsTEU5QlFVOU5MRTFCUVVGQkxFTkJiVTFzWm05RUxFTkJRV01zUlVGQlFTeERRVUZKVGl4UFFVRkJRU3hEUVVGVExFTkJSVGxEVHl4TFFVRkJRU3hEUVVGUExFTkJRVUVzUTBGRlVFTXNZVUZCUVVFc1EwRkJRVUVzUTBGQlpTeERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFZEJMMHgxUkhaRUxITkNRVUZCUVN4RFFVRnJRbU1zVjBGQlFVRXNRMEZCV1c5Q0xGTkJRVUZCTEVOQlFWZGtMRlZCUVVGQkxFTkJRVUZCTEVOQlFXbENReXhYUVVGQlFTeEZRVUZoY2tJc2MwSkJRVUZCTEVOQlFXdENZeXhYUVVGQlFTeERRVUZoVHl4WFFVRkJRU3hEUVVGQlFTeERRVzlOTTB0VUxGVkJRVUZCTEVOQmNFeFVMRVZCUVVFc1EwRkJRU0lzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiYm5Wc2JGMTkiLCJcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBlbWl0RXJyb3JBbmRDbG9zZU5UKHNlbGYsZXJyKXtlbWl0RXJyb3JOVChzZWxmLGVyciksZW1pdENsb3NlTlQoc2VsZil9ZnVuY3Rpb24gZW1pdENsb3NlTlQoc2VsZil7c2VsZi5fd3JpdGFibGVTdGF0ZSYmIXNlbGYuX3dyaXRhYmxlU3RhdGUuZW1pdENsb3NlfHxzZWxmLl9yZWFkYWJsZVN0YXRlJiYhc2VsZi5fcmVhZGFibGVTdGF0ZS5lbWl0Q2xvc2V8fHNlbGYuZW1pdChcImNsb3NlXCIpfWZ1bmN0aW9uIGVtaXRFcnJvck5UKHNlbGYsZXJyKXtzZWxmLmVtaXQoXCJlcnJvclwiLGVycil9bW9kdWxlLmV4cG9ydHM9e2Rlc3Ryb3k6ZnVuY3Rpb24oZXJyLGNiKXt2YXIgX3RoaXM9dGhpcyxyZWFkYWJsZURlc3Ryb3llZD10aGlzLl9yZWFkYWJsZVN0YXRlJiZ0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZCx3cml0YWJsZURlc3Ryb3llZD10aGlzLl93cml0YWJsZVN0YXRlJiZ0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZDtyZXR1cm4gcmVhZGFibGVEZXN0cm95ZWR8fHdyaXRhYmxlRGVzdHJveWVkPyhjYj9jYihlcnIpOmVyciYmKHRoaXMuX3dyaXRhYmxlU3RhdGU/dGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWR8fCh0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCxwcm9jZXNzLm5leHRUaWNrKGVtaXRFcnJvck5ULHRoaXMsZXJyKSk6cHJvY2Vzcy5uZXh0VGljayhlbWl0RXJyb3JOVCx0aGlzLGVycikpLHRoaXMpOih0aGlzLl9yZWFkYWJsZVN0YXRlJiYodGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ9ITApLHRoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD0hMCksdGhpcy5fZGVzdHJveShlcnJ8fG51bGwsZnVuY3Rpb24oZXJyKXshY2ImJmVycj9fdGhpcy5fd3JpdGFibGVTdGF0ZT9fdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ/cHJvY2Vzcy5uZXh0VGljayhlbWl0Q2xvc2VOVCxfdGhpcyk6KF90aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCxwcm9jZXNzLm5leHRUaWNrKGVtaXRFcnJvckFuZENsb3NlTlQsX3RoaXMsZXJyKSk6cHJvY2Vzcy5uZXh0VGljayhlbWl0RXJyb3JBbmRDbG9zZU5ULF90aGlzLGVycik6Y2I/KHByb2Nlc3MubmV4dFRpY2soZW1pdENsb3NlTlQsX3RoaXMpLGNiKGVycikpOnByb2Nlc3MubmV4dFRpY2soZW1pdENsb3NlTlQsX3RoaXMpfSksdGhpcyl9LHVuZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuX3JlYWRhYmxlU3RhdGUmJih0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD0hMSx0aGlzLl9yZWFkYWJsZVN0YXRlLnJlYWRpbmc9ITEsdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRlZD0hMSx0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZEVtaXR0ZWQ9ITEpLHRoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD0hMSx0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kaW5nPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZmluYWxDYWxsZWQ9ITEsdGhpcy5fd3JpdGFibGVTdGF0ZS5wcmVmaW5pc2hlZD0hMSx0aGlzLl93cml0YWJsZVN0YXRlLmZpbmlzaGVkPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPSExKX0sZXJyb3JPckRlc3Ryb3k6ZnVuY3Rpb24oc3RyZWFtLGVycil7dmFyIHJTdGF0ZT1zdHJlYW0uX3JlYWRhYmxlU3RhdGUsd1N0YXRlPXN0cmVhbS5fd3JpdGFibGVTdGF0ZTtyU3RhdGUmJnJTdGF0ZS5hdXRvRGVzdHJveXx8d1N0YXRlJiZ3U3RhdGUuYXV0b0Rlc3Ryb3k/c3RyZWFtLmRlc3Ryb3koZXJyKTpzdHJlYW0uZW1pdChcImVycm9yXCIsZXJyKX19O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1SbGMzUnliM2t1YW5NaVhTd2libUZ0WlhNaU9sc2laVzFwZEVWeWNtOXlRVzVrUTJ4dmMyVk9WQ0lzSW5ObGJHWWlMQ0psY25JaUxDSmxiV2wwUlhKeWIzSk9WQ0lzSW1WdGFYUkRiRzl6WlU1VUlpd2lYM2R5YVhSaFlteGxVM1JoZEdVaUxDSmxiV2wwUTJ4dmMyVWlMQ0pmY21WaFpHRmliR1ZUZEdGMFpTSXNJbVZ0YVhRaUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2laR1Z6ZEhKdmVTSXNJbU5pSWl3aVgzUm9hWE1pTENKMGFHbHpJaXdpY21WaFpHRmliR1ZFWlhOMGNtOTVaV1FpTENKa1pYTjBjbTk1WldRaUxDSjNjbWwwWVdKc1pVUmxjM1J5YjNsbFpDSXNJbVZ5Y205eVJXMXBkSFJsWkNJc0luQnliMk5sYzNNaUxDSnVaWGgwVkdsamF5SXNJbDlrWlhOMGNtOTVJaXdpZFc1a1pYTjBjbTk1SWl3aWNtVmhaR2x1WnlJc0ltVnVaR1ZrSWl3aVpXNWtSVzFwZEhSbFpDSXNJbVZ1WkdsdVp5SXNJbVpwYm1Gc1EyRnNiR1ZrSWl3aWNISmxabWx1YVhOb1pXUWlMQ0ptYVc1cGMyaGxaQ0lzSW1WeWNtOXlUM0pFWlhOMGNtOTVJaXdpYzNSeVpXRnRJaXdpY2xOMFlYUmxJaXdpZDFOMFlYUmxJaXdpWVhWMGIwUmxjM1J5YjNraVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQkxHRkJkVVJCTEZOQlFWTkJMRzlDUVVGdlFrTXNTMEZCVFVNc1MwRkRha05ETEZsQlFWbEdMRXRCUVUxRExFdEJRMnhDUlN4WlFVRlpTQ3hOUVVka0xGTkJRVk5ITEZsQlFWbElMRTFCUTJaQkxFdEJRVXRKTEdsQ1FVRnRRa29zUzBGQlMwa3NaVUZCWlVNc1YwRkROVU5NTEV0QlFVdE5MR2xDUVVGdFFrNHNTMEZCUzAwc1pVRkJaVVFzVjBGRGFFUk1MRXRCUVV0UExFdEJRVXNzVTBGelFsb3NVMEZCVTB3c1dVRkJXVVlzUzBGQlRVTXNTMEZEZWtKRUxFdEJRVXRQTEV0QlFVc3NVVUZCVTA0c1MwRmpja0pQTEU5QlFVOURMRkZCUVZVc1EwRkRaa01zVVVGdVIwWXNVMEZCYVVKVUxFbEJRVXRWTEVsQlEzQkNMRWxCUVVsRExFMUJRVkZETEV0QlJWSkRMR3RDUVVGdlFrUXNTMEZCUzFBc1owSkJRV3RDVHl4TFFVRkxVQ3hsUVVGbFV5eFZRVU12UkVNc2EwSkJRVzlDU0N4TFFVRkxWQ3huUWtGQmEwSlRMRXRCUVV0VUxHVkJRV1ZYTEZWQlJXNUZMRTlCUVVsRUxHMUNRVUZ4UWtVc2JVSkJRMjVDVEN4SFFVTkdRU3hIUVVGSFZpeExRVU5OUVN4TlFVTktXU3hMUVVGTFZDeGxRVVZGVXl4TFFVRkxWQ3hsUVVGbFlTeGxRVU01UWtvc1MwRkJTMVFzWlVGQlpXRXNZMEZCWlN4RlFVTnVRME1zVVVGQlVVTXNVMEZCVTJwQ0xGbEJRV0ZYTEV0QlFVMWFMRTFCU0hCRGFVSXNVVUZCVVVNc1UwRkJVMnBDTEZsQlFXRlhMRXRCUVUxYUxFMUJUMnBEV1N4UFFVdE1RU3hMUVVGTFVDeHBRa0ZEVUU4c1MwRkJTMUFzWlVGQlpWTXNWMEZCV1N4SFFVazVRa1lzUzBGQlMxUXNhVUpCUTFCVExFdEJRVXRVTEdWQlFXVlhMRmRCUVZrc1IwRkhiRU5HTEV0QlFVdFBMRk5CUVZOdVFpeExRVUZQTEV0QlFVMHNVMEZCVlVFc1RVRkRPVUpWTEVsQlFVMVdMRWxCUTBwWExFMUJRVTFTTEdWQlJVTlJMRTFCUVUxU0xHVkJRV1ZoTEdGQlNTOUNReXhSUVVGUlF5eFRRVUZUYUVJc1dVRkJZVk1zVVVGSU9VSkJMRTFCUVUxU0xHVkJRV1ZoTEdOQlFXVXNSVUZEY0VORExGRkJRVkZETEZOQlFWTndRaXh2UWtGQmNVSmhMRTFCUVU5WUxFMUJTRGREYVVJc1VVRkJVVU1zVTBGQlUzQkNMRzlDUVVGeFFtRXNUVUZCVDFnc1MwRlBkRU5WTEVsQlExUlBMRkZCUVZGRExGTkJRVk5vUWl4WlFVRmhVeXhQUVVNNVFrUXNSMEZCUjFZc1RVRkZTR2xDTEZGQlFWRkRMRk5CUVZOb1FpeFpRVUZoVXl4VFFVa3pRa01zVDBGclJGQlJMRlZCY0VOR0xGZEJRMDFTTEV0QlFVdFFMR2xDUVVOUVR5eExRVUZMVUN4bFFVRmxVeXhYUVVGWkxFVkJRMmhEUml4TFFVRkxVQ3hsUVVGbFowSXNVMEZCVlN4RlFVTTVRbFFzUzBGQlMxQXNaVUZCWldsQ0xFOUJRVkVzUlVGRE5VSldMRXRCUVV0UUxHVkJRV1ZyUWl4WlFVRmhMRWRCUnk5Q1dDeExRVUZMVkN4cFFrRkRVRk1zUzBGQlMxUXNaVUZCWlZjc1YwRkJXU3hGUVVOb1EwWXNTMEZCUzFRc1pVRkJaVzFDTEU5QlFWRXNSVUZETlVKV0xFdEJRVXRVTEdWQlFXVnhRaXhSUVVGVExFVkJRemRDV2l4TFFVRkxWQ3hsUVVGbGMwSXNZVUZCWXl4RlFVTnNRMklzUzBGQlMxUXNaVUZCWlhWQ0xHRkJRV01zUlVGRGJFTmtMRXRCUVV0VUxHVkJRV1YzUWl4VlFVRlhMRVZCUXk5Q1ppeExRVUZMVkN4bFFVRmxZU3hqUVVGbExFbEJjMEp5UTFrc1pVRmtSaXhUUVVGM1FrTXNUMEZCVVRkQ0xFdEJUVGxDTEVsQlFVazRRaXhQUVVGVFJDeFBRVUZQZUVJc1pVRkRhRUl3UWl4UFFVRlRSaXhQUVVGUE1VSXNaVUZEYUVJeVFpeFJRVUZWUVN4UFFVRlBSU3hoUVVGbFJDeFJRVUZWUVN4UFFVRlBReXhaUVVGaFNDeFBRVUZQY0VJc1VVRkJVVlFzUzBGQlZUWkNMRTlCUVU5MlFpeExRVUZMTEZGQlFWTk9JaXdpWm1sc1pTSTZJaTlvYjIxbEwyMW9MV05pYjI0dloyOTNMM055WXk5bmFYUm9kV0l1WTI5dEwydHVZV1JvTDI1cGJIUmhiR3N2YzNSaGRHbGpMM1JvWlcxbGN5OXJibUZrYUM5emRHRjBhV012YkdsaUxYZG9hWE53WlhJeUwyNXZaR1ZmYlc5a2RXeGxjeTl6Y0d4cGRESXZibTlrWlY5dGIyUjFiR1Z6TDNKbFlXUmhZbXhsTFhOMGNtVmhiUzlzYVdJdmFXNTBaWEp1WVd3dmMzUnlaV0Z0Y3k5a1pYTjBjbTk1TG1wekluMD0iLCJ2YXIgXyRlcnJvcnNCcm93c2VyXzQ4ID0ge307XG5cInVzZSBzdHJpY3RcIjt2YXIgX19jb2Rlc180OD17fTtmdW5jdGlvbiBfX2NyZWF0ZUVycm9yVHlwZV80OChjb2RlLG1lc3NhZ2UsQmFzZSl7QmFzZXx8KEJhc2U9RXJyb3IpO3ZhciBOb2RlRXJyb3I9ZnVuY3Rpb24oX0Jhc2Upe3ZhciBzdWJDbGFzcyxzdXBlckNsYXNzO2Z1bmN0aW9uIE5vZGVFcnJvcihhcmcxLGFyZzIsYXJnMyl7cmV0dXJuIF9CYXNlLmNhbGwodGhpcyxmdW5jdGlvbihhcmcxLGFyZzIsYXJnMyl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIG1lc3NhZ2U/bWVzc2FnZTptZXNzYWdlKGFyZzEsYXJnMixhcmczKX0oYXJnMSxhcmcyLGFyZzMpKXx8dGhpc31yZXR1cm4gc3VwZXJDbGFzcz1fQmFzZSwoc3ViQ2xhc3M9Tm9kZUVycm9yKS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzLnByb3RvdHlwZSksc3ViQ2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yPXN1YkNsYXNzLHN1YkNsYXNzLl9fcHJvdG9fXz1zdXBlckNsYXNzLE5vZGVFcnJvcn0oQmFzZSk7Tm9kZUVycm9yLnByb3RvdHlwZS5uYW1lPUJhc2UubmFtZSxOb2RlRXJyb3IucHJvdG90eXBlLmNvZGU9Y29kZSxfX2NvZGVzXzQ4W2NvZGVdPU5vZGVFcnJvcn1mdW5jdGlvbiBfX29uZU9mXzQ4KGV4cGVjdGVkLHRoaW5nKXtpZihBcnJheS5pc0FycmF5KGV4cGVjdGVkKSl7dmFyIGxlbj1leHBlY3RlZC5sZW5ndGg7cmV0dXJuIGV4cGVjdGVkPWV4cGVjdGVkLm1hcChmdW5jdGlvbihpKXtyZXR1cm4gU3RyaW5nKGkpfSksbGVuPjI/XCJvbmUgb2YgXCIuY29uY2F0KHRoaW5nLFwiIFwiKS5jb25jYXQoZXhwZWN0ZWQuc2xpY2UoMCxsZW4tMSkuam9pbihcIiwgXCIpLFwiLCBvciBcIikrZXhwZWN0ZWRbbGVuLTFdOjI9PT1sZW4/XCJvbmUgb2YgXCIuY29uY2F0KHRoaW5nLFwiIFwiKS5jb25jYXQoZXhwZWN0ZWRbMF0sXCIgb3IgXCIpLmNvbmNhdChleHBlY3RlZFsxXSk6XCJvZiBcIi5jb25jYXQodGhpbmcsXCIgXCIpLmNvbmNhdChleHBlY3RlZFswXSl9cmV0dXJuXCJvZiBcIi5jb25jYXQodGhpbmcsXCIgXCIpLmNvbmNhdChTdHJpbmcoZXhwZWN0ZWQpKX1fX2NyZWF0ZUVycm9yVHlwZV80OChcIkVSUl9JTlZBTElEX09QVF9WQUxVRVwiLGZ1bmN0aW9uKG5hbWUsdmFsdWUpe3JldHVybidUaGUgdmFsdWUgXCInK3ZhbHVlKydcIiBpcyBpbnZhbGlkIGZvciBvcHRpb24gXCInK25hbWUrJ1wiJ30sVHlwZUVycm9yKSxfX2NyZWF0ZUVycm9yVHlwZV80OChcIkVSUl9JTlZBTElEX0FSR19UWVBFXCIsZnVuY3Rpb24obmFtZSxleHBlY3RlZCxhY3R1YWwpe3ZhciBkZXRlcm1pbmVyLHNlYXJjaCxwb3MsbXNnO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBleHBlY3RlZCYmKHNlYXJjaD1cIm5vdCBcIixleHBlY3RlZC5zdWJzdHIoIXBvc3x8cG9zPDA/MDorcG9zLHNlYXJjaC5sZW5ndGgpPT09c2VhcmNoKT8oZGV0ZXJtaW5lcj1cIm11c3Qgbm90IGJlXCIsZXhwZWN0ZWQ9ZXhwZWN0ZWQucmVwbGFjZSgvXm5vdCAvLFwiXCIpKTpkZXRlcm1pbmVyPVwibXVzdCBiZVwiLGZ1bmN0aW9uKHN0cixzZWFyY2gsdGhpc19sZW4pe3JldHVybih2b2lkIDA9PT10aGlzX2xlbnx8dGhpc19sZW4+c3RyLmxlbmd0aCkmJih0aGlzX2xlbj1zdHIubGVuZ3RoKSxzdHIuc3Vic3RyaW5nKHRoaXNfbGVuLXNlYXJjaC5sZW5ndGgsdGhpc19sZW4pPT09c2VhcmNofShuYW1lLFwiIGFyZ3VtZW50XCIpKW1zZz1cIlRoZSBcIi5jb25jYXQobmFtZSxcIiBcIikuY29uY2F0KGRldGVybWluZXIsXCIgXCIpLmNvbmNhdChfX29uZU9mXzQ4KGV4cGVjdGVkLFwidHlwZVwiKSk7ZWxzZXt2YXIgdHlwZT1mdW5jdGlvbihzdHIsc2VhcmNoLHN0YXJ0KXtyZXR1cm5cIm51bWJlclwiIT10eXBlb2Ygc3RhcnQmJihzdGFydD0wKSwhKHN0YXJ0K3NlYXJjaC5sZW5ndGg+c3RyLmxlbmd0aCkmJi0xIT09c3RyLmluZGV4T2Yoc2VhcmNoLHN0YXJ0KX0obmFtZSxcIi5cIik/XCJwcm9wZXJ0eVwiOlwiYXJndW1lbnRcIjttc2c9J1RoZSBcIicuY29uY2F0KG5hbWUsJ1wiICcpLmNvbmNhdCh0eXBlLFwiIFwiKS5jb25jYXQoZGV0ZXJtaW5lcixcIiBcIikuY29uY2F0KF9fb25lT2ZfNDgoZXhwZWN0ZWQsXCJ0eXBlXCIpKX1yZXR1cm4gbXNnKz1cIi4gUmVjZWl2ZWQgdHlwZSBcIi5jb25jYXQodHlwZW9mIGFjdHVhbCl9LFR5cGVFcnJvciksX19jcmVhdGVFcnJvclR5cGVfNDgoXCJFUlJfU1RSRUFNX1BVU0hfQUZURVJfRU9GXCIsXCJzdHJlYW0ucHVzaCgpIGFmdGVyIEVPRlwiKSxfX2NyZWF0ZUVycm9yVHlwZV80OChcIkVSUl9NRVRIT0RfTk9UX0lNUExFTUVOVEVEXCIsZnVuY3Rpb24obmFtZSl7cmV0dXJuXCJUaGUgXCIrbmFtZStcIiBtZXRob2QgaXMgbm90IGltcGxlbWVudGVkXCJ9KSxfX2NyZWF0ZUVycm9yVHlwZV80OChcIkVSUl9TVFJFQU1fUFJFTUFUVVJFX0NMT1NFXCIsXCJQcmVtYXR1cmUgY2xvc2VcIiksX19jcmVhdGVFcnJvclR5cGVfNDgoXCJFUlJfU1RSRUFNX0RFU1RST1lFRFwiLGZ1bmN0aW9uKG5hbWUpe3JldHVyblwiQ2Fubm90IGNhbGwgXCIrbmFtZStcIiBhZnRlciBhIHN0cmVhbSB3YXMgZGVzdHJveWVkXCJ9KSxfX2NyZWF0ZUVycm9yVHlwZV80OChcIkVSUl9NVUxUSVBMRV9DQUxMQkFDS1wiLFwiQ2FsbGJhY2sgY2FsbGVkIG11bHRpcGxlIHRpbWVzXCIpLF9fY3JlYXRlRXJyb3JUeXBlXzQ4KFwiRVJSX1NUUkVBTV9DQU5OT1RfUElQRVwiLFwiQ2Fubm90IHBpcGUsIG5vdCByZWFkYWJsZVwiKSxfX2NyZWF0ZUVycm9yVHlwZV80OChcIkVSUl9TVFJFQU1fV1JJVEVfQUZURVJfRU5EXCIsXCJ3cml0ZSBhZnRlciBlbmRcIiksX19jcmVhdGVFcnJvclR5cGVfNDgoXCJFUlJfU1RSRUFNX05VTExfVkFMVUVTXCIsXCJNYXkgbm90IHdyaXRlIG51bGwgdmFsdWVzIHRvIHN0cmVhbVwiLFR5cGVFcnJvciksX19jcmVhdGVFcnJvclR5cGVfNDgoXCJFUlJfVU5LTk9XTl9FTkNPRElOR1wiLGZ1bmN0aW9uKGFyZyl7cmV0dXJuXCJVbmtub3duIGVuY29kaW5nOiBcIithcmd9LFR5cGVFcnJvciksX19jcmVhdGVFcnJvclR5cGVfNDgoXCJFUlJfU1RSRUFNX1VOU0hJRlRfQUZURVJfRU5EX0VWRU5UXCIsXCJzdHJlYW0udW5zaGlmdCgpIGFmdGVyIGVuZCBldmVudFwiKSxfJGVycm9yc0Jyb3dzZXJfNDguY29kZXM9X19jb2Rlc180ODtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1WeWNtOXljeTFpY205M2MyVnlMbXB6SWwwc0ltNWhiV1Z6SWpwYkltTnZaR1Z6SWl3aVkzSmxZWFJsUlhKeWIzSlVlWEJsSWl3aVkyOWtaU0lzSW0xbGMzTmhaMlVpTENKQ1lYTmxJaXdpUlhKeWIzSWlMQ0pPYjJSbFJYSnliM0lpTENKZlFtRnpaU0lzSW5OMVlrTnNZWE56SWl3aWMzVndaWEpEYkdGemN5SXNJbUZ5WnpFaUxDSmhjbWN5SWl3aVlYSm5NeUlzSW1OaGJHd2lMQ0owYUdseklpd2laMlYwVFdWemMyRm5aU0lzSW5CeWIzUnZkSGx3WlNJc0lrOWlhbVZqZENJc0ltTnlaV0YwWlNJc0ltTnZibk4wY25WamRHOXlJaXdpWDE5d2NtOTBiMTlmSWl3aWJtRnRaU0lzSW05dVpVOW1JaXdpWlhod1pXTjBaV1FpTENKMGFHbHVaeUlzSWtGeWNtRjVJaXdpYVhOQmNuSmhlU0lzSW14bGJpSXNJbXhsYm1kMGFDSXNJbTFoY0NJc0lta2lMQ0pUZEhKcGJtY2lMQ0pqYjI1allYUWlMQ0p6YkdsalpTSXNJbXB2YVc0aUxDSjJZV3gxWlNJc0lsUjVjR1ZGY25KdmNpSXNJbUZqZEhWaGJDSXNJbVJsZEdWeWJXbHVaWElpTENKelpXRnlZMmdpTENKd2IzTWlMQ0p0YzJjaUxDSnpkV0p6ZEhJaUxDSnlaWEJzWVdObElpd2ljM1J5SWl3aWRHaHBjMTlzWlc0aUxDSjFibVJsWm1sdVpXUWlMQ0p6ZFdKemRISnBibWNpTENKbGJtUnpWMmwwYUNJc0luUjVjR1VpTENKemRHRnlkQ0lzSW1sdVpHVjRUMllpTENKcGJtTnNkV1JsY3lJc0ltRnlaeUlzSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pWFN3aWJXRndjR2x1WjNNaU9pSTdRVUZCUVN4WlFVRkJMRU5CU1VFc1NVRkJTVUVzVlVGQlFVRXNRMEZCVVN4RlFVRkJMRU5CUlZvc1UwRkJVME1zYjBKQlFVRkJMRU5CUVdkQ1F5eEpRVUZCUVN4RFFVRk5ReXhQUVVGQlFTeERRVUZUUXl4SlFVRkJRU3hEUVVGQlFTeERRVU5xUTBFc1NVRkJRVUVzUjBGRFNFRXNTVUZCUVVFc1EwRkJUME1zUzBGQlFVRXNRMEZCUVVFc1EwRlhWQ3hKUVVGSlF5eFRRVUZCUVN4RFFVVktMRk5CUVZWRExFdEJRVUZCTEVOQlFVRkJMRU5CYmtKYUxFbEJRWGRDUXl4UlFVRkJRU3hEUVVGVlF5eFZRVUZCUVN4RFFYTkNPVUlzVTBGQlUwZ3NVMEZCUVVFc1EwRkJWVWtzU1VGQlFVRXNRMEZCVFVNc1NVRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJRVUVzUTBGRE4wSXNUMEZCVDB3c1MwRkJRVUVzUTBGQlRVMHNTVUZCUVVFc1EwRkJTME1zU1VGQlFVRXNRMEZrZEVJc1UwRkJiMEpLTEVsQlFVRkJMRU5CUVUxRExFbEJRVUZCTEVOQlFVMURMRWxCUVVGQkxFTkJRVUZCTEVOQlF6bENMRTFCUVhWQ0xGRkJRVUVzUlVGQlFTeFBRVUZhVkN4UFFVRkJRU3hEUVVOR1FTeFBRVUZCUVN4RFFVVkJRU3hQUVVGQlFTeERRVUZSVHl4SlFVRkJRU3hEUVVGTlF5eEpRVUZCUVN4RFFVRk5ReXhKUVVGQlFTeERRVUZCUVN4RFFWVklSeXhEUVVGWFRDeEpRVUZCUVN4RFFVRk5ReXhKUVVGQlFTeERRVUZOUXl4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RlFVRlZSU3hKUVVGQlFTeERRVWN6UkN4UFFURkNPRUpNTEZWQlFVRkJMRU5CYjBKS1JpeExRVUZCUVN4RFFVRkJRU3hEUVhCQ1RrTXNVVUZCUVVFc1EwRnZRa3hHTEZOQlFVRkJMRVZCY0VKelExVXNVMEZCUVVFc1EwRkJXVU1zVFVGQlFVRXNRMEZCVDBNc1RVRkJRVUVzUTBGQlQxUXNWVUZCUVVFc1EwRkJWMDhzVTBGQlFVRXNRMEZCUVVFc1EwRkJXVklzVVVGQlFVRXNRMEZCVTFFc1UwRkJRVUVzUTBGQlZVY3NWMEZCUVVFc1EwRkJZMWdzVVVGQlFVRXNRMEZCVlVFc1VVRkJRVUVzUTBGQlUxa3NVMEZCUVVFc1EwRkJXVmdzVlVGQlFVRXNRMEV3UWk5S1NDeFRRVUZCUVN4RFFWQlVMRU5CVVVWR0xFbEJRVUZCTEVOQlFVRkJMRU5CUlVaRkxGTkJRVUZCTEVOQlFWVlZMRk5CUVVGQkxFTkJRVlZMTEVsQlFVRkJMRU5CUVU5cVFpeEpRVUZCUVN4RFFVRkxhVUlzU1VGQlFVRXNRMEZEYUVObUxGTkJRVUZCTEVOQlFWVlZMRk5CUVVGQkxFTkJRVlZrTEVsQlFVRkJMRU5CUVU5QkxFbEJRVUZCTEVOQlF6TkNSaXhWUVVGQlFTeERRVUZOUlN4SlFVRkJRU3hEUVVGQlFTeERRVUZSU1N4VFFVRkJRU3hEUVVsb1FpeFRRVUZUWjBJc1ZVRkJRVUVzUTBGQlRVTXNVVUZCUVVFc1EwRkJWVU1zUzBGQlFVRXNRMEZCUVVFc1EwRkRka0lzUjBGQlNVTXNTMEZCUVVFc1EwRkJUVU1zVDBGQlFVRXNRMEZCVVVnc1VVRkJRVUVzUTBGQlFVRXNRMEZCVnl4RFFVTXpRaXhKUVVGSlNTeEhRVUZCUVN4RFFVRk5TaXhSUVVGQlFTeERRVUZUU3l4TlFVRkJRU3hEUVV0dVFpeFBRVXBCVEN4UlFVRkJRU3hEUVVGWFFTeFJRVUZCUVN4RFFVRlRUU3hIUVVGQlFTeERRVUZKTEZOQlFWVkRMRU5CUVVGQkxFTkJRVUZCTEVOQlEyaERMRTlCUVU5RExFMUJRVUZCTEVOQlFVOUVMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSMXBJTEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVORUxGTkJRVUVzUTBGQlZVc3NUVUZCUVVFc1EwRkJUMUlzUzBGQlFVRXNRMEZCVHl4SFFVRkJMRU5CUVVFc1EwRkJTMUVzVFVGQlFVRXNRMEZCVDFRc1VVRkJRVUVzUTBGQlUxVXNTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWRPTEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJRVWRQTEVsQlFVRkJMRU5CUVVzc1NVRkJRU3hEUVVGQkxFTkJRVThzVDBGQlFTeERRVUZCTEVOQlFWZFlMRkZCUVVGQkxFTkJRVk5KTEVkQlFVRkJMRU5CUVUwc1EwRkJRU3hEUVVGQkxFTkJRek5HTEVOQlFVRXNSMEZCVWtFc1IwRkJRVUVzUTBGRFJpeFRRVUZCTEVOQlFWVkxMRTFCUVVGQkxFTkJRVTlTTEV0QlFVRkJMRU5CUVU4c1IwRkJRU3hEUVVGQkxFTkJRVXRSTEUxQlFVRkJMRU5CUVU5VUxGRkJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkJMRU5CUVVrc1RVRkJRU3hEUVVGQkxFTkJRVkZUTEUxQlFVRkJMRU5CUVU5VUxGRkJRVUZCTEVOQlFWTXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkZla1VzUzBGQlFTeERRVUZOVXl4TlFVRkJRU3hEUVVGUFVpeExRVUZCUVN4RFFVRlBMRWRCUVVFc1EwRkJRU3hEUVVGTFVTeE5RVUZCUVN4RFFVRlBWQ3hSUVVGQlFTeERRVUZUTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUjJ4RUxFMUJRVThzUzBGQlFTeERRVUZOVXl4TlFVRkJRU3hEUVVGUFVpeExRVUZCUVN4RFFVRlBMRWRCUVVFc1EwRkJRU3hEUVVGTFVTeE5RVUZCUVN4RFFVRlBSQ3hOUVVGQlFTeERRVUZQVWl4UlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFTdENiRVIwUWl4dlFrRkJRVUVzUTBGQlowSXNkVUpCUVVFc1EwRkJlVUlzVTBGQlZXOUNMRWxCUVVGQkxFTkJRVTFqTEV0QlFVRkJMRU5CUVVGQkxFTkJRM1pFTEUxQlFVOHNZVUZCUVN4RFFVRm5Ra0VzUzBGQlFVRXNRMEZCVVN3eVFrRkJRU3hEUVVFNFFtUXNTVUZCUVVFc1EwRkJUeXhIUVVGQkxFTkJRVUVzUTBGRGJrVmxMRk5CUVVGQkxFTkJRVUZCTEVOQlEwaHVReXh2UWtGQlFVRXNRMEZCWjBJc2MwSkJRVUVzUTBGQmQwSXNVMEZCVlc5Q0xFbEJRVUZCTEVOQlFVMUZMRkZCUVVGQkxFTkJRVlZqTEUxQlFVRkJMRU5CUVVGQkxFTkJSV2hGTEVsQlFVbERMRlZCUVVGQkxFTkJMMEp0UWtNc1RVRkJRVUVzUTBGQlVVTXNSMEZCUVVFc1EwRjNRek5DUXl4SFFVRkJRU3hEUVVWS0xFZEJWSGRDTEZGQlFVRXNSVUZCUVN4UFFVRmliRUlzVVVGQlFVRXNSMEZxUTFsblFpeE5RVUZCUVN4RFFXbERhME1zVFVGQlFTeERRVUZXYUVJc1VVRkJRVUVzUTBGb1EzQkRiVUlzVFVGQlFVRXNRMEZCUVVFc1EwRkJVVVlzUjBGQlFVRXNSVUZCVDBFc1IwRkJRVUVzUTBGQlRTeERRVUZCTEVOQlFVa3NRMEZCUVN4RFFVRkJMRU5CUVV0QkxFZEJRVUZCTEVOQlFVdEVMRTFCUVVGQkxFTkJRVTlZTEUxQlFVRkJMRU5CUVVGQkxFZEJRVmxYTEUxQlFVRkJMRU5CUVVGQkxFVkJhVU12UkVRc1ZVRkJRVUVzUTBGQllTeGhRVUZCTEVOQlEySm1MRkZCUVVGQkxFTkJRVmRCTEZGQlFVRkJMRU5CUVZOdlFpeFBRVUZCUVN4RFFVRlJMRTlCUVVFc1EwRkJVeXhGUVVGQkxFTkJRVUVzUlVGRmNrTk1MRlZCUVVGQkxFTkJRV0VzVTBGQlFTeERRV2hEYWtJc1UwRkJhMEpOTEVkQlFVRkJMRU5CUVV0TUxFMUJRVUZCTEVOQlFWRk5MRkZCUVVGQkxFTkJRVUZCTEVOQlN6ZENMRTFCUVVFc1EwRkJRU3hMUVVwcFFrTXNRMEZCUVVFc1IwRkJZa1FzVVVGQlFVRXNSVUZCTUVKQkxGRkJRVUZCTEVOQlFWZEVMRWRCUVVGQkxFTkJRVWxvUWl4TlFVRkJRU3hKUVVNelEybENMRkZCUVVGQkxFTkJRVmRFTEVkQlFVRkJMRU5CUVVsb1FpeE5RVUZCUVN4RFFVRkJRU3hEUVVkV1owSXNSMEZCUVVFc1EwRkJTVWNzVTBGQlFVRXNRMEZCVlVZc1VVRkJRVUVzUTBGQlYwNHNUVUZCUVVFc1EwRkJUMWdzVFVGQlFVRXNRMEZCVVdsQ0xGRkJRVUZCTEVOQlFVRkJMRWRCUVdOT0xFMUJRVUZCTEVOQlowTjZSRk1zUTBGQlV6TkNMRWxCUVVGQkxFTkJRVTBzVjBGQlFTeERRVUZCTEVOQlJXcENiMElzUjBGQlFVRXNRMEZCVFN4TlFVRkJMRU5CUVU5VUxFMUJRVUZCTEVOQlFVOVlMRWxCUVVGQkxFTkJRVTBzUjBGQlFTeERRVUZCTEVOQlFVdFhMRTFCUVVGQkxFTkJRVTlOTEZWQlFVRkJMRU5CUVZrc1IwRkJRU3hEUVVGQkxFTkJRVXRPTEUxQlFVRkJMRU5CUVU5V0xGVkJRVUZCTEVOQlFVMURMRkZCUVVGQkxFTkJRVlVzVFVGQlFTeERRVUZCTEVOQlFVRXNRMEZCUVN4SlFVTjZSU3hEUVVOTUxFbEJRVWt3UWl4SlFVRkJRU3hEUVdoRFVpeFRRVUZyUWt3c1IwRkJRVUVzUTBGQlMwd3NUVUZCUVVFc1EwRkJVVmNzUzBGQlFVRXNRMEZCUVVFc1EwRkxOMElzVFVGS2NVSXNVVUZCUVN4RlFVRkJMRTlCUVZaQkxFdEJRVUZCTEVkQlExUkJMRXRCUVVGQkxFTkJRVkVzUTBGQlFTeERRVUZCTEVOQlFVRXNSVUZIVGtFc1MwRkJRVUVzUTBGQlVWZ3NUVUZCUVVFc1EwRkJUMWdzVFVGQlFVRXNRMEZCVTJkQ0xFZEJRVUZCTEVOQlFVbG9RaXhOUVVGQlFTeERRVUZCUVN4RlFVRkJRU3hEUVVkVExFTkJRVUVzUjBGQmFFTm5RaXhIUVVGQlFTeERRVUZKVHl4UFFVRkJRU3hEUVVGUldpeE5RVUZCUVN4RFFVRlJWeXhMUVVGQlFTeERRVUZCUVN4RFFYZENhRUpGTEVOQlFWTXZRaXhKUVVGQlFTeERRVUZOTEVkQlFVRXNRMEZCUVN4RFFVRlBMRlZCUVVFc1EwRkJZU3hWUVVGQkxFTkJRemxEYjBJc1IwRkJRVUVzUTBGQlRTeFBRVUZCTEVOQlFWTlVMRTFCUVVGQkxFTkJRVTlZTEVsQlFVRkJMRU5CUVUwc1NVRkJRU3hEUVVGQkxFTkJRVTlYTEUxQlFVRkJMRU5CUVU5cFFpeEpRVUZCUVN4RFFVRk5MRWRCUVVFc1EwRkJRU3hEUVVGTGFrSXNUVUZCUVVFc1EwRkJUMDBzVlVGQlFVRXNRMEZCV1N4SFFVRkJMRU5CUVVFc1EwRkJTMDRzVFVGQlFVRXNRMEZCVDFZc1ZVRkJRVUVzUTBGQlRVTXNVVUZCUVVFc1EwRkJWU3hOUVVGQkxFTkJRVUVzUTBGQlFTeERRVWwwUnl4UFFVUkJhMElzUjBGQlFVRXNSVUZCVHl4clFrRkJRU3hEUVVGdFFsUXNUVUZCUVVFc1EwRkJRVUVzVDBGQlkwc3NUVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZGZGtORUxGTkJRVUZCTEVOQlFVRkJMRU5CUTBodVF5eHZRa0ZCUVVFc1EwRkJaMElzTWtKQlFVRXNRMEZCTmtJc2VVSkJRVUVzUTBGQlFTeERRVU0zUTBFc2IwSkJRVUZCTEVOQlFXZENMRFJDUVVGQkxFTkJRVGhDTEZOQlFWVnZRaXhKUVVGQlFTeERRVUZCUVN4RFFVTjBSQ3hOUVVGUExFMUJRVUVzUTBGQlUwRXNTVUZCUVVFc1EwRkJUeXcwUWtGQlFTeERRVUZCTEVOQlFVRXNRMEZGZWtKd1FpeHZRa0ZCUVVFc1EwRkJaMElzTkVKQlFVRXNRMEZCT0VJc2FVSkJRVUVzUTBGQlFTeERRVU01UTBFc2IwSkJRVUZCTEVOQlFXZENMSE5DUVVGQkxFTkJRWGRDTEZOQlFWVnZRaXhKUVVGQlFTeERRVUZCUVN4RFFVTm9SQ3hOUVVGUExHTkJRVUVzUTBGQmFVSkJMRWxCUVVGQkxFTkJRVThzSzBKQlFVRXNRMEZCUVN4RFFVRkJMRU5CUldwRGNFSXNiMEpCUVVGQkxFTkJRV2RDTEhWQ1FVRkJMRU5CUVhsQ0xHZERRVUZCTEVOQlFVRXNRMEZEZWtOQkxHOUNRVUZCUVN4RFFVRm5RaXgzUWtGQlFTeERRVUV3UWl3eVFrRkJRU3hEUVVGQkxFTkJRekZEUVN4dlFrRkJRVUVzUTBGQlowSXNORUpCUVVFc1EwRkJPRUlzYVVKQlFVRXNRMEZCUVN4RFFVTTVRMEVzYjBKQlFVRkJMRU5CUVdkQ0xIZENRVUZCTEVOQlFUQkNMSEZEUVVGQkxFTkJRWFZEYlVNc1UwRkJRVUVzUTBGQlFVRXNRMEZEYWtadVF5eHZRa0ZCUVVFc1EwRkJaMElzYzBKQlFVRXNRMEZCZDBJc1UwRkJWVzlFTEVkQlFVRkJMRU5CUVVGQkxFTkJRMmhFTEUxQlFVOHNiMEpCUVVFc1EwRkJkVUpCTEVkQlFVRkJMRU5CUVVGQkxFTkJRemRDYWtJc1UwRkJRVUVzUTBGQlFVRXNRMEZEU0c1RExHOUNRVUZCUVN4RFFVRm5RaXh2UTBGQlFTeERRVUZ6UXl4clEwRkJRU3hEUVVGQkxFTkJRM1JFY1VRc2EwSkJRVTlETEVOQlFWRjJSQ3hMUVVGQlFTeERRVUZSUVN4VlFVRkJRU3hEUVVGQlFTSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJiblZzYkYxOSIsIlwidXNlIHN0cmljdFwiO3ZhciBfX0VSUl9JTlZBTElEX09QVF9WQUxVRV82MD1fJGVycm9yc0Jyb3dzZXJfNDguY29kZXMuRVJSX0lOVkFMSURfT1BUX1ZBTFVFO3ZhciBfJHN0YXRlXzYwPXtnZXRIaWdoV2F0ZXJNYXJrOmZ1bmN0aW9uKHN0YXRlLG9wdGlvbnMsZHVwbGV4S2V5LGlzRHVwbGV4KXt2YXIgaHdtPWZ1bmN0aW9uKG9wdGlvbnMsaXNEdXBsZXgsZHVwbGV4S2V5KXtyZXR1cm4gbnVsbCE9b3B0aW9ucy5oaWdoV2F0ZXJNYXJrP29wdGlvbnMuaGlnaFdhdGVyTWFyazppc0R1cGxleD9vcHRpb25zW2R1cGxleEtleV06bnVsbH0ob3B0aW9ucyxpc0R1cGxleCxkdXBsZXhLZXkpO2lmKG51bGwhPWh3bSl7aWYoIWlzRmluaXRlKGh3bSl8fE1hdGguZmxvb3IoaHdtKSE9PWh3bXx8aHdtPDApdGhyb3cgbmV3IF9fRVJSX0lOVkFMSURfT1BUX1ZBTFVFXzYwKGlzRHVwbGV4P2R1cGxleEtleTpcImhpZ2hXYXRlck1hcmtcIixod20pO3JldHVybiBNYXRoLmZsb29yKGh3bSl9cmV0dXJuIHN0YXRlLm9iamVjdE1vZGU/MTY6MTYzODR9fTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OMFlYUmxMbXB6SWwwc0ltNWhiV1Z6SWpwYklrVlNVbDlKVGxaQlRFbEVYMDlRVkY5V1FVeFZSU0lzSW5KbGNYVnBjbVVpTENKamIyUmxjeUlzSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKblpYUklhV2RvVjJGMFpYSk5ZWEpySWl3aWMzUmhkR1VpTENKdmNIUnBiMjV6SWl3aVpIVndiR1Y0UzJWNUlpd2lhWE5FZFhCc1pYZ2lMQ0pvZDIwaUxDSm9hV2RvVjJGMFpYSk5ZWEpySWl3aWFHbG5hRmRoZEdWeVRXRnlhMFp5YjIwaUxDSnBjMFpwYm1sMFpTSXNJazFoZEdnaUxDSm1iRzl2Y2lJc0ltOWlhbVZqZEUxdlpHVWlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJMRmxCUVVFc1EwRkZRU3hKUVVGSlFTd3dRa0ZCUVVFc1EwRkJkMEpETEd0Q1FVRlJMRU5CUVcxQ1F5eExRVUZCUVN4RFFVRk5SaXh4UWtGQlFVRXNRMEZ6UWpkRVJ5eGpRVUZQUXl4RFFVRlZMRU5CUTJaRExHZENRVUZCUVN4RFFXcENSaXhUUVVFd1FrTXNTMEZCUVVFc1EwRkJUME1zVDBGQlFVRXNRMEZCVTBNc1UwRkJRVUVzUTBGQlYwTXNVVUZCUVVFc1EwRkJRVUVzUTBGRGJrUXNTVUZCU1VNc1IwRkJRVUVzUTBGTVRpeFRRVUV5UWtnc1QwRkJRVUVzUTBGQlUwVXNVVUZCUVVFc1EwRkJWVVFzVTBGQlFVRXNRMEZCUVVFc1EwRkROVU1zVDBGQlowTXNTVUZCUVN4RlFVRjZRa1FzVDBGQlFVRXNRMEZCVVVrc1lVRkJRVUVzUTBGQmQwSktMRTlCUVVGQkxFTkJRVkZKTEdGQlFVRkJMRU5CUVdkQ1JpeFJRVUZCUVN4RFFVRlhSaXhQUVVGQlFTeERRVUZSUXl4VFFVRkJRU3hEUVVGQlFTeERRVUZoTEVsQlFVRXNRMEZKY2taSkxFTkJRV3RDVEN4UFFVRkJRU3hEUVVGVFJTeFJRVUZCUVN4RFFVRlZSQ3hUUVVGQlFTeERRVUZCUVN4RFFVVXZReXhIUVVGWExFbEJRVUVzUlVGQlVFVXNSMEZCUVVFc1EwRkJZU3hEUVVObUxFZEJRVUVzUTBGQlRVY3NVVUZCUVVFc1EwRkJVMGdzUjBGQlFVRXNRMEZCUVVFc1JVRkJVVWtzU1VGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlRVd3NSMEZCUVVFc1EwRkJRVUVzUjBGQlUwRXNSMEZCUVVFc1JVRkJVVUVzUjBGQlFVRXNRMEZCVFN4RFFVRkJMRU5CUlhaRUxFMUJRVTBzU1VGQlNWWXNNRUpCUVVGQkxFTkJSRU5UTEZGQlFVRkJMRU5CUVZkRUxGTkJRVUZCTEVOQlFWa3NaVUZCUVN4RFFVTkpSU3hIUVVGQlFTeERRVUZCUVN4RFFVZDRReXhQUVVGUFNTeEpRVUZCUVN4RFFVRkxReXhMUVVGQlFTeERRVUZOVEN4SFFVRkJRU3hEUVVGQlFTeERRVWx3UWl4UFFVRlBTaXhMUVVGQlFTeERRVUZOVlN4VlFVRkJRU3hEUVVGaExFVkJRVUVzUTBGQlN5eExRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCJcInVzZSBzdHJpY3RcIjt2YXIgXyRUcmFuc2Zvcm1fNTI9X19UcmFuc2Zvcm1fNTI7dmFyIF9fX3JlcXVpcmUkY29kZXNfNTI9XyRlcnJvcnNCcm93c2VyXzQ4LmNvZGVzLF9fRVJSX01FVEhPRF9OT1RfSU1QTEVNRU5URURfNTI9X19fcmVxdWlyZSRjb2Rlc181Mi5FUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRCxfX0VSUl9NVUxUSVBMRV9DQUxMQkFDS181Mj1fX19yZXF1aXJlJGNvZGVzXzUyLkVSUl9NVUxUSVBMRV9DQUxMQkFDSyxfX0VSUl9UUkFOU0ZPUk1fQUxSRUFEWV9UUkFOU0ZPUk1JTkdfNTI9X19fcmVxdWlyZSRjb2Rlc181Mi5FUlJfVFJBTlNGT1JNX0FMUkVBRFlfVFJBTlNGT1JNSU5HLF9fRVJSX1RSQU5TRk9STV9XSVRIX0xFTkdUSF8wXzUyPV9fX3JlcXVpcmUkY29kZXNfNTIuRVJSX1RSQU5TRk9STV9XSVRIX0xFTkdUSF8wLF9fRHVwbGV4XzUyPV8kRHVwbGV4XzQ5KHt9KTtmdW5jdGlvbiBfX2FmdGVyVHJhbnNmb3JtXzUyKGVyLGRhdGEpe3ZhciB0cz10aGlzLl90cmFuc2Zvcm1TdGF0ZTt0cy50cmFuc2Zvcm1pbmc9ITE7dmFyIGNiPXRzLndyaXRlY2I7aWYobnVsbD09PWNiKXJldHVybiB0aGlzLmVtaXQoXCJlcnJvclwiLG5ldyBfX0VSUl9NVUxUSVBMRV9DQUxMQkFDS181Mik7dHMud3JpdGVjaHVuaz1udWxsLHRzLndyaXRlY2I9bnVsbCxudWxsIT1kYXRhJiZ0aGlzLnB1c2goZGF0YSksY2IoZXIpO3ZhciBycz10aGlzLl9yZWFkYWJsZVN0YXRlO3JzLnJlYWRpbmc9ITEsKHJzLm5lZWRSZWFkYWJsZXx8cnMubGVuZ3RoPHJzLmhpZ2hXYXRlck1hcmspJiZ0aGlzLl9yZWFkKHJzLmhpZ2hXYXRlck1hcmspfWZ1bmN0aW9uIF9fVHJhbnNmb3JtXzUyKG9wdGlvbnMpe2lmKCEodGhpcyBpbnN0YW5jZW9mIF9fVHJhbnNmb3JtXzUyKSlyZXR1cm4gbmV3IF9fVHJhbnNmb3JtXzUyKG9wdGlvbnMpO19fRHVwbGV4XzUyLmNhbGwodGhpcyxvcHRpb25zKSx0aGlzLl90cmFuc2Zvcm1TdGF0ZT17YWZ0ZXJUcmFuc2Zvcm06X19hZnRlclRyYW5zZm9ybV81Mi5iaW5kKHRoaXMpLG5lZWRUcmFuc2Zvcm06ITEsdHJhbnNmb3JtaW5nOiExLHdyaXRlY2I6bnVsbCx3cml0ZWNodW5rOm51bGwsd3JpdGVlbmNvZGluZzpudWxsfSx0aGlzLl9yZWFkYWJsZVN0YXRlLm5lZWRSZWFkYWJsZT0hMCx0aGlzLl9yZWFkYWJsZVN0YXRlLnN5bmM9ITEsb3B0aW9ucyYmKFwiZnVuY3Rpb25cIj09dHlwZW9mIG9wdGlvbnMudHJhbnNmb3JtJiYodGhpcy5fdHJhbnNmb3JtPW9wdGlvbnMudHJhbnNmb3JtKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBvcHRpb25zLmZsdXNoJiYodGhpcy5fZmx1c2g9b3B0aW9ucy5mbHVzaCkpLHRoaXMub24oXCJwcmVmaW5pc2hcIixfX3ByZWZpbmlzaF81Mil9ZnVuY3Rpb24gX19wcmVmaW5pc2hfNTIoKXt2YXIgX3RoaXM9dGhpcztcImZ1bmN0aW9uXCIhPXR5cGVvZiB0aGlzLl9mbHVzaHx8dGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ/X19kb25lXzUyKHRoaXMsbnVsbCxudWxsKTp0aGlzLl9mbHVzaChmdW5jdGlvbihlcixkYXRhKXtfX2RvbmVfNTIoX3RoaXMsZXIsZGF0YSl9KX1mdW5jdGlvbiBfX2RvbmVfNTIoc3RyZWFtLGVyLGRhdGEpe2lmKGVyKXJldHVybiBzdHJlYW0uZW1pdChcImVycm9yXCIsZXIpO2lmKG51bGwhPWRhdGEmJnN0cmVhbS5wdXNoKGRhdGEpLHN0cmVhbS5fd3JpdGFibGVTdGF0ZS5sZW5ndGgpdGhyb3cgbmV3IF9fRVJSX1RSQU5TRk9STV9XSVRIX0xFTkdUSF8wXzUyO2lmKHN0cmVhbS5fdHJhbnNmb3JtU3RhdGUudHJhbnNmb3JtaW5nKXRocm93IG5ldyBfX0VSUl9UUkFOU0ZPUk1fQUxSRUFEWV9UUkFOU0ZPUk1JTkdfNTI7cmV0dXJuIHN0cmVhbS5wdXNoKG51bGwpfV8kaW5oZXJpdHNfYnJvd3Nlcl8yMChfX1RyYW5zZm9ybV81MixfX0R1cGxleF81MiksX19UcmFuc2Zvcm1fNTIucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24oY2h1bmssZW5jb2Rpbmcpe3JldHVybiB0aGlzLl90cmFuc2Zvcm1TdGF0ZS5uZWVkVHJhbnNmb3JtPSExLF9fRHVwbGV4XzUyLnByb3RvdHlwZS5wdXNoLmNhbGwodGhpcyxjaHVuayxlbmNvZGluZyl9LF9fVHJhbnNmb3JtXzUyLnByb3RvdHlwZS5fdHJhbnNmb3JtPWZ1bmN0aW9uKGNodW5rLGVuY29kaW5nLGNiKXtjYihuZXcgX19FUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRF81MihcIl90cmFuc2Zvcm0oKVwiKSl9LF9fVHJhbnNmb3JtXzUyLnByb3RvdHlwZS5fd3JpdGU9ZnVuY3Rpb24oY2h1bmssZW5jb2RpbmcsY2Ipe3ZhciB0cz10aGlzLl90cmFuc2Zvcm1TdGF0ZTtpZih0cy53cml0ZWNiPWNiLHRzLndyaXRlY2h1bms9Y2h1bmssdHMud3JpdGVlbmNvZGluZz1lbmNvZGluZywhdHMudHJhbnNmb3JtaW5nKXt2YXIgcnM9dGhpcy5fcmVhZGFibGVTdGF0ZTsodHMubmVlZFRyYW5zZm9ybXx8cnMubmVlZFJlYWRhYmxlfHxycy5sZW5ndGg8cnMuaGlnaFdhdGVyTWFyaykmJnRoaXMuX3JlYWQocnMuaGlnaFdhdGVyTWFyayl9fSxfX1RyYW5zZm9ybV81Mi5wcm90b3R5cGUuX3JlYWQ9ZnVuY3Rpb24obil7dmFyIHRzPXRoaXMuX3RyYW5zZm9ybVN0YXRlO251bGw9PT10cy53cml0ZWNodW5rfHx0cy50cmFuc2Zvcm1pbmc/dHMubmVlZFRyYW5zZm9ybT0hMDoodHMudHJhbnNmb3JtaW5nPSEwLHRoaXMuX3RyYW5zZm9ybSh0cy53cml0ZWNodW5rLHRzLndyaXRlZW5jb2RpbmcsdHMuYWZ0ZXJUcmFuc2Zvcm0pKX0sX19UcmFuc2Zvcm1fNTIucHJvdG90eXBlLl9kZXN0cm95PWZ1bmN0aW9uKGVycixjYil7X19EdXBsZXhfNTIucHJvdG90eXBlLl9kZXN0cm95LmNhbGwodGhpcyxlcnIsZnVuY3Rpb24oZXJyMil7Y2IoZXJyMil9KX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYklsOXpkSEpsWVcxZmRISmhibk5tYjNKdExtcHpJbDBzSW01aGJXVnpJanBiSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKVWNtRnVjMlp2Y20waUxDSmZjbVZ4ZFdseVpTUmpiMlJsY3lJc0luSmxjWFZwY21VaUxDSmpiMlJsY3lJc0lrVlNVbDlOUlZSSVQwUmZUazlVWDBsTlVFeEZUVVZPVkVWRUlpd2lSVkpTWDAxVlRGUkpVRXhGWDBOQlRFeENRVU5MSWl3aVJWSlNYMVJTUVU1VFJrOVNUVjlCVEZKRlFVUlpYMVJTUVU1VFJrOVNUVWxPUnlJc0lrVlNVbDlVVWtGT1UwWlBVazFmVjBsVVNGOU1SVTVIVkVoZk1DSXNJa1IxY0d4bGVDSXNJbUZtZEdWeVZISmhibk5tYjNKdElpd2laWElpTENKa1lYUmhJaXdpZEhNaUxDSjBhR2x6SWl3aVgzUnlZVzV6Wm05eWJWTjBZWFJsSWl3aWRISmhibk5tYjNKdGFXNW5JaXdpWTJJaUxDSjNjbWwwWldOaUlpd2laVzFwZENJc0luZHlhWFJsWTJoMWJtc2lMQ0p3ZFhOb0lpd2ljbk1pTENKZmNtVmhaR0ZpYkdWVGRHRjBaU0lzSW5KbFlXUnBibWNpTENKdVpXVmtVbVZoWkdGaWJHVWlMQ0pzWlc1bmRHZ2lMQ0pvYVdkb1YyRjBaWEpOWVhKcklpd2lYM0psWVdRaUxDSnZjSFJwYjI1eklpd2lZMkZzYkNJc0ltSnBibVFpTENKdVpXVmtWSEpoYm5ObWIzSnRJaXdpZDNKcGRHVmxibU52WkdsdVp5SXNJbk41Ym1NaUxDSjBjbUZ1YzJadmNtMGlMQ0pmZEhKaGJuTm1iM0p0SWl3aVpteDFjMmdpTENKZlpteDFjMmdpTENKdmJpSXNJbkJ5WldacGJtbHphQ0lzSWw5MGFHbHpJaXdpWkdWemRISnZlV1ZrSWl3aVpHOXVaU0lzSW5OMGNtVmhiU0lzSWw5M2NtbDBZV0pzWlZOMFlYUmxJaXdpY0hKdmRHOTBlWEJsSWl3aVkyaDFibXNpTENKbGJtTnZaR2x1WnlJc0lsOTNjbWwwWlNJc0ltNGlMQ0pmWkdWemRISnZlU0lzSW1WeWNpSXNJbVZ5Y2pJaVhTd2liV0Z3Y0dsdVozTWlPaUpCUVRaRVFTeFpRVUZCTEVOQlJVRkJMR3RDUVVGUFF5eERRVUZWUXl4alFVRkJRU3hEUVVWcVFpeEpRVUZKUXl4dFFrRkJRVUVzUTBGQmFVSkRMR3RDUVVGUkxFTkJRV0ZETEV0QlFVRkJMRU5CUTNSRFF5d3JRa0ZCUVVFc1EwRkJOa0pJTEcxQ1FVRkJRU3hEUVVGbFJ5d3dRa0ZCUVVFc1EwRkROVU5ETERCQ1FVRkJRU3hEUVVGM1Frb3NiVUpCUVVGQkxFTkJRV1ZKTEhGQ1FVRkJRU3hEUVVOMlEwTXNkVU5CUVVGQkxFTkJRWEZEVEN4dFFrRkJRVUVzUTBGQlpVc3NhME5CUVVGQkxFTkJRM0JFUXl4blEwRkJRVUVzUTBGQk9FSk9MRzFDUVVGQlFTeERRVUZsVFN3eVFrRkJRVUVzUTBGRk4wTkRMRmRCUVVGQkxFTkJRVk5PTEdWQlFWRXNRMEZKY2tJc1UwRkJVMDhzYlVKQlFVRkJMRU5CUVdWRExFVkJRVUZCTEVOQlFVbERMRWxCUVVGQkxFTkJRVUZCTEVOQlF6RkNMRWxCUVVsRExFVkJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXRETEdWQlFVRkJMRU5CUTJSR0xFVkJRVUZCTEVOQlFVZEhMRmxCUVVGQkxFTkJRVUZCTEVOQlFXVXNRMEZCUVN4RFFVTnNRaXhKUVVGSlF5eEZRVUZCUVN4RFFVRkxTaXhGUVVGQlFTeERRVUZIU3l4UFFVRkJRU3hEUVVWYUxFZEJRVmNzU1VGQlFTeEhRVUZRUkN4RlFVRkJRU3hEUVVOR0xFOUJRVTlJTEVsQlFVRkJMRU5CUVV0TExFbEJRVUZCTEVOQlFVc3NUMEZCUVN4RFFVRlRMRWxCUVVsaUxEQkNRVUZCUVN4RFFVRkJRU3hEUVVkb1EwOHNSVUZCUVVFc1EwRkJSMDhzVlVGQlFVRXNRMEZCWVN4SlFVRkJMRU5CUTJoQ1VDeEZRVUZCUVN4RFFVRkhTeXhQUVVGQlFTeERRVUZWTEVsQlFVRXNRMEZEUkN4SlFVRkJMRVZCUVZKT0xFbEJRVUZCTEVWQlEwWkZMRWxCUVVGQkxFTkJRVXRQTEVsQlFVRkJMRU5CUVV0VUxFbEJRVUZCTEVOQlFVRkJMRU5CUTFwTExFVkJRVUZCTEVOQlFVZE9MRVZCUVVGQkxFTkJRVUZCTEVOQlEwZ3NTVUZCU1Zjc1JVRkJRVUVzUTBGQlMxSXNTVUZCUVVFc1EwRkJTMU1zWTBGQlFVRXNRMEZEWkVRc1JVRkJRVUVzUTBGQlIwVXNUMEZCUVVFc1EwRkJRVUVzUTBGQlZTeERRVUZCTEVOQlFVRXNRMEZGVkVZc1JVRkJRVUVzUTBGQlIwY3NXVUZCUVVFc1JVRkJaMEpJTEVWQlFVRkJMRU5CUVVkSkxFMUJRVUZCTEVOQlFWTktMRVZCUVVGQkxFTkJRVWRMTEdGQlFVRkJMRWRCUTNCRFlpeEpRVUZCUVN4RFFVRkxZeXhMUVVGQlFTeERRVUZOVGl4RlFVRkJRU3hEUVVGSFN5eGhRVUZCUVN4RFFVRkJRU3hEUVVsc1FpeFRRVUZUTVVJc1kwRkJRVUVzUTBGQlZUUkNMRTlCUVVGQkxFTkJRVUZCTEVOQlEycENMRWRCUVVFc1JVRkJUV1lzU1VGQlFVRXNXVUZCWjBKaUxHTkJRVUZCTEVOQlFVRkJMRU5CUVZrc1QwRkJUeXhKUVVGSlFTeGpRVUZCUVN4RFFVRlZORUlzVDBGQlFVRXNRMEZCUVVFc1EwRkRka1J3UWl4WFFVRkJRU3hEUVVGUGNVSXNTVUZCUVVFc1EwRkJTMmhDTEVsQlFVRkJMRU5CUVUxbExFOUJRVUZCTEVOQlFVRkJMRU5CUTJ4Q1ppeEpRVUZCUVN4RFFVRkxReXhsUVVGQlFTeERRVUZyUWl4RFFVTnlRa3dzWTBGQlFVRXNRMEZCWjBKQkxHMUNRVUZCUVN4RFFVRmxjVUlzU1VGQlFVRXNRMEZCUzJwQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUTNCRGEwSXNZVUZCUVVFc1EwRkJRVUVzUTBGQlpTeERRVUZCTEVOQlEyWm9RaXhaUVVGQlFTeERRVUZCUVN4RFFVRmpMRU5CUVVFc1EwRkRaRVVzVDBGQlFVRXNRMEZCVXl4SlFVRkJMRU5CUTFSRkxGVkJRVUZCTEVOQlFWa3NTVUZCUVN4RFFVTmFZU3hoUVVGQlFTeERRVUZsTEVsQlFVRXNRMEZCUVN4RFFVZHFRbTVDTEVsQlFVRkJMRU5CUVV0VExHTkJRVUZCTEVOQlFXVkZMRmxCUVVGQkxFTkJRVUZCTEVOQlFXVXNRMEZCUVN4RFFVbHVRMWdzU1VGQlFVRXNRMEZCUzFNc1kwRkJRVUVzUTBGQlpWY3NTVUZCUVVFc1EwRkJRVUVzUTBGQlR5eERRVUZCTEVOQlJYWkNUQ3hQUVVGQlFTeEhRVU1yUWl4VlFVRkJMRVZCUVVFc1QwRkJkRUpCTEU5QlFVRkJMRU5CUVZGTkxGTkJRVUZCTEVkQlFUQkNja0lzU1VGQlFVRXNRMEZCUzNOQ0xGVkJRVUZCTEVOQlFXRlFMRTlCUVVGQkxFTkJRVkZOTEZOQlFVRkJMRU5CUVVGQkxFTkJRekZETEZWQlFVRXNSVUZCUVN4UFFVRnNRazRzVDBGQlFVRXNRMEZCVVZFc1MwRkJRVUVzUjBGQmMwSjJRaXhKUVVGQlFTeERRVUZMZDBJc1RVRkJRVUVzUTBGQlUxUXNUMEZCUVVFc1EwRkJVVkVzUzBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSmFrVjJRaXhKUVVGQlFTeERRVUZMZVVJc1JVRkJRVUVzUTBGQlJ5eFhRVUZCTEVOQlFXRkRMR05CUVVGQkxFTkJRVUZCTEVOQlIzWkNMRk5CUVZOQkxHTkJRVUZCTEVWQlFVRkJMRU5CUTFBc1NVRkJTVU1zUzBGQlFVRXNRMEZCVVROQ0xFbEJRVUZCTEVOQlJXVXNWVUZCUVN4RlFVRkJMRTlCUVdoQ1FTeEpRVUZCUVN4RFFVRkxkMElzVFVGQlFVRXNSVUZCTUVKNFFpeEpRVUZCUVN4RFFVRkxVeXhqUVVGQlFTeERRVUZsYlVJc1UwRkJRVUVzUTBGTE5VUkRMRk5CUVVGQkxFTkJRVXMzUWl4SlFVRkJRU3hEUVVGTkxFbEJRVUVzUTBGQlRTeEpRVUZCTEVOQlFVRXNRMEZLYWtKQkxFbEJRVUZCTEVOQlFVdDNRaXhOUVVGQlFTeERRVUZQTEZOQlFWVXpRaXhGUVVGQlFTeERRVUZKUXl4SlFVRkJRU3hEUVVGQlFTeERRVU40UWl0Q0xGTkJRVUZCTEVOQlFVdEdMRXRCUVVGQkxFTkJRVTg1UWl4RlFVRkJRU3hEUVVGSlF5eEpRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFUWkVkRUlzVTBGQlV5dENMRk5CUVVGQkxFTkJRVXRETEUxQlFVRkJMRU5CUVZGcVF5eEZRVUZCUVN4RFFVRkpReXhKUVVGQlFTeERRVUZCUVN4RFFVTjRRaXhIUVVGSlJDeEZRVUZCUVN4RFFVRkpMRTlCUVU5cFF5eE5RVUZCUVN4RFFVRlBla0lzU1VGQlFVRXNRMEZCU3l4UFFVRkJMRU5CUVZOU0xFVkJRVUZCTEVOQlFVRkJMRU5CVFhCRExFZEJURmtzU1VGQlFTeEZRVUZTUXl4SlFVRkJRU3hGUVVOR1owTXNUVUZCUVVFc1EwRkJUM1pDTEVsQlFVRkJMRU5CUVV0VUxFbEJRVUZCTEVOQlFVRkJMRU5CU1ZablF5eE5RVUZCUVN4RFFVRlBReXhqUVVGQlFTeERRVUZsYmtJc1RVRkJRVUVzUTBGQlVTeE5RVUZOTEVsQlFVbHNRaXhuUTBGQlFVRXNRMEZETlVNc1IwRkJTVzlETEUxQlFVRkJMRU5CUVU4M1FpeGxRVUZCUVN4RFFVRm5Ra01zV1VGQlFVRXNRMEZCWXl4TlFVRk5MRWxCUVVsVUxIVkRRVUZCUVN4RFFVTnVSQ3hQUVVGUGNVTXNUVUZCUVVFc1EwRkJUM1pDTEVsQlFVRkJMRU5CUVVzc1NVRkJRU3hEUVVGQkxFTkJPVWh5UW14Q0xIRkNRVUZCUVN4RFFVRnZRa1lzWTBGQlFVRXNRMEZCVjFFc1YwRkJRVUVzUTBGQlFVRXNRMEVyUkM5Q1VpeGpRVUZCUVN4RFFVRlZOa01zVTBGQlFVRXNRMEZCVlhwQ0xFbEJRVUZCTEVOQlFVOHNVMEZCVlRCQ0xFdEJRVUZCTEVOQlFVOURMRkZCUVVGQkxFTkJRVUZCTEVOQlJURkRMRTlCUkVGc1F5eEpRVUZCUVN4RFFVRkxReXhsUVVGQlFTeERRVUZuUW1sQ0xHRkJRVUZCTEVOQlFVRkJMRU5CUVdkQ0xFTkJRVUVzUTBGRE9VSjJRaXhYUVVGQlFTeERRVUZQY1VNc1UwRkJRVUVzUTBGQlZYcENMRWxCUVVGQkxFTkJRVXRUTEVsQlFVRkJMRU5CUVV0b1FpeEpRVUZCUVN4RFFVRk5hVU1zUzBGQlFVRXNRMEZCVDBNc1VVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRmhha1F2UXl4alFVRkJRU3hEUVVGVk5rTXNVMEZCUVVFc1EwRkJWVllzVlVGQlFVRXNRMEZCWVN4VFFVRlZWeXhMUVVGQlFTeERRVUZQUXl4UlFVRkJRU3hEUVVGVkwwSXNSVUZCUVVFc1EwRkJRVUVzUTBGRE1VUkJMRVZCUVVGQkxFTkJRVWNzU1VGQlNWb3NLMEpCUVVGQkxFTkJRVEpDTEdOQlFVRXNRMEZCUVN4RFFVRkJMRU5CUVVFc1EwRkhjRU5LTEdOQlFVRkJMRU5CUVZVMlF5eFRRVUZCUVN4RFFVRlZSeXhOUVVGQlFTeERRVUZUTEZOQlFWVkdMRXRCUVVGQkxFTkJRVTlETEZGQlFVRkJMRU5CUVZVdlFpeEZRVUZCUVN4RFFVRkJRU3hEUVVOMFJDeEpRVUZKU2l4RlFVRkJRU3hEUVVGTFF5eEpRVUZCUVN4RFFVRkxReXhsUVVGQlFTeERRVXRrTEVkQlNrRkdMRVZCUVVGQkxFTkJRVWRMTEU5QlFVRkJMRU5CUVZWRUxFVkJRVUZCTEVOQlEySktMRVZCUVVGQkxFTkJRVWRQTEZWQlFVRkJMRU5CUVdFeVFpeExRVUZCUVN4RFFVTm9RbXhETEVWQlFVRkJMRU5CUVVkdlFpeGhRVUZCUVN4RFFVRm5RbVVzVVVGQlFVRXNRMEZCUVVFc1EwRkZaRzVETEVWQlFVRkJMRU5CUVVkSExGbEJRVUZCTEVOQlFXTXNRMEZEY0VJc1NVRkJTVTBzUlVGQlFVRXNRMEZCUzFJc1NVRkJRVUVzUTBGQlMxTXNZMEZCUVVFc1EwRkJRVUVzUTBGRFZsWXNSVUZCUVVFc1EwRkJSMjFDTEdGQlFVRkJMRVZCUVdsQ1ZpeEZRVUZCUVN4RFFVRkhSeXhaUVVGQlFTeEZRVUZuUWtnc1JVRkJRVUVzUTBGQlIwa3NUVUZCUVVFc1EwRkJVMG9zUlVGQlFVRXNRMEZCUjBzc1lVRkJRVUVzUjBGQlpXSXNTVUZCUVVFc1EwRkJTMk1zUzBGQlFVRXNRMEZCVFU0c1JVRkJRVUVzUTBGQlIwc3NZVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRlBNMFl4UWl4alFVRkJRU3hEUVVGVk5rTXNVMEZCUVVFc1EwRkJWV3hDTEV0QlFVRkJMRU5CUVZFc1UwRkJWWE5DTEVOQlFVRkJMRU5CUVVGQkxFTkJRM0JETEVsQlFVbHlReXhGUVVGQlFTeERRVUZMUXl4SlFVRkJRU3hEUVVGTFF5eGxRVUZCUVN4RFFVVlJMRWxCUVVFc1IwRkJiRUpHTEVWQlFVRkJMRU5CUVVkUExGVkJRVUZCTEVWQlFYZENVQ3hGUVVGQlFTeERRVUZIUnl4WlFVRkJRU3hEUVU5b1EwZ3NSVUZCUVVFc1EwRkJSMjFDTEdGQlFVRkJMRU5CUVVGQkxFTkJRV2RDTEVOQlFVRXNSVUZPYmtKdVFpeEZRVUZCUVN4RFFVRkhSeXhaUVVGQlFTeERRVUZCUVN4RFFVRmxMRU5CUVVFc1EwRkZiRUpHTEVsQlFVRkJMRU5CUVV0elFpeFZRVUZCUVN4RFFVRlhka0lzUlVGQlFVRXNRMEZCUjA4c1ZVRkJRVUVzUTBGQldWQXNSVUZCUVVFc1EwRkJSMjlDTEdGQlFVRkJMRU5CUVdWd1FpeEZRVUZCUVN4RFFVRkhTQ3hqUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVkY0UkZRc1kwRkJRVUVzUTBGQlZUWkRMRk5CUVVGQkxFTkJRVlZMTEZGQlFVRkJMRU5CUVZjc1UwRkJWVU1zUjBGQlFVRXNRMEZCUzI1RExFVkJRVUZCTEVOQlFVRkJMRU5CUXpWRFVpeFhRVUZCUVN4RFFVRlBjVU1zVTBGQlFVRXNRMEZCVlVzc1VVRkJRVUVzUTBGQlUzSkNMRWxCUVVGQkxFTkJRVXRvUWl4SlFVRkJRU3hEUVVGTmMwTXNSMEZCUVVFc1EwRkJTeXhUUVVGVlF5eEpRVUZCUVN4RFFVRkJRU3hEUVVOc1JIQkRMRVZCUVVGQkxFTkJRVWR2UXl4SlFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYmJuVnNiRjE5IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIF8kUGFzc1Rocm91Z2hfNTA9X19QYXNzVGhyb3VnaF81MDsvKiByZW1vdmVkOiB2YXIgXyRUcmFuc2Zvcm1fNTI9cmVxdWlyZShcIi4vX3N0cmVhbV90cmFuc2Zvcm1cIik7ICovO2Z1bmN0aW9uIF9fUGFzc1Rocm91Z2hfNTAob3B0aW9ucyl7aWYoISh0aGlzIGluc3RhbmNlb2YgX19QYXNzVGhyb3VnaF81MCkpcmV0dXJuIG5ldyBfX1Bhc3NUaHJvdWdoXzUwKG9wdGlvbnMpO18kVHJhbnNmb3JtXzUyLmNhbGwodGhpcyxvcHRpb25zKX1fJGluaGVyaXRzX2Jyb3dzZXJfMjAoX19QYXNzVGhyb3VnaF81MCxfJFRyYW5zZm9ybV81MiksX19QYXNzVGhyb3VnaF81MC5wcm90b3R5cGUuX3RyYW5zZm9ybT1mdW5jdGlvbihjaHVuayxlbmNvZGluZyxjYil7Y2IobnVsbCxjaHVuayl9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbDl6ZEhKbFlXMWZjR0Z6YzNSb2NtOTFaMmd1YW5NaVhTd2libUZ0WlhNaU9sc2liVzlrZFd4bElpd2laWGh3YjNKMGN5SXNJbEJoYzNOVWFISnZkV2RvSWl3aWIzQjBhVzl1Y3lJc0luUm9hWE1pTENKVWNtRnVjMlp2Y20waUxDSmpZV3hzSWl3aWNtVnhkV2x5WlNJc0luQnliM1J2ZEhsd1pTSXNJbDkwY21GdWMyWnZjbTBpTENKamFIVnVheUlzSW1WdVkyOWthVzVuSWl3aVkySWlYU3dpYldGd2NHbHVaM01pT2lKQlFYVkNRU3haUVVGQkxFTkJSVUZCTEc5Q1FVRlBReXhEUVVGVlF5eG5Ra0ZCUVVFc1EwRkZha0lzYTBWQlNVRXNVMEZCVTBFc1owSkJRVUZCTEVOQlFWbERMRTlCUVVGQkxFTkJRVUZCTEVOQlEyNUNMRWRCUVVFc1JVRkJUVU1zU1VGQlFVRXNXVUZCWjBKR0xHZENRVUZCUVN4RFFVRkJRU3hEUVVGakxFOUJRVThzU1VGQlNVRXNaMEpCUVVGQkxFTkJRVmxETEU5QlFVRkJMRU5CUVVGQkxFTkJRek5FUlN4alFVRkJRU3hEUVVGVlF5eEpRVUZCUVN4RFFVRkxSaXhKUVVGQlFTeERRVUZOUkN4UFFVRkJRU3hEUVVGQlFTeERRVXAyUWtrc2NVSkJRVUZCTEVOQlFXOUNUQ3huUWtGQlFVRXNRMEZCWVVjc1kwRkJRVUVzUTBGQlFVRXNRMEZQYWtOSUxHZENRVUZCUVN4RFFVRlpUU3hUUVVGQlFTeERRVUZWUXl4VlFVRkJRU3hEUVVGaExGTkJRVlZETEV0QlFVRkJMRU5CUVU5RExGRkJRVUZCTEVOQlFWVkRMRVZCUVVGQkxFTkJRVUZCTEVOQlF6VkVRU3hGUVVGQlFTeERRVUZITEVsQlFVRXNRMEZCVFVZc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwiXCJ1c2Ugc3RyaWN0XCI7dmFyIF9fZW9zXzU5O3ZhciBfX19yZXF1aXJlJGNvZGVzXzU5PV8kZXJyb3JzQnJvd3Nlcl80OC5jb2RlcyxfX0VSUl9NSVNTSU5HX0FSR1NfNTk9X19fcmVxdWlyZSRjb2Rlc181OS5FUlJfTUlTU0lOR19BUkdTLF9fRVJSX1NUUkVBTV9ERVNUUk9ZRURfNTk9X19fcmVxdWlyZSRjb2Rlc181OS5FUlJfU1RSRUFNX0RFU1RST1lFRDtmdW5jdGlvbiBfX25vb3BfNTkoZXJyKXtpZihlcnIpdGhyb3cgZXJyfWZ1bmN0aW9uIF9fY2FsbF81OShmbil7Zm4oKX1mdW5jdGlvbiBfX3BpcGVfNTkoZnJvbSx0byl7cmV0dXJuIGZyb20ucGlwZSh0byl9dmFyIF8kcGlwZWxpbmVfNTk9ZnVuY3Rpb24oKXtmb3IodmFyIF9sZW49YXJndW1lbnRzLmxlbmd0aCxzdHJlYW1zPW5ldyBBcnJheShfbGVuKSxfa2V5PTA7X2tleTxfbGVuO19rZXkrKylzdHJlYW1zW19rZXldPWFyZ3VtZW50c1tfa2V5XTt2YXIgZXJyb3IsY2FsbGJhY2s9ZnVuY3Rpb24oc3RyZWFtcyl7cmV0dXJuIHN0cmVhbXMubGVuZ3RoP1wiZnVuY3Rpb25cIiE9dHlwZW9mIHN0cmVhbXNbc3RyZWFtcy5sZW5ndGgtMV0/X19ub29wXzU5OnN0cmVhbXMucG9wKCk6X19ub29wXzU5fShzdHJlYW1zKTtpZihBcnJheS5pc0FycmF5KHN0cmVhbXNbMF0pJiYoc3RyZWFtcz1zdHJlYW1zWzBdKSxzdHJlYW1zLmxlbmd0aDwyKXRocm93IG5ldyBfX0VSUl9NSVNTSU5HX0FSR1NfNTkoXCJzdHJlYW1zXCIpO3ZhciBkZXN0cm95cz1zdHJlYW1zLm1hcChmdW5jdGlvbihzdHJlYW0saSl7dmFyIHJlYWRpbmc9aTxzdHJlYW1zLmxlbmd0aC0xO3JldHVybiBmdW5jdGlvbihzdHJlYW0scmVhZGluZyx3cml0aW5nLGNhbGxiYWNrKXtjYWxsYmFjaz1mdW5jdGlvbihjYWxsYmFjayl7dmFyIGNhbGxlZD0hMTtyZXR1cm4gZnVuY3Rpb24oKXtjYWxsZWR8fChjYWxsZWQ9ITAsY2FsbGJhY2suYXBwbHkodm9pZCAwLGFyZ3VtZW50cykpfX0oY2FsbGJhY2spO3ZhciBjbG9zZWQ9ITE7c3RyZWFtLm9uKFwiY2xvc2VcIixmdW5jdGlvbigpe2Nsb3NlZD0hMH0pLHZvaWQgMD09PV9fZW9zXzU5JiYoX19lb3NfNTk9XyRlb3NfNTcoe30pKSxfX2Vvc181OShzdHJlYW0se3JlYWRhYmxlOnJlYWRpbmcsd3JpdGFibGU6d3JpdGluZ30sZnVuY3Rpb24oZXJyKXtpZihlcnIpcmV0dXJuIGNhbGxiYWNrKGVycik7Y2xvc2VkPSEwLGNhbGxiYWNrKCl9KTt2YXIgZGVzdHJveWVkPSExO3JldHVybiBmdW5jdGlvbihlcnIpe2lmKCFjbG9zZWQmJiFkZXN0cm95ZWQpcmV0dXJuIGRlc3Ryb3llZD0hMCxmdW5jdGlvbihzdHJlYW0pe3JldHVybiBzdHJlYW0uc2V0SGVhZGVyJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBzdHJlYW0uYWJvcnR9KHN0cmVhbSk/c3RyZWFtLmFib3J0KCk6XCJmdW5jdGlvblwiPT10eXBlb2Ygc3RyZWFtLmRlc3Ryb3k/c3RyZWFtLmRlc3Ryb3koKTp2b2lkIGNhbGxiYWNrKGVycnx8bmV3IF9fRVJSX1NUUkVBTV9ERVNUUk9ZRURfNTkoXCJwaXBlXCIpKX19KHN0cmVhbSxyZWFkaW5nLGk+MCxmdW5jdGlvbihlcnIpe2Vycm9yfHwoZXJyb3I9ZXJyKSxlcnImJmRlc3Ryb3lzLmZvckVhY2goX19jYWxsXzU5KSxyZWFkaW5nfHwoZGVzdHJveXMuZm9yRWFjaChfX2NhbGxfNTkpLGNhbGxiYWNrKGVycm9yKSl9KX0pO3JldHVybiBzdHJlYW1zLnJlZHVjZShfX3BpcGVfNTkpfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5CcGNHVnNhVzVsTG1weklsMHNJbTVoYldWeklqcGJJbVZ2Y3lJc0lsOXlaWEYxYVhKbEpHTnZaR1Z6SWl3aWNtVnhkV2x5WlNJc0ltTnZaR1Z6SWl3aVJWSlNYMDFKVTFOSlRrZGZRVkpIVXlJc0lrVlNVbDlUVkZKRlFVMWZSRVZUVkZKUFdVVkVJaXdpYm05dmNDSXNJbVZ5Y2lJc0ltTmhiR3dpTENKbWJpSXNJbkJwY0dVaUxDSm1jbTl0SWl3aWRHOGlMQ0p0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpWDJ4bGJpSXNJbUZ5WjNWdFpXNTBjeUlzSW14bGJtZDBhQ0lzSW5OMGNtVmhiWE1pTENKQmNuSmhlU0lzSWw5clpYa2lMQ0psY25KdmNpSXNJbU5oYkd4aVlXTnJJaXdpY0c5d0lpd2ljRzl3UTJGc2JHSmhZMnNpTENKcGMwRnljbUY1SWl3aVpHVnpkSEp2ZVhNaUxDSnRZWEFpTENKemRISmxZVzBpTENKcElpd2ljbVZoWkdsdVp5SXNJbmR5YVhScGJtY2lMQ0pqWVd4c1pXUWlMQ0poY0hCc2VTSXNJbTl1WTJVaUxDSmpiRzl6WldRaUxDSnZiaUlzSW5WdVpHVm1hVzVsWkNJc0luSmxZV1JoWW14bElpd2lkM0pwZEdGaWJHVWlMQ0prWlhOMGNtOTVaV1FpTENKelpYUklaV0ZrWlhJaUxDSmhZbTl5ZENJc0ltbHpVbVZ4ZFdWemRDSXNJbVJsYzNSeWIza2lMQ0prWlhOMGNtOTVaWElpTENKbWIzSkZZV05vSWl3aWNtVmtkV05sSWwwc0ltMWhjSEJwYm1keklqb2lRVUZGUVN4WlFVRkJMRU5CUlVFc1NVRkJTVUVzVVVGQlFVRXNRMEZYU2l4SlFVRkpReXh0UWtGQlFVRXNRMEZCYVVKRExHdENRVUZSTEVOQlFXMUNReXhMUVVGQlFTeERRVU0xUTBNc2NVSkJRVUZCTEVOQlFXMUNTQ3h0UWtGQlFVRXNRMEZCWlVjc1owSkJRVUZCTEVOQlEyeERReXg1UWtGQlFVRXNRMEZCZFVKS0xHMUNRVUZCUVN4RFFVRmxTU3h2UWtGQlFVRXNRMEZGTVVNc1UwRkJVME1zVTBGQlFVRXNRMEZCUzBNc1IwRkJRVUVzUTBGQlFVRXNRMEZGV2l4SFFVRkpRU3hIUVVGQlFTeERRVUZMTEUxQlFVMUJMRWRCUVVGQkxFTkJhME5xUWl4VFFVRlRReXhUUVVGQlFTeERRVUZMUXl4RlFVRkJRU3hEUVVGQlFTeERRVU5hUVN4RlFVRkJRU3hGUVVGQlFTeERRVWRHTEZOQlFWTkRMRk5CUVVGQkxFTkJRVXRETEVsQlFVRkJMRU5CUVUxRExFVkJRVUZCTEVOQlFVRkJMRU5CUTJ4Q0xFOUJRVTlFTEVsQlFVRkJMRU5CUVV0RUxFbEJRVUZCTEVOQlFVdEZMRVZCUVVGQkxFTkJRVUZCTEVOQmIwTnVRa01zYVVKQlFVOURMRU5CTTBKUUxGVkJRVUVzUTBGRFJTeEpRVUZMTEVsQlFVbERMRWxCUVVGQkxFTkJRVTlETEZOQlFVRkJMRU5CUVZWRExFMUJRVUZCTEVOQlFWRkRMRTlCUVVGQkxFTkJRVlVzU1VGQlNVTXNTMEZCUVVFc1EwRkJUVW9zU1VGQlFVRXNRMEZCUVVFc1EwRkJUMHNzU1VGQlFVRXNRMEZCVHl4RFFVRkJMRU5CUVVkQkxFbEJRVUZCTEVOQlFVOU1MRWxCUVVGQkxFTkJRVTFMTEVsQlFVRkJMRVZCUVVGQkxFTkJRMnhHUml4UFFVRkJRU3hEUVVGUlJTeEpRVUZCUVN4RFFVRkJRU3hEUVVGUlNpeFRRVUZCUVN4RFFVRlZTU3hKUVVGQlFTeERRVUZCUVN4RFFVYzFRaXhKUVU5SlF5eExRVUZCUVN4RFFWQkJReXhSUVVGQlFTeERRVmhPTEZOQlFYRkNTaXhQUVVGQlFTeERRVUZCUVN4RFFVTnVRaXhQUVVGTFFTeFBRVUZCUVN4RFFVRlJSQ3hOUVVGQlFTeERRVU00UWl4VlFVRkJMRVZCUVVFc1QwRkJhRU5ETEU5QlFVRkJMRU5CUVZGQkxFOUJRVUZCTEVOQlFWRkVMRTFCUVVGQkxFTkJRVk1zUTBGQlFTeERRVUZCTEVOQlFUQkNXQ3hUUVVGQlFTeERRVU4yUkZrc1QwRkJRVUVzUTBGQlVVc3NSMEZCUVVFc1JVRkJRVUVzUTBGR1lXcENMRk5CUVVGQkxFTkJWV0pyUWl4RFFVRlpUaXhQUVVGQlFTeERRVUZCUVN4RFFVY3pRaXhIUVVaSlF5eExRVUZCUVN4RFFVRk5UU3hQUVVGQlFTeERRVUZSVUN4UFFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGQlFTeERRVUZCTEVkQlFVdEJMRTlCUVVGQkxFTkJRVlZCTEU5QlFVRkJMRU5CUVZFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGRk4wTkJMRTlCUVVGQkxFTkJRVkZFTEUxQlFVRkJMRU5CUVZNc1EwRkJRU3hEUVVOdVFpeE5RVUZOTEVsQlFVbGlMSEZDUVVGQlFTeERRVUZwUWl4VFFVRkJMRU5CUVVFc1EwRkpOMElzU1VGQlNYTkNMRkZCUVVGQkxFTkJRVmRTTEU5QlFVRkJMRU5CUVZGVExFZEJRVUZCTEVOQlFVa3NVMEZCVlVNc1RVRkJRVUVzUTBGQlVVTXNRMEZCUVVFc1EwRkJRVUVzUTBGRE0wTXNTVUZCU1VNc1QwRkJRVUVzUTBGQlZVUXNRMEZCUVVFc1EwRkJTVmdzVDBGQlFVRXNRMEZCVVVRc1RVRkJRVUVzUTBGQlV5eERRVUZCTEVOQlJXNURMRTlCZWtSS0xGTkJRVzFDVnl4TlFVRkJRU3hEUVVGUlJTeFBRVUZCUVN4RFFVRlRReXhQUVVGQlFTeERRVUZUVkN4UlFVRkJRU3hEUVVGQlFTeERRVU16UTBFc1VVRkJRVUVzUTBGMlFrWXNVMEZCWTBFc1VVRkJRVUVzUTBGQlFVRXNRMEZEV2l4SlFVRkpWU3hOUVVGQlFTeERRVUZCUVN4RFFVRlRMRU5CUVVFc1EwRkRZaXhQUVVGUExGVkJRVUVzUTBGRFJFRXNUVUZCUVVFc1IwRkRTa0VzVFVGQlFVRXNRMEZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRMVJXTEZGQlFVRkJMRU5CUVZOWExFdEJRVUZCTEVOQlFVRkJMRXRCUVUwc1EwRkJRU3hEUVVGUmFrSXNVMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRnJRbVJyUWl4RFFVRkxXaXhSUVVGQlFTeERRVUZCUVN4RFFVTm9RaXhKUVVGSllTeE5RVUZCUVN4RFFVRkJRU3hEUVVGVExFTkJRVUVzUTBGRFlsQXNUVUZCUVVFc1EwRkJUMUVzUlVGQlFVRXNRMEZCUnl4UFFVRkJMRU5CUVZNc1ZVRkJRU3hEUVVOcVFrUXNUVUZCUVVFc1EwRkJRVUVzUTBGQlV5eERRVUZCTEVOQlFVRXNRMEZCUVN4RFFVRkJMRXRCUlVORkxFTkJRVUZCTEVkQlFWSnlReXhSUVVGQlFTeEhRVUZ0UWtFc1VVRkJRVUVzUTBGQlRVVXNXVUZCVVN4RFFVRkJMRU5CUTNKRFJpeFJRVUZCUVN4RFFVRkpORUlzVFVGQlFVRXNRMEZCVVN4RFFVTldWU3hSUVVGQlFTeERRVUZWVWl4UFFVRkJRU3hEUVVOV1V5eFJRVUZCUVN4RFFVRlZVaXhQUVVGQlFTeERRVUZCUVN4RFFVTlVMRk5CUVZWNFFpeEhRVUZCUVN4RFFVRkJRU3hEUVVOWUxFZEJRVWxCTEVkQlFVRkJMRU5CUVVzc1QwRkJUMlVzVVVGQlFVRXNRMEZCVTJZc1IwRkJRVUVzUTBGQlFVRXNRMEZEZWtJMFFpeE5RVUZCUVN4RFFVRkJRU3hEUVVGVExFTkJRVUVzUTBGRFZHSXNVVUZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZSaXhKUVVGSmEwSXNVMEZCUVVFc1EwRkJRVUVzUTBGQldTeERRVUZCTEVOQlEyaENMRTlCUVU4c1UwRkJWV3BETEVkQlFVRkJMRU5CUVVGQkxFTkJRMllzUjBGQlFTeERRVUZKTkVJc1RVRkJRVUVzUlVGQlFVRXNRMEZEUVVzc1UwRkJRVUVzUTBGSFNpeFBRVVpCUVN4VFFVRkJRU3hEUVVGQlFTeERRVUZaTEVOQlFVRXNRMEYyUW1oQ0xGTkJRVzFDV2l4TlFVRkJRU3hEUVVGQlFTeERRVU5xUWl4UFFVRlBRU3hOUVVGQlFTeERRVUZQWVN4VFFVRkJRU3hGUVVGeFF5eFZRVUZCTEVWQlFVRXNUMEZCYWtKaUxFMUJRVUZCTEVOQlFVOWpMRXRCUVVGQkxFTkJkMEp1UTBNc1EwRkJWV1lzVFVGQlFVRXNRMEZCUVVFc1EwRkJaMEpCTEUxQlFVRkJMRU5CUVU5akxFdEJRVUZCTEVWQlFVRkJMRU5CUTFBc1ZVRkJRU3hGUVVGQkxFOUJRVzVDWkN4TlFVRkJRU3hEUVVGUFowSXNUMEZCUVVFc1EwRkJLMEpvUWl4TlFVRkJRU3hEUVVGUFowSXNUMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNTMEZEZUVSMFFpeFJRVUZCUVN4RFFVRlRaaXhIUVVGQlFTeEZRVUZQTEVsQlFVbEdMSGxDUVVGQlFTeERRVUZ4UWl4TlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVGQkxFTkJhME5zUTNkRExFTkJRVlZxUWl4TlFVRkJRU3hEUVVGUlJTeFBRVUZCUVN4RFFVUllSQ3hEUVVGQlFTeERRVUZKTEVOQlFVRXNRMEZEZVVJc1UwRkJWWFJDTEVkQlFVRkJMRU5CUVVGQkxFTkJRemxEWXl4TFFVRkJRU3hIUVVGUFFTeExRVUZCUVN4RFFVRlJaQ3hIUVVGQlFTeERRVUZCUVN4RFFVTm9Ra0VzUjBGQlFVRXNSVUZCUzIxQ0xGRkJRVUZCTEVOQlFWTnZRaXhQUVVGQlFTeERRVUZSZEVNc1UwRkJRVUVzUTBGQlFVRXNRMEZEZEVKelFpeFBRVUZCUVN4SFFVTktTaXhSUVVGQlFTeERRVUZUYjBJc1QwRkJRVUVzUTBGQlVYUkRMRk5CUVVGQkxFTkJRVUZCTEVOQlEycENZeXhSUVVGQlFTeERRVUZUUkN4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkaUxFOUJRVTlJTEU5QlFVRkJMRU5CUVZFMlFpeE5RVUZCUVN4RFFVRlBja01zVTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJ2YXIgXyRyZWFkYWJsZUJyb3dzZXJfNjIgPSB7fTtcbl8kcmVhZGFibGVCcm93c2VyXzYyPV8kcmVhZGFibGVCcm93c2VyXzYyPV8kX3N0cmVhbV9yZWFkYWJsZV81MSh7fSksXyRyZWFkYWJsZUJyb3dzZXJfNjIuU3RyZWFtPV8kcmVhZGFibGVCcm93c2VyXzYyLF8kcmVhZGFibGVCcm93c2VyXzYyLlJlYWRhYmxlPV8kcmVhZGFibGVCcm93c2VyXzYyLF8kcmVhZGFibGVCcm93c2VyXzYyLldyaXRhYmxlPV8kX3N0cmVhbV93cml0YWJsZV81Myh7fSksXyRyZWFkYWJsZUJyb3dzZXJfNjIuRHVwbGV4PV8kRHVwbGV4XzQ5KHt9KSxfJHJlYWRhYmxlQnJvd3Nlcl82Mi5UcmFuc2Zvcm09XyRUcmFuc2Zvcm1fNTIsXyRyZWFkYWJsZUJyb3dzZXJfNjIuUGFzc1Rocm91Z2g9XyRQYXNzVGhyb3VnaF81MCxfJHJlYWRhYmxlQnJvd3Nlcl82Mi5maW5pc2hlZD1fJGVvc181Nyh7fSksXyRyZWFkYWJsZUJyb3dzZXJfNjIucGlwZWxpbmU9XyRwaXBlbGluZV81OTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5KbFlXUmhZbXhsTFdKeWIzZHpaWEl1YW5NaVhTd2libUZ0WlhNaU9sc2laWGh3YjNKMGN5SXNJbTF2WkhWc1pTSXNJbkpsY1hWcGNtVWlMQ0pUZEhKbFlXMGlMQ0pTWldGa1lXSnNaU0lzSWxkeWFYUmhZbXhsSWl3aVJIVndiR1Y0SWl3aVZISmhibk5tYjNKdElpd2lVR0Z6YzFSb2NtOTFaMmdpTENKbWFXNXBjMmhsWkNJc0luQnBjR1ZzYVc1bElsMHNJbTFoY0hCcGJtZHpJam9pTzBGQlFVRkJMRzlDUVVGQlFTeERRVUZWUXl4dlFrRkJUMFFzUTBGQlZVVXNlVUpCUVZFc1EwRkRia05HTEc5Q1FVRkJRU3hEUVVGUlJ5eE5RVUZCUVN4RFFVRlRTQ3h2UWtGQlFVRXNRMEZEYWtKQkxHOUNRVUZCUVN4RFFVRlJTU3hSUVVGQlFTeERRVUZYU2l4dlFrRkJRVUVzUTBGRGJrSkJMRzlDUVVGQlFTeERRVUZSU3l4UlFVRkJRU3hEUVVGWFNDeDVRa0ZCVVN4RFFVTXpRa1lzYjBKQlFVRkJMRU5CUVZGTkxFMUJRVUZCTEVOQlFWTktMR1ZCUVZFc1EwRkRla0pHTEc5Q1FVRkJRU3hEUVVGUlR5eFRRVUZCUVN4RFFVRlpUQ3hqUVVGUkxFTkJRelZDUml4dlFrRkJRVUVzUTBGQlVWRXNWMEZCUVVFc1EwRkJZMDRzWjBKQlFWRXNRMEZET1VKR0xHOUNRVUZCUVN4RFFVRlJVeXhSUVVGQlFTeERRVUZYVUN4WlFVRlJMRU5CUXpOQ1JpeHZRa0ZCUVVFc1EwRkJVVlVzVVVGQlFVRXNRMEZCVjFJc1lVRkJVU3hEUVVGQklpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sdHVkV3hzWFgwPSIsIlwidXNlIHN0cmljdFwiO2NvbnN0e1RyYW5zZm9ybTpfX1RyYW5zZm9ybV80N309XyRyZWFkYWJsZUJyb3dzZXJfNjIse1N0cmluZ0RlY29kZXI6X19TdHJpbmdEZWNvZGVyXzQ3fT1fJHN0cmluZ19kZWNvZGVyXzYzKHt9KSxrTGFzdD1TeW1ib2woXCJsYXN0XCIpLGtEZWNvZGVyPVN5bWJvbChcImRlY29kZXJcIik7ZnVuY3Rpb24gdHJhbnNmb3JtKGNodW5rLGVuYyxjYil7dmFyIGxpc3Q7aWYodGhpcy5vdmVyZmxvdyl7aWYoMT09PShsaXN0PXRoaXNba0RlY29kZXJdLndyaXRlKGNodW5rKS5zcGxpdCh0aGlzLm1hdGNoZXIpKS5sZW5ndGgpcmV0dXJuIGNiKCk7bGlzdC5zaGlmdCgpLHRoaXMub3ZlcmZsb3c9ITF9ZWxzZSB0aGlzW2tMYXN0XSs9dGhpc1trRGVjb2Rlcl0ud3JpdGUoY2h1bmspLGxpc3Q9dGhpc1trTGFzdF0uc3BsaXQodGhpcy5tYXRjaGVyKTt0aGlzW2tMYXN0XT1saXN0LnBvcCgpO2Zvcih2YXIgaT0wO2k8bGlzdC5sZW5ndGg7aSsrKXRyeXtwdXNoKHRoaXMsdGhpcy5tYXBwZXIobGlzdFtpXSkpfWNhdGNoKGVycm9yKXtyZXR1cm4gY2IoZXJyb3IpfWlmKHRoaXMub3ZlcmZsb3c9dGhpc1trTGFzdF0ubGVuZ3RoPnRoaXMubWF4TGVuZ3RoLHRoaXMub3ZlcmZsb3cmJiF0aGlzLnNraXBPdmVyZmxvdylyZXR1cm4gY2IobmV3IEVycm9yKFwibWF4aW11bSBidWZmZXIgcmVhY2hlZFwiKSk7Y2IoKX1mdW5jdGlvbiBmbHVzaChjYil7aWYodGhpc1trTGFzdF0rPXRoaXNba0RlY29kZXJdLmVuZCgpLHRoaXNba0xhc3RdKXRyeXtwdXNoKHRoaXMsdGhpcy5tYXBwZXIodGhpc1trTGFzdF0pKX1jYXRjaChlcnJvcil7cmV0dXJuIGNiKGVycm9yKX1jYigpfWZ1bmN0aW9uIHB1c2goc2VsZix2YWwpe3ZvaWQgMCE9PXZhbCYmc2VsZi5wdXNoKHZhbCl9ZnVuY3Rpb24gX19ub29wXzQ3KGluY29taW5nKXtyZXR1cm4gaW5jb21pbmd9dmFyIF8kc3BsaXQyXzQ3PWZ1bmN0aW9uKG1hdGNoZXIsbWFwcGVyLG9wdGlvbnMpe3N3aXRjaChtYXRjaGVyPW1hdGNoZXJ8fC9cXHI/XFxuLyxtYXBwZXI9bWFwcGVyfHxfX25vb3BfNDcsb3B0aW9ucz1vcHRpb25zfHx7fSxhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDE6XCJmdW5jdGlvblwiPT10eXBlb2YgbWF0Y2hlcj8obWFwcGVyPW1hdGNoZXIsbWF0Y2hlcj0vXFxyP1xcbi8pOlwib2JqZWN0XCIhPXR5cGVvZiBtYXRjaGVyfHxtYXRjaGVyIGluc3RhbmNlb2YgUmVnRXhwfHwob3B0aW9ucz1tYXRjaGVyLG1hdGNoZXI9L1xccj9cXG4vKTticmVhaztjYXNlIDI6XCJmdW5jdGlvblwiPT10eXBlb2YgbWF0Y2hlcj8ob3B0aW9ucz1tYXBwZXIsbWFwcGVyPW1hdGNoZXIsbWF0Y2hlcj0vXFxyP1xcbi8pOlwib2JqZWN0XCI9PXR5cGVvZiBtYXBwZXImJihvcHRpb25zPW1hcHBlcixtYXBwZXI9X19ub29wXzQ3KX0ob3B0aW9ucz1PYmplY3QuYXNzaWduKHt9LG9wdGlvbnMpKS50cmFuc2Zvcm09dHJhbnNmb3JtLG9wdGlvbnMuZmx1c2g9Zmx1c2gsb3B0aW9ucy5yZWFkYWJsZU9iamVjdE1vZGU9ITA7Y29uc3Qgc3RyZWFtPW5ldyBfX1RyYW5zZm9ybV80NyhvcHRpb25zKTtyZXR1cm4gc3RyZWFtW2tMYXN0XT1cIlwiLHN0cmVhbVtrRGVjb2Rlcl09bmV3IF9fU3RyaW5nRGVjb2Rlcl80NyhcInV0ZjhcIiksc3RyZWFtLm1hdGNoZXI9bWF0Y2hlcixzdHJlYW0ubWFwcGVyPW1hcHBlcixzdHJlYW0ubWF4TGVuZ3RoPW9wdGlvbnMubWF4TGVuZ3RoLHN0cmVhbS5za2lwT3ZlcmZsb3c9b3B0aW9ucy5za2lwT3ZlcmZsb3csc3RyZWFtLm92ZXJmbG93PSExLHN0cmVhbX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltbHVaR1Y0TG1weklsMHNJbTVoYldWeklqcGJJbFJ5WVc1elptOXliU0lzSW5KbGNYVnBjbVVpTENKVGRISnBibWRFWldOdlpHVnlJaXdpYTB4aGMzUWlMQ0pUZVcxaWIyd2lMQ0pyUkdWamIyUmxjaUlzSW5SeVlXNXpabTl5YlNJc0ltTm9kVzVySWl3aVpXNWpJaXdpWTJJaUxDSnNhWE4wSWl3aWRHaHBjeUlzSW05MlpYSm1iRzkzSWl3aWQzSnBkR1VpTENKemNHeHBkQ0lzSW0xaGRHTm9aWElpTENKc1pXNW5kR2dpTENKemFHbG1kQ0lzSW5CdmNDSXNJbWtpTENKd2RYTm9JaXdpYldGd2NHVnlJaXdpWlhKeWIzSWlMQ0p0WVhoTVpXNW5kR2dpTENKemEybHdUM1psY21ac2IzY2lMQ0pGY25KdmNpSXNJbVpzZFhOb0lpd2laVzVrSWl3aWMyVnNaaUlzSW5aaGJDSXNJblZ1WkdWbWFXNWxaQ0lzSW01dmIzQWlMQ0pwYm1OdmJXbHVaeUlzSW0xdlpIVnNaU0lzSW1WNGNHOXlkSE1pTENKdmNIUnBiMjV6SWl3aVlYSm5kVzFsYm5Seklpd2lVbVZuUlhod0lpd2lUMkpxWldOMElpd2lZWE56YVdkdUlpd2ljbVZoWkdGaWJHVlBZbXBsWTNSTmIyUmxJaXdpYzNSeVpXRnRJbDBzSW0xaGNIQnBibWR6SWpvaVFVRm5Ra0VzV1VGQlFTeERRVVZCTEV0QlFVRXNRMEZCVFVFc1UwRkJRVUVzUTBGQlJVRXNZMEZCUVVFc1EwRkJRVUVzUTBGQlkwTXNiMEpCUVZFc1EwRkJRU3hEUVVONFFrTXNZVUZCUVVFc1EwRkJSVUVzYTBKQlFVRkJMRU5CUVVGQkxFTkJRV3RDUkN4MVFrRkJVU3hEUVVNMVFrVXNTMEZCUVVFc1EwRkJVVU1zVFVGQlFVRXNRMEZCVHl4TlFVRkJMRU5CUVVFc1EwRkRaa01zVVVGQlFVRXNRMEZCVjBRc1RVRkJRVUVzUTBGQlR5eFRRVUZCTEVOQlFVRXNRMEZGZUVJc1UwRkJVMFVzVTBGQlFVRXNRMEZCVjBNc1MwRkJRVUVzUTBGQlQwTXNSMEZCUVVFc1EwRkJTME1zUlVGQlFVRXNRMEZCUVVFc1EwRkRPVUlzU1VGQlNVTXNTVUZCUVVFc1EwRkRTaXhIUVVGSlF5eEpRVUZCUVN4RFFVRkxReXhSUVVGQlFTeERRVUZWTEVOQlNXcENMRWRCUVc5Q0xFTkJRVUVzUjBGQlFTeERRVVp3UWtZc1NVRkJRVUVzUTBGRVZVTXNTVUZCUVVFc1EwRkJTMDRzVVVGQlFVRXNRMEZCUVVFc1EwRkJWVkVzUzBGQlFVRXNRMEZCVFU0c1MwRkJRVUVzUTBGQlFVRXNRMEZEY0VKUExFdEJRVUZCTEVOQlFVMUlMRWxCUVVGQkxFTkJRVXRKTEU5QlFVRkJMRU5CUVVGQkxFVkJSV0pETEUxQlFVRkJMRU5CUVdNc1QwRkJUMUFzUlVGQlFVRXNSVUZCUVVFc1EwRkhPVUpETEVsQlFVRkJMRU5CUVV0UExFdEJRVUZCTEVWQlFVRkJMRU5CUTB4T0xFbEJRVUZCTEVOQlFVdERMRkZCUVVGQkxFTkJRVUZCTEVOQlFWY3NRMEZCUVN4RFFVRkJMRXRCUldoQ1JDeEpRVUZCUVN4RFFVRkxVaXhMUVVGQlFTeERRVUZCUVN4RlFVRlZVU3hKUVVGQlFTeERRVUZMVGl4UlFVRkJRU3hEUVVGQlFTeERRVUZWVVN4TFFVRkJRU3hEUVVGTlRpeExRVUZCUVN4RFFVRkJRU3hEUVVOd1EwY3NTVUZCUVVFc1EwRkJUME1zU1VGQlFVRXNRMEZCUzFJc1MwRkJRVUVzUTBGQlFVRXNRMEZCVDFjc1MwRkJRVUVzUTBGQlRVZ3NTVUZCUVVFc1EwRkJTMGtzVDBGQlFVRXNRMEZCUVVFc1EwRkhhRU5LTEVsQlFVRkJMRU5CUVV0U0xFdEJRVUZCTEVOQlFVRkJMRU5CUVZOUExFbEJRVUZCTEVOQlFVdFJMRWRCUVVGQkxFVkJRVUZCTEVOQlJXNUNMRWxCUVVzc1NVRkJTVU1zUTBGQlFVRXNRMEZCU1N4RFFVRkJMRU5CUVVkQkxFTkJRVUZCTEVOQlFVbFVMRWxCUVVGQkxFTkJRVXROTEUxQlFVRkJMRU5CUVZGSExFTkJRVUZCTEVWQlFVRkJMRU5CUXk5Q0xFZEJRVUVzUTBGRFJVTXNTVUZCUVVFc1EwRkJTMVFzU1VGQlFVRXNRMEZCVFVFc1NVRkJRVUVzUTBGQlMxVXNUVUZCUVVFc1EwRkJUMWdzU1VGQlFVRXNRMEZCUzFNc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRE5VSXNUVUZCVDBjc1MwRkJRVUVzUTBGQlFVRXNRMEZEVUN4UFFVRlBZaXhGUVVGQlFTeERRVUZIWVN4TFFVRkJRU3hEUVVGQlFTeERRVXRrTEVkQlJFRllMRWxCUVVGQkxFTkJRVXRETEZGQlFVRkJMRU5CUVZkRUxFbEJRVUZCTEVOQlFVdFNMRXRCUVVGQkxFTkJRVUZCTEVOQlFVOWhMRTFCUVVGQkxFTkJRVk5NTEVsQlFVRkJMRU5CUVV0WkxGTkJRVUZCTEVOQlEzUkRXaXhKUVVGQlFTeERRVUZMUXl4UlFVRkJRU3hGUVVGQlFTeERRVUZoUkN4SlFVRkJRU3hEUVVGTFlTeFpRVUZCUVN4RFFVRmpMRTlCUVU5bUxFVkJRVUZCTEVOQlFVY3NTVUZCU1dkQ0xFdEJRVUZCTEVOQlFVMHNkMEpCUVVFc1EwRkJRU3hEUVVGQkxFTkJSVGRFYUVJc1JVRkJRVUVzUlVGQlFVRXNRMEZIUml4VFFVRlRhVUlzUzBGQlFVRXNRMEZCVDJwQ0xFVkJRVUZCTEVOQlFVRkJMRU5CU1dRc1IwRkdRVVVzU1VGQlFVRXNRMEZCUzFJc1MwRkJRVUVzUTBGQlFVRXNSVUZCVlZFc1NVRkJRVUVzUTBGQlMwNHNVVUZCUVVFc1EwRkJRVUVzUTBGQlZYTkNMRWRCUVVGQkxFVkJRVUZCTEVOQlJURkNhRUlzU1VGQlFVRXNRMEZCUzFJc1MwRkJRVUVzUTBGQlFVRXNRMEZEVUN4SFFVRkJMRU5CUTBWcFFpeEpRVUZCUVN4RFFVRkxWQ3hKUVVGQlFTeERRVUZOUVN4SlFVRkJRU3hEUVVGTFZTeE5RVUZCUVN4RFFVRlBWaXhKUVVGQlFTeERRVUZMVWl4TFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVNMVFpeE5RVUZQYlVJc1MwRkJRVUVzUTBGQlFVRXNRMEZEVUN4UFFVRlBZaXhGUVVGQlFTeERRVUZIWVN4TFFVRkJRU3hEUVVGQlFTeERRVWxrWWl4RlFVRkJRU3hGUVVGQlFTeERRVWRHTEZOQlFWTlhMRWxCUVVGQkxFTkJRVTFSTEVsQlFVRkJMRU5CUVUxRExFZEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFdEJRMUJETEVOQlFVRkJMRWRCUVZKRUxFZEJRVUZCTEVWQlEwWkVMRWxCUVVGQkxFTkJRVXRTTEVsQlFVRkJMRU5CUVV0VExFZEJRVUZCTEVOQlFVRkJMRU5CU1dRc1UwRkJVMFVzVTBGQlFVRXNRMEZCVFVNc1VVRkJRVUVzUTBGQlFVRXNRMEZEWWl4UFFVRlBRU3hSUVVGQlFTeERRWE5FVkVNc1pVRkJUME1zUTBGdVJGQXNVMEZCWjBKdVFpeFBRVUZCUVN4RFFVRlRUU3hOUVVGQlFTeERRVUZSWXl4UFFVRkJRU3hEUVVGQlFTeERRVTh2UWl4UFFVeEJjRUlzVDBGQlFVRXNRMEZCVlVFc1QwRkJRVUVzUlVGQlZ5eFBRVUZCTEVOQlEzSkNUU3hOUVVGQlFTeERRVUZUUVN4TlFVRkJRU3hGUVVGVlZTeFRRVUZCUVN4RFFVTnVRa2tzVDBGQlFVRXNRMEZCVlVFc1QwRkJRVUVzUlVGQlZ5eEZRVUZCTEVOQlIySkRMRk5CUVVGQkxFTkJRVlZ3UWl4TlFVRkJRU3hGUVVOb1FpeExRVUZMTEVOQlFVRXNRMEZGYjBJc1ZVRkJRU3hGUVVGQkxFOUJRVnBFTEU5QlFVRkJMRVZCUTFSTkxFMUJRVUZCTEVOQlFWTk9MRTlCUVVGQkxFTkJRMVJCTEU5QlFVRkJMRU5CUVZVc1QwRkJRU3hGUVVWclFpeFJRVUZCTEVWQlFVRXNUMEZCV2tFc1QwRkJRVUVzUlVGQk1FSkJMRTlCUVVGQkxGbEJRVzFDYzBJc1RVRkJRVUVzUjBGRE4wUkdMRTlCUVVGQkxFTkJRVlZ3UWl4UFFVRkJRU3hEUVVOV1FTeFBRVUZCUVN4RFFVRlZMRTlCUVVFc1EwRkJRU3hEUVVWYUxFMUJSVVlzUzBGQlN5eERRVUZCTEVOQlJXOUNMRlZCUVVFc1JVRkJRU3hQUVVGYVFTeFBRVUZCUVN4RlFVTlViMElzVDBGQlFVRXNRMEZCVldRc1RVRkJRVUVzUTBGRFZrRXNUVUZCUVVFc1EwRkJVMDRzVDBGQlFVRXNRMEZEVkVFc1QwRkJRVUVzUTBGQlZTeFBRVUZCTEVWQlJXbENMRkZCUVVFc1JVRkJRU3hQUVVGWVRTeE5RVUZCUVN4SFFVTm9RbU1zVDBGQlFVRXNRMEZCVldRc1RVRkJRVUVzUTBGRFZrRXNUVUZCUVVFc1EwRkJVMVVzVTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGSlpra3NUMEZCUVVFc1EwRkJWVWNzVFVGQlFVRXNRMEZCVDBNc1RVRkJRVUVzUTBGQlR5eEZRVUZCTEVOQlFVbEtMRTlCUVVGQkxFTkJRVUZCTEVWQlEzQkNOMElzVTBGQlFVRXNRMEZCV1VFc1UwRkJRVUVzUTBGRGNFSTJRaXhQUVVGQlFTeERRVUZSVkN4TFFVRkJRU3hEUVVGUlFTeExRVUZCUVN4RFFVTm9RbE1zVDBGQlFVRXNRMEZCVVVzc2EwSkJRVUZCTEVOQlFVRkJMRU5CUVhGQ0xFTkJRVUVzUTBGRk4wSXNUVUZCVFVNc1RVRkJRVUVzUTBGQlV5eEpRVUZKZWtNc1kwRkJRVUVzUTBGQlZXMURMRTlCUVVGQkxFTkJRVUZCTEVOQlZUZENMRTlCVWtGTkxFMUJRVUZCTEVOQlFVOTBReXhMUVVGQlFTeERRVUZCUVN4RFFVRlRMRVZCUVVFc1EwRkRhRUp6UXl4TlFVRkJRU3hEUVVGUGNFTXNVVUZCUVVFc1EwRkJRVUVzUTBGQldTeEpRVUZKU0N4clFrRkJRVUVzUTBGQll5eE5RVUZCTEVOQlFVRXNRMEZEY2tOMVF5eE5RVUZCUVN4RFFVRlBNVUlzVDBGQlFVRXNRMEZCVlVFc1QwRkJRVUVzUTBGRGFrSXdRaXhOUVVGQlFTeERRVUZQY0VJc1RVRkJRVUVzUTBGQlUwRXNUVUZCUVVFc1EwRkRhRUp2UWl4TlFVRkJRU3hEUVVGUGJFSXNVMEZCUVVFc1EwRkJXVmtzVDBGQlFVRXNRMEZCVVZvc1UwRkJRVUVzUTBGRE0wSnJRaXhOUVVGQlFTeERRVUZQYWtJc1dVRkJRVUVzUTBGQlpWY3NUMEZCUVVFc1EwRkJVVmdzV1VGQlFVRXNRMEZET1VKcFFpeE5RVUZCUVN4RFFVRlBOMElzVVVGQlFVRXNRMEZCUVVFc1EwRkJWeXhEUVVGQkxFTkJSVmcyUWl4TlFVRkJRU3hEUVVGQlFTeERRVUZCUVNJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYmJuVnNiRjE5IiwidmFyIF8kYnJvd3Nlcl80NCA9IHt9O1xuLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IGV4cG9ydHMuZW5kaWFubmVzcyA9ICovIHZvaWQgMCwgZnVuY3Rpb24oKXtyZXR1cm5cIkxFXCJ9LC8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBleHBvcnRzLmhvc3RuYW1lID0gKi8gdm9pZCAwLCBmdW5jdGlvbigpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBsb2NhdGlvbj9sb2NhdGlvbi5ob3N0bmFtZTpcIlwifSwvKiBjb21tb24tc2hha2UgcmVtb3ZlZDogZXhwb3J0cy5sb2FkYXZnID0gKi8gdm9pZCAwLCBmdW5jdGlvbigpe3JldHVybltdfSwvKiBjb21tb24tc2hha2UgcmVtb3ZlZDogZXhwb3J0cy51cHRpbWUgPSAqLyB2b2lkIDAsIGZ1bmN0aW9uKCl7cmV0dXJuIDB9LC8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBleHBvcnRzLmZyZWVtZW0gPSAqLyB2b2lkIDAsIGZ1bmN0aW9uKCl7cmV0dXJuIE51bWJlci5NQVhfVkFMVUV9LC8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBleHBvcnRzLnRvdGFsbWVtID0gKi8gdm9pZCAwLCBmdW5jdGlvbigpe3JldHVybiBOdW1iZXIuTUFYX1ZBTFVFfSwvKiBjb21tb24tc2hha2UgcmVtb3ZlZDogZXhwb3J0cy5jcHVzID0gKi8gdm9pZCAwLCBmdW5jdGlvbigpe3JldHVybltdfSwvKiBjb21tb24tc2hha2UgcmVtb3ZlZDogZXhwb3J0cy50eXBlID0gKi8gdm9pZCAwLCBmdW5jdGlvbigpe3JldHVyblwiQnJvd3NlclwifSwvKiBjb21tb24tc2hha2UgcmVtb3ZlZDogZXhwb3J0cy5yZWxlYXNlID0gKi8gdm9pZCAwLCBmdW5jdGlvbigpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBuYXZpZ2F0b3I/bmF2aWdhdG9yLmFwcFZlcnNpb246XCJcIn0sLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IGV4cG9ydHMubmV0d29ya0ludGVyZmFjZXMgPSAqLyB2b2lkIDAsIC8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBleHBvcnRzLmdldE5ldHdvcmtJbnRlcmZhY2VzID0gKi8gZnVuY3Rpb24oKXtyZXR1cm57fX0sLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IGV4cG9ydHMuYXJjaCA9ICovIHZvaWQgMCwgZnVuY3Rpb24oKXtyZXR1cm5cImphdmFzY3JpcHRcIn0sLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IGV4cG9ydHMucGxhdGZvcm0gPSAqLyB2b2lkIDAsIGZ1bmN0aW9uKCl7cmV0dXJuXCJicm93c2VyXCJ9LC8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBleHBvcnRzLnRtcGRpciA9ICovIHZvaWQgMCwgLyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IGV4cG9ydHMudG1wRGlyID0gKi8gZnVuY3Rpb24oKXtyZXR1cm5cIi90bXBcIn0sXyRicm93c2VyXzQ0LkVPTD1cIlxcblwiLC8qIGNvbW1vbi1zaGFrZSByZW1vdmVkOiBleHBvcnRzLmhvbWVkaXIgPSAqLyB2b2lkIDAsIGZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUp5YjNkelpYSXVhbk1pWFN3aWJtRnRaWE1pT2xzaVpYaHdiM0owY3lJc0lteHZZMkYwYVc5dUlpd2lhRzl6ZEc1aGJXVWlMQ0pPZFcxaVpYSWlMQ0pOUVZoZlZrRk1WVVVpTENKdVlYWnBaMkYwYjNJaUxDSmhjSEJXWlhKemFXOXVJaXdpUlU5TUlsMHNJbTFoY0hCcGJtZHpJam9pTzBGQlFVRkJMR2xFUVVGQlFTeExRVUZCUVN4RFFVRkJRU3hGUVVGeFFpeFZRVUZCTEVOQlFXTXNUVUZCVHl4SlFVRkJMRU5CUVVFc1owUkJSVEZEUVN4TFFVRkJRU3hEUVVGQlFTeEZRVUZ0UWl4VlFVRkJMRU5CUTJZc1RVRkJkMElzVjBGQlFTeEZRVUZCTEU5QlFXSkRMRkZCUVVGQkxFTkJRMEZCTEZGQlFVRkJMRU5CUVZORExGRkJRVUZCTEVOQlJWSXNSVUZCUVN4RFFVRkJMQ3REUVVkb1FrWXNTMEZCUVVFc1EwRkJRVUVzUlVGQmEwSXNWVUZCUVN4RFFVRmpMRTFCUVU4c1JVRkJRU3hEUVVGQkxEaERRVVYyUTBFc1MwRkJRVUVzUTBGQlFVRXNSVUZCYVVJc1ZVRkJRU3hEUVVGakxFOUJRVThzUTBGQlFTeERRVUZCTEN0RFFVVjBRMEVzUzBGQlFVRXNRMEZCUVVFc1JVRkJhMElzVlVGQlFTeERRVU5rTEU5QlFVOUhMRTFCUVVGQkxFTkJRVTlETEZOQlFVRkJMRU5CUVVGQkxHZEVRVWRzUWtvc1MwRkJRVUVzUTBGQlFVRXNSVUZCYlVJc1ZVRkJRU3hEUVVObUxFOUJRVTlITEUxQlFVRkJMRU5CUVU5RExGTkJRVUZCTEVOQlFVRkJMRFJEUVVkc1Frb3NTMEZCUVVFc1EwRkJRVUVzUlVGQlpTeFZRVUZCTEVOQlFXTXNUVUZCVHl4RlFVRkJMRU5CUVVFc05FTkJSWEJEUVN4TFFVRkJRU3hEUVVGQlFTeEZRVUZsTEZWQlFVRXNRMEZCWXl4TlFVRlBMRk5CUVVFc1EwRkJRU3dyUTBGRmNFTkJMRXRCUVVGQkxFTkJRVUZCTEVWQlFXdENMRlZCUVVFc1EwRkRaQ3hOUVVGNVFpeFhRVUZCTEVWQlFVRXNUMEZCWkVzc1UwRkJRVUVzUTBGRFFVRXNVMEZCUVVFc1EwRkJWVU1zVlVGQlFVRXNRMEZGWkN4RlFVRkJMRU5CUVVFc2VVUkJSMWhPTEV0QlFVRkJMRU5CUVVGQkxEWkVRVVZGTEZWQlFVRXNRMEZCWXl4TlFVRlBMRVZCUVVFc1EwRkJRU3cwUTBGRmRrSkJMRXRCUVVGQkxFTkJRVUZCTEVWQlFXVXNWVUZCUVN4RFFVRmpMRTFCUVU4c1dVRkJRU3hEUVVGQkxHZEVRVVZ3UTBFc1MwRkJRVUVzUTBGQlFVRXNSVUZCYlVJc1ZVRkJRU3hEUVVGakxFMUJRVThzVTBGQlFTeERRVUZCTERoRFFVVjRRMEVzUzBGQlFVRXNRMEZCUVVFc0swTkJRV3RETEZWQlFVRXNRMEZET1VJc1RVRkJUeXhOUVVGQkxFTkJRVUVzUTBGSFdFRXNXVUZCUVVFc1EwRkJVVThzUjBGQlFVRXNRMEZCVFN4SlFVRkJMQ3REUVVWa1VDeExRVUZCUVN4RFFVRkJRU3hGUVVGclFpeFZRVUZCTEVOQlEycENMRTFCUVU4c1IwRkJRU3hEUVVGQkxFTkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2VzI1MWJHeGRmUT09IiwidmFyIF8kc3RyaW5naWZ5XzI1ID0ge307XG5mdW5jdGlvbiBzZXJpYWxpemVyKHJlcGxhY2VyLGN5Y2xlUmVwbGFjZXIpe3ZhciBzdGFjaz1bXSxrZXlzPVtdO3JldHVybiBudWxsPT1jeWNsZVJlcGxhY2VyJiYoY3ljbGVSZXBsYWNlcj1mdW5jdGlvbihrZXksdmFsdWUpe3JldHVybiBzdGFja1swXT09PXZhbHVlP1wiW0NpcmN1bGFyIH5dXCI6XCJbQ2lyY3VsYXIgfi5cIitrZXlzLnNsaWNlKDAsc3RhY2suaW5kZXhPZih2YWx1ZSkpLmpvaW4oXCIuXCIpK1wiXVwifSksZnVuY3Rpb24oa2V5LHZhbHVlKXtpZihzdGFjay5sZW5ndGg+MCl7dmFyIHRoaXNQb3M9c3RhY2suaW5kZXhPZih0aGlzKTt+dGhpc1Bvcz9zdGFjay5zcGxpY2UodGhpc1BvcysxKTpzdGFjay5wdXNoKHRoaXMpLH50aGlzUG9zP2tleXMuc3BsaWNlKHRoaXNQb3MsMS8wLGtleSk6a2V5cy5wdXNoKGtleSksfnN0YWNrLmluZGV4T2YodmFsdWUpJiYodmFsdWU9Y3ljbGVSZXBsYWNlci5jYWxsKHRoaXMsa2V5LHZhbHVlKSl9ZWxzZSBzdGFjay5wdXNoKHZhbHVlKTtyZXR1cm4gbnVsbD09cmVwbGFjZXI/dmFsdWU6cmVwbGFjZXIuY2FsbCh0aGlzLGtleSx2YWx1ZSl9fV8kc3RyaW5naWZ5XzI1PV8kc3RyaW5naWZ5XzI1PWZ1bmN0aW9uKG9iaixyZXBsYWNlcixzcGFjZXMsY3ljbGVSZXBsYWNlcil7cmV0dXJuIEpTT04uc3RyaW5naWZ5KG9iaixzZXJpYWxpemVyKHJlcGxhY2VyLGN5Y2xlUmVwbGFjZXIpLHNwYWNlcyl9LF8kc3RyaW5naWZ5XzI1LmdldFNlcmlhbGl6ZT1zZXJpYWxpemVyO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbk4wY21sdVoybG1lUzVxY3lKZExDSnVZVzFsY3lJNld5SnpaWEpwWVd4cGVtVnlJaXdpY21Wd2JHRmpaWElpTENKamVXTnNaVkpsY0d4aFkyVnlJaXdpYzNSaFkyc2lMQ0pyWlhseklpd2lhMlY1SWl3aWRtRnNkV1VpTENKemJHbGpaU0lzSW1sdVpHVjRUMllpTENKcWIybHVJaXdpYkdWdVozUm9JaXdpZEdocGMxQnZjeUlzSW5Sb2FYTWlMQ0p6Y0d4cFkyVWlMQ0p3ZFhOb0lpd2lTVzVtYVc1cGRIa2lMQ0pqWVd4c0lpd2laWGh3YjNKMGN5SXNJbTF2WkhWc1pTSXNJbTlpYWlJc0luTndZV05sY3lJc0lrcFRUMDRpTENKemRISnBibWRwWm5raUxDSm5aWFJUWlhKcFlXeHBlbVVpWFN3aWJXRndjR2x1WjNNaU9pSTdRVUZQUVN4VFFVRlRRU3hWUVVGQlFTeERRVUZYUXl4UlFVRkJRU3hEUVVGVlF5eGhRVUZCUVN4RFFVRkJRU3hEUVVNMVFpeEpRVUZKUXl4TFFVRkJRU3hEUVVGUkxFVkJRVUVzUTBGQlNVTXNTVUZCUVVFc1EwRkJUeXhGUVVGQkxFTkJUM1pDTEU5QlRIRkNMRWxCUVVFc1JVRkJha0pHTEdGQlFVRkJMRWRCUVhWQ1FTeGhRVUZCUVN4RFFVRm5RaXhUUVVGVFJ5eEhRVUZCUVN4RFFVRkxReXhMUVVGQlFTeERRVUZCUVN4RFFVTjJSQ3hQUVVGSlNDeExRVUZCUVN4RFFVRk5MRU5CUVVFc1EwRkJRU3hIUVVGUFJ5eExRVUZCUVN4RFFVRmpMR05CUVVFc1EwRkRlRUlzWTBGQlFTeERRVUZwUWtZc1NVRkJRVUVzUTBGQlMwY3NTMEZCUVVFc1EwRkJUU3hEUVVGQkxFTkJRVWRLTEV0QlFVRkJMRU5CUVUxTExFOUJRVUZCTEVOQlFWRkdMRXRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVZGSExFbEJRVUZCTEVOQlFVc3NSMEZCUVN4RFFVRkJMRU5CUVU4c1IwRkJRU3hEUVVGQkxFTkJRVUVzUTBGSGJrVXNVMEZCVTBvc1IwRkJRVUVzUTBGQlMwTXNTMEZCUVVFc1EwRkJRVUVzUTBGRGJrSXNSMEZCU1Vnc1MwRkJRVUVzUTBGQlRVOHNUVUZCUVVFc1EwRkJVeXhEUVVGQkxFTkJRVWNzUTBGRGNFSXNTVUZCU1VNc1QwRkJRVUVzUTBGQlZWSXNTMEZCUVVFc1EwRkJUVXNzVDBGQlFVRXNRMEZCVVVrc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkRNMEpFTEU5QlFVRkJMRU5CUVZWU0xFdEJRVUZCTEVOQlFVMVZMRTFCUVVGQkxFTkJRVTlHTEU5QlFVRkJMRU5CUVZVc1EwRkJRU3hEUVVGQkxFTkJRVXRTTEV0QlFVRkJMRU5CUVUxWExFbEJRVUZCTEVOQlFVdEdMRWxCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUTJwRVJDeFBRVUZCUVN4RFFVRlZVQ3hKUVVGQlFTeERRVUZMVXl4TlFVRkJRU3hEUVVGUFJpeFBRVUZCUVN4RFFVRlRTU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGVlZpeEhRVUZCUVN4RFFVRkJRU3hEUVVGUFJDeEpRVUZCUVN4RFFVRkxWU3hKUVVGQlFTeERRVUZMVkN4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTjBSRVlzUzBGQlFVRXNRMEZCVFVzc1QwRkJRVUVzUTBGQlVVWXNTMEZCUVVFc1EwRkJRVUVzUjBGQlVVRXNTMEZCUVVFc1EwRkJVVW9zWVVGQlFVRXNRMEZCWTJNc1NVRkJRVUVzUTBGQlMwb3NTVUZCUVVFc1EwRkJUVkFzUjBGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUzBGRk9VUklMRXRCUVVGQkxFTkJRVTFYTEVsQlFVRkJMRU5CUVV0U0xFdEJRVUZCTEVOQlFVRkJMRU5CUldoQ0xFOUJRVzFDTEVsQlFVRXNSVUZCV2t3c1VVRkJRVUVzUTBGQmJVSkxMRXRCUVVGQkxFTkJRVkZNTEZGQlFVRkJMRU5CUVZObExFbEJRVUZCTEVOQlFVdEtMRWxCUVVGQkxFTkJRVTFRTEVkQlFVRkJMRU5CUVV0RExFdEJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJlRUl2UkZjc1kwRkJRVUVzUTBGQlZVTXNZMEZCVDBRc1EwRkhha0lzVTBGQmJVSkZMRWRCUVVGQkxFTkJRVXRzUWl4UlFVRkJRU3hEUVVGVmJVSXNUVUZCUVVFc1EwRkJVV3hDTEdGQlFVRkJMRU5CUVVGQkxFTkJRM2hETEU5QlFVOXRRaXhKUVVGQlFTeERRVUZMUXl4VFFVRkJRU3hEUVVGVlNDeEhRVUZCUVN4RFFVRkxia0lzVlVGQlFVRXNRMEZCVjBNc1VVRkJRVUVzUTBGQlZVTXNZVUZCUVVFc1EwRkJRVUVzUTBGQlowSnJRaXhOUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVoc1JVZ3NZMEZCUVVFc1EwRkJVVTBzV1VGQlFVRXNRMEZCWlhaQ0xGVkJRVUZCTEVOQlFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCJ2YXIgXyRuZGpzb25fMjcgPSB7fTtcbmNvbnN0IHtFT0w6RU9MfT1fJGJyb3dzZXJfNDQ7LyogY29tbW9uLXNoYWtlIHJlbW92ZWQ6IG1vZHVsZS5leHBvcnRzLnN0cmluZ2lmeSA9ICovIHZvaWQgMCwgKG9wdHM9Pl8kdGhyb3VnaDJfNDMub2JqKG9wdHMsKG9iaixfLGNiKT0+e2NiKG51bGwsXyRzdHJpbmdpZnlfMjUob2JqKStFT0wpfSkpLF8kbmRqc29uXzI3LnBhcnNlPShvcHRzPT57cmV0dXJuKG9wdHM9b3B0c3x8e30pLnN0cmljdD0hMSE9PW9wdHMuc3RyaWN0LF8kc3BsaXQyXzQ3KGZ1bmN0aW9uKHJvdyl7dHJ5e2lmKHJvdylyZXR1cm4gSlNPTi5wYXJzZShyb3cpfWNhdGNoKGUpe29wdHMuc3RyaWN0JiZ0aGlzLmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIkNvdWxkIG5vdCBwYXJzZSByb3cgXCIrcm93LnNsaWNlKDAsNTApK1wiLi4uXCIpKX19LG9wdHMpfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltbHVaR1Y0TG1weklsMHNJbTVoYldWeklqcGJJblJvY205MVoyZ2lMQ0pGVDB3aUxDSnlaWEYxYVhKbElpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SXNJbkJoY25ObElpd2liM0IwY3lJc0luTjBjbWxqZENJc0luTndiR2wwSWl3aWNtOTNJaXdpU2xOUFRpSXNJbVVpTENKMGFHbHpJaXdpWlcxcGRDSXNJa1Z5Y205eUlpd2ljMnhwWTJVaVhTd2liV0Z3Y0dsdVozTWlPaUk3UVVGQlFTeE5RVUZOUVN4QlFVTm5RaXhEUVVOb1FrTXNSMEZCUVVFc1EwRkJSVUVzUjBGQlFVRXNRMEZCUVVFc1EwRkJVVU1zV1VGRFZTeERRVVV4UWtNc2RVUkJRVUZCTEV0QlFVRkJMRU5CUVVGQkxFZEJRVUZCTEVsQlFVRkJMRVZCUVVGQkxHRkJRVUZCTEVOQlFVRkJMRWRCUVVGQkxFTkJRVUZCTEVsQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFZEJRVUZCTEVOQlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVsQlFVRkJMRU5CUVVGQkxHTkJRVUZCTEVOQlFVRkJMRWRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRWRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFVkJTMEZCTEZkQlFVOURMRU5CUVZGRExFdEJRVUZCTEVWQlFWTkRMRWxCUVVGQkxFVkJRVUZCTEVOQlkzUkNMRTFCUVVFc1EwRmlRVUVzU1VGQlFVRXNRMEZCVDBFc1NVRkJRVUVzUlVGQlVTeEZRVUZCTEVWQlExWkRMRTFCUVVGQkxFTkJRVUZCTEVOQlFYbENMRU5CUVVFc1IwRkJhRUpFTEVsQlFVRkJMRU5CUVV0RExFMUJRVUZCTEVOQldWcERMRmRCUVVGQkxFTkJWbEFzVTBGQmJVSkRMRWRCUVVGQkxFTkJRVUZCTEVOQlEycENMRWRCUVVFc1EwRkRSU3hIUVVGSlFTeEhRVUZCUVN4RFFVRkxMRTlCUVU5RExFbEJRVUZCTEVOQlFVdE1MRXRCUVVGQkxFTkJRVTFKTEVkQlFVRkJMRU5CUVVGQkxFTkJRek5DTEUxQlFVOUZMRU5CUVVGQkxFTkJRVUZCTEVOQlEwaE1MRWxCUVVGQkxFTkJRVXRETEUxQlFVRkJMRVZCUTFCTExFbEJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXNzVDBGQlFTeERRVUZUTEVsQlFVbERMRXRCUVVGQkxFTkJRVTBzYzBKQlFVRXNRMEZCZVVKTUxFZEJRVUZCTEVOQlFVbE5MRXRCUVVGQkxFTkJRVTBzUTBGQlFTeERRVUZITEVWQlFVRXNRMEZCUVN4RFFVRk5MRXRCUVVFc1EwRkJRU3hEUVVGQkxFTkJRVUVzUTBGQlFTeERRVXQ0UkZRc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXMjUxYkd4ZGZRPT0iLCJ2YXIgRXJyPXtTb2NrZXRDbG9zZWQ6XCJzb2NrZXQgaXMgY2xvc2VkXCJ9O3ZhciBfJGVycm9yc183Mj17RXJyOkVycn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltVnljbTl5Y3k1cWN5SmRMQ0p1WVcxbGN5STZXeUpGY25JaUxDSlRiMk5yWlhSRGJHOXpaV1FpTENKdGIyUjFiR1VpTENKbGVIQnZjblJ6SWwwc0ltMWhjSEJwYm1keklqb2lRVUZEUVN4SlFVRkpRU3hIUVVGQlFTeERRVUZOTEVOQlExWkRMRmxCUVVGQkxFTkJRVzFDTEd0Q1FVRkJMRU5CUVVFc1EwRkZia0pETEdWQlFVOURMRU5CUVZVc1EwRkRaa2dzUjBGQlFVRXNRMEZCUVVFc1IwRkJRVUVzUTBGQlFVRXNRMEZCUVVFaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNlcyNTFiR3hkZlE9PSIsInZhciBfJGV2ZW50c1R5cGVfNzMgPSB7fTtcbnZhciBFdlR5cGU9RXZUeXBlfHx7fTtFdlR5cGUuQ29ubmVjdD1cImNvbm5lY3RcIixFdlR5cGUuRGlzY29ubmVjdD1cImRpc2Nvbm5lY3RcIixFdlR5cGUuTWVzc2FnZT1cIm1lc3NhZ2VcIixFdlR5cGUuRXJyb3I9XCJlcnJvclwiLEV2VHlwZS5SZWNvbm5lY3Rpbmc9XCJyZWNvbm5lY3RpbmdcIixFdlR5cGUuUmVjb25uZWN0PVwicmVjb25uZWN0XCIsXyRldmVudHNUeXBlXzczPXtFdlR5cGU6RXZUeXBlfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1WMlpXNTBjeTUwZVhCbExtcHpJbDBzSW01aGJXVnpJanBiSWtWMlZIbHdaU0lzSWtOdmJtNWxZM1FpTENKRWFYTmpiMjV1WldOMElpd2lUV1Z6YzJGblpTSXNJa1Z5Y205eUlpd2lVbVZqYjI1dVpXTjBhVzVuSWl3aVVtVmpiMjV1WldOMElpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SmRMQ0p0WVhCd2FXNW5jeUk2SWp0QlFVVkJMRWxCUVVsQkxFMUJRVUZCTEVOQlFWTkJMRTFCUVVGQkxFVkJRVlVzUlVGQlFTeERRVU4yUWtFc1RVRkJRVUVzUTBGQlQwTXNUMEZCUVVFc1EwRkJWU3hUUVVGQkxFTkJRMnBDUkN4TlFVRkJRU3hEUVVGUFJTeFZRVUZCUVN4RFFVRmhMRmxCUVVFc1EwRkRjRUpHTEUxQlFVRkJMRU5CUVU5SExFOUJRVUZCTEVOQlFWVXNVMEZCUVN4RFFVTnFRa2dzVFVGQlFVRXNRMEZCVDBrc1MwRkJRVUVzUTBGQlVTeFBRVUZCTEVOQlEyWktMRTFCUVVGQkxFTkJRVTlMTEZsQlFVRkJMRU5CUVdVc1kwRkJRU3hEUVVOMFFrd3NUVUZCUVVFc1EwRkJUMDBzVTBGQlFVRXNRMEZCV1N4WFFVRkJMRU5CUlc1Q1F5eGxRVUZQUXl4RFFVRlZMRU5CUTJaU0xFMUJRVUZCTEVOQlFVRkJMRTFCUVVGQkxFTkJRVUZCTEVOQlFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCJjb25zdCB7RXJyOl9fRXJyXzc0fT1fJGVycm9yc183Mix7RXZUeXBlOl9fRXZUeXBlXzc0fT1fJGV2ZW50c1R5cGVfNzM7dmFyIF8kdGNwXzc0PXtUY3BUcmFuc3BvcnQ6Y2xhc3N7Y29uc3RydWN0b3IocG9ydCxhZGRyLHJlY29ubmVjdFRpbWVvdXQpe3RoaXMuZXZlbnRzPW5ldyBfJGV2ZW50c18xMyx0aGlzLnJlY29ubmVjdFRpbWVvdXQ9cmVjb25uZWN0VGltZW91dCx0aGlzLnJlY29ubmVjdEhhbmRsZT1udWxsLHRoaXMuc29ja2V0PW51bGwsdGhpcy5wb3J0PXBvcnQsdGhpcy5hZGRyPWFkZHJ9b24oZXYsaGFuZGxlLG9wdHMpe3JldHVybiB0aGlzLmV2ZW50cy5vbihldixoYW5kbGUsb3B0cyl9b25jZShldixoYW5kbGUsb3B0cyl7cmV0dXJuIHRoaXMuZXZlbnRzLm9uY2UoZXYsaGFuZGxlLG9wdHMpfW9mZihldixoYW5kbGUsb3B0cyl7cmV0dXJuIGhhbmRsZT90aGlzLmV2ZW50cy5vZmYoZXYsaGFuZGxlLG9wdHMpOnRoaXMuZXZlbnRzLnJlbW92ZUFsbExpc3RlbmVycyhldil9dHJpZ2dlcigpe3ZhciBhcmdzPUFycmF5LmZyb20oYXJndW1lbnRzKTtyZXR1cm4gdGhpcy5ldmVudHMuZW1pdC5hcHBseSh0aGlzLmV2ZW50cyxhcmdzKX1jb25uZWN0KCl7bnVsbCE9dGhpcy5zb2NrZXQmJnRoaXMuY2xvc2UoKTt2YXIgdGhhdD10aGlzO3JldHVybiB0aGlzLnNvY2tldD1uZXcgXyRfZW1wdHlfNy5Tb2NrZXQsdGhpcy5zb2NrZXQuc2V0RW5jb2RpbmcoXCJ1dGY4XCIpLHRoaXMuc29ja2V0LnBpcGUoXyRuZGpzb25fMjcucGFyc2UoKSkub24oXCJkYXRhXCIsZnVuY3Rpb24oZGF0YSl7dGhhdC50cmlnZ2VyKF9fRXZUeXBlXzc0Lk1lc3NhZ2UsZGF0YSl9KSx0aGlzLnNvY2tldC5vbihcImNvbm5lY3RcIixmdW5jdGlvbigpe3RoYXQudHJpZ2dlcihfX0V2VHlwZV83NC5Db25uZWN0KX0pLHRoaXMuc29ja2V0Lm9uKFwiY2xvc2VcIixmdW5jdGlvbigpe3RoYXQudHJpZ2dlcihfX0V2VHlwZV83NC5EaXNjb25uZWN0KSx0aGF0LnJlY29ubmVjdFRpbWVvdXQ+MCYmKHRoYXQudHJpZ2dlcihfX0V2VHlwZV83NC5SZWNvbm5lY3RpbmcsdGhhdC5yZWNvbm5lY3RUaW1lb3V0KSxjbGVhclRpbWVvdXQodGhhdC5yZWNvbm5lY3RIYW5kbGUpLHRoYXQucmVjb25uZWN0SGFuZGxlPXNldFRpbWVvdXQodGhhdC5yZWNvbm5lY3QuYmluZCh0aGF0KSx0aGF0LnJlY29ubmVjdFRpbWVvdXQpKX0pLHRoaXMuc29ja2V0Lm9uKFwiZXJyb3JcIixmdW5jdGlvbihlKXt0aGF0LnRyaWdnZXIoX19FdlR5cGVfNzQuRXJyb3IsZSksdGhhdC5zb2NrZXQuZGVzdHJveSgpLHRoYXQuc29ja2V0PW51bGx9KSx0aGlzLnNvY2tldC5jb25uZWN0KHRoaXMucG9ydCx0aGlzLmFkZHIpLHRoaXN9c2VuZChtc2cpe2lmKCF0aGlzLnNvY2tldClyZXR1cm4gX19FcnJfNzQuU29ja2V0Q2xvc2VkO3RyeXt0aGlzLnNvY2tldC53cml0ZShKU09OLnN0cmluZ2lmeShtc2cpK1wiXFxuXCIpfWNhdGNoKGUpe3JldHVybiBlfXJldHVybiBudWxsfXJlY29ubmVjdCgpe2NsZWFyVGltZW91dCh0aGlzLnJlY29ubmVjdEhhbmRsZSksdGhpcy50cmlnZ2VyKF9fRXZUeXBlXzc0LlJlY29ubmVjdCx0aGlzLnJlY29ubmVjdFRpbWVvdXQpLHRoaXMuY29ubmVjdCh0aGlzLnBvcnQsdGhpcy5hZGRyKX1jbG9zZSgpe3RoaXMuc29ja2V0LmRlc3Ryb3koKSx0aGlzLnNvY2tldD1udWxsfX0sVGNwVGVzdFNlcnZlcjpwb3J0PT57dmFyIGNvbm5zPVtdLHNlcnZlcj1fJF9lbXB0eV83LmNyZWF0ZVNlcnZlcigpO3JldHVybiBzZXJ2ZXIub24oXCJjb25uZWN0aW9uXCIsY29ubj0+e2Nvbm5zLnB1c2goY29ubiksY29ubi5zZXRFbmNvZGluZyhcInV0ZjhcIiksY29ubi5vbihcImRhdGFcIixkPT57Y29ubnMuZmlsdGVyKGM9PmMhPT1jb25uKS5tYXAoYz0+e2Mud3JpdGUoZCl9KX0pLGNvbm4ub25jZShcImVuZFwiLCgpPT57Y29ubnM9Y29ubnMuZmlsdGVyKGM9PmMhPT1jb25uKSxjb25uLmRlc3Ryb3koKX0pLGNvbm4ub24oXCJlcnJvclwiLGU9Pntjb25ucz1jb25ucy5maWx0ZXIoYz0+YyE9PWNvbm4pLGNvbm4uZGVzdHJveSgpfSl9KSxzZXJ2ZXIubGlzdGVuKHBvcnQsXCIxMjcuMC4wLjFcIiksc2VydmVyfX07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluUmpjQzVxY3lKZExDSnVZVzFsY3lJNld5SnVaWFFpTENKRmNuSWlMQ0p5WlhGMWFYSmxJaXdpUlhaVWVYQmxJaXdpYlc5a2RXeGxJaXdpWlhod2IzSjBjeUlzSWxSamNGUnlZVzV6Y0c5eWRDSXNJbHR2WW1wbFkzUWdUMkpxWldOMFhTSXNJbkJ2Y25RaUxDSmhaR1J5SWl3aWNtVmpiMjV1WldOMFZHbHRaVzkxZENJc0luUm9hWE1pTENKbGRtVnVkSE1pTENKRmRtVnVkRVZ0YVhSMFpYSWlMQ0p5WldOdmJtNWxZM1JJWVc1a2JHVWlMQ0p6YjJOclpYUWlMQ0psZGlJc0ltaGhibVJzWlNJc0ltOXdkSE1pTENKdmJpSXNJbTl1WTJVaUxDSnZabVlpTENKeVpXMXZkbVZCYkd4TWFYTjBaVzVsY25NaUxDSmhjbWR6SWl3aVFYSnlZWGtpTENKbWNtOXRJaXdpWVhKbmRXMWxiblJ6SWl3aVpXMXBkQ0lzSW1Gd2NHeDVJaXdpWTJ4dmMyVWlMQ0owYUdGMElpd2lVMjlqYTJWMElpd2ljMlYwUlc1amIyUnBibWNpTENKd2FYQmxJaXdpYm1ScWMyOXVJaXdpY0dGeWMyVWlMQ0prWVhSaElpd2lkSEpwWjJkbGNpSXNJazFsYzNOaFoyVWlMQ0pEYjI1dVpXTjBJaXdpUkdselkyOXVibVZqZENJc0lsSmxZMjl1Ym1WamRHbHVaeUlzSW1Oc1pXRnlWR2x0Wlc5MWRDSXNJbk5sZEZScGJXVnZkWFFpTENKeVpXTnZibTVsWTNRaUxDSmlhVzVrSWl3aVpTSXNJa1Z5Y205eUlpd2laR1Z6ZEhKdmVTSXNJbU52Ym01bFkzUWlMQ0p0YzJjaUxDSlRiMk5yWlhSRGJHOXpaV1FpTENKM2NtbDBaU0lzSWtwVFQwNGlMQ0p6ZEhKcGJtZHBabmtpTENKU1pXTnZibTVsWTNRaUxDSlVZM0JVWlhOMFUyVnlkbVZ5SWl3aVkyOXVibk1pTENKelpYSjJaWElpTENKamNtVmhkR1ZUWlhKMlpYSWlMQ0pqYjI1dUlpd2ljSFZ6YUNJc0ltUWlMQ0ptYVd4MFpYSWlMQ0pqSWl3aWJXRndJaXdpYkdsemRHVnVJbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRU3hOUVVGTlFTeEJRVVZwUWl4RFFVVnFRa01zUjBGQlFVRXNRMEZCUlVFc1VVRkJRVUVzUTBGQlFVRXNRMEZCVVVNc1YwRkJVU3hEUVVGQkxFTkJRMnhDUXl4TlFVRkJRU3hEUVVGRlFTeFhRVUZCUVN4RFFVRkJRU3hEUVVGWFJDeGxRVUZSTEVOQmVVZ3pRa1VzV1VGQlQwTXNRMEZCVlN4RFFVTm1ReXhaUVVGQlFTeERRWGhJUml4TFFVRkJMRU5CUTBWRExGZEJRVUZCTEVOQlFXRkRMRWxCUVVGQkxFTkJRVTFETEVsQlFVRkJMRU5CUVUxRExHZENRVUZCUVN4RFFVRkJRU3hEUVVOMlFrTXNTVUZCUVVFc1EwRkJTME1zVFVGQlFVRXNRMEZCVXl4SlFVRkpReXhYUVVGQlFTeERRVU5zUWtZc1NVRkJRVUVzUTBGQlMwUXNaMEpCUVVGQkxFTkJRVzFDUVN4blFrRkJRVUVzUTBGRGVFSkRMRWxCUVVGQkxFTkJRVXRITEdWQlFVRkJMRU5CUVd0Q0xFbEJRVUVzUTBGRGRrSklMRWxCUVVGQkxFTkJRVXRKTEUxQlFVRkJMRU5CUVZNc1NVRkJRU3hEUVVOa1NpeEpRVUZCUVN4RFFVRkxTQ3hKUVVGQlFTeERRVUZQUVN4SlFVRkJRU3hEUVVOYVJ5eEpRVUZCUVN4RFFVRkxSaXhKUVVGQlFTeERRVUZQUVN4SlFVRkJRU3hEUVVsa1JpeEZRVUZCUVN4RFFVRkpVeXhGUVVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGUlF5eEpRVUZCUVN4RFFVRkJRU3hEUVVOaUxFOUJRVTlRTEVsQlFVRkJMRU5CUVV0RExFMUJRVUZCTEVOQlFVOVBMRVZCUVVGQkxFTkJRVWRJTEVWQlFVRkJMRU5CUVVsRExFMUJRVUZCTEVOQlFWRkRMRWxCUVVGQkxFTkJRVUZCTEVOQlNYSkRXQ3hKUVVGQlFTeERRVUZOVXl4RlFVRkJRU3hEUVVGSlF5eE5RVUZCUVN4RFFVRlJReXhKUVVGQlFTeERRVUZCUVN4RFFVTnFRaXhQUVVGUFVDeEpRVUZCUVN4RFFVRkxReXhOUVVGQlFTeERRVUZQVVN4SlFVRkJRU3hEUVVGTFNpeEZRVUZCUVN4RFFVRkpReXhOUVVGQlFTeERRVUZSUXl4SlFVRkJRU3hEUVVGQlFTeERRVWx5UTFnc1IwRkJRVUVzUTBGQlMxTXNSVUZCUVVFc1EwRkJTVU1zVFVGQlFVRXNRMEZCVVVNc1NVRkJRVUVzUTBGQlFVRXNRMEZEWml4UFFVRkxSQ3hOUVVGQlFTeERRVWRGVGl4SlFVRkJRU3hEUVVGTFF5eE5RVUZCUVN4RFFVRlBVeXhIUVVGQlFTeERRVUZKVEN4RlFVRkJRU3hEUVVGSlF5eE5RVUZCUVN4RFFVRlJReXhKUVVGQlFTeERRVUZCUVN4RFFVWXhRbEFzU1VGQlFVRXNRMEZCUzBNc1RVRkJRVUVzUTBGQlQxVXNhMEpCUVVGQkxFTkJRVzFDVGl4RlFVRkJRU3hEUVVGQlFTeERRVTB4UTFRc1QwRkJRVUVzUlVGQlFVRXNRMEZEUlN4SlFVRkpaMElzU1VGQlFVRXNRMEZCVDBNc1MwRkJRVUVzUTBGQlRVTXNTVUZCUVVFc1EwRkJTME1zVTBGQlFVRXNRMEZCUVVFc1EwRkRkRUlzVDBGQlQyWXNTVUZCUVVFc1EwRkJTME1zVFVGQlFVRXNRMEZCVDJVc1NVRkJRVUVzUTBGQlMwTXNTMEZCUVVFc1EwRkJUV3BDTEVsQlFVRkJMRU5CUVV0RExFMUJRVUZCTEVOQlFWRlhMRWxCUVVGQkxFTkJRVUZCTEVOQlN6ZERhRUlzVDBGQlFVRXNSVUZCUVVFc1EwRkRiVUlzU1VGQlFTeEZRVUZpU1N4SlFVRkJRU3hEUVVGTFNTeE5RVUZCUVN4RlFVTlFTaXhKUVVGQlFTeERRVUZMYTBJc1MwRkJRVUVzUlVGQlFVRXNRMEZGVUN4SlFVRkpReXhKUVVGQlFTeERRVUZQYmtJc1NVRkJRVUVzUTBFeVFsZ3NUMEV4UWtGQkxFbEJRVUZCTEVOQlFVdEpMRTFCUVVGQkxFTkJRVk1zU1VGQlNXWXNWVUZCUVVFc1EwRkJTU3RDTEUxQlFVRkJMRU5CUlhSQ2NFSXNTVUZCUVVFc1EwRkJTMGtzVFVGQlFVRXNRMEZCVDJsQ0xGZEJRVUZCTEVOQlFWa3NUVUZCUVN4RFFVRkJMRU5CU1hoQ2NrSXNTVUZCUVVFc1EwRkJTMGtzVFVGQlFVRXNRMEZCVDJ0Q0xFbEJRVUZCTEVOQlFVdERMRmRCUVVGQkxFTkJRVTlETEV0QlFVRkJMRVZCUVVGQkxFTkJRVUZCTEVOQlFWTm9RaXhGUVVGQlFTeERRVUZITEUxQlFVRXNRMEZCVVN4VFFVRlRhVUlzU1VGQlFVRXNRMEZCUVVFc1EwRkRia1JPTEVsQlFVRkJMRU5CUVV0UExFOUJRVUZCTEVOQlFWRnNReXhYUVVGQlFTeERRVUZQYlVNc1QwRkJRVUVzUTBGQlUwWXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZMMEo2UWl4SlFVRkJRU3hEUVVGTFNTeE5RVUZCUVN4RFFVRlBTU3hGUVVGQlFTeERRVUZITEZOQlFVRXNRMEZCVnl4VlFVRkJMRU5CUTNoQ1Z5eEpRVUZCUVN4RFFVRkxUeXhQUVVGQlFTeERRVUZSYkVNc1YwRkJRVUVzUTBGQlQyOURMRTlCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJSWFJDTlVJc1NVRkJRVUVzUTBGQlMwa3NUVUZCUVVFc1EwRkJUMGtzUlVGQlFVRXNRMEZCUnl4UFFVRkJMRU5CUVZNc1ZVRkJRU3hEUVVOMFFsY3NTVUZCUVVFc1EwRkJTMDhzVDBGQlFVRXNRMEZCVVd4RExGZEJRVUZCTEVOQlFVOXhReXhWUVVGQlFTeERRVUZCUVN4RFFVTm9RbFlzU1VGQlFVRXNRMEZCUzNCQ0xHZENRVUZCUVN4RFFVRnBRaXhEUVVGQkxFZEJRM2hDYjBJc1NVRkJRVUVzUTBGQlMwOHNUMEZCUVVFc1EwRkJVV3hETEZkQlFVRkJMRU5CUVU5elF5eFpRVUZCUVN4RFFVRmpXQ3hKUVVGQlFTeERRVUZMY0VJc1owSkJRVUZCTEVOQlFVRkJMRU5CUTNaRFowTXNXVUZCUVVFc1EwRkJZVm9zU1VGQlFVRXNRMEZCUzJoQ0xHVkJRVUZCTEVOQlFVRkJMRU5CUTJ4Q1owSXNTVUZCUVVFc1EwRkJTMmhDTEdWQlFVRkJMRU5CUVd0Q05rSXNWVUZCUVVFc1EwRkJWMklzU1VGQlFVRXNRMEZCUzJNc1UwRkJRVUVzUTBGQlZVTXNTVUZCUVVFc1EwRkJTMllzU1VGQlFVRXNRMEZCUVVFc1EwRkJUMEVzU1VGQlFVRXNRMEZCUzNCQ0xHZENRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkMFJVTXNTVUZCUVVFc1EwRkJTMGtzVFVGQlFVRXNRMEZCVDBrc1JVRkJRVUVzUTBGQlJ5eFBRVUZCTEVOQlFWTXNVMEZCVXpKQ0xFTkJRVUZCTEVOQlFVRkJMRU5CUXk5Q2FFSXNTVUZCUVVFc1EwRkJTMDhzVDBGQlFVRXNRMEZCVVd4RExGZEJRVUZCTEVOQlFVODBReXhMUVVGQlFTeERRVUZQUkN4RFFVRkJRU3hEUVVGQlFTeERRVU16UW1oQ0xFbEJRVUZCTEVOQlFVdG1MRTFCUVVGQkxFTkJRVTlwUXl4UFFVRkJRU3hGUVVGQlFTeERRVU5hYkVJc1NVRkJRVUVzUTBGQlMyWXNUVUZCUVVFc1EwRkJVeXhKUVVGQkxFTkJRVUVzUTBGQlFTeERRVVZvUWtvc1NVRkJRVUVzUTBGQlMwa3NUVUZCUVVFc1EwRkJUMnRETEU5QlFVRkJMRU5CUVZGMFF5eEpRVUZCUVN4RFFVRkxTQ3hKUVVGQlFTeERRVUZOUnl4SlFVRkJRU3hEUVVGTFJpeEpRVUZCUVN4RFFVRkJRU3hEUVVNM1FrVXNTVUZCUVVFc1EwRkpWRW9zU1VGQlFVRXNRMEZCVFRKRExFZEJRVUZCTEVOQlFVRkJMRU5CUTA0c1IwRkJRU3hEUVVGTGRrTXNTVUZCUVVFc1EwRkJTMGtzVFVGQlFVRXNRMEZEVGl4UFFVRlBaQ3hSUVVGQlFTeERRVUZKYTBRc1dVRkJRVUVzUTBGRlppeEhRVUZCTEVOQlEwTjRReXhKUVVGQlFTeERRVUZMU1N4TlFVRkJRU3hEUVVGUGNVTXNTMEZCUVVFc1EwRkJUVU1zU1VGQlFVRXNRMEZCUzBNc1UwRkJRVUVzUTBGQlZVb3NSMEZCUVVFc1EwRkJRVUVzUTBGQlN5eEpRVUZCTEVOQlFVRXNRMEZEY2tNc1RVRkJUMG9zUTBGQlFVRXNRMEZCUVVFc1EwRkRUQ3hQUVVGUFFTeERRVUZCUVN4RFFVVlVMRTlCUVU4c1NVRkJRU3hEUVVkVWRrTXNVMEZCUVVFc1JVRkJRVUVzUTBGRFJXMURMRmxCUVVGQkxFTkJRV0V2UWl4SlFVRkJRU3hEUVVGTFJ5eGxRVUZCUVN4RFFVRkJRU3hEUVVOc1FrZ3NTVUZCUVVFc1EwRkJTekJDTEU5QlFVRkJMRU5CUVZGc1F5eFhRVUZCUVN4RFFVRlBiMFFzVTBGQlFVRXNRMEZCVnpWRExFbEJRVUZCTEVOQlFVdEVMR2RDUVVGQlFTeERRVUZCUVN4RFFVTjBRME1zU1VGQlFVRXNRMEZCUzNORExFOUJRVUZCTEVOQlFWRjBReXhKUVVGQlFTeERRVUZMU0N4SlFVRkJRU3hEUVVGTlJ5eEpRVUZCUVN4RFFVRkxSaXhKUVVGQlFTeERRVUZCUVN4RFFVYzNRa1lzUzBGQlFVRXNSVUZCUVVFc1EwRkRSVWtzU1VGQlFVRXNRMEZCUzBrc1RVRkJRVUVzUTBGQlQybERMRTlCUVVGQkxFVkJRVUZCTEVOQlExcHlReXhKUVVGQlFTeERRVUZMU1N4TlFVRkJRU3hEUVVGVExFbEJRVUVzUTBGQlFTeERRVUZCTEVOQk5rSkdlVU1zWVVGQlFVRXNRMEY0UWs5b1JDeEpRVUZCUVN4RlFVRkJRU3hEUVVOeVFpeEpRVUZKYVVRc1MwRkJRVUVzUTBGQlVTeEZRVUZCTEVOQlExSkRMRTFCUVVGQkxFTkJRVk14UkN4VlFVRkJRU3hEUVVGSk1rUXNXVUZCUVVFc1JVRkJRVUVzUTBGclFtcENMRTlCYWtKQlJDeE5RVUZCUVN4RFFVRlBka01zUlVGQlFVRXNRMEZCUnl4WlFVRkJMRU5CUVdWNVF5eEpRVUZCUVN4RlFVRkJRU3hEUVVOMlFrZ3NTMEZCUVVFc1EwRkJUVWtzU1VGQlFVRXNRMEZCUzBRc1NVRkJRVUVzUTBGQlFVRXNRMEZGV0VFc1NVRkJRVUVzUTBGQlN6VkNMRmRCUVVGQkxFTkJRVmtzVFVGQlFTeERRVUZCTEVOQlEycENORUlzU1VGQlFVRXNRMEZCUzNwRExFVkJRVUZCTEVOQlFVY3NUVUZCUVN4RFFVRlRNa01zUTBGQlFVRXNSVUZCUVVFc1EwRkRaa3dzUzBGQlFVRXNRMEZCVFUwc1RVRkJRVUVzUTBGQlVVTXNRMEZCUVVFc1JVRkJXVUVzUTBGQlFVRXNSMEZCU1Vvc1NVRkJRVUVzUTBGQlFVRXNRMEZCVDBzc1IwRkJRVUVzUTBGQlMwUXNRMEZCUVVFc1JVRkJRVUVzUTBGQlMwRXNRMEZCUVVFc1EwRkJSVm9zUzBGQlFVRXNRMEZCVFZVc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZla1JHTEVsQlFVRkJMRU5CUVV0NFF5eEpRVUZCUVN4RFFVRkxMRXRCUVVFc1EwRkJUeXhKUVVGQkxFTkJRMlp4UXl4TFFVRkJRU3hEUVVGUlFTeExRVUZCUVN4RFFVRk5UU3hOUVVGQlFTeERRVUZSUXl4RFFVRkJRU3hGUVVGWlFTeERRVUZCUVN4SFFVRkpTaXhKUVVGQlFTeERRVUZCUVN4RFFVTjBRMEVzU1VGQlFVRXNRMEZCUzFvc1QwRkJRVUVzUlVGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRlVGa3NTVUZCUVVFc1EwRkJTM3BETEVWQlFVRkJMRU5CUVVjc1QwRkJRU3hEUVVGVk1rSXNRMEZCUVVFc1JVRkJRVUVzUTBGRGFFSlhMRXRCUVVGQkxFTkJRVkZCTEV0QlFVRkJMRU5CUVUxTkxFMUJRVUZCTEVOQlFWRkRMRU5CUVVGQkxFVkJRVmxCTEVOQlFVRkJMRWRCUVVsS0xFbEJRVUZCTEVOQlFVRkJMRU5CUTNSRFFTeEpRVUZCUVN4RFFVRkxXaXhQUVVGQlFTeEZRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVkVVZTeE5RVUZCUVN4RFFVRlBVU3hOUVVGQlFTeERRVUZQTVVRc1NVRkJRVUVzUTBGQlRTeFhRVUZCTEVOQlFVRXNRMEZEWW10RUxFMUJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2x0dWRXeHNYWDA9IiwidmFyIHdzPW51bGw7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFdlYlNvY2tldD93cz1XZWJTb2NrZXQ6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIE1veldlYlNvY2tldD93cz1Nb3pXZWJTb2NrZXQ6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbD93cz1nbG9iYWwuV2ViU29ja2V0fHxnbG9iYWwuTW96V2ViU29ja2V0OlwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d3M9d2luZG93LldlYlNvY2tldHx8d2luZG93Lk1veldlYlNvY2tldDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZiYmKHdzPXNlbGYuV2ViU29ja2V0fHxzZWxmLk1veldlYlNvY2tldCksbW9kdWxlLmV4cG9ydHM9d3M7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUp5YjNkelpYSXVhbk1pWFN3aWJtRnRaWE1pT2xzaWQzTWlMQ0pYWldKVGIyTnJaWFFpTENKTmIzcFhaV0pUYjJOclpYUWlMQ0puYkc5aVlXd2lMQ0ozYVc1a2IzY2lMQ0p6Wld4bUlpd2liVzlrZFd4bElpd2laWGh3YjNKMGN5SmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlJVRXNTVUZCU1VFc1IwRkJTeXhMUVVWblFpeHZRa0ZCWkVNc1ZVRkRWRVFzUjBGQlMwTXNWVUZETkVJc2IwSkJRV3BDUXl4aFFVTm9Ra1lzUjBGQlMwVXNZVUZEYzBJc2IwSkJRVmhETEU5QlEyaENTQ3hIUVVGTFJ5eFBRVUZQUml4WFFVRmhSU3hQUVVGUFJDeGhRVU5NTEc5Q1FVRllSU3hQUVVOb1Frb3NSMEZCUzBrc1QwRkJUMGdzVjBGQllVY3NUMEZCVDBZc1lVRkRVQ3h2UWtGQlZFY3NUMEZEYUVKTUxFZEJRVXRMTEV0QlFVdEtMRmRCUVdGSkxFdEJRVXRJTEdOQlJ6bENTU3hQUVVGUFF5eFJRVUZWVUNJc0ltWnBiR1VpT2lJdmFHOXRaUzl0YUMxalltOXVMMmR2ZHk5emNtTXZaMmwwYUhWaUxtTnZiUzlyYm1Ga2FDOXVhV3gwWVd4ckwzTjBZWFJwWXk5MGFHVnRaWE12YTI1aFpHZ3ZjM1JoZEdsakwyeHBZaTEzYUdsemNHVnlNaTl1YjJSbFgyMXZaSFZzWlhNdmFYTnZiVzl5Y0docFl5MTNjeTlpY205M2MyVnlMbXB6SW4wPSIsImNvbnN0IHtFcnI6X19FcnJfNzV9PV8kZXJyb3JzXzcyLHtFdlR5cGU6X19FdlR5cGVfNzV9PV8kZXZlbnRzVHlwZV83Mzt2YXIgXyR3c183NT17V3NUcmFuc3BvcnQ6Y2xhc3N7Y29uc3RydWN0b3IodXJsLHJlY29ubmVjdFRpbWVvdXQpe3RoaXMuZXZlbnRzPW5ldyBfJGV2ZW50c18xMyx0aGlzLnJlY29ubmVjdFRpbWVvdXQ9cmVjb25uZWN0VGltZW91dCx0aGlzLnJlY29ubmVjdEhhbmRsZT1udWxsLHRoaXMudXJsPXVybCx0aGlzLndzPW51bGx9b24oZXYsaGFuZGxlLG9wdHMpe3JldHVybiB0aGlzLmV2ZW50cy5vbihldixoYW5kbGUsb3B0cyl9b25jZShldixoYW5kbGUsb3B0cyl7cmV0dXJuIHRoaXMuZXZlbnRzLm9uY2UoZXYsaGFuZGxlLG9wdHMpfW9mZihldixoYW5kbGUsb3B0cyl7cmV0dXJuIGhhbmRsZT90aGlzLmV2ZW50cy5vZmYoZXYsaGFuZGxlLG9wdHMpOnRoaXMuZXZlbnRzLnJlbW92ZUFsbExpc3RlbmVycyhldil9dHJpZ2dlcigpe3ZhciBhcmdzPUFycmF5LmZyb20oYXJndW1lbnRzKTtyZXR1cm4gdGhpcy5ldmVudHMuZW1pdC5hcHBseSh0aGlzLmV2ZW50cyxhcmdzKX1jb25uZWN0KCl7bnVsbCE9dGhpcy53cyYmdGhpcy5jbG9zZSgpLHRoaXMud3M9bmV3IF8kYnJvd3Nlcl8yNCh0aGlzLnVybCk7dmFyIHRoYXQ9dGhpcztyZXR1cm4gdGhpcy53cy5vbm9wZW49KCgpPT57dGhhdC50cmlnZ2VyKF9fRXZUeXBlXzc1LkNvbm5lY3QpfSksdGhpcy53cy5vbm1lc3NhZ2U9KG09Pnt0aGF0LnRyaWdnZXIoX19FdlR5cGVfNzUuTWVzc2FnZSxtLmRhdGEpfSksdGhpcy53cy5vbmVycm9yPShlPT57dGhhdC50cmlnZ2VyKF9fRXZUeXBlXzc1LkVycm9yLGUpLHRoYXQud3MuY2xvc2UoKSx0aGF0LndzPW51bGx9KSx0aGlzLndzLm9uY2xvc2U9KGU9PntpZigxZTM9PWUuY29kZSl7aWYoZS5yZWFzb24mJk1zZ1R5cGUuaGFzT3duUHJvcGVydHkoZS5yZWFzb24pKXJldHVybiB2b2lkIHRoYXQudHJpZ2dlcihfX0V2VHlwZV83NS5EaXNjb25uZWN0LGUucmVhc29uKX1lbHNlIDEwMDUhPWUuY29kZT90aGF0LnJlY29ubmVjdFRpbWVvdXQ+MCYmKHRoYXQudHJpZ2dlcihfX0V2VHlwZV83NS5SZWNvbm5lY3RpbmcsdGhhdC5yZWNvbm5lY3RUaW1lb3V0KSxjbGVhclRpbWVvdXQodGhhdC5yZWNvbm5lY3RIYW5kbGUpLHRoYXQucmVjb25uZWN0SGFuZGxlPXNldFRpbWVvdXQodGhhdC5yZWNvbm5lY3QuYmluZCh0aGF0KSx0aGF0LnJlY29ubmVjdFRpbWVvdXQpKTp0aGF0LnRyaWdnZXIoX19FdlR5cGVfNzUuRGlzY29ubmVjdCxlKX0pLHRoaXN9c2VuZChtc2cpe2lmKCF0aGlzLndzfHx0aGlzLndzLnJlYWR5U3RhdGU9PV8kYnJvd3Nlcl8yNC5DTE9TRUR8fHRoaXMud3MucmVhZHlTdGF0ZT09XyRicm93c2VyXzI0LkNMT1NJTkcpcmV0dXJuIF9fRXJyXzc1LlNvY2tldENsb3NlZDt0cnl7XCJvYmplY3RcIj09dHlwZW9mIG1zZyYmKG1zZz1KU09OLnN0cmluZ2lmeShtc2cpKSx0aGlzLndzLnNlbmQobXNnKX1jYXRjaChlKXtyZXR1cm4gZX1yZXR1cm4gbnVsbH1yZWNvbm5lY3QoKXtjbGVhclRpbWVvdXQodGhpcy5yZWNvbm5lY3RIYW5kbGUpLHRoaXMudHJpZ2dlcihfX0V2VHlwZV83NS5SZWNvbm5lY3QsdGhpcy5yZWNvbm5lY3RUaW1lb3V0KSx0aGlzLmNvbm5lY3QodGhpcy51cmwpfWNsb3NlKCl7dGhpcy53cy5jbG9zZSgpfX0sV3NUZXN0U2VydmVyOnBvcnQ9Pntjb25zdCBzZXJ2ZXI9bmV3IF8kYnJvd3Nlcl8yNC5TZXJ2ZXIoe3BvcnQ6cG9ydCxub1NlcnZlcjohMH0pO3JldHVybiBzZXJ2ZXIub24oXCJjb25uZWN0aW9uXCIsY29ubj0+e2Nvbm4ub24oXCJtZXNzYWdlXCIsZD0+e3NlcnZlci5jbGllbnRzLmZvckVhY2goZnVuY3Rpb24oY2xpZW50KXtjbGllbnQhPT1jb25uJiZjbGllbnQucmVhZHlTdGF0ZT09PV8kYnJvd3Nlcl8yNC5PUEVOJiZjbGllbnQuc2VuZChkKX0pfSl9KSxzZXJ2ZXJ9fTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5kekxtcHpJbDBzSW01aGJXVnpJanBiSWtWMlpXNTBSVzFwZEhSbGNpSXNJa1Z5Y2lJc0luSmxjWFZwY21VaUxDSkZkbFI1Y0dVaUxDSnRiMlIxYkdVaUxDSmxlSEJ2Y25Seklpd2lWM05VY21GdWMzQnZjblFpTENKYmIySnFaV04wSUU5aWFtVmpkRjBpTENKMWNtd2lMQ0p5WldOdmJtNWxZM1JVYVcxbGIzVjBJaXdpZEdocGN5SXNJbVYyWlc1MGN5SXNJbkpsWTI5dWJtVmpkRWhoYm1Sc1pTSXNJbmR6SWl3aVpYWWlMQ0pvWVc1a2JHVWlMQ0p2Y0hSeklpd2liMjRpTENKdmJtTmxJaXdpYjJabUlpd2ljbVZ0YjNabFFXeHNUR2x6ZEdWdVpYSnpJaXdpWVhKbmN5SXNJa0Z5Y21GNUlpd2labkp2YlNJc0ltRnlaM1Z0Wlc1MGN5SXNJbVZ0YVhRaUxDSmhjSEJzZVNJc0ltTnNiM05sSWl3aVYyVmlVMjlqYTJWMElpd2lkR2hoZENJc0ltOXViM0JsYmlJc0luUnlhV2RuWlhJaUxDSkRiMjV1WldOMElpd2liMjV0WlhOellXZGxJaXdpYlNJc0lrMWxjM05oWjJVaUxDSmtZWFJoSWl3aWIyNWxjbkp2Y2lJc0ltVWlMQ0pGY25KdmNpSXNJbTl1WTJ4dmMyVWlMQ0pqYjJSbElpd2ljbVZoYzI5dUlpd2lUWE5uVkhsd1pTSXNJbWhoYzA5M2JsQnliM0JsY25SNUlpd2lSR2x6WTI5dWJtVmpkQ0lzSWxKbFkyOXVibVZqZEdsdVp5SXNJbU5zWldGeVZHbHRaVzkxZENJc0luTmxkRlJwYldWdmRYUWlMQ0p5WldOdmJtNWxZM1FpTENKaWFXNWtJaXdpYlhObklpd2ljbVZoWkhsVGRHRjBaU0lzSWtOTVQxTkZSQ0lzSWtOTVQxTkpUa2NpTENKVGIyTnJaWFJEYkc5elpXUWlMQ0pLVTA5T0lpd2ljM1J5YVc1bmFXWjVJaXdpYzJWdVpDSXNJbEpsWTI5dWJtVmpkQ0lzSW1OdmJtNWxZM1FpTENKWGMxUmxjM1JUWlhKMlpYSWlMQ0p3YjNKMElpd2ljMlZ5ZG1WeUlpd2lVMlZ5ZG1WeUlpd2libTlUWlhKMlpYSWlMQ0pqYjI1dUlpd2laQ0lzSW1Oc2FXVnVkSE1pTENKbWIzSkZZV05vSWl3aVkyeHBaVzUwSWl3aVQxQkZUaUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzVFVGQlRVRXNRVUZEYjBJc1EwRkZjRUpETEVkQlFVRkJMRU5CUVVWQkxGRkJRVUZCTEVOQlFVRkJMRU5CUVZGRExGZEJRVkVzUTBGQlFTeERRVU5zUWtNc1RVRkJRVUVzUTBGQlJVRXNWMEZCUVVFc1EwRkJRVUVzUTBGQlYwUXNaVUZCVVN4RFFXMUlNMEpGTEZkQlFVOURMRU5CUVZVc1EwRkRaa01zVjBGQlFVRXNRMEZzU0VZc1MwRkJRU3hEUVVORlF5eFhRVUZCUVN4RFFVRmhReXhIUVVGQlFTeERRVUZMUXl4blFrRkJRVUVzUTBGQlFVRXNRMEZEYUVKRExFbEJRVUZCTEVOQlFVdERMRTFCUVVGQkxFTkJRVk1zU1VGQlNWZ3NWMEZCUVVFc1EwRkRiRUpWTEVsQlFVRkJMRU5CUVV0RUxHZENRVUZCUVN4RFFVRnRRa0VzWjBKQlFVRkJMRU5CUTNoQ1F5eEpRVUZCUVN4RFFVRkxSU3hsUVVGQlFTeERRVUZyUWl4SlFVRkJMRU5CUTNaQ1JpeEpRVUZCUVN4RFFVRkxSaXhIUVVGQlFTeERRVUZOUVN4SFFVRkJRU3hEUVVOWVJTeEpRVUZCUVN4RFFVRkxSeXhGUVVGQlFTeERRVUZMTEVsQlFVRXNRMEZKV2s0c1JVRkJRVUVzUTBGQlNVOHNSVUZCUVVFc1EwRkJTVU1zVFVGQlFVRXNRMEZCVVVNc1NVRkJRVUVzUTBGQlFVRXNRMEZEWWl4UFFVRlBUaXhKUVVGQlFTeERRVUZMUXl4TlFVRkJRU3hEUVVGUFRTeEZRVUZCUVN4RFFVRkhTQ3hGUVVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGUlF5eEpRVUZCUVN4RFFVRkJRU3hEUVVseVExUXNTVUZCUVVFc1EwRkJUVThzUlVGQlFVRXNRMEZCU1VNc1RVRkJRVUVzUTBGQlVVTXNTVUZCUVVFc1EwRkJRVUVzUTBGRGFrSXNUMEZCVDA0c1NVRkJRVUVzUTBGQlMwTXNUVUZCUVVFc1EwRkJUMDhzU1VGQlFVRXNRMEZCUzBvc1JVRkJRVUVzUTBGQlNVTXNUVUZCUVVFc1EwRkJVVU1zU1VGQlFVRXNRMEZCUVVFc1EwRkpja05VTEVkQlFVRkJMRU5CUVV0UExFVkJRVUZCTEVOQlFVbERMRTFCUVVGQkxFTkJRVkZETEVsQlFVRkJMRU5CUVVGQkxFTkJRMllzVDBGQlMwUXNUVUZCUVVFc1EwRkhSVXdzU1VGQlFVRXNRMEZCUzBNc1RVRkJRVUVzUTBGQlQxRXNSMEZCUVVFc1EwRkJTVXdzUlVGQlFVRXNRMEZCU1VNc1RVRkJRVUVzUTBGQlVVTXNTVUZCUVVFc1EwRkJRVUVzUTBGR01VSk9MRWxCUVVGQkxFTkJRVXRETEUxQlFVRkJMRU5CUVU5VExHdENRVUZCUVN4RFFVRnRRazRzUlVGQlFVRXNRMEZCUVVFc1EwRk5NVU5RTEU5QlFVRkJMRVZCUVVGQkxFTkJRMFVzU1VGQlNXTXNTVUZCUVVFc1EwRkJUME1zUzBGQlFVRXNRMEZCVFVNc1NVRkJRVUVzUTBGQlMwTXNVMEZCUVVFc1EwRkJRVUVzUTBGRGRFSXNUMEZCVDJRc1NVRkJRVUVzUTBGQlMwTXNUVUZCUVVFc1EwRkJUMk1zU1VGQlFVRXNRMEZCUzBNc1MwRkJRVUVzUTBGQlRXaENMRWxCUVVGQkxFTkJRVXRETEUxQlFVRkJMRU5CUVZGVkxFbEJRVUZCTEVOQlFVRkJMRU5CU3pkRFpDeFBRVUZCUVN4RlFVRkJRU3hEUVVObExFbEJRVUVzUlVGQlZFY3NTVUZCUVVFc1EwRkJTMGNzUlVGQlFVRXNSVUZEVUVnc1NVRkJRVUVzUTBGQlMybENMRXRCUVVGQkxFVkJRVUZCTEVOQlJWQnFRaXhKUVVGQlFTeERRVUZMUnl4RlFVRkJRU3hEUVVGTExFbEJRVWxsTEZsQlFVRkJMRU5CUVZWc1FpeEpRVUZCUVN4RFFVRkxSaXhIUVVGQlFTeERRVUZCUVN4RFFVVTNRaXhKUVVGSmNVSXNTVUZCUVVFc1EwRkJUMjVDTEVsQlFVRkJMRU5CTkVKWUxFOUJNMEpCUVN4SlFVRkJRU3hEUVVGTFJ5eEZRVUZCUVN4RFFVRkhhVUlzVFVGQlFVRXNSVUZCVXl4SlFVRkJMRU5CUTJaRUxFbEJRVUZCTEVOQlFVdEZMRTlCUVVGQkxFTkJRVkUxUWl4WFFVRkJRU3hEUVVGUE5rSXNUMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkZkRUowUWl4SlFVRkJRU3hEUVVGTFJ5eEZRVUZCUVN4RFFVRkhiMElzVTBGQlFVRXNSVUZCWVVNc1EwRkJRVUVzUlVGQlFVRXNRMEZEYmtKTUxFbEJRVUZCTEVOQlFVdEZMRTlCUVVGQkxFTkJRVkUxUWl4WFFVRkJRU3hEUVVGUFowTXNUMEZCUVVFc1EwRkJVMFFzUTBGQlFVRXNRMEZCUlVVc1NVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGRmFrTXhRaXhKUVVGQlFTeERRVUZMUnl4RlFVRkJRU3hEUVVGSGQwSXNUMEZCUVVFc1JVRkJWME1zUTBGQlFVRXNSVUZCUVVFc1EwRkRha0pVTEVsQlFVRkJMRU5CUVV0RkxFOUJRVUZCTEVOQlFWRTFRaXhYUVVGQlFTeERRVUZQYjBNc1MwRkJRVUVzUTBGQlQwUXNRMEZCUVVFc1EwRkJRVUVzUTBGRE0wSlVMRWxCUVVGQkxFTkJRVXRvUWl4RlFVRkJRU3hEUVVGSFl5eExRVUZCUVN4RlFVRkJRU3hEUVVOU1JTeEpRVUZCUVN4RFFVRkxhRUlzUlVGQlFVRXNRMEZCU3l4SlFVRkJMRU5CUVVFc1EwRkJRU3hEUVVWYVNDeEpRVUZCUVN4RFFVRkxSeXhGUVVGQlFTeERRVUZITWtJc1QwRkJRVUVzUlVGQlYwWXNRMEZCUVVFc1JVRkJRVUVzUTBGRGFrSXNSMEZCWXl4SFFVRkJMRVZCUVZaQkxFTkJRVUZCTEVOQlFVVkhMRWxCUVVGQkxFTkJRVUZCTEVOQlEwb3NSMEZCU1Vnc1EwRkJRVUVzUTBGQlJVa3NUVUZCUVVFc1JVRkJWVU1zVDBGQlFVRXNRMEZCVVVNc1kwRkJRVUVzUTBGQlpVNHNRMEZCUVVFc1EwRkJSVWtzVFVGQlFVRXNRMEZCUVVFc1EwRkZka01zVDBGQlFTeExRVVJCWWl4SlFVRkJRU3hEUVVGTFJTeFBRVUZCUVN4RFFVRlJOVUlzVjBGQlFVRXNRMEZCVHpCRExGVkJRVUZCTEVOQlFWbFFMRU5CUVVGQkxFTkJRVVZKTEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEV0QlIycENMRWxCUVVFc1JVRkJWa29zUTBGQlFVRXNRMEZCUlVjc1NVRkJRVUVzUTBGRFVGb3NTVUZCUVVFc1EwRkJTM0JDTEdkQ1FVRkJRU3hEUVVGcFFpeERRVUZCTEVkQlEzaENiMElzU1VGQlFVRXNRMEZCUzBVc1QwRkJRVUVzUTBGQlVUVkNMRmRCUVVGQkxFTkJRVTh5UXl4WlFVRkJRU3hEUVVGamFrSXNTVUZCUVVFc1EwRkJTM0JDTEdkQ1FVRkJRU3hEUVVGQlFTeERRVU4yUTNORExGbEJRVUZCTEVOQlFXRnNRaXhKUVVGQlFTeERRVUZMYWtJc1pVRkJRVUVzUTBGQlFVRXNRMEZEYkVKcFFpeEpRVUZCUVN4RFFVRkxha0lzWlVGQlFVRXNRMEZCYTBKdlF5eFZRVUZCUVN4RFFVRlhia0lzU1VGQlFVRXNRMEZCUzI5Q0xGTkJRVUZCTEVOQlFWVkRMRWxCUVVGQkxFTkJRVXR5UWl4SlFVRkJRU3hEUVVGQlFTeERRVUZQUVN4SlFVRkJRU3hEUVVGTGNFSXNaMEpCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUjNCRmIwSXNTVUZCUVVFc1EwRkJTMFVzVDBGQlFVRXNRMEZCVVRWQ0xGZEJRVUZCTEVOQlFVOHdReXhWUVVGQlFTeERRVUZaVUN4RFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVjM1FqVkNMRWxCUVVGQkxFTkJTVlJJTEVsQlFVRkJMRU5CUVUwMFF5eEhRVUZCUVN4RFFVRkJRU3hEUVVOT0xFZEJRVUVzUTBGQlMzcERMRWxCUVVGQkxFTkJRVXRITEVWQlFVRkJMRVZCUVUxSUxFbEJRVUZCTEVOQlFVdEhMRVZCUVVGQkxFTkJRVWQxUXl4VlFVRkJRU3hGUVVGamVFSXNXVUZCUVVFc1EwRkJWWGxDTEUxQlFVRkJMRVZCUVZVelF5eEpRVUZCUVN4RFFVRkxSeXhGUVVGQlFTeERRVUZIZFVNc1ZVRkJRVUVzUlVGQlkzaENMRmxCUVVGQkxFTkJRVlV3UWl4UFFVRkJRU3hEUVVOMFJpeFBRVUZQY2tRc1VVRkJRVUVzUTBGQlNYTkVMRmxCUVVGQkxFTkJSV1lzUjBGQlFTeERRVU54UWl4UlFVRkJMRVZCUVVFc1QwRkJWQ3hIUVVGQkxFZEJRMVpLTEVkQlFVRkJMRU5CUVUxTExFbEJRVUZCTEVOQlFVdERMRk5CUVVGQkxFTkJRVlZPTEVkQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlJYUkNla01zU1VGQlFVRXNRMEZCUzBjc1JVRkJRVUVzUTBGQlJ6WkRMRWxCUVVGQkxFTkJRVXRRTEVkQlFVRkJMRU5CUVVGQkxFTkJRMW9zVFVGQlQySXNRMEZCUVVFc1EwRkJRVUVzUTBGRFRDeFBRVUZQUVN4RFFVRkJRU3hEUVVWVUxFOUJRVThzU1VGQlFTeERRVWRVTDBJc1UwRkJRVUVzUlVGQlFVRXNRMEZEUlhkRExGbEJRVUZCTEVOQlFXRnlReXhKUVVGQlFTeERRVUZMUlN4bFFVRkJRU3hEUVVGQlFTeERRVU5zUWtZc1NVRkJRVUVzUTBGQlMzRkNMRTlCUVVGQkxFTkJRVkUxUWl4WFFVRkJRU3hEUVVGUGQwUXNVMEZCUVVFc1EwRkJWMnBFTEVsQlFVRkJMRU5CUVV0RUxHZENRVUZCUVN4RFFVRkJRU3hEUVVOMFEwTXNTVUZCUVVFc1EwRkJTMnRFTEU5QlFVRkJMRU5CUVZGc1JDeEpRVUZCUVN4RFFVRkxSaXhIUVVGQlFTeERRVUZCUVN4RFFVZHNRa1FzUzBGQlFVRXNSVUZCUVVFc1EwRkRSVWNzU1VGQlFVRXNRMEZCUzBjc1JVRkJRVUVzUTBGQlIyTXNTMEZCUVVFc1JVRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRnRRa2RyUXl4WlFVRkJRU3hEUVdaUFF5eEpRVUZCUVN4RlFVRkJRU3hEUVVOd1FpeE5RVUZOUXl4TlFVRkJRU3hEUVVGVExFbEJRVWx1UXl4WlFVRkJRU3hEUVVGVmIwTXNUVUZCUVVFc1EwRkJUeXhEUVVGRlJpeEpRVUZCUVN4RFFVRk5RU3hKUVVGQlFTeERRVUZOUnl4UlFVRkJRU3hEUVVGQlFTeERRVUZWTEVOQlFVRXNRMEZCUVN4RFFVRkJMRU5CVlRWRUxFOUJWRUZHTEUxQlFVRkJMRU5CUVU4NVF5eEZRVUZCUVN4RFFVRkhMRmxCUVVFc1EwRkJaV2xFTEVsQlFVRkJMRVZCUVVGQkxFTkJRM1pDUVN4SlFVRkJRU3hEUVVGTGFrUXNSVUZCUVVFc1EwRkJSeXhUUVVGQkxFTkJRVmxyUkN4RFFVRkJRU3hGUVVGQlFTeERRVU5zUWtvc1RVRkJRVUVzUTBGQlQwc3NUMEZCUVVFc1EwRkJVVU1zVDBGQlFVRXNRMEZCVVN4VFFVRmpReXhOUVVGQlFTeERRVUZCUVN4RFFVTXZRa0VzVFVGQlFVRXNSMEZCVjBvc1NVRkJRVUVzUlVGQlVVa3NUVUZCUVVFc1EwRkJUMnhDTEZWQlFVRkJMRWRCUVdWNFFpeFpRVUZCUVN4RFFVRlZNa01zU1VGQlFVRXNSVUZEY2tSRUxFMUJRVUZCTEVOQlFVOWFMRWxCUVVGQkxFTkJRVXRUTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUVVGQkxFTkJTMkpLTEUxQlFVRkJMRU5CUVVGQkxFTkJRVUZCTEVOQlFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iLCJjb25zdCB7RXJyOl9fRXJyXzcxfT1fJGVycm9yc183Mix7RXZUeXBlOl9fRXZUeXBlXzcxfT1fJGV2ZW50c1R5cGVfNzM7Y2xhc3MgQXJyYXlUcmFuc3BvcnR7Y29uc3RydWN0b3IoYXJyYXlUcmFuc3BvcnQscmVhZEludGVydmFsLGlkKXt0aGlzLmlkPWlkLHRoaXMudHJhbnNwb3J0PWFycmF5VHJhbnNwb3J0LHRoaXMucmVhZEludGVydmFsPXJlYWRJbnRlcnZhbHx8MWUzLHRoaXMucmVhZEhhbmRsZT1udWxsLHRoaXMubGFzdE1zZ0lEPS0xLHRoaXMuZXZlbnRzPW5ldyBfJGV2ZW50c18xM31vbihldixoYW5kbGUsb3B0cyl7cmV0dXJuIHRoaXMuZXZlbnRzLm9uKGV2LGhhbmRsZSxvcHRzKX1vbmNlKGV2LGhhbmRsZSxvcHRzKXtyZXR1cm4gdGhpcy5ldmVudHMub25jZShldixoYW5kbGUsb3B0cyl9b2ZmKGV2LGhhbmRsZSxvcHRzKXtyZXR1cm4gaGFuZGxlP3RoaXMuZXZlbnRzLm9mZihldixoYW5kbGUsb3B0cyk6dGhpcy5ldmVudHMucmVtb3ZlQWxsTGlzdGVuZXJzKGV2KX10cmlnZ2VyKCl7dmFyIGFyZ3M9QXJyYXkuZnJvbShhcmd1bWVudHMpO3JldHVybiB0aGlzLmV2ZW50cy5lbWl0LmFwcGx5KHRoaXMuZXZlbnRzLGFyZ3MpfWNvbm5lY3QoKXtyZXR1cm4gY2xlYXJJbnRlcnZhbCh0aGlzLnJlYWRIYW5kbGUpLHRoaXMucmVhZEhhbmRsZT1zZXRJbnRlcnZhbCh0aGlzLnJlYWQuYmluZCh0aGlzKSx0aGlzLnJlYWRJbnRlcnZhbCksdGhpcy50cmlnZ2VyKF9fRXZUeXBlXzcxLkNvbm5lY3QpLHRoaXN9cmVhZCgpe2NvbnN0IG1zZ3M9dGhpcy50cmFuc3BvcnQucmVhZCh0aGlzLmlkLHRoaXMubGFzdE1zZ0lEKTttc2dzLmxlbmd0aCYmKHRoaXMubGFzdE1zZ0lEPW1zZ3NbbXNncy5sZW5ndGgtMV0uaWQsbXNncy5tYXAobT0+e3RoaXMudHJpZ2dlcihfX0V2VHlwZV83MS5NZXNzYWdlLG0uZGF0YSl9KSl9c2VuZChtc2cpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiBtc2cmJihtc2c9SlNPTi5zdHJpbmdpZnkobXNnKSksdGhpcy50cmFuc3BvcnQucHVibGlzaCh0aGlzLmlkLG1zZyksbnVsbH1yZWNvbm5lY3QoKXtjbGVhclRpbWVvdXQodGhpcy5yZWNvbm5lY3RIYW5kbGUpLHRoaXMudHJpZ2dlcihfX0V2VHlwZV83MS5SZWNvbm5lY3QsdGhpcy5yZWNvbm5lY3RUaW1lb3V0KSx0aGlzLmNvbm5lY3QoKX1jbG9zZSgpe2NsZWFySW50ZXJ2YWwodGhpcy5yZWFkSGFuZGxlKSx0aGlzLnRyaWdnZXIoX19FdlR5cGVfNzEuRGlzY29ubmVjdCksdGhpcy5yZWNvbm5lY3RUaW1lb3V0PjAmJih0aGlzLnRyaWdnZXIoX19FdlR5cGVfNzEuUmVjb25uZWN0aW5nLHRoaXMucmVjb25uZWN0VGltZW91dCksY2xlYXJUaW1lb3V0KHRoaXMucmVjb25uZWN0SGFuZGxlKSx0aGlzLnJlY29ubmVjdEhhbmRsZT1zZXRUaW1lb3V0KHRoaXMucmVjb25uZWN0LmJpbmQodGhpcyksdGhhdC5yZWNvbm5lY3RUaW1lb3V0KSl9fXZhciBfJGFycmF5XzcxPXtBcnJheVRyYW5zcG9ydFByb3ZpZGVyOmNsYXNze2NvbnN0cnVjdG9yKHJlYWRJbnRlcnZhbCl7dGhpcy5yZWFkSW50ZXJ2YWw9cmVhZEludGVydmFsfHwxZTMsdGhpcy5tc2dJRD0wLHRoaXMubXNncz1bXSx0aGlzLmVuZHBvaW50cz1bXX1lbmRQb2ludCgpe2NvbnN0IGlkPXRoaXMuZW5kcG9pbnRzLmxlbmd0aCxlcD1uZXcgQXJyYXlUcmFuc3BvcnQodGhpcyx0aGlzLnJlYWRJbnRlcnZhbCxpZCk7cmV0dXJuIHRoaXMuZW5kcG9pbnRzLnB1c2goZXApLGVwfXB1Ymxpc2goZnJvbSxtc2cpe2NvbnN0IG1zZ0lEPXRoaXMubXNnSUQrKzt0aGlzLm1zZ3MucHVzaCh7aWQ6bXNnSUQsZnJvbTpmcm9tLGRhdGE6bXNnfSksdGhpcy5tc2dzLmxlbmd0aD41MDAmJnRoaXMubXNncy5zbGljZSg1MDAsdGhpcy5tc2dzLmxlbmd0aC01MDApfXJlYWQoZnJvbSxzaW5jZSl7cmV0dXJuIHRoaXMubXNncy5maWx0ZXIobT0+bS5mcm9tIT1mcm9tKS5maWx0ZXIobT0+bS5pZD5zaW5jZSl9fSxBcnJheVRyYW5zcG9ydDpBcnJheVRyYW5zcG9ydH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltRnljbUY1TG1weklsMHNJbTVoYldWeklqcGJJa1YyWlc1MFJXMXBkSFJsY2lJc0lrVnljaUlzSW5KbGNYVnBjbVVpTENKRmRsUjVjR1VpTENKQmNuSmhlVlJ5WVc1emNHOXlkQ0lzSWx0dlltcGxZM1FnVDJKcVpXTjBYU0lzSW1GeWNtRjVWSEpoYm5Od2IzSjBJaXdpY21WaFpFbHVkR1Z5ZG1Gc0lpd2lhV1FpTENKMGFHbHpJaXdpZEhKaGJuTndiM0owSWl3aWNtVmhaRWhoYm1Sc1pTSXNJbXhoYzNSTmMyZEpSQ0lzSW1WMlpXNTBjeUlzSW1WMklpd2lhR0Z1Wkd4bElpd2liM0IwY3lJc0ltOXVJaXdpYjI1alpTSXNJbTltWmlJc0luSmxiVzkyWlVGc2JFeHBjM1JsYm1WeWN5SXNJbUZ5WjNNaUxDSkJjbkpoZVNJc0ltWnliMjBpTENKaGNtZDFiV1Z1ZEhNaUxDSmxiV2wwSWl3aVlYQndiSGtpTENKamJHVmhja2x1ZEdWeWRtRnNJaXdpYzJWMFNXNTBaWEoyWVd3aUxDSnlaV0ZrSWl3aVltbHVaQ0lzSW5SeWFXZG5aWElpTENKRGIyNXVaV04wSWl3aWJYTm5jeUlzSW14bGJtZDBhQ0lzSW0xaGNDSXNJbTBpTENKTlpYTnpZV2RsSWl3aVpHRjBZU0lzSW0xelp5SXNJa3BUVDA0aUxDSnpkSEpwYm1kcFpua2lMQ0p3ZFdKc2FYTm9JaXdpWTJ4bFlYSlVhVzFsYjNWMElpd2ljbVZqYjI1dVpXTjBTR0Z1Wkd4bElpd2lVbVZqYjI1dVpXTjBJaXdpY21WamIyNXVaV04wVkdsdFpXOTFkQ0lzSW1OdmJtNWxZM1FpTENKRWFYTmpiMjV1WldOMElpd2lVbVZqYjI1dVpXTjBhVzVuSWl3aWMyVjBWR2x0Wlc5MWRDSXNJbkpsWTI5dWJtVmpkQ0lzSW5Sb1lYUWlMQ0p0YjJSMWJHVWlMQ0psZUhCdmNuUnpJaXdpUVhKeVlYbFVjbUZ1YzNCdmNuUlFjbTkyYVdSbGNpSXNJbTF6WjBsRUlpd2laVzVrY0c5cGJuUnpJaXdpWlhBaUxDSndkWE5vSWl3aWMyeHBZMlVpTENKemFXNWpaU0lzSW1acGJIUmxjaUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUVzVFVGQlRVRXNRVUZCZFVJc1EwRkZka0pETEVkQlFVRkJMRU5CUVVWQkxGRkJRVUZCTEVOQlFVRkJMRU5CUVZGRExGZEJRVkVzUTBGQlFTeERRVU5zUWtNc1RVRkJRVUVzUTBGQlJVRXNWMEZCUVVFc1EwRkJRVUVzUTBGQlYwUXNaVUZCVVN4RFFTdENNMElzVFVGQlRVVXNZMEZCUVVFc1EwRkRTa01zVjBGQlFVRXNRMEZCWVVNc1kwRkJRVUVzUTBGQlowSkRMRmxCUVVGQkxFTkJRV05ETEVWQlFVRkJMRU5CUVVGQkxFTkJRM3BEUXl4SlFVRkJRU3hEUVVGTFJDeEZRVUZCUVN4RFFVRkxRU3hGUVVGQlFTeERRVU5XUXl4SlFVRkJRU3hEUVVGTFF5eFRRVUZCUVN4RFFVRlpTaXhqUVVGQlFTeERRVU5xUWtjc1NVRkJRVUVzUTBGQlMwWXNXVUZCUVVFc1EwRkJaVUVzV1VGQlFVRXNSVUZCWjBJc1IwRkJRU3hEUVVOd1EwVXNTVUZCUVVFc1EwRkJTMFVzVlVGQlFVRXNRMEZCWVN4SlFVRkJMRU5CUTJ4Q1JpeEpRVUZCUVN4RFFVRkxSeXhUUVVGQlFTeERRVUZCUVN4RFFVRmhMRU5CUVVFc1EwRkRiRUpJTEVsQlFVRkJMRU5CUVV0SkxFMUJRVUZCTEVOQlFWTXNTVUZCU1dJc1YwRkJRVUVzUTBGSmNFSkxMRVZCUVVGQkxFTkJRVWxUTEVWQlFVRkJMRU5CUVVsRExFMUJRVUZCTEVOQlFWRkRMRWxCUVVGQkxFTkJRVUZCTEVOQlEySXNUMEZCVDFBc1NVRkJRVUVzUTBGQlMwa3NUVUZCUVVFc1EwRkJUMGtzUlVGQlFVRXNRMEZCUjBnc1JVRkJRVUVzUTBGQlNVTXNUVUZCUVVFc1EwRkJVVU1zU1VGQlFVRXNRMEZCUVVFc1EwRkpja05ZTEVsQlFVRkJMRU5CUVUxVExFVkJRVUZCTEVOQlFVbERMRTFCUVVGQkxFTkJRVkZETEVsQlFVRkJMRU5CUVVGQkxFTkJRMnBDTEU5QlFVOVFMRWxCUVVGQkxFTkJRVXRKTEUxQlFVRkJMRU5CUVU5TExFbEJRVUZCTEVOQlFVdEtMRVZCUVVGQkxFTkJRVWxETEUxQlFVRkJMRU5CUVZGRExFbEJRVUZCTEVOQlFVRkJMRU5CU1hKRFdDeEhRVUZCUVN4RFFVRkxVeXhGUVVGQlFTeERRVUZKUXl4TlFVRkJRU3hEUVVGUlF5eEpRVUZCUVN4RFFVRkJRU3hEUVVObUxFOUJRVXRFTEUxQlFVRkJMRU5CUjBWT0xFbEJRVUZCTEVOQlFVdEpMRTFCUVVGQkxFTkJRVTlOTEVkQlFVRkJMRU5CUVVsTUxFVkJRVUZCTEVOQlFVbERMRTFCUVVGQkxFTkJRVkZETEVsQlFVRkJMRU5CUVVGQkxFTkJSakZDVUN4SlFVRkJRU3hEUVVGTFNTeE5RVUZCUVN4RFFVRlBUeXhyUWtGQlFVRXNRMEZCYlVKT0xFVkJRVUZCTEVOQlFVRkJMRU5CVFRGRFZDeFBRVUZCUVN4RlFVRkJRU3hEUVVORkxFbEJRVWxuUWl4SlFVRkJRU3hEUVVGUFF5eExRVUZCUVN4RFFVRk5ReXhKUVVGQlFTeERRVUZMUXl4VFFVRkJRU3hEUVVGQlFTeERRVU4wUWl4UFFVRlBaaXhKUVVGQlFTeERRVUZMU1N4TlFVRkJRU3hEUVVGUFdTeEpRVUZCUVN4RFFVRkxReXhMUVVGQlFTeERRVUZOYWtJc1NVRkJRVUVzUTBGQlMwa3NUVUZCUVVFc1EwRkJVVkVzU1VGQlFVRXNRMEZCUVVFc1EwRkxOME5vUWl4UFFVRkJRU3hGUVVGQlFTeERRVXRGTEU5QlNFRnpRaXhoUVVGQlFTeERRVUZqYkVJc1NVRkJRVUVzUTBGQlMwVXNWVUZCUVVFc1EwRkJRVUVzUTBGRGJrSkdMRWxCUVVGQkxFTkJRVXRGTEZWQlFVRkJMRU5CUVdGcFFpeFhRVUZCUVN4RFFVRmhia0lzU1VGQlFVRXNRMEZCUzI5Q0xFbEJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXR5UWl4SlFVRkJRU3hEUVVGQlFTeERRVUZQUVN4SlFVRkJRU3hEUVVGTFJpeFpRVUZCUVN4RFFVRkJRU3hEUVVNeFJFVXNTVUZCUVVFc1EwRkJTM05DTEU5QlFVRkJMRU5CUVZFMVFpeFhRVUZCUVN4RFFVRlBOa0lzVDBGQlFVRXNRMEZCUVVFc1EwRkRZblpDTEVsQlFVRkJMRU5CUjFSS0xFbEJRVUZCTEVWQlFVRkJMRU5CUTBVc1RVRkJUVFJDTEVsQlFVRkJMRU5CUVU5NFFpeEpRVUZCUVN4RFFVRkxReXhUUVVGQlFTeERRVUZWYlVJc1NVRkJRVUVzUTBGQlMzQkNMRWxCUVVGQkxFTkJRVXRFTEVWQlFVRkJMRU5CUVVsRExFbEJRVUZCTEVOQlFVdEhMRk5CUVVGQkxFTkJRVUZCTEVOQlF6TkRjVUlzU1VGQlFVRXNRMEZCUzBNc1RVRkJRVUVzUjBGRFVIcENMRWxCUVVGQkxFTkJRVXRITEZOQlFVRkJMRU5CUVZseFFpeEpRVUZCUVN4RFFVRkxRU3hKUVVGQlFTeERRVUZMUXl4TlFVRkJRU3hEUVVGUExFTkJRVUVzUTBGQlFTeERRVUZITVVJc1JVRkJRVUVzUTBGRGNrTjVRaXhKUVVGQlFTeERRVUZMUlN4SFFVRkJRU3hEUVVGTlF5eERRVUZCUVN4RlFVRkJRU3hEUVVOVU0wSXNTVUZCUVVFc1EwRkJTM05DTEU5QlFVRkJMRU5CUVZFMVFpeFhRVUZCUVN4RFFVRlBhME1zVDBGQlFVRXNRMEZCVTBRc1EwRkJRVUVzUTBGQlJVVXNTVUZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGTmNrTnFReXhKUVVGQlFTeERRVUZOYTBNc1IwRkJRVUVzUTBGQlFVRXNRMEZMU2l4TlFVcHZRaXhSUVVGQkxFVkJRVUVzVDBGQlZDeEhRVUZCTEVkQlExUkJMRWRCUVVGQkxFTkJRVTFETEVsQlFVRkJMRU5CUVV0RExGTkJRVUZCTEVOQlFWVkdMRWRCUVVGQkxFTkJRVUZCTEVOQlFVRkJMRU5CUlhaQ09VSXNTVUZCUVVFc1EwRkJTME1zVTBGQlFVRXNRMEZCVldkRExFOUJRVUZCTEVOQlFWRnFReXhKUVVGQlFTeERRVUZMUkN4RlFVRkJRU3hEUVVGSkswSXNSMEZCUVVFc1EwRkJRVUVzUTBGRGVrSXNTVUZCUVN4RFFVZFViRU1zVTBGQlFVRXNSVUZCUVVFc1EwRkRSWE5ETEZsQlFVRkJMRU5CUVdGc1F5eEpRVUZCUVN4RFFVRkxiVU1zWlVGQlFVRXNRMEZCUVVFc1EwRkRiRUp1UXl4SlFVRkJRU3hEUVVGTGMwSXNUMEZCUVVFc1EwRkJVVFZDTEZkQlFVRkJMRU5CUVU4d1F5eFRRVUZCUVN4RFFVRlhjRU1zU1VGQlFVRXNRMEZCUzNGRExHZENRVUZCUVN4RFFVRkJRU3hEUVVOMFEzSkRMRWxCUVVGQkxFTkJRVXR6UXl4UFFVRkJRU3hGUVVGQlFTeERRVWRNTVVNc1MwRkJRVUVzUlVGQlFVRXNRMEZEUlhOQ0xHRkJRVUZCTEVOQlFXTnNRaXhKUVVGQlFTeERRVUZMUlN4VlFVRkJRU3hEUVVGQlFTeERRVU51UWtZc1NVRkJRVUVzUTBGQlMzTkNMRTlCUVVGQkxFTkJRVkUxUWl4WFFVRkJRU3hEUVVGUE5rTXNWVUZCUVVFc1EwRkJRVUVzUTBGRGFFSjJReXhKUVVGQlFTeERRVUZMY1VNc1owSkJRVUZCTEVOQlFXbENMRU5CUVVFc1IwRkRlRUp5UXl4SlFVRkJRU3hEUVVGTGMwSXNUMEZCUVVFc1EwRkJVVFZDTEZkQlFVRkJMRU5CUVU4NFF5eFpRVUZCUVN4RFFVRmplRU1zU1VGQlFVRXNRMEZCUzNGRExHZENRVUZCUVN4RFFVRkJRU3hEUVVOMlEwZ3NXVUZCUVVFc1EwRkJZV3hETEVsQlFVRkJMRU5CUVV0dFF5eGxRVUZCUVN4RFFVRkJRU3hEUVVOc1FtNURMRWxCUVVGQkxFTkJRVXR0UXl4bFFVRkJRU3hEUVVGclFrMHNWVUZCUVVFc1EwRkJWM3BETEVsQlFVRkJMRU5CUVVzd1F5eFRRVUZCUVN4RFFVRlZja0lzU1VGQlFVRXNRMEZCUzNKQ0xFbEJRVUZCTEVOQlFVRkJMRU5CUVU4eVF5eEpRVUZCUVN4RFFVRkxUaXhuUWtGQlFVRXNRMEZCUVVFc1EwRkJRVUVzUTBGQlFVRXNRMEZMZUVWUExHTkJRVTlETEVOQlFWVXNRMEZEWmtNc2MwSkJRVUZCTEVOQk9VZEdMRXRCUVVFc1EwRkRSV3hFTEZkQlFVRkJMRU5CUVdGRkxGbEJRVUZCTEVOQlFVRkJMRU5CUTFoRkxFbEJRVUZCTEVOQlFVdEdMRmxCUVVGQkxFTkJRV1ZCTEZsQlFVRkJMRVZCUVdkQ0xFZEJRVUVzUTBGRGNFTkZMRWxCUVVGQkxFTkJRVXNyUXl4TFFVRkJRU3hEUVVGUkxFTkJRVUVzUTBGRFlpOURMRWxCUVVGQkxFTkJRVXQzUWl4SlFVRkJRU3hEUVVGUExFVkJRVUVzUTBGRFduaENMRWxCUVVGQkxFTkJRVXRuUkN4VFFVRkJRU3hEUVVGWkxFVkJRVUVzUTBGRmJrSndSQ3hSUVVGQlFTeEZRVUZCUVN4RFFVTkZMRTFCUVUxSExFVkJRVUZCTEVOQlFVdERMRWxCUVVGQkxFTkJRVXRuUkN4VFFVRkJRU3hEUVVGVmRrSXNUVUZCUVVFc1EwRkRjRUozUWl4RlFVRkJRU3hEUVVGTExFbEJRVWwwUkN4alFVRkJRU3hEUVVGbFN5eEpRVUZCUVN4RFFVRk5RU3hKUVVGQlFTeERRVUZMUml4WlFVRkJRU3hEUVVGalF5eEZRVUZCUVN4RFFVRkJRU3hEUVVWMlJDeFBRVVJCUXl4SlFVRkJRU3hEUVVGTFowUXNVMEZCUVVFc1EwRkJWVVVzU1VGQlFVRXNRMEZCUzBRc1JVRkJRVUVzUTBGQlFVRXNRMEZEWWtFc1JVRkJRVUVzUTBGRlZISkVMRTlCUVVGQkxFTkJRVk5yUWl4SlFVRkJRU3hEUVVGTlowSXNSMEZCUVVFc1EwRkJRVUVzUTBGRFlpeE5RVUZOYVVJc1MwRkJRVUVzUTBGQlVTOURMRWxCUVVGQkxFTkJRVXNyUXl4TFFVRkJRU3hGUVVGQlFTeERRVU51UWk5RExFbEJRVUZCTEVOQlFVdDNRaXhKUVVGQlFTeERRVUZMTUVJc1NVRkJRVUVzUTBGQlN5eERRVUZEYmtRc1JVRkJRVUVzUTBGQlIyZEVMRXRCUVVGQkxFTkJRVTlxUXl4SlFVRkJRU3hEUVVGTlFTeEpRVUZCUVN4RFFVRk5aU3hKUVVGQlFTeERRVUZOUXl4SFFVRkJRU3hEUVVGQlFTeERRVUZCUVN4RFFVTjRRemxDTEVsQlFVRkJMRU5CUVV0M1FpeEpRVUZCUVN4RFFVRkxReXhOUVVGQlFTeERRVUZQTEVkQlFVRXNSVUZEYmtKNlFpeEpRVUZCUVN4RFFVRkxkMElzU1VGQlFVRXNRMEZCU3pKQ0xFdEJRVUZCTEVOQlFVMHNSMEZCUVN4RFFVRkxia1FzU1VGQlFVRXNRMEZCUzNkQ0xFbEJRVUZCTEVOQlFVdERMRTFCUVVGQkxFTkJRVThzUjBGQlFTeERRVUZCTEVOQlJ6RkROMElzU1VGQlFVRXNRMEZCVFd0Q0xFbEJRVUZCTEVOQlFVMXpReXhMUVVGQlFTeERRVUZCUVN4RFFVTldMRTlCUVU5d1JDeEpRVUZCUVN4RFFVRkxkMElzU1VGQlFVRXNRMEZCU3paQ0xFMUJRVUZCTEVOQlFWTXhRaXhEUVVGQlFTeEZRVU5xUWtFc1EwRkJRVUVzUTBGQlJXSXNTVUZCUVVFc1JVRkJVVUVzU1VGQlFVRXNRMEZCUVVFc1EwRkRhRUoxUXl4TlFVRkJRU3hEUVVGVE1VSXNRMEZCUVVFc1JVRkRTRUVzUTBGQlFVRXNRMEZCUlRWQ0xFVkJRVUZCTEVOQlFVZHhSQ3hMUVVGQlFTeERRVUZCUVN4RFFVRkJRU3hEUVVGQlFTeERRWE5HVVhwRUxHTkJRVUZCTEVOQlFVRkJMR05CUVVGQkxFTkJRVUZCTEVOQlFVRkJJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHR1ZFd4c1hYMD0iXX0=